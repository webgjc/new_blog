{
    "RECORDS": [
        {
            "ID": "2",
            "post_author": "1",
            "post_date": "2017-3-6 17:51:21",
            "post_date_gmt": "2017-3-6 09:51:21",
            "post_content": "我叫甘家城，来自宁波余姚，目前是杭电的一名大三学生，作为一个电子专业的学生，路过前端的崛起，也看过“最好”的php，目前写着苦短的python，咯咯咯。\r\n<h5>All of life is an act of letting go, but what hurts the most is not taking a moment to say goodbye.</h5>\r\n&nbsp;\r\n\r\n私邮：935669873@qq.com\r\n\r\n&nbsp;",
            "post_title": "个人简介",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "%e4%b8%aa%e4%ba%ba%e7%ae%80%e4%bb%8b",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-4 14:13:52",
            "post_modified_gmt": "2018-1-4 06:13:52",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?page_id=2",
            "menu_order": "0",
            "post_type": "page",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "23",
            "post_author": "1",
            "post_date": "2017-3-6 18:29:52",
            "post_date_gmt": "2017-3-6 10:29:52",
            "post_content": "试着写blog啦，用以分享，记录技术和生活！\r\n\r\n本人年方21，前端起家，在向后端的php和python前进。\r\n\r\n本次就从安装wordpress说起：<!--more-->\r\n\r\n注：环境：云服务器+lnmp+域名。\r\n\r\n1.先从官网<a href=\"https://cn.wordpress.org/releases/\">https://cn.wordpress.org/releases/</a>找了最新版本4.7.2，之后解压，复制到服务器上，打开对应域名+路径就有了。\r\n\r\n2.在配置mysql数据库，用户名和密码。就可以生成啦！！！\r\n\r\n3.进入也是被惊艳了，上手很快。\r\n<p style=\"text-align: left;\">4.本来升级需要ftp，弄不明白就找了在wp-config.php最后插入了这些代码，之后跳过了输入ftp</p>\r\n\r\n<pre style=\"text-align: left;\"><strong>define(\"FS_METHOD\",\"direct\");</strong>\r\n<strong>define(\"FS_CHMOD_DIR\", 0777);</strong>\r\n<strong>define(\"FS_CHMOD_FILE\", 0777);</strong></pre>\r\n遇到问题：在升级翻译的时候会有------无法复制文件的错误。\r\n\r\n在升级Akismet插件的时候会出现错误-----因为我们不能复制一些文件，升级未被安装。这通常是因为存在不一致的文件权限。",
            "post_title": "搭建wordpress个人博客",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e6%90%ad%e5%bb%bawordpress%e4%b8%aa%e4%ba%ba%e5%8d%9a%e5%ae%a2",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-8-2 20:29:14",
            "post_modified_gmt": "2017-8-2 12:29:14",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=23",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "24",
            "post_author": "1",
            "post_date": "2017-3-6 18:29:52",
            "post_date_gmt": "2017-3-6 10:29:52",
            "post_content": "试着写blog啦",
            "post_title": "搭建wordpress个人博客",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "23-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-6 18:29:52",
            "post_modified_gmt": "2017-3-6 10:29:52",
            "post_content_filtered": "",
            "post_parent": "23",
            "guid": "http://ganjiacheng.cn/blog/?p=24",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "32",
            "post_author": "1",
            "post_date": "2017-3-6 18:41:43",
            "post_date_gmt": "2017-3-6 10:41:43",
            "post_content": "试着写blog啦，用以分享，记录技术和生活！\r\n\r\n本人年方21，前端起家，在向后端的php和python前进。",
            "post_title": "搭建wordpress个人博客",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "23-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-6 18:41:43",
            "post_modified_gmt": "2017-3-6 10:41:43",
            "post_content_filtered": "",
            "post_parent": "23",
            "guid": "http://ganjiacheng.cn/blog/?p=32",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "33",
            "post_author": "1",
            "post_date": "2017-3-6 18:56:26",
            "post_date_gmt": "2017-3-6 10:56:26",
            "post_content": "试着写blog啦，用以分享，记录技术和生活！\r\n\r\n本人年方21，前端起家，在向后端的php和python前进。\r\n\r\n本次就从安装wordpress说起：\r\n\r\n1.先从官网<a href=\"https://cn.wordpress.org/releases/\">https://cn.wordpress.org/releases/</a>找了最新版本4.7.2，之后解压，复制到服务器上，打开对应域名+路径就有了。\r\n\r\n2.在配置mysql数据库，用户名和密码。就可以生成啦！！！\r\n\r\n3.进入也是被惊艳了，上手很快。\r\n<p style=\"text-align: left;\">4.本来升级需要ftp，弄不明白就找了在wp-config.php最后插入了这些代码，之后跳过了输入ftp</p>\r\n\r\n<pre style=\"text-align: left;\"><strong>define(\"FS_METHOD\",\"direct\");</strong>\r\n<strong>define(\"FS_CHMOD_DIR\", 0777);</strong>\r\n<strong>define(\"FS_CHMOD_FILE\", 0777);</strong></pre>\r\n遇到问题：在升级翻译的时候会有------无法复制文件的错误。\r\n\r\n在升级Akismet插件的时候会出现-----因为我们不能复制一些文件，升级未被安装。这通常是因为存在不一致的文件权限。",
            "post_title": "搭建wordpress个人博客",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "23-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-6 18:56:26",
            "post_modified_gmt": "2017-3-6 10:56:26",
            "post_content_filtered": "",
            "post_parent": "23",
            "guid": "http://ganjiacheng.cn/blog/?p=33",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "42",
            "post_author": "1",
            "post_date": "2017-3-7 16:39:45",
            "post_date_gmt": "2017-3-7 08:39:45",
            "post_content": "试着写blog啦，用以分享，记录技术和生活！\r\n\r\n本人年方21，前端起家，在向后端的php和python前进。\r\n\r\n本次就从安装wordpress说起：\r\n\r\n注：环境：云服务器+lnmp+域名。\r\n\r\n1.先从官网<a href=\"https://cn.wordpress.org/releases/\">https://cn.wordpress.org/releases/</a>找了最新版本4.7.2，之后解压，复制到服务器上，打开对应域名+路径就有了。\r\n\r\n2.在配置mysql数据库，用户名和密码。就可以生成啦！！！\r\n\r\n3.进入也是被惊艳了，上手很快。\r\n<p style=\"text-align: left;\">4.本来升级需要ftp，弄不明白就找了在wp-config.php最后插入了这些代码，之后跳过了输入ftp</p>\r\n\r\n<pre style=\"text-align: left;\"><strong>define(\"FS_METHOD\",\"direct\");</strong>\r\n<strong>define(\"FS_CHMOD_DIR\", 0777);</strong>\r\n<strong>define(\"FS_CHMOD_FILE\", 0777);</strong></pre>\r\n遇到问题：在升级翻译的时候会有------无法复制文件的错误。\r\n\r\n在升级Akismet插件的时候会出现错误-----因为我们不能复制一些文件，升级未被安装。这通常是因为存在不一致的文件权限。",
            "post_title": "搭建wordpress个人博客",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "23-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-7 16:39:45",
            "post_modified_gmt": "2017-3-7 08:39:45",
            "post_content_filtered": "",
            "post_parent": "23",
            "guid": "http://ganjiacheng.cn/blog/?p=42",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "43",
            "post_author": "1",
            "post_date": "2017-3-7 17:57:45",
            "post_date_gmt": "2017-3-7 09:57:45",
            "post_content": "先讲回归这个概念，我的理解：如果是二维平面里，指根据现有的点拟合出直线，在用直线做分析与预测。\r\n\r\n简单线性回归便是全部的点都在一类之下。拟合出直线用于发现其中的关系。<!--more-->\r\n\r\nlogistic回归是在两类里做分类，完成训练后，拟合出的直线一边各一类，新来的点就可以很轻易的分类。\r\n\r\nsoftmax回归便是多分类。\r\n\r\n这是简单线性回归的一般公式：<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/IMG_3031.jpg\"><img class=\"alignnone wp-image-47 size-thumbnail\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/IMG_3031-150x150.jpg\" alt=\"\" width=\"150\" height=\"150\" /></a>\r\n\r\n然后用python进行了尝试\r\n<pre>#python2.7\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nnum=1000\r\nvectors=[]\r\nxx=0;xy=0;ex=0;ey=0\r\nfor i in xrange(num):\r\n    x1=np.random.normal(0.0,0.55)\r\n    y1=x1*0.1+0.3+np.random.normal(0.0,0.03)\r\n    xx+=x1*x1\r\n    xy+=x1*y1\r\n    ex+=x1\r\n    ey+=y1\r\n    vectors.append([x1,y1])\r\nx_data=[v[0] for v in vectors]\r\ny_data=[v[1] for v in vectors]\r\nplt.plot(x_data,y_data,'ro',label='data')\r\nb=(xy-ex*ey/num)/(xx-ex*ex/num)\r\na=ey/num-b*ex/num\r\ntmpx=[-2,0,2]\r\ntmpy=[]\r\nfor i in tmpx:\r\n    tmpy.append(b*i+a)\r\nplt.plot(tmpx,tmpy)\r\nplt.legend()\r\nplt.show()\r\n</pre>\r\n<img class=\"alignnone size-medium wp-image-49\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/QQ截图20170307175022-300x230.jpg\" alt=\"\" width=\"300\" height=\"230\" />\r\n\r\n效果还可以，之后会对回归进行更多的优化和尝试，最小二乘法，梯度下降等等",
            "post_title": "简单线性回归---学习篇",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e7%ae%80%e5%8d%95%e7%ba%bf%e6%80%a7%e5%9b%9e%e5%bd%92",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-8-2 20:29:10",
            "post_modified_gmt": "2017-8-2 12:29:10",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=43",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "47",
            "post_author": "1",
            "post_date": "2017-3-7 17:04:16",
            "post_date_gmt": "2017-3-7 09:04:16",
            "post_content": "",
            "post_title": "IMG_3031",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "img_3031",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-7 17:04:16",
            "post_modified_gmt": "2017-3-7 09:04:16",
            "post_content_filtered": "",
            "post_parent": "43",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/IMG_3031.jpg",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/jpeg",
            "comment_count": "0"
        },
        {
            "ID": "49",
            "post_author": "1",
            "post_date": "2017-3-7 17:50:43",
            "post_date_gmt": "2017-3-7 09:50:43",
            "post_content": "",
            "post_title": "QQ截图20170307175022",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "qq%e6%88%aa%e5%9b%be20170307175022",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-7 17:50:43",
            "post_modified_gmt": "2017-3-7 09:50:43",
            "post_content_filtered": "",
            "post_parent": "43",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/QQ截图20170307175022.jpg",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/jpeg",
            "comment_count": "0"
        },
        {
            "ID": "50",
            "post_author": "1",
            "post_date": "2017-3-7 17:57:45",
            "post_date_gmt": "2017-3-7 09:57:45",
            "post_content": "先讲回归这个概念，我的理解：如果是二维平面里，指根据现有的点拟合出直线，在用直线做分析与预测。\r\n\r\n简单线性回归便是全部的点都在一类之下。拟合出直线用于发现其中的关系。\r\n\r\nlogistic回归是在两类里做分类，完成训练后，拟合出的直线一边各一类，新来的点就可以很轻易的分类。\r\n\r\nsoftmax回归便是多分类。\r\n\r\n这是简单线性回归的一般公式：<img class=\"alignnone wp-image-47 size-thumbnail\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/IMG_3031-150x150.jpg\" width=\"150\" height=\"150\" />\r\n\r\n然后用python进行了尝试\r\n<pre>import numpy as np\r\nimport matplotlib.pyplot as plt\r\nnum=1000\r\nvectors=[]\r\nxx=0;xy=0;ex=0;ey=0\r\nfor i in xrange(num):\r\n x1=np.random.normal(0.0,0.55)\r\n y1=x1*0.1+0.3+np.random.normal(0.0,0.03)\r\n xx+=x1*x1\r\n xy+=x1*y1\r\n ex+=x1\r\n ey+=y1\r\n vectors.append([x1,y1])\r\nx_data=[v[0] for v in vectors]\r\ny_data=[v[1] for v in vectors]\r\nplt.plot(x_data,y_data,'ro',label='data')\r\nb=(xy-ex*ey/num)/(xx-ex*ex/num)\r\na=ey/num-b*ex/num\r\ntmpx=[-2,0,2]\r\ntmpy=[]\r\nfor i in tmpx:\r\n tmpy.append(b*i+a)\r\nplt.plot(tmpx,tmpy)\r\nplt.legend()\r\nplt.show()</pre>\r\n<img class=\"alignnone size-medium wp-image-49\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/QQ截图20170307175022-300x230.jpg\" alt=\"\" width=\"300\" height=\"230\" />\r\n\r\n效果还可以，之后会对回归进行更多的优化和尝试，最小二乘法，梯度下降等等",
            "post_title": "简单线性回归",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "43-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-7 17:57:45",
            "post_modified_gmt": "2017-3-7 09:57:45",
            "post_content_filtered": "",
            "post_parent": "43",
            "guid": "http://ganjiacheng.cn/blog/?p=50",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "52",
            "post_author": "1",
            "post_date": "2017-3-7 18:00:30",
            "post_date_gmt": "2017-3-7 10:00:30",
            "post_content": "试着写blog啦，用以分享，记录技术和生活！\r\n\r\n本人年方21，前端起家，在向后端的php和python前进。\r\n\r\n本次就从安装wordpress说起：<!--more-->\r\n\r\n注：环境：云服务器+lnmp+域名。\r\n\r\n1.先从官网<a href=\"https://cn.wordpress.org/releases/\">https://cn.wordpress.org/releases/</a>找了最新版本4.7.2，之后解压，复制到服务器上，打开对应域名+路径就有了。\r\n\r\n2.在配置mysql数据库，用户名和密码。就可以生成啦！！！\r\n\r\n3.进入也是被惊艳了，上手很快。\r\n<p style=\"text-align: left;\">4.本来升级需要ftp，弄不明白就找了在wp-config.php最后插入了这些代码，之后跳过了输入ftp</p>\r\n\r\n<pre style=\"text-align: left;\"><strong>define(\"FS_METHOD\",\"direct\");</strong>\r\n<strong>define(\"FS_CHMOD_DIR\", 0777);</strong>\r\n<strong>define(\"FS_CHMOD_FILE\", 0777);</strong></pre>\r\n遇到问题：在升级翻译的时候会有------无法复制文件的错误。\r\n\r\n在升级Akismet插件的时候会出现错误-----因为我们不能复制一些文件，升级未被安装。这通常是因为存在不一致的文件权限。",
            "post_title": "搭建wordpress个人博客",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "23-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-7 18:00:30",
            "post_modified_gmt": "2017-3-7 10:00:30",
            "post_content_filtered": "",
            "post_parent": "23",
            "guid": "http://ganjiacheng.cn/blog/?p=52",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "54",
            "post_author": "1",
            "post_date": "2017-3-7 18:01:12",
            "post_date_gmt": "2017-3-7 10:01:12",
            "post_content": "先讲回归这个概念，我的理解：如果是二维平面里，指根据现有的点拟合出直线，在用直线做分析与预测。\r\n\r\n简单线性回归便是全部的点都在一类之下。拟合出直线用于发现其中的关系。<!--more-->\r\n\r\nlogistic回归是在两类里做分类，完成训练后，拟合出的直线一边各一类，新来的点就可以很轻易的分类。\r\n\r\nsoftmax回归便是多分类。\r\n\r\n这是简单线性回归的一般公式：<img class=\"alignnone wp-image-47 size-thumbnail\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/IMG_3031-150x150.jpg\" width=\"150\" height=\"150\" />\r\n\r\n然后用python进行了尝试\r\n<pre>import numpy as np\r\nimport matplotlib.pyplot as plt\r\nnum=1000\r\nvectors=[]\r\nxx=0;xy=0;ex=0;ey=0\r\nfor i in xrange(num):\r\n x1=np.random.normal(0.0,0.55)\r\n y1=x1*0.1+0.3+np.random.normal(0.0,0.03)\r\n xx+=x1*x1\r\n xy+=x1*y1\r\n ex+=x1\r\n ey+=y1\r\n vectors.append([x1,y1])\r\nx_data=[v[0] for v in vectors]\r\ny_data=[v[1] for v in vectors]\r\nplt.plot(x_data,y_data,'ro',label='data')\r\nb=(xy-ex*ey/num)/(xx-ex*ex/num)\r\na=ey/num-b*ex/num\r\ntmpx=[-2,0,2]\r\ntmpy=[]\r\nfor i in tmpx:\r\n tmpy.append(b*i+a)\r\nplt.plot(tmpx,tmpy)\r\nplt.legend()\r\nplt.show()</pre>\r\n<img class=\"alignnone size-medium wp-image-49\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/QQ截图20170307175022-300x230.jpg\" alt=\"\" width=\"300\" height=\"230\" />\r\n\r\n效果还可以，之后会对回归进行更多的优化和尝试，最小二乘法，梯度下降等等",
            "post_title": "简单线性回归",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "43-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-7 18:01:12",
            "post_modified_gmt": "2017-3-7 10:01:12",
            "post_content_filtered": "",
            "post_parent": "43",
            "guid": "http://ganjiacheng.cn/blog/?p=54",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "57",
            "post_author": "1",
            "post_date": "2017-3-7 23:17:40",
            "post_date_gmt": "2017-3-7 15:17:40",
            "post_content": "我叫甘家城，来自宁波余姚，目前是杭电的一名大二学生，作为一个电子专业的学生，同时能入手前端，玩玩php，耍耍python，妙哉！\r\n<pre>All of life is an act of letting go, but what hurts the most is not taking a moment to say goodbye.</pre>",
            "post_title": "个人简介",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "2-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-7 23:17:40",
            "post_modified_gmt": "2017-3-7 15:17:40",
            "post_content_filtered": "",
            "post_parent": "2",
            "guid": "http://ganjiacheng.cn/blog/?p=57",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "58",
            "post_author": "1",
            "post_date": "2017-3-7 23:19:29",
            "post_date_gmt": "2017-3-7 15:19:29",
            "post_content": "我叫甘家城，来自宁波余姚，目前是杭电的一名大二学生，作为一个电子专业的学生，同时能入手前端，玩玩php，耍耍python，妙哉！\r\n<h5>All of life is an act of letting go, but what hurts the most is not taking a moment to say goodbye.</h5>",
            "post_title": "个人简介",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "2-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-7 23:19:29",
            "post_modified_gmt": "2017-3-7 15:19:29",
            "post_content_filtered": "",
            "post_parent": "2",
            "guid": "http://ganjiacheng.cn/blog/?p=58",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "63",
            "post_author": "1",
            "post_date": "2017-3-8 13:11:21",
            "post_date_gmt": "2017-3-8 05:11:21",
            "post_content": "对于一个学生，研究学校网站还是比较有趣滴！\r\n\r\nTalk is cheap！Then I show the code.\r\n\r\n下面是用php的实现，具体细节在注释里讲解<!--more-->\r\n<pre>//登录之前先获取cookie及lt(一次性使用，lt很关键)\r\nfunction GetCookie(){\r\n    //cookie的地址\r\n    $cookie=dirname(__FILE__).'/cookie.txt';\r\n    //curl来模拟登陆一次教务网站获取返回的页面代码\r\n    $ch = curl_init(); \r\n    curl_setopt($ch, CURLOPT_URL, 'http://cas.hdu.edu.cn/cas/login'); \r\n    curl_setopt($ch, CURLOPT_HEADER, 0);\r\n    curl_setopt($ch, CURLOPT_COOKIEJAR, $cookie);\r\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n    $res=curl_exec($ch);\r\n    curl_close($ch);\r\n    //用正则匹配到代码里的lt存起来\r\n    $preg = '|&lt;input type=\"hidden\" name=\"lt\" value=[\\\"](.*?)[\\\"] /&gt;|U';\r\n    preg_match_all($preg, $res, $arr); \r\n    $lt=$arr[1][0];\r\n    //把lt存在session里\r\n    $_SESSION['lt']=$lt;\r\n    //带着刚才的cookie在curl一次验证码的网站得到验证码图片\r\n    $ch = curl_init(); \r\n    curl_setopt($ch, CURLOPT_URL, 'http://cas.hdu.edu.cn/cas/Captcha.jpg'); \r\n    curl_setopt($ch, CURLOPT_HEADER, 0);\r\n    curl_setopt($ch, CURLOPT_COOKIEFILE, $cookie);\r\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n    $data=curl_exec($ch);\r\n    curl_close($ch);\r\n    //获取时间(为确保验证码唯一性)\r\n    $time=time();\r\n    //把验证码保存成jpg\r\n    file_put_contents(dirname(__FILE__).'/yzm/'.$time.'.jpg',$data);\r\n    //为了方便这里返回时间\r\n    return $time;\r\n }</pre>\r\n<pre>//验证是否登录成功\r\nfunction VerLogin($username,$password,$yzm){\r\n    //cookie路径\r\n    $cookie=dirname(__FILE__).'/cookie.txt';\r\n    //获取在session里的lt\r\n    $lt=$_SESSION['lt'];\r\n    //构造post内容\r\n    $post_data=array(\r\n        'encodedService'=&gt;'http%3a%2f%2fi.hdu.edu.cn%2fdcp%2findex.jsp',\r\n        'service'=&gt;'http://i.hdu.edu.cn/dcp/index.jsp',\r\n        'serviceName'=&gt;'null',\r\n        'loginErrCnt'=&gt;'0',\r\n        'username'=&gt;$username,\r\n        'password'=&gt;md5($password),\r\n        'lt'=&gt;$lt,\r\n        'captcha'=&gt;$yzm\r\n     );\r\n    //带着cookie模拟登陆(为了防止被认出来构造的比较完整，嘻嘻)\r\n    $curl = curl_init();\r\n    curl_setopt($curl, CURLOPT_URL, \"http://cas.hdu.edu.cn/cas/login\");\r\n    curl_setopt($curl, CURLOPT_HEADER, 0);\r\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\r\n    curl_setopt ($curl,CURLOPT_REFERER,'http://cas.hdu.edu.cn/cas/login?service=http%3A%2F%2Fi.hdu.edu.cn%2Fdcp%2Findex.jsp');\r\n    curl_setopt($curl, CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36'); \r\n    curl_setopt($curl, CURLOPT_POST, 1);\r\n    curl_setopt($curl, CURLOPT_COOKIEFILE, $cookie);\r\n    curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($post_data));\r\n    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1); \r\n    $res=curl_exec($curl);\r\n    curl_close($curl);\r\n    //得到一个自带跳转的页面的代码(跳转过去就是登陆后的主页面了哦)\r\n    //用正则匹配跳转，如果有则返回成功，没则返回失败\r\n    preg_match_all('/window.location.href=[\\\"](.*)[\\\"]/i', $res, $results);\r\n    if($results[1][0]==null){\r\n        return false;\r\n    }else{\r\n        return true;\r\n    }\r\n }</pre>\r\n<pre>//使用函数\r\n//获取cookie\r\n$time=GetCookie();\r\n//下面是验证码图片路径，根据图片得到正确验证码\r\n//$Imgdir=dirname(__file__).\"/yzm/\".$time.\".jpg\";\r\n//根据得到的验证码加上学号密码登录\r\n$stuid=\"15******\";\r\n$password=\"********\";\r\n$yzm=\"****\";\r\nif(VerLogin($stuid,$password,$yzm)){\r\n    echo \"登录成功\";\r\n}else{\r\n    echo \"登录失败\";\r\n}</pre>\r\n个人推荐使用的是fiddler来抓包，其他的网页的登陆也可以用相同的思路来研究。",
            "post_title": "数字杭电的模拟登陆(带验证码)",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e6%95%b0%e5%ad%97%e6%9d%ad%e7%94%b5%e7%9a%84%e6%a8%a1%e6%8b%9f%e7%99%bb%e9%99%86%e5%b8%a6%e9%aa%8c%e8%af%81%e7%a0%81",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-8-2 20:29:07",
            "post_modified_gmt": "2017-8-2 12:29:07",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=63",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "64",
            "post_author": "1",
            "post_date": "2017-3-8 13:11:21",
            "post_date_gmt": "2017-3-8 05:11:21",
            "post_content": "对于一个学生，研究学校网站还是比较有趣滴！\r\n\r\nTalk is cheap！Then I show the code.\r\n\r\n下面是用php的实现，具体细节在注释里讲解\r\n<pre>//登录之前先获取cookie及lt(一次性使用，lt很关键)\r\nfunction GetCookie(){\r\n    //cookie的地址\r\n    $cookie=dirname(__FILE__).'/cookie.txt';\r\n    //curl来模拟登陆一次教务网站获取返回的页面代码\r\n    $ch = curl_init(); \r\n    curl_setopt($ch, CURLOPT_URL, 'http://cas.hdu.edu.cn/cas/login'); \r\n    curl_setopt($ch, CURLOPT_HEADER, 0);\r\n    curl_setopt($ch, CURLOPT_COOKIEJAR, $cookie);\r\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n    $res=curl_exec($ch);\r\n    curl_close($ch);\r\n    //用正则匹配到代码里的lt存起来\r\n    $preg = '|&lt;input type=\"hidden\" name=\"lt\" value=[\\\"](.*?)[\\\"] /&gt;|U';\r\n    preg_match_all($preg, $res, $arr); \r\n    $lt=$arr[1][0];\r\n    //把lt存在session里\r\n    $_SESSION['lt']=$lt;\r\n    //带着刚才的cookie在curl一次验证码的网站得到验证码图片\r\n    $ch = curl_init(); \r\n    curl_setopt($ch, CURLOPT_URL, 'http://cas.hdu.edu.cn/cas/Captcha.jpg'); \r\n    curl_setopt($ch, CURLOPT_HEADER, 0);\r\n    curl_setopt($ch, CURLOPT_COOKIEFILE, $cookie);\r\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n    $data=curl_exec($ch);\r\n    curl_close($ch);\r\n    //获取时间(为确保验证码唯一性)\r\n    $time=time();\r\n    //把验证码保存成jpg\r\n    file_put_contents(dirname(__FILE__).'/yzm/'.$time.'.jpg',$data);\r\n    //为了方便这里返回时间\r\n    return $time;\r\n }</pre>\r\n<pre>//验证是否登录成功\r\nfunction VerLogin($username,$password,$yzm){\r\n    //cookie路径\r\n    $cookie=dirname(__FILE__).'/cookie.txt';\r\n    //获取在session里的lt\r\n    $lt=$_SESSION['lt'];\r\n    //构造post内容\r\n    $post_data=array(\r\n        'encodedService'=&gt;'http%3a%2f%2fi.hdu.edu.cn%2fdcp%2findex.jsp',\r\n        'service'=&gt;'http://i.hdu.edu.cn/dcp/index.jsp',\r\n        'serviceName'=&gt;'null',\r\n        'loginErrCnt'=&gt;'0',\r\n        'username'=&gt;$username,\r\n        'password'=&gt;md5($password),\r\n        'lt'=&gt;$lt,\r\n        'captcha'=&gt;$yzm\r\n     );\r\n    //带着cookie模拟登陆(为了防止被认出来构造的比较完整，嘻嘻)\r\n    $curl = curl_init();\r\n    curl_setopt($curl, CURLOPT_URL, \"http://cas.hdu.edu.cn/cas/login\");\r\n    curl_setopt($curl, CURLOPT_HEADER, 0);\r\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\r\n    curl_setopt ($curl,CURLOPT_REFERER,'http://cas.hdu.edu.cn/cas/login?service=http%3A%2F%2Fi.hdu.edu.cn%2Fdcp%2Findex.jsp');\r\n    curl_setopt($curl, CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36'); \r\n    curl_setopt($curl, CURLOPT_POST, 1);\r\n    curl_setopt($curl, CURLOPT_COOKIEFILE, $cookie);\r\n    curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($post_data));\r\n    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1); \r\n    $res=curl_exec($curl);\r\n    curl_close($curl);\r\n    //得到一个自带跳转的页面的代码(跳转过去就是登陆后的主页面了哦)\r\n    //用正则匹配跳转，如果有则返回成功，没则返回失败\r\n    preg_match_all('/window.location.href=[\\\"](.*)[\\\"]/i', $res, $results);\r\n    if($results[1][0]==null){\r\n        return false;\r\n    }else{\r\n        return true;\r\n    }\r\n }</pre>\r\n<pre>//使用函数\r\n//获取cookie\r\n$time=GetCookie();\r\n//下面是验证码图片路径，根据图片得到正确验证码\r\n//$Imgdir=dirname(__file__).'/yzm/'.$time.\".jpg\";\r\n//根据得到的验证码加上学号密码登录\r\nif(VerLogin($stuid,$password,$yzm)){\r\n    echo \"登录成功\";\r\n}else{\r\n    echo \"登录失败\";\r\n}</pre>\r\n个人推荐使用的是fiddler来抓包，其他的网页的登陆也可以用相同的思路来研究。",
            "post_title": "数字杭电的模拟登陆(带验证码)",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "63-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-8 13:11:21",
            "post_modified_gmt": "2017-3-8 05:11:21",
            "post_content_filtered": "",
            "post_parent": "63",
            "guid": "http://ganjiacheng.cn/blog/?p=64",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "66",
            "post_author": "1",
            "post_date": "2017-3-8 13:12:21",
            "post_date_gmt": "2017-3-8 05:12:21",
            "post_content": "对于一个学生，研究学校网站还是比较有趣滴！\r\n\r\nTalk is cheap！Then I show the code.\r\n\r\n下面是用php的实现，具体细节在注释里讲解<!--more-->\r\n<pre>//登录之前先获取cookie及lt(一次性使用，lt很关键)\r\nfunction GetCookie(){\r\n    //cookie的地址\r\n    $cookie=dirname(__FILE__).'/cookie.txt';\r\n    //curl来模拟登陆一次教务网站获取返回的页面代码\r\n    $ch = curl_init(); \r\n    curl_setopt($ch, CURLOPT_URL, 'http://cas.hdu.edu.cn/cas/login'); \r\n    curl_setopt($ch, CURLOPT_HEADER, 0);\r\n    curl_setopt($ch, CURLOPT_COOKIEJAR, $cookie);\r\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n    $res=curl_exec($ch);\r\n    curl_close($ch);\r\n    //用正则匹配到代码里的lt存起来\r\n    $preg = '|&lt;input type=\"hidden\" name=\"lt\" value=[\\\"](.*?)[\\\"] /&gt;|U';\r\n    preg_match_all($preg, $res, $arr); \r\n    $lt=$arr[1][0];\r\n    //把lt存在session里\r\n    $_SESSION['lt']=$lt;\r\n    //带着刚才的cookie在curl一次验证码的网站得到验证码图片\r\n    $ch = curl_init(); \r\n    curl_setopt($ch, CURLOPT_URL, 'http://cas.hdu.edu.cn/cas/Captcha.jpg'); \r\n    curl_setopt($ch, CURLOPT_HEADER, 0);\r\n    curl_setopt($ch, CURLOPT_COOKIEFILE, $cookie);\r\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n    $data=curl_exec($ch);\r\n    curl_close($ch);\r\n    //获取时间(为确保验证码唯一性)\r\n    $time=time();\r\n    //把验证码保存成jpg\r\n    file_put_contents(dirname(__FILE__).'/yzm/'.$time.'.jpg',$data);\r\n    //为了方便这里返回时间\r\n    return $time;\r\n }</pre>\r\n<pre>//验证是否登录成功\r\nfunction VerLogin($username,$password,$yzm){\r\n    //cookie路径\r\n    $cookie=dirname(__FILE__).'/cookie.txt';\r\n    //获取在session里的lt\r\n    $lt=$_SESSION['lt'];\r\n    //构造post内容\r\n    $post_data=array(\r\n        'encodedService'=&gt;'http%3a%2f%2fi.hdu.edu.cn%2fdcp%2findex.jsp',\r\n        'service'=&gt;'http://i.hdu.edu.cn/dcp/index.jsp',\r\n        'serviceName'=&gt;'null',\r\n        'loginErrCnt'=&gt;'0',\r\n        'username'=&gt;$username,\r\n        'password'=&gt;md5($password),\r\n        'lt'=&gt;$lt,\r\n        'captcha'=&gt;$yzm\r\n     );\r\n    //带着cookie模拟登陆(为了防止被认出来构造的比较完整，嘻嘻)\r\n    $curl = curl_init();\r\n    curl_setopt($curl, CURLOPT_URL, \"http://cas.hdu.edu.cn/cas/login\");\r\n    curl_setopt($curl, CURLOPT_HEADER, 0);\r\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\r\n    curl_setopt ($curl,CURLOPT_REFERER,'http://cas.hdu.edu.cn/cas/login?service=http%3A%2F%2Fi.hdu.edu.cn%2Fdcp%2Findex.jsp');\r\n    curl_setopt($curl, CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36'); \r\n    curl_setopt($curl, CURLOPT_POST, 1);\r\n    curl_setopt($curl, CURLOPT_COOKIEFILE, $cookie);\r\n    curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($post_data));\r\n    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1); \r\n    $res=curl_exec($curl);\r\n    curl_close($curl);\r\n    //得到一个自带跳转的页面的代码(跳转过去就是登陆后的主页面了哦)\r\n    //用正则匹配跳转，如果有则返回成功，没则返回失败\r\n    preg_match_all('/window.location.href=[\\\"](.*)[\\\"]/i', $res, $results);\r\n    if($results[1][0]==null){\r\n        return false;\r\n    }else{\r\n        return true;\r\n    }\r\n }</pre>\r\n<pre>//使用函数\r\n//获取cookie\r\n$time=GetCookie();\r\n//下面是验证码图片路径，根据图片得到正确验证码\r\n//$Imgdir=dirname(__file__).'/yzm/'.$time.\".jpg\";\r\n//根据得到的验证码加上学号密码登录\r\nif(VerLogin($stuid,$password,$yzm)){\r\n    echo \"登录成功\";\r\n}else{\r\n    echo \"登录失败\";\r\n}</pre>\r\n个人推荐使用的是fiddler来抓包，其他的网页的登陆也可以用相同的思路来研究。",
            "post_title": "数字杭电的模拟登陆(带验证码)",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "63-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-8 13:12:21",
            "post_modified_gmt": "2017-3-8 05:12:21",
            "post_content_filtered": "",
            "post_parent": "63",
            "guid": "http://ganjiacheng.cn/blog/?p=66",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "68",
            "post_author": "1",
            "post_date": "2017-3-8 13:16:08",
            "post_date_gmt": "2017-3-8 05:16:08",
            "post_content": "对于一个学生，研究学校网站还是比较有趣滴！\r\n\r\nTalk is cheap！Then I show the code.\r\n\r\n下面是用php的实现，具体细节在注释里讲解<!--more-->\r\n<pre>//登录之前先获取cookie及lt(一次性使用，lt很关键)\r\nfunction GetCookie(){\r\n    //cookie的地址\r\n    $cookie=dirname(__FILE__).'/cookie.txt';\r\n    //curl来模拟登陆一次教务网站获取返回的页面代码\r\n    $ch = curl_init(); \r\n    curl_setopt($ch, CURLOPT_URL, 'http://cas.hdu.edu.cn/cas/login'); \r\n    curl_setopt($ch, CURLOPT_HEADER, 0);\r\n    curl_setopt($ch, CURLOPT_COOKIEJAR, $cookie);\r\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n    $res=curl_exec($ch);\r\n    curl_close($ch);\r\n    //用正则匹配到代码里的lt存起来\r\n    $preg = '|&lt;input type=\"hidden\" name=\"lt\" value=[\\\"](.*?)[\\\"] /&gt;|U';\r\n    preg_match_all($preg, $res, $arr); \r\n    $lt=$arr[1][0];\r\n    //把lt存在session里\r\n    $_SESSION['lt']=$lt;\r\n    //带着刚才的cookie在curl一次验证码的网站得到验证码图片\r\n    $ch = curl_init(); \r\n    curl_setopt($ch, CURLOPT_URL, 'http://cas.hdu.edu.cn/cas/Captcha.jpg'); \r\n    curl_setopt($ch, CURLOPT_HEADER, 0);\r\n    curl_setopt($ch, CURLOPT_COOKIEFILE, $cookie);\r\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n    $data=curl_exec($ch);\r\n    curl_close($ch);\r\n    //获取时间(为确保验证码唯一性)\r\n    $time=time();\r\n    //把验证码保存成jpg\r\n    file_put_contents(dirname(__FILE__).'/yzm/'.$time.'.jpg',$data);\r\n    //为了方便这里返回时间\r\n    return $time;\r\n }</pre>\r\n<pre>//验证是否登录成功\r\nfunction VerLogin($username,$password,$yzm){\r\n    //cookie路径\r\n    $cookie=dirname(__FILE__).'/cookie.txt';\r\n    //获取在session里的lt\r\n    $lt=$_SESSION['lt'];\r\n    //构造post内容\r\n    $post_data=array(\r\n        'encodedService'=&gt;'http%3a%2f%2fi.hdu.edu.cn%2fdcp%2findex.jsp',\r\n        'service'=&gt;'http://i.hdu.edu.cn/dcp/index.jsp',\r\n        'serviceName'=&gt;'null',\r\n        'loginErrCnt'=&gt;'0',\r\n        'username'=&gt;$username,\r\n        'password'=&gt;md5($password),\r\n        'lt'=&gt;$lt,\r\n        'captcha'=&gt;$yzm\r\n     );\r\n    //带着cookie模拟登陆(为了防止被认出来构造的比较完整，嘻嘻)\r\n    $curl = curl_init();\r\n    curl_setopt($curl, CURLOPT_URL, \"http://cas.hdu.edu.cn/cas/login\");\r\n    curl_setopt($curl, CURLOPT_HEADER, 0);\r\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\r\n    curl_setopt ($curl,CURLOPT_REFERER,'http://cas.hdu.edu.cn/cas/login?service=http%3A%2F%2Fi.hdu.edu.cn%2Fdcp%2Findex.jsp');\r\n    curl_setopt($curl, CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36'); \r\n    curl_setopt($curl, CURLOPT_POST, 1);\r\n    curl_setopt($curl, CURLOPT_COOKIEFILE, $cookie);\r\n    curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($post_data));\r\n    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1); \r\n    $res=curl_exec($curl);\r\n    curl_close($curl);\r\n    //得到一个自带跳转的页面的代码(跳转过去就是登陆后的主页面了哦)\r\n    //用正则匹配跳转，如果有则返回成功，没则返回失败\r\n    preg_match_all('/window.location.href=[\\\"](.*)[\\\"]/i', $res, $results);\r\n    if($results[1][0]==null){\r\n        return false;\r\n    }else{\r\n        return true;\r\n    }\r\n }</pre>\r\n<pre>//使用函数\r\n//获取cookie\r\n$time=GetCookie();\r\n//下面是验证码图片路径，根据图片得到正确验证码\r\n//$Imgdir=dirname(__file__).'/yzm/'.$time.\".jpg\";\r\n//根据得到的验证码加上学号密码登录\r\n$stuid=\"15******\";\r\n$password=\"********\";\r\n$yzm=\"****\";\r\nif(VerLogin($stuid,$password,$yzm)){\r\n    echo \"登录成功\";\r\n}else{\r\n    echo \"登录失败\";\r\n}</pre>\r\n个人推荐使用的是fiddler来抓包，其他的网页的登陆也可以用相同的思路来研究。",
            "post_title": "数字杭电的模拟登陆(带验证码)",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "63-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-8 13:16:08",
            "post_modified_gmt": "2017-3-8 05:16:08",
            "post_content_filtered": "",
            "post_parent": "63",
            "guid": "http://ganjiacheng.cn/blog/?p=68",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "70",
            "post_author": "1",
            "post_date": "2017-3-8 16:36:37",
            "post_date_gmt": "2017-3-8 08:36:37",
            "post_content": "对于一个学生，研究学校网站还是比较有趣滴！\r\n\r\nTalk is cheap！Then I show the code.\r\n\r\n下面是用php的实现，具体细节在注释里讲解<!--more-->\r\n<pre>//登录之前先获取cookie及lt(一次性使用，lt很关键)\r\nfunction GetCookie(){\r\n    //cookie的地址\r\n    $cookie=dirname(__FILE__).'/cookie.txt';\r\n    //curl来模拟登陆一次教务网站获取返回的页面代码\r\n    $ch = curl_init(); \r\n    curl_setopt($ch, CURLOPT_URL, 'http://cas.hdu.edu.cn/cas/login'); \r\n    curl_setopt($ch, CURLOPT_HEADER, 0);\r\n    curl_setopt($ch, CURLOPT_COOKIEJAR, $cookie);\r\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n    $res=curl_exec($ch);\r\n    curl_close($ch);\r\n    //用正则匹配到代码里的lt存起来\r\n    $preg = '|&lt;input type=\"hidden\" name=\"lt\" value=[\\\"](.*?)[\\\"] /&gt;|U';\r\n    preg_match_all($preg, $res, $arr); \r\n    $lt=$arr[1][0];\r\n    //把lt存在session里\r\n    $_SESSION['lt']=$lt;\r\n    //带着刚才的cookie在curl一次验证码的网站得到验证码图片\r\n    $ch = curl_init(); \r\n    curl_setopt($ch, CURLOPT_URL, 'http://cas.hdu.edu.cn/cas/Captcha.jpg'); \r\n    curl_setopt($ch, CURLOPT_HEADER, 0);\r\n    curl_setopt($ch, CURLOPT_COOKIEFILE, $cookie);\r\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n    $data=curl_exec($ch);\r\n    curl_close($ch);\r\n    //获取时间(为确保验证码唯一性)\r\n    $time=time();\r\n    //把验证码保存成jpg\r\n    file_put_contents(dirname(__FILE__).'/yzm/'.$time.'.jpg',$data);\r\n    //为了方便这里返回时间\r\n    return $time;\r\n }</pre>\r\n<pre>//验证是否登录成功\r\nfunction VerLogin($username,$password,$yzm){\r\n    //cookie路径\r\n    $cookie=dirname(__FILE__).'/cookie.txt';\r\n    //获取在session里的lt\r\n    $lt=$_SESSION['lt'];\r\n    //构造post内容\r\n    $post_data=array(\r\n        'encodedService'=&gt;'http%3a%2f%2fi.hdu.edu.cn%2fdcp%2findex.jsp',\r\n        'service'=&gt;'http://i.hdu.edu.cn/dcp/index.jsp',\r\n        'serviceName'=&gt;'null',\r\n        'loginErrCnt'=&gt;'0',\r\n        'username'=&gt;$username,\r\n        'password'=&gt;md5($password),\r\n        'lt'=&gt;$lt,\r\n        'captcha'=&gt;$yzm\r\n     );\r\n    //带着cookie模拟登陆(为了防止被认出来构造的比较完整，嘻嘻)\r\n    $curl = curl_init();\r\n    curl_setopt($curl, CURLOPT_URL, \"http://cas.hdu.edu.cn/cas/login\");\r\n    curl_setopt($curl, CURLOPT_HEADER, 0);\r\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\r\n    curl_setopt ($curl,CURLOPT_REFERER,'http://cas.hdu.edu.cn/cas/login?service=http%3A%2F%2Fi.hdu.edu.cn%2Fdcp%2Findex.jsp');\r\n    curl_setopt($curl, CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36'); \r\n    curl_setopt($curl, CURLOPT_POST, 1);\r\n    curl_setopt($curl, CURLOPT_COOKIEFILE, $cookie);\r\n    curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($post_data));\r\n    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1); \r\n    $res=curl_exec($curl);\r\n    curl_close($curl);\r\n    //得到一个自带跳转的页面的代码(跳转过去就是登陆后的主页面了哦)\r\n    //用正则匹配跳转，如果有则返回成功，没则返回失败\r\n    preg_match_all('/window.location.href=[\\\"](.*)[\\\"]/i', $res, $results);\r\n    if($results[1][0]==null){\r\n        return false;\r\n    }else{\r\n        return true;\r\n    }\r\n }</pre>\r\n<pre>//使用函数\r\n//获取cookie\r\n$time=GetCookie();\r\n//下面是验证码图片路径，根据图片得到正确验证码\r\n//$Imgdir=dirname(__file__).\"/yzm/\".$time.\".jpg\";\r\n//根据得到的验证码加上学号密码登录\r\n$stuid=\"15******\";\r\n$password=\"********\";\r\n$yzm=\"****\";\r\nif(VerLogin($stuid,$password,$yzm)){\r\n    echo \"登录成功\";\r\n}else{\r\n    echo \"登录失败\";\r\n}</pre>\r\n个人推荐使用的是fiddler来抓包，其他的网页的登陆也可以用相同的思路来研究。",
            "post_title": "数字杭电的模拟登陆(带验证码)",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "63-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-8 16:36:37",
            "post_modified_gmt": "2017-3-8 08:36:37",
            "post_content_filtered": "",
            "post_parent": "63",
            "guid": "http://ganjiacheng.cn/blog/?p=70",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "71",
            "post_author": "1",
            "post_date": "2017-3-9 00:07:34",
            "post_date_gmt": "2017-3-8 16:07:34",
            "post_content": "KNN：我的简单理解为计算各个点到原点的距离，对于于样本数据以相差远近排序，取前面K个，属于哪个类别比较多的就当做最后分类，样本越多就越精确。<!--more-->\n\n举个栗子：样本点：[a,b,c,d,e,f]，类别：[1,2,3,2,3,5]，假定a-f分别为相差从近到远；\n\n如果K取1，那分类结果属于1，如果K取值为4，拿结果便为2。\n\n废话不多说直接上代码：\n<pre>//KNN分类的主程序\nfrom numpy import *\nimport operator\ndef classify(inX,dataSet,labels,k):\n    dataSetSize=dataSet.shape[0] \n    #获取行\n    diffMat=tile(inX,(dataSetSize,1))-dataSet \n    #=array([行数个inX])-dataSet\n    sqDiffMat=diffMat**2 \n    #每个数**2\n    sqDistances=sqDiffMat.sum(axis=1) \n    #.sum()--所有数相加 .sum(axis=0)--列 .sum(axis=1)--行\n    distances=sqDistances**0.5\n    #每个数**0.5\n    sortedDistIndicies=distances.argsort()\n    #.argsort()返回排好序后的索引值\n    classCount={}\n    for i in xrange(k):\n        voteIlabel=labels[sortedDistIndicies[i]]\n        #获取由近到远的类别\n        classCount[voteIlabel]=classCount.get(voteIlabel,0)+1\n        #.get(key,default) 对类别进行计数\n    sortedClassCount=sorted(classCount.iteritems(),key=operator.itemgetter(1),reverse=True)\n    #.iteritems()返回迭代器 operator.itemgetter(1)返回第一个域的值    reverse=True倒序\n    return sortedClassCount[0][0]\n    #输出频率高（靠近）的一个</pre>\n这里简单在提一下图像的处理PIL，以后会详细研究\n<pre>from PIL import Image\nim=Image.open(\"xxx.jpg\")\ndata=im.getdata()\n//data里便是像素点数据</pre>\n之后要做的就是手写好一大部分的图，并用文件名来标记图所代表的数字，这些用来作为训练。\n\n再把像素点转为numpy的矩阵，并标记好每个代表的数字。\n\n载入新来的一张图得到矩阵，带入到上面的classify()就能得出结果，至于K应该取多少，凭经验来做判断，或者用大量数据做训练得出正确率最高的K值。\n\n&nbsp;",
            "post_title": "KNN实现手写数字0-9识别",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "knn%e5%ae%9e%e7%8e%b0%e6%89%8b%e5%86%99%e6%95%b0%e5%ad%970-9%e8%af%86%e5%88%ab",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-8-2 20:29:02",
            "post_modified_gmt": "2017-8-2 12:29:02",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=71",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "72",
            "post_author": "1",
            "post_date": "2017-3-9 00:07:34",
            "post_date_gmt": "2017-3-8 16:07:34",
            "post_content": "KNN：我的简单理解为计算各个点到原点的距离，对于于样本数据以相差远近排序，取前面K个，属于哪个类别比较多的就当做最后分类，样本越多就越精确。\r\n\r\n举个栗子：样本点：[a,b,c,d,e,f]，类别：[1,2,3,2,3,5]，假定a-f分别为相差从近到远；\r\n\r\n如果K取1，那分类结果属于1，如果K取值为4，拿结果便为2。\r\n\r\n废话不多说直接上代码：\r\n<pre>//KNN分类的主程序\r\nfrom numpy import *\r\nimport operator\r\ndef classify(inX,dataSet,labels,k):\r\n    dataSetSize=dataSet.shape[0] \r\n    #获取行\r\n    diffMat=tile(inX,(dataSetSize,1))-dataSet \r\n    #=array([行数个inX])-dataSet\r\n    sqDiffMat=diffMat**2 \r\n    #每个数**2\r\n    sqDistances=sqDiffMat.sum(axis=1) \r\n    #.sum()--所有数相加 .sum(axis=0)--列 .sum(axis=1)--行\r\n    distances=sqDistances**0.5\r\n    #每个数**0.5\r\n    sortedDistIndicies=distances.argsort()\r\n    #.argsort()返回排好序后的索引值\r\n    classCount={}\r\n    for i in xrange(k):\r\n        voteIlabel=labels[sortedDistIndicies[i]]\r\n        #获取由近到远的类别\r\n        classCount[voteIlabel]=classCount.get(voteIlabel,0)+1\r\n        #.get(key,default) 对类别进行计数\r\n    sortedClassCount=sorted(classCount.iteritems(),key=operator.itemgetter(1),reverse=True)\r\n    #.iteritems()返回迭代器 operator.itemgetter(1)返回第一个域的值    reverse=True倒序\r\n    return sortedClassCount[0][0]\r\n    #输出频率高（靠近）的一个</pre>\r\n这里简单在提一下图像的处理PIL，以后会详细研究\r\n<pre>from PIL import Image\r\nim=Image.open(\"xxx.jpg\")\r\ndata=im.getdata()\r\n//data里便是像素点数据</pre>\r\n之后要做的就是手写好一大部分的图，并用文件名来标记图所代表的数字，这些用来作为训练。\r\n\r\n再把像素点转为numpy的矩阵，并标记好每个代表的数字。\r\n\r\n载入新来的一张图得到矩阵，带入到上面的classify()就能得出结果，至于K应该取多少，凭经验来做判断，或者用大量数据做训练得出正确率最高的K值。\r\n\r\n&nbsp;",
            "post_title": "KNN实现手写数字0-9识别",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "71-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-9 00:07:34",
            "post_modified_gmt": "2017-3-8 16:07:34",
            "post_content_filtered": "",
            "post_parent": "71",
            "guid": "http://ganjiacheng.cn/blog/?p=72",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "73",
            "post_author": "1",
            "post_date": "2017-3-9 00:09:45",
            "post_date_gmt": "2017-3-8 16:09:45",
            "post_content": "KNN：我的简单理解为计算各个点到原点的距离，对于于样本数据以相差远近排序，取前面K个，属于哪个类别比较多的就当做最后分类，样本越多就越精确。<!--more-->\r\n\r\n举个栗子：样本点：[a,b,c,d,e,f]，类别：[1,2,3,2,3,5]，假定a-f分别为相差从近到远；\r\n\r\n如果K取1，那分类结果属于1，如果K取值为4，拿结果便为2。\r\n\r\n废话不多说直接上代码：\r\n<pre>//KNN分类的主程序\r\nfrom numpy import *\r\nimport operator\r\ndef classify(inX,dataSet,labels,k):\r\n    dataSetSize=dataSet.shape[0] \r\n    #获取行\r\n    diffMat=tile(inX,(dataSetSize,1))-dataSet \r\n    #=array([行数个inX])-dataSet\r\n    sqDiffMat=diffMat**2 \r\n    #每个数**2\r\n    sqDistances=sqDiffMat.sum(axis=1) \r\n    #.sum()--所有数相加 .sum(axis=0)--列 .sum(axis=1)--行\r\n    distances=sqDistances**0.5\r\n    #每个数**0.5\r\n    sortedDistIndicies=distances.argsort()\r\n    #.argsort()返回排好序后的索引值\r\n    classCount={}\r\n    for i in xrange(k):\r\n        voteIlabel=labels[sortedDistIndicies[i]]\r\n        #获取由近到远的类别\r\n        classCount[voteIlabel]=classCount.get(voteIlabel,0)+1\r\n        #.get(key,default) 对类别进行计数\r\n    sortedClassCount=sorted(classCount.iteritems(),key=operator.itemgetter(1),reverse=True)\r\n    #.iteritems()返回迭代器 operator.itemgetter(1)返回第一个域的值    reverse=True倒序\r\n    return sortedClassCount[0][0]\r\n    #输出频率高（靠近）的一个</pre>\r\n这里简单在提一下图像的处理PIL，以后会详细研究\r\n<pre>from PIL import Image\r\nim=Image.open(\"xxx.jpg\")\r\ndata=im.getdata()\r\n//data里便是像素点数据</pre>\r\n之后要做的就是手写好一大部分的图，并用文件名来标记图所代表的数字，这些用来作为训练。\r\n\r\n再把像素点转为numpy的矩阵，并标记好每个代表的数字。\r\n\r\n载入新来的一张图得到矩阵，带入到上面的classify()就能得出结果，至于K应该取多少，凭经验来做判断，或者用大量数据做训练得出正确率最高的K值。\r\n\r\n&nbsp;",
            "post_title": "KNN实现手写数字0-9识别",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "71-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-9 00:09:45",
            "post_modified_gmt": "2017-3-8 16:09:45",
            "post_content_filtered": "",
            "post_parent": "71",
            "guid": "http://ganjiacheng.cn/blog/?p=73",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "76",
            "post_author": "1",
            "post_date": "2017-3-10 15:53:28",
            "post_date_gmt": "2017-3-10 07:53:28",
            "post_content": "具体详细题目请到<a href=\"https://leetcode.com/problemset/algorithms/\">https://leetcode.com/problemset/algorithms/</a>查看\r\n\r\n之下解法都属第一思路，大可改进。\r\n\r\n悄悄自问一句：今天ac了吗？<!--more-->\r\n\r\n1. Two Sum\r\n<pre>class Solution(object):\r\n    def twoSum(self, nums, target):\r\n    l=len(nums)\r\n    for i in xrange(l):\r\n        for j in xrange(l):\r\n            if(j==i):\r\n                pass\r\n            else:\r\n                if((nums[i]+nums[j])==target):\r\n                    return [i,j]\r\n</pre>\r\n2. Add Two Numbers\r\n<pre>class Solution(object):\r\n    def addTwoNumbers(self, l1, l2):\r\n        res=[]\r\n        jw=0\r\n        while(hasattr(l1,'val') or hasattr(l2,'val')):\r\n            if hasattr(l2,'val') and (not hasattr(l1,'val')):\r\n                if l2.val+jw==10:\r\n                    jw=1\r\n                    res.append(0)\r\n                else:\r\n                    res.append(l2.val+jw)\r\n                    jw=0\r\n                l2=l2.next\r\n            elif hasattr(l1,'val') and not hasattr(l2,'val'):\r\n                if l1.val+jw==10:\r\n                    jw=1\r\n                    res.append(0)\r\n                else:\r\n                    res.append(l1.val+jw)\r\n                    jw=0\r\n                l1=l1.next\r\n            else:\r\n                if l1.val+l2.val+jw&gt;=10:\r\n                    tmp=l1.val+l2.val+jw-10\r\n                    jw=1\r\n                else:\r\n                    tmp=l1.val+l2.val+jw\r\n                    jw=0\r\n                res.append(tmp)\r\n                l1=l1.next\r\n                l2=l2.next\r\n        if(jw):\r\n            res.append(1)\r\n        return res\r\n</pre>\r\n3. Longest Substring Without Repeating Characters\r\n<pre>class Solution(object):\r\n    def lengthOfLongestSubstring(self, s):\r\n        l=len(s)\r\n        res=0\r\n        tmp=0\r\n        k=1\r\n        for i in xrange(l):\r\n            for j in xrange(k,l+2):\r\n                if len(set(s[i:j]))!=j-i:\r\n                    k=j\r\n                    tmp=j-i\r\n                    break\r\n            if tmp&gt;res:\r\n                res=tmp\r\n            tmp=0\r\n            o=1\r\n        if s=='':\r\n            res=1\r\n        return res-1</pre>\r\n4. Median of Two Sorted Arrays\r\n<pre>class Solution(object):\r\n    def findMedianSortedArrays(self, nums1, nums2):\r\n        c=(nums1+nums2)\r\n        c.sort()\r\n        l=len(c)\r\n        if l%2==0:\r\n            res=(c[l/2]+c[l/2-1])*1.0/2\r\n        else:\r\n            res=(c[l/2])*1.0\r\n        return res</pre>\r\n5. Longest Palindromic Substring\r\n<pre>class Solution(object):\r\n    def longestPalindrome(self, s):\r\n        l=len(s)\r\n        tmp=0\r\n        maxl,maxr=0,0\r\n        for i in xrange(l):\r\n            m=i+1\r\n            n=i\r\n            while m&lt;l and n&gt;=0:\r\n                if s[m]==s[n]:\r\n                    if m-n+1&gt;tmp:\r\n                        tmp=m-n+1\r\n                        maxl=n\r\n                        maxr=m\r\n                    m+=1\r\n                    n-=1\r\n                else:\r\n                    break\r\n            j=i-1\r\n            k=i+1\r\n            while j&gt;=0 and k&lt;l:\r\n                if s[j]==s[k]:\r\n                    if k-j+1&gt;tmp:\r\n                        tmp=k-j+1\r\n                        maxl=j\r\n                        maxr=k\r\n                    j-=1\r\n                    k+=1\r\n                else:\r\n                    break\r\n        return s[maxl:maxr+1]</pre>\r\n&nbsp;",
            "post_title": "leetcode解题篇Python法1-5题",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "leetcode%e8%a7%a3%e9%a2%98%e7%af%87python%e6%b3%951-5%e9%a2%98",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-8-2 20:28:53",
            "post_modified_gmt": "2017-8-2 12:28:53",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=76",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "77",
            "post_author": "1",
            "post_date": "2017-3-10 15:34:30",
            "post_date_gmt": "2017-3-10 07:34:30",
            "post_content": "具体详细题目请到<a href=\"https://leetcode.com/problemset/algorithms/\">https://leetcode.com/problemset/algorithms/</a>查看\r\n\r\n1. Two Sum\r\n<pre>class Solution(object):\r\n    def twoSum(self, nums, target):\r\n    l=len(nums)\r\n    for i in xrange(l):\r\n        for j in xrange(l):\r\n            if(j==i):\r\n                pass\r\n            else:\r\n                if((nums[i]+nums[j])==target):\r\n                    return [i,j]\r\n</pre>\r\n2. Add Two Numbers\r\n<pre>class Solution(object):\r\n def addTwoNumbers(self, l1, l2):\r\n res=[]\r\n jw=0\r\n  while(hasattr(l1,'val') or hasattr(l2,'val')):\r\n   if hasattr(l2,'val') and (not hasattr(l1,'val')):\r\n    if l2.val+jw==10:\r\n     jw=1\r\n     res.append(0)\r\n    else:\r\n     res.append(l2.val+jw)\r\n     jw=0\r\n    l2=l2.next\r\n   elif hasattr(l1,'val') and not hasattr(l2,'val'):\r\n    if l1.val+jw==10:\r\n jw=1\r\n res.append(0)\r\n else:\r\n res.append(l1.val+jw)\r\n jw=0\r\n l1=l1.next\r\n else:\r\n if l1.val+l2.val+jw&gt;=10:\r\n tmp=l1.val+l2.val+jw-10\r\n jw=1\r\n else:\r\n tmp=l1.val+l2.val+jw\r\n jw=0\r\n res.append(tmp)\r\n l1=l1.next\r\n l2=l2.next\r\n if(jw):\r\n res.append(1)\r\n return res</pre>\r\n&nbsp;",
            "post_title": "leetcode解题篇Python法1-5题",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "76-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-10 15:34:30",
            "post_modified_gmt": "2017-3-10 07:34:30",
            "post_content_filtered": "",
            "post_parent": "76",
            "guid": "http://ganjiacheng.cn/blog/?p=77",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "78",
            "post_author": "1",
            "post_date": "2017-3-10 15:52:12",
            "post_date_gmt": "2017-3-10 07:52:12",
            "post_content": "具体详细题目请到<a href=\"https://leetcode.com/problemset/algorithms/\">https://leetcode.com/problemset/algorithms/</a>查看\r\n\r\n之下解法都属第一思路，大可改进。\r\n\r\n自问一句：今天ac了吗？\r\n\r\n1. Two Sum\r\n<pre>class Solution(object):\r\n    def twoSum(self, nums, target):\r\n    l=len(nums)\r\n    for i in xrange(l):\r\n        for j in xrange(l):\r\n            if(j==i):\r\n                pass\r\n            else:\r\n                if((nums[i]+nums[j])==target):\r\n                    return [i,j]\r\n</pre>\r\n2. Add Two Numbers\r\n<pre>class Solution(object):\r\n    def addTwoNumbers(self, l1, l2):\r\n        res=[]\r\n        jw=0\r\n        while(hasattr(l1,'val') or hasattr(l2,'val')):\r\n            if hasattr(l2,'val') and (not hasattr(l1,'val')):\r\n                if l2.val+jw==10:\r\n                    jw=1\r\n                    res.append(0)\r\n                else:\r\n                    res.append(l2.val+jw)\r\n                    jw=0\r\n                l2=l2.next\r\n            elif hasattr(l1,'val') and not hasattr(l2,'val'):\r\n                if l1.val+jw==10:\r\n                    jw=1\r\n                    res.append(0)\r\n                else:\r\n                    res.append(l1.val+jw)\r\n                    jw=0\r\n                l1=l1.next\r\n            else:\r\n                if l1.val+l2.val+jw&gt;=10:\r\n                    tmp=l1.val+l2.val+jw-10\r\n                    jw=1\r\n                else:\r\n                    tmp=l1.val+l2.val+jw\r\n                    jw=0\r\n                res.append(tmp)\r\n                l1=l1.next\r\n                l2=l2.next\r\n        if(jw):\r\n            res.append(1)\r\n        return res\r\n</pre>\r\n3. Longest Substring Without Repeating Characters\r\n<pre>class Solution(object):\r\n    def lengthOfLongestSubstring(self, s):\r\n        l=len(s)\r\n        res=0\r\n        tmp=0\r\n        k=1\r\n        for i in xrange(l):\r\n            for j in xrange(k,l+2):\r\n                if len(set(s[i:j]))!=j-i:\r\n                    k=j\r\n                    tmp=j-i\r\n                    break\r\n            if tmp&gt;res:\r\n                res=tmp\r\n            tmp=0\r\n            o=1\r\n        if s=='':\r\n            res=1\r\n        return res-1</pre>\r\n4. Median of Two Sorted Arrays\r\n<pre>class Solution(object):\r\n    def findMedianSortedArrays(self, nums1, nums2):\r\n        c=(nums1+nums2)\r\n        c.sort()\r\n        l=len(c)\r\n        if l%2==0:\r\n            res=(c[l/2]+c[l/2-1])*1.0/2\r\n        else:\r\n            res=(c[l/2])*1.0\r\n        return res</pre>\r\n5. Longest Palindromic Substring\r\n<pre>class Solution(object):\r\n    def longestPalindrome(self, s):\r\n        l=len(s)\r\n        tmp=0\r\n        maxl,maxr=0,0\r\n        for i in xrange(l):\r\n            m=i+1\r\n            n=i\r\n            while m&lt;l and n&gt;=0:\r\n                if s[m]==s[n]:\r\n                    if m-n+1&gt;tmp:\r\n                        tmp=m-n+1\r\n                        maxl=n\r\n                        maxr=m\r\n                    m+=1\r\n                    n-=1\r\n                else:\r\n                    break\r\n            j=i-1\r\n            k=i+1\r\n            while j&gt;=0 and k&lt;l:\r\n                if s[j]==s[k]:\r\n                    if k-j+1&gt;tmp:\r\n                        tmp=k-j+1\r\n                        maxl=j\r\n                        maxr=k\r\n                    j-=1\r\n                    k+=1\r\n                else:\r\n                    break\r\n        return s[maxl:maxr+1]</pre>\r\n&nbsp;",
            "post_title": "leetcode解题篇Python法1-5题",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "76-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-10 15:52:12",
            "post_modified_gmt": "2017-3-10 07:52:12",
            "post_content_filtered": "",
            "post_parent": "76",
            "guid": "http://ganjiacheng.cn/blog/?p=78",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "79",
            "post_author": "1",
            "post_date": "2017-3-10 15:52:28",
            "post_date_gmt": "2017-3-10 07:52:28",
            "post_content": "具体详细题目请到<a href=\"https://leetcode.com/problemset/algorithms/\">https://leetcode.com/problemset/algorithms/</a>查看\r\n\r\n之下解法都属第一思路，大可改进。\r\n\r\n自问一句：今天ac了吗？<!--more-->\r\n\r\n1. Two Sum\r\n<pre>class Solution(object):\r\n    def twoSum(self, nums, target):\r\n    l=len(nums)\r\n    for i in xrange(l):\r\n        for j in xrange(l):\r\n            if(j==i):\r\n                pass\r\n            else:\r\n                if((nums[i]+nums[j])==target):\r\n                    return [i,j]\r\n</pre>\r\n2. Add Two Numbers\r\n<pre>class Solution(object):\r\n    def addTwoNumbers(self, l1, l2):\r\n        res=[]\r\n        jw=0\r\n        while(hasattr(l1,'val') or hasattr(l2,'val')):\r\n            if hasattr(l2,'val') and (not hasattr(l1,'val')):\r\n                if l2.val+jw==10:\r\n                    jw=1\r\n                    res.append(0)\r\n                else:\r\n                    res.append(l2.val+jw)\r\n                    jw=0\r\n                l2=l2.next\r\n            elif hasattr(l1,'val') and not hasattr(l2,'val'):\r\n                if l1.val+jw==10:\r\n                    jw=1\r\n                    res.append(0)\r\n                else:\r\n                    res.append(l1.val+jw)\r\n                    jw=0\r\n                l1=l1.next\r\n            else:\r\n                if l1.val+l2.val+jw&gt;=10:\r\n                    tmp=l1.val+l2.val+jw-10\r\n                    jw=1\r\n                else:\r\n                    tmp=l1.val+l2.val+jw\r\n                    jw=0\r\n                res.append(tmp)\r\n                l1=l1.next\r\n                l2=l2.next\r\n        if(jw):\r\n            res.append(1)\r\n        return res\r\n</pre>\r\n3. Longest Substring Without Repeating Characters\r\n<pre>class Solution(object):\r\n    def lengthOfLongestSubstring(self, s):\r\n        l=len(s)\r\n        res=0\r\n        tmp=0\r\n        k=1\r\n        for i in xrange(l):\r\n            for j in xrange(k,l+2):\r\n                if len(set(s[i:j]))!=j-i:\r\n                    k=j\r\n                    tmp=j-i\r\n                    break\r\n            if tmp&gt;res:\r\n                res=tmp\r\n            tmp=0\r\n            o=1\r\n        if s=='':\r\n            res=1\r\n        return res-1</pre>\r\n4. Median of Two Sorted Arrays\r\n<pre>class Solution(object):\r\n    def findMedianSortedArrays(self, nums1, nums2):\r\n        c=(nums1+nums2)\r\n        c.sort()\r\n        l=len(c)\r\n        if l%2==0:\r\n            res=(c[l/2]+c[l/2-1])*1.0/2\r\n        else:\r\n            res=(c[l/2])*1.0\r\n        return res</pre>\r\n5. Longest Palindromic Substring\r\n<pre>class Solution(object):\r\n    def longestPalindrome(self, s):\r\n        l=len(s)\r\n        tmp=0\r\n        maxl,maxr=0,0\r\n        for i in xrange(l):\r\n            m=i+1\r\n            n=i\r\n            while m&lt;l and n&gt;=0:\r\n                if s[m]==s[n]:\r\n                    if m-n+1&gt;tmp:\r\n                        tmp=m-n+1\r\n                        maxl=n\r\n                        maxr=m\r\n                    m+=1\r\n                    n-=1\r\n                else:\r\n                    break\r\n            j=i-1\r\n            k=i+1\r\n            while j&gt;=0 and k&lt;l:\r\n                if s[j]==s[k]:\r\n                    if k-j+1&gt;tmp:\r\n                        tmp=k-j+1\r\n                        maxl=j\r\n                        maxr=k\r\n                    j-=1\r\n                    k+=1\r\n                else:\r\n                    break\r\n        return s[maxl:maxr+1]</pre>\r\n&nbsp;",
            "post_title": "leetcode解题篇Python法1-5题",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "76-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-10 15:52:28",
            "post_modified_gmt": "2017-3-10 07:52:28",
            "post_content_filtered": "",
            "post_parent": "76",
            "guid": "http://ganjiacheng.cn/blog/?p=79",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "80",
            "post_author": "1",
            "post_date": "2017-3-10 15:53:28",
            "post_date_gmt": "2017-3-10 07:53:28",
            "post_content": "具体详细题目请到<a href=\"https://leetcode.com/problemset/algorithms/\">https://leetcode.com/problemset/algorithms/</a>查看\r\n\r\n之下解法都属第一思路，大可改进。\r\n\r\n悄悄自问一句：今天ac了吗？<!--more-->\r\n\r\n1. Two Sum\r\n<pre>class Solution(object):\r\n    def twoSum(self, nums, target):\r\n    l=len(nums)\r\n    for i in xrange(l):\r\n        for j in xrange(l):\r\n            if(j==i):\r\n                pass\r\n            else:\r\n                if((nums[i]+nums[j])==target):\r\n                    return [i,j]\r\n</pre>\r\n2. Add Two Numbers\r\n<pre>class Solution(object):\r\n    def addTwoNumbers(self, l1, l2):\r\n        res=[]\r\n        jw=0\r\n        while(hasattr(l1,'val') or hasattr(l2,'val')):\r\n            if hasattr(l2,'val') and (not hasattr(l1,'val')):\r\n                if l2.val+jw==10:\r\n                    jw=1\r\n                    res.append(0)\r\n                else:\r\n                    res.append(l2.val+jw)\r\n                    jw=0\r\n                l2=l2.next\r\n            elif hasattr(l1,'val') and not hasattr(l2,'val'):\r\n                if l1.val+jw==10:\r\n                    jw=1\r\n                    res.append(0)\r\n                else:\r\n                    res.append(l1.val+jw)\r\n                    jw=0\r\n                l1=l1.next\r\n            else:\r\n                if l1.val+l2.val+jw&gt;=10:\r\n                    tmp=l1.val+l2.val+jw-10\r\n                    jw=1\r\n                else:\r\n                    tmp=l1.val+l2.val+jw\r\n                    jw=0\r\n                res.append(tmp)\r\n                l1=l1.next\r\n                l2=l2.next\r\n        if(jw):\r\n            res.append(1)\r\n        return res\r\n</pre>\r\n3. Longest Substring Without Repeating Characters\r\n<pre>class Solution(object):\r\n    def lengthOfLongestSubstring(self, s):\r\n        l=len(s)\r\n        res=0\r\n        tmp=0\r\n        k=1\r\n        for i in xrange(l):\r\n            for j in xrange(k,l+2):\r\n                if len(set(s[i:j]))!=j-i:\r\n                    k=j\r\n                    tmp=j-i\r\n                    break\r\n            if tmp&gt;res:\r\n                res=tmp\r\n            tmp=0\r\n            o=1\r\n        if s=='':\r\n            res=1\r\n        return res-1</pre>\r\n4. Median of Two Sorted Arrays\r\n<pre>class Solution(object):\r\n    def findMedianSortedArrays(self, nums1, nums2):\r\n        c=(nums1+nums2)\r\n        c.sort()\r\n        l=len(c)\r\n        if l%2==0:\r\n            res=(c[l/2]+c[l/2-1])*1.0/2\r\n        else:\r\n            res=(c[l/2])*1.0\r\n        return res</pre>\r\n5. Longest Palindromic Substring\r\n<pre>class Solution(object):\r\n    def longestPalindrome(self, s):\r\n        l=len(s)\r\n        tmp=0\r\n        maxl,maxr=0,0\r\n        for i in xrange(l):\r\n            m=i+1\r\n            n=i\r\n            while m&lt;l and n&gt;=0:\r\n                if s[m]==s[n]:\r\n                    if m-n+1&gt;tmp:\r\n                        tmp=m-n+1\r\n                        maxl=n\r\n                        maxr=m\r\n                    m+=1\r\n                    n-=1\r\n                else:\r\n                    break\r\n            j=i-1\r\n            k=i+1\r\n            while j&gt;=0 and k&lt;l:\r\n                if s[j]==s[k]:\r\n                    if k-j+1&gt;tmp:\r\n                        tmp=k-j+1\r\n                        maxl=j\r\n                        maxr=k\r\n                    j-=1\r\n                    k+=1\r\n                else:\r\n                    break\r\n        return s[maxl:maxr+1]</pre>\r\n&nbsp;",
            "post_title": "leetcode解题篇Python法1-5题",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "76-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-10 15:53:28",
            "post_modified_gmt": "2017-3-10 07:53:28",
            "post_content_filtered": "",
            "post_parent": "76",
            "guid": "http://ganjiacheng.cn/blog/?p=80",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "83",
            "post_author": "1",
            "post_date": "2017-3-11 18:21:15",
            "post_date_gmt": "2017-3-11 10:21:15",
            "post_content": "前端起家，而最终还是没留在这块‘宝地’，虽然火，但也不和大波人抢饭吃啦！！\r\n\r\n记载回忆篇教程---'老年人'的理解（这里不讲教程，而是整个的学习过程）<!--more-->\r\n\r\n一款好的文本编辑器是必须先入手的，sublime是我一直在用且功能强大的文本编辑器，软件自寻，装好之后装一些插件,在工具栏Preference-&gt;Browse Packdges先安装包，之后Preference-&gt;Packdge Control-&gt;Install Packdges，搜Emmet，先下这个吧，其他看需求。（之下还有讲sublime的）\r\n\r\n然后开始前端的部分啦！！（不理解的名词自行谷歌哦）先纠正一下外来人对于做网页的理解，可能认为网页只是图片和文字的拼接，这种理解很片面。那你的登陆信息呢？那在网页某宝怎么实现支付呢？用户在访问互联网的时候，很多是通过浏览器，而最开始的前端就是写网页用户直接看到的用到的部分。然后你得收集数据，和后端交互数据，把数据可视化，数据安全等等。甚至前端写的不好，黑客可以通过入侵网页和服务器然后用户访问了网址之后就入侵了他的电脑。当然正常也没这么吓人，但也要防患于未然。\r\n\r\n前端最初始的部分便是html，css，js。什么其他库啊，框架啊，预处理器啊都最终会回到这三个。因为浏览器就认识这三个咯！！关于前端的亲戚------浏览器还有一些有趣的历史故事，大家可以自行发掘。\r\n\r\nhtml是使用标签来组成网页内能看到的内容。有html，head，body，div，p，h1，a，img，span，input，button，form等等标签，常用的就没几个，知道每个标签的代表的意思就行。这里算是刚刚开始，所以推荐的教程是w3school。\r\n\r\ncss是网页中的用来定位，美化的html内容的。这部分和审美设计就相关啦，不过前端基础的一些也得会写。包括布局，居中，字体，盒子模型等等。一般写在head里的style标签内，用选择器来选择html元素，其内写css代码改进网页。很多情况我们会引入外部css文件，写在head的link标签里。\r\n\r\n之后可以写一个简单页面咯，sublime里新建文件保存为xxx.html。输入html:5+tab就会生成一个html的一般模板。在其内继续补充内容。这部分需要大量的练习来熟悉和巩固使用html和css。然后，直到展示类页面基本成型。这里补充写的时候很重要的一点就是理解html块级元素和行内元素，css的定位方法。然后在写的时候进行合理的布局，而不是所有不按自己想法占位的元素，都进行浮动和绝对定位。这对于网页在其他不同大小的屏上效果展示很重要。\r\n\r\n这里先不介绍js，先来尝试一下bootstrap这个奇妙的框架。前面写网页的经历应该会让你发现直接写一个看得过去的页面是一件略复杂的事情，然后前人为了造福后人就帮你把很多展示层面的css和js写好了，你直接引用就行。先找到bootstrap3中文官网的起步部分，在页面头部引入bootstrap的那几个文件。之后按照后面的全局css样式和组件来尝试写页面的每一部分，写起来便轻松愉快啦！！bootstrap更强的是他是移动设备优先，这个之后在述。\r\n\r\n前面部分貌似都感觉不到自己在编程，更像是美工，然后js就来啦，js在网页里充当给网页增加动态的角色。他可以改变html和css的内容，做各种特效，处理提交的数据等等。写js就完完全全有写编程语言的感觉啦，当然这也注定了它将会是前端最难的一部分。\r\n\r\n写js先从基本语法开始，如果接触过c一类的语言，应该很快上手，没接触过也不要紧，基础的语法并不难，很快就能搞定。js可以写在head里也可以在body最下方，大部分情况建议写在body最下方，因为同步的代码从上往下执行，这样就可以先展示html，也就是页面反应变快一些。这部分虽然简单，但在写复杂网页程序的时候往往错误就出在不经意的语法错误。细节决定成败，简单也要严谨。\r\n\r\n上面是js作为一门语言的语法，然后作为网页里的一部分，它还能操作dom，也就是改变html和css。先通过选择器获取dom节点，之后进行操作。当然也可以直接创建dom，网页里的它可以说无所不能。react框架就是用编译成js的jsx包揽了全部页面。\r\n\r\n这里插入一个前端开发者必备功能，这里以chrome为例，那就是会用chrome的开发者工具。我们通过打开浏览器然后按f12或者右键审查元素打开，我习惯会把网页在左边，开发者工具在右边，可以按开发者工具右上角切换。前面js的基本语法里有个console.log便是在开发者工具里的console选项里输出内容，这里可以输出一些数组，对象等等alert不能输出的内容，当然也可以在这里直接像命令行一样输入js进行调试。在elements选项里是所有html内容，network里是所有加载的资源以及获取方式，加载时间等等有用信息，这里还能看到网页header，cookie等的信息，分析别人网页的时候很有用哦。中间那一块是css部分，可以直接在这里写css，然后就能看到效果啦，这里比较强大的两个一个是写一个color:#000;点击彩色小方块，然后会有出现一个颜色板和拾色器。另一个是在写css3动画的时候，写一个速度曲线，点击小方块，会出现一个可调整二次贝塞尔曲线的速度曲线改变面板。css右边还有一个盒子模型，必要时还是挺有用的。\r\n\r\n至此你应该已经得会写轮播图，瀑布流，分页等等网页特效，甚至于写个简单的贪吃蛇，扫雷游戏。当然这里的逻辑还是需要挺多的，想想挺简单，用原生js写起来自然会感觉到吃力。除非之前进行过编程或者算法训练，不然很容易绕在里面，感觉不上不下。之前我自己的感受就是无数自己想想的小demo死在了我代码写到一半的时候。然后会感觉很吃力，如瓶颈一般。现在想想，与其纠结于此，不如去追求更广的天空。\r\n\r\n所以继续来学习jquery，虽然都说用这个的都是老年人，但这些话都是已经把这个库用烂了的人说的。对于一个新手，学jquery也是很重要的一环，这个部分，你会体验到快速开发的乐趣。jquery相当于帮你封装了很多又难理解又难写的原生js，然后你可以直接调用它设定的更简便的形式来写js。在html文件里引入jquery文件，一般推荐min的那个，就可以直接按jquery的语法写啦。开始的话jquery写起来速度可以达到js的好几倍，立刻爱上jquery!!如果用jquery来重写上面那些网页特效，可能会轻松很多。当然网上jquery插件和特效也数不胜数，随便上某度搜就行。前期还是建议自己先造造轮子。\r\n\r\n这里插一个提醒，之后讲的很多东西要在服务器运行，ajax也是。所以先配置一下服务器的环境。windows下建议wamp，linux下建议<a href=\"https://lnmp.org/\">lnmp</a>。都是集成安装环境，安装完就可以直接用。然后windows用浏览器访问localhost打开www文件目录，Linux用浏览器访问公网ip会打开wwwroot文件下default文件下index.html文件。这样就可以继续进行下去啦，之后尽量把文件放服务器。如果想要了解服务器知识的话就走向了后端了哦，但前端也可以稍微了解。\r\n\r\n然后讲一个js里神奇的东西，为什么放在jquery下面呢，因为从jquery的语法来理解他会变得简单易行，他就是ajax。它是一种对js来说跨时代的技术。如果直接用原生来实现当然也可以，但对于菜鸟时候的我晦涩难懂。所以当我看到jquery实现的ajax，jquery好感++；ajax相当于可以在页面不跳转的情况下直接与后台进行交流。看似简单，但却实用，几乎每个页面都或多或少有ajax的身影，特别是对于前后端数据交流频繁的页面。\r\n\r\n通过ajax，再来理解这里面的要用到的其他几个东西。一个是json，它是一种数据格式，常常用于前后端数据交流。因为这种数据很轻便，前后端解析json也很简单。出现json之前很多用的是xml，相比于json，xml解析起来很复杂，现在也少用，但也可以了解。另一个是异步和回调。自行搜异步和同步区别哦，ajax默认是异步的，也就是执行ajax时不会停在这里等数据回来，而是发出了一个ajax执行的指令，然后浏览器就继续扫描执行下面的代码啦，至于ajax，浏览器不去管他什么时候执行完，因为他执行完可以调用一个函数来告诉浏览器执行完了，那个函数就是回调函数。这个弄明白对于以后写node.js很重要。\r\n\r\n最近h5这个名词总是很火，那现在就来讲讲html5和css3，html5和css3都是在原来的基础上增加了许多内容。目前主流的浏览器基本也都支持了大部分特性，所以可以放心大胆的写，不放心就看看手册，到这里你应该是查手册和看文档的时候，而不是又看之前看过的教程，那太慢啦。h5新增了很多带语义的标签，js里也开放了很多接口。可以试试，有个大致的了解。css3也一样，增加的一些css属性，有些还非常强大，比如做个3d什么的，也可以实现。这个名词虽然被炒的很高大上的样子，但其实质还是搭在原来的基础知识之上。在基础很牢固之后再去看这些就感到得心应手咯!\r\n\r\n看到这的你已经大致走完了入门之路，接下来的进阶才是真正考验人的时候。都说前端入门很容易，确实，自从有了jquery，js的dom操作变得容易，而jquery可能只要半天时间就能学会。而jquery现在的弊端也很明显就是dom操作太多了，导致网页反应慢。大部分的页面用前面的知识都可以做出成果，但要效果最好肯定远不止这些。接下来，就将进入进阶的时候！！！",
            "post_title": "前端回忆录---上篇",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e5%89%8d%e7%ab%af%e5%9b%9e%e5%bf%86%e8%ae%b0%e5%bd%95%e7%af%87-%e6%9b%b4%e6%96%b0%e4%b8%ad",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-8-2 20:28:49",
            "post_modified_gmt": "2017-8-2 12:28:49",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=83",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "84",
            "post_author": "1",
            "post_date": "2017-3-11 18:21:15",
            "post_date_gmt": "2017-3-11 10:21:15",
            "post_content": "前端起家，而最终还是没留在这块‘宝地’，虽然火，但也不和大波人抢饭吃啦！！\r\n\r\n记一载回忆篇教程---老年人的理解（这里不讲教程，而是整个的学习过程）<!--more-->\r\n\r\n一款好的文本编辑器是必须先入手的，sublime是我一直在用且功能强大的文本编辑器，软件自寻，装好之后装一些插件,在工具栏Preference-&gt;Browse Packdges先安装包，之后Preference-&gt;Packdge Control-&gt;Install Packdges，搜Emmet，先下这个吧，其他看需求。（之下还有讲sublime的）\r\n\r\n然后开始前端的部分啦！！（不理解的名词自行谷歌哦）\r\n\r\n前端最初始的部分便是html，css，js。什么其他库啊，框架啊，预处理器啊都最终会回到这三个。因为浏览器就认识这三个咯！！\r\n\r\nhtml是使用标签来组成网页内能看到的内容。html,head,body,div,p,h1,a,img,span,input,button,form等等，常用的就没几个，知道每个标签的代表的意思就行。\r\n\r\ncss是网页中的用来定位，美化的html内容的。这部分和审美设计就相关啦，不过前端基础的一些也得会写。包括布局，居中，字体，盒子模型等等。一般写在head里的style标签内，用选择器来选择html元素，其内写css代码改进网页。很多情况我们会引入外部css文件，写在head的link标签里。\r\n\r\n之后可以写一个简单页面咯，sublime里新建文件保存为xxx.html。输入html:5+tab就会生成一个html的一般模板。在其内继续补充内容。这部分需要大量的练习来熟悉和巩固使用html和css。然后，直到展示类页面基本成型。\r\n\r\n这里先不介绍js，先来尝试一下bootstrap这个奇妙的框架。前面写网页的经历应该会让你发现直接写一个看得过去的页面是一件略复杂的事情，然后前人为了造福后人就帮你把很多展示层面的css和js写好了，你直接引用就行。先找到bootstrap3中文官网的起步部分，在页面头部引入bootstrap的那几个文件。之后按照后面的全局css样式和组件来尝试写页面的每一部分，写起来便轻松愉快啦！！bootstrap更强的是他是移动设备优先，这个之后在述。\r\n\r\n前面部分貌似都感觉不到自己在编程，更像是美工，然后js就来啦，js在网页里充当给网页增加动态的角色。他可以改变html和css的内容，做各种特效，处理提交的数据等等。写js就完完全全有写编程语言的感觉啦，当然这也注定了它将会是前端最难的一部分。\r\n\r\n写js先从操作dom开始，也就是改变html和css。待续。。。\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "前端回忆记录篇---更新中",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "83-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-11 18:21:15",
            "post_modified_gmt": "2017-3-11 10:21:15",
            "post_content_filtered": "",
            "post_parent": "83",
            "guid": "http://ganjiacheng.cn/blog/?p=84",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "86",
            "post_author": "1",
            "post_date": "2017-3-11 18:22:03",
            "post_date_gmt": "2017-3-11 10:22:03",
            "post_content": "前端起家，而最终还是没留在这块‘宝地’，虽然火，但也不和大波人抢饭吃啦！！\r\n\r\n记载回忆篇教程---老年人的理解（这里不讲教程，而是整个的学习过程）<!--more-->\r\n\r\n一款好的文本编辑器是必须先入手的，sublime是我一直在用且功能强大的文本编辑器，软件自寻，装好之后装一些插件,在工具栏Preference-&gt;Browse Packdges先安装包，之后Preference-&gt;Packdge Control-&gt;Install Packdges，搜Emmet，先下这个吧，其他看需求。（之下还有讲sublime的）\r\n\r\n然后开始前端的部分啦！！（不理解的名词自行谷歌哦）\r\n\r\n前端最初始的部分便是html，css，js。什么其他库啊，框架啊，预处理器啊都最终会回到这三个。因为浏览器就认识这三个咯！！\r\n\r\nhtml是使用标签来组成网页内能看到的内容。html,head,body,div,p,h1,a,img,span,input,button,form等等，常用的就没几个，知道每个标签的代表的意思就行。\r\n\r\ncss是网页中的用来定位，美化的html内容的。这部分和审美设计就相关啦，不过前端基础的一些也得会写。包括布局，居中，字体，盒子模型等等。一般写在head里的style标签内，用选择器来选择html元素，其内写css代码改进网页。很多情况我们会引入外部css文件，写在head的link标签里。\r\n\r\n之后可以写一个简单页面咯，sublime里新建文件保存为xxx.html。输入html:5+tab就会生成一个html的一般模板。在其内继续补充内容。这部分需要大量的练习来熟悉和巩固使用html和css。然后，直到展示类页面基本成型。\r\n\r\n这里先不介绍js，先来尝试一下bootstrap这个奇妙的框架。前面写网页的经历应该会让你发现直接写一个看得过去的页面是一件略复杂的事情，然后前人为了造福后人就帮你把很多展示层面的css和js写好了，你直接引用就行。先找到bootstrap3中文官网的起步部分，在页面头部引入bootstrap的那几个文件。之后按照后面的全局css样式和组件来尝试写页面的每一部分，写起来便轻松愉快啦！！bootstrap更强的是他是移动设备优先，这个之后在述。\r\n\r\n前面部分貌似都感觉不到自己在编程，更像是美工，然后js就来啦，js在网页里充当给网页增加动态的角色。他可以改变html和css的内容，做各种特效，处理提交的数据等等。写js就完完全全有写编程语言的感觉啦，当然这也注定了它将会是前端最难的一部分。\r\n\r\n写js先从操作dom开始，也就是改变html和css。待续。。。\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "前端回忆记录篇---更新中",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "83-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-11 18:22:03",
            "post_modified_gmt": "2017-3-11 10:22:03",
            "post_content_filtered": "",
            "post_parent": "83",
            "guid": "http://ganjiacheng.cn/blog/?p=86",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "87",
            "post_author": "1",
            "post_date": "2017-3-11 23:14:44",
            "post_date_gmt": "2017-3-11 15:14:44",
            "post_content": "python篇：\r\n\r\n1.windows上，在pip install xxx失败的时候怎么办？\r\n\r\n答：<a href=\"http://www.lfd.uci.edu/~gohlke/pythonlibs/\">http://www.lfd.uci.edu/~gohlke/pythonlibs/</a>到这里面寻找whl，下载之后用 pip install xxx.whl 来安装。\r\n\r\n<!--more-->\r\n\r\n2.解决pip3报错Fatal error in launcher: Unable to create process using '\"'。\r\n\r\n一种：\r\n<pre>import pip\r\npip.main(['install','ModuleName'])</pre>\r\n另一种：\r\n<pre class=\"lang-py prettyprint prettyprinted\"><code><span class=\"pln\">python3 </span><span class=\"pun\">-</span><span class=\"pln\">m pip install whlName\r\n</span></code></pre>\r\n3.linux上python3中文会显示UnicodeEncodeError: 'ascii' codec can't encode character。\r\n<pre>import io \r\nimport sys \r\nsys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding='utf-8')</pre>\r\n4.requests爬到的中文网页输出在windows cmd会出错\r\n<pre>res=requests.get(url)\r\nres.encoding='gbk'\r\nprint(res.text)</pre>\r\n5.cv2.imread读取中文路径出错\r\n<pre>#读取\r\nim = cv2.imdecode(np.fromfile(file,dtype=np.uint8),-1)\r\n#写入\r\ncv2.imencode('.jpg',res)[1].tofile(file)</pre>\r\n&nbsp;",
            "post_title": "python日常问答篇--更新中",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "python%e9%97%ae%e7%ad%94%e7%af%87-%e6%9b%b4%e6%96%b0%e4%b8%ad",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-10-10 17:04:25",
            "post_modified_gmt": "2017-10-10 09:04:25",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=87",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "88",
            "post_author": "1",
            "post_date": "2017-3-11 23:14:44",
            "post_date_gmt": "2017-3-11 15:14:44",
            "post_content": "1.windows上，在pip install xxx失败的时候怎么办？\r\n\r\n答：<a href=\"http://www.lfd.uci.edu/~gohlke/pythonlibs/\">http://www.lfd.uci.edu/~gohlke/pythonlibs/</a>到这里面寻找whl，下载之后用 pip install xxx.whl 来安装。\r\n\r\n2.解决pip3报错Fatal error in launcher: Unable to create process using '\"'。\r\n<pre>import pip\r\npip.main(['install','ModuleName'])</pre>\r\n&nbsp;",
            "post_title": "python问答篇--更新中",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "87-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-11 23:14:44",
            "post_modified_gmt": "2017-3-11 15:14:44",
            "post_content_filtered": "",
            "post_parent": "87",
            "guid": "http://ganjiacheng.cn/blog/?p=88",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "89",
            "post_author": "1",
            "post_date": "2017-3-11 23:15:16",
            "post_date_gmt": "2017-3-11 15:15:16",
            "post_content": "1.windows上，在pip install xxx失败的时候怎么办？\r\n\r\n答：<a href=\"http://www.lfd.uci.edu/~gohlke/pythonlibs/\">http://www.lfd.uci.edu/~gohlke/pythonlibs/</a>到这里面寻找whl，下载之后用 pip install xxx.whl 来安装。\r\n\r\n<!--more-->\r\n\r\n2.解决pip3报错Fatal error in launcher: Unable to create process using '\"'。\r\n<pre>import pip\r\npip.main(['install','ModuleName'])</pre>\r\n&nbsp;",
            "post_title": "python问答篇--更新中",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "87-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-11 23:15:16",
            "post_modified_gmt": "2017-3-11 15:15:16",
            "post_content_filtered": "",
            "post_parent": "87",
            "guid": "http://ganjiacheng.cn/blog/?p=89",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "90",
            "post_author": "1",
            "post_date": "2017-3-11 23:16:07",
            "post_date_gmt": "2017-3-11 15:16:07",
            "post_content": "前端起家，而最终还是没留在这块‘宝地’，虽然火，但也不和大波人抢饭吃啦！！\r\n\r\n记载回忆篇教程---'老年人'的理解（这里不讲教程，而是整个的学习过程）<!--more-->\r\n\r\n一款好的文本编辑器是必须先入手的，sublime是我一直在用且功能强大的文本编辑器，软件自寻，装好之后装一些插件,在工具栏Preference-&gt;Browse Packdges先安装包，之后Preference-&gt;Packdge Control-&gt;Install Packdges，搜Emmet，先下这个吧，其他看需求。（之下还有讲sublime的）\r\n\r\n然后开始前端的部分啦！！（不理解的名词自行谷歌哦）\r\n\r\n前端最初始的部分便是html，css，js。什么其他库啊，框架啊，预处理器啊都最终会回到这三个。因为浏览器就认识这三个咯！！\r\n\r\nhtml是使用标签来组成网页内能看到的内容。html,head,body,div,p,h1,a,img,span,input,button,form等等，常用的就没几个，知道每个标签的代表的意思就行。\r\n\r\ncss是网页中的用来定位，美化的html内容的。这部分和审美设计就相关啦，不过前端基础的一些也得会写。包括布局，居中，字体，盒子模型等等。一般写在head里的style标签内，用选择器来选择html元素，其内写css代码改进网页。很多情况我们会引入外部css文件，写在head的link标签里。\r\n\r\n之后可以写一个简单页面咯，sublime里新建文件保存为xxx.html。输入html:5+tab就会生成一个html的一般模板。在其内继续补充内容。这部分需要大量的练习来熟悉和巩固使用html和css。然后，直到展示类页面基本成型。\r\n\r\n这里先不介绍js，先来尝试一下bootstrap这个奇妙的框架。前面写网页的经历应该会让你发现直接写一个看得过去的页面是一件略复杂的事情，然后前人为了造福后人就帮你把很多展示层面的css和js写好了，你直接引用就行。先找到bootstrap3中文官网的起步部分，在页面头部引入bootstrap的那几个文件。之后按照后面的全局css样式和组件来尝试写页面的每一部分，写起来便轻松愉快啦！！bootstrap更强的是他是移动设备优先，这个之后在述。\r\n\r\n前面部分貌似都感觉不到自己在编程，更像是美工，然后js就来啦，js在网页里充当给网页增加动态的角色。他可以改变html和css的内容，做各种特效，处理提交的数据等等。写js就完完全全有写编程语言的感觉啦，当然这也注定了它将会是前端最难的一部分。\r\n\r\n写js先从操作dom开始，也就是改变html和css。待续。。。\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "前端回忆记录篇---更新中",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "83-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-11 23:16:07",
            "post_modified_gmt": "2017-3-11 15:16:07",
            "post_content_filtered": "",
            "post_parent": "83",
            "guid": "http://ganjiacheng.cn/blog/?p=90",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "98",
            "post_author": "1",
            "post_date": "2017-3-20 18:46:13",
            "post_date_gmt": "2017-3-20 10:46:13",
            "post_content": "前端起家，而最终还是没留在这块‘宝地’，虽然火，但也不和大波人抢饭吃啦！！\n\n记载回忆篇教程---'老年人'的理解（这里不讲教程，而是整个的学习过程）<!--more-->\n\n一款好的文本编辑器是必须先入手的，sublime是我一直在用且功能强大的文本编辑器，软件自寻，装好之后装一些插件,在工具栏Preference-&gt;Browse Packdges先安装包，之后Preference-&gt;Packdge Control-&gt;Install Packdges，搜Emmet，先下这个吧，其他看需求。（之下还有讲sublime的）\n\n然后开始前端的部分啦！！（不理解的名词自行谷歌哦）先纠正一下外来人对于做网页的理解，可能认为网页只是图片和文字的拼接，这种理解很片面。那你的登陆信息呢？那在网页某宝怎么实现支付呢？用户在访问互联网的时候，很多是通过浏览器，而最开始的前端就是写网页用户直接看到的用到的部分。然后你得收集数据，和后端交互数据，把数据可视化，数据安全等等。甚至前端写的不好，黑客可以通过入侵网页和服务器然后用户访问了网址之后就入侵了他的电脑。当然正常也没这么吓人，但也要防患于未然。\n\n前端最初始的部分便是html，css，js。什么其他库啊，框架啊，预处理器啊都最终会回到这三个。因为浏览器就认识这三个咯！！关于前端的亲戚------浏览器还有一些有趣的历史故事，大家可以自行发掘。\n\nhtml是使用标签来组成网页内能看到的内容。有html，head，body，div，p，h1，a，img，span，input，button，form等等标签，常用的就没几个，知道每个标签的代表的意思就行。这里算是刚刚开始，所以推荐的教程是w3school。\n\ncss是网页中的用来定位，美化的html内容的。这部分和审美设计就相关啦，不过前端基础的一些也得会写。包括布局，居中，字体，盒子模型等等。一般写在head里的style标签内，用选择器来选择html元素，其内写css代码改进网页。很多情况我们会引入外部css文件，写在head的link标签里。\n\n之后可以写一个简单页面咯，sublime里新建文件保存为xxx.html。输入html:5+tab就会生成一个html的一般模板。在其内继续补充内容。这部分需要大量的练习来熟悉和巩固使用html和css。然后，直到展示类页面基本成型。这里补充写的时候很重要的一点就是理解html块级元素和行内元素，css的定位方法。然后在写的时候进行合理的布局，而不是所有不按自己想法占位的元素，都进行浮动和绝对定位。这对于网页在其他不同大小的屏上效果展示很重要。\n\n这里先不介绍js，先来尝试一下bootstrap这个奇妙的框架。前面写网页的经历应该会让你发现直接写一个看得过去的页面是一件略复杂的事情，然后前人为了造福后人就帮你把很多展示层面的css和js写好了，你直接引用就行。先找到bootstrap3中文官网的起步部分，在页面头部引入bootstrap的那几个文件。之后按照后面的全局css样式和组件来尝试写页面的每一部分，写起来便轻松愉快啦！！bootstrap更强的是他是移动设备优先，这个之后在述。\n\n前面部分貌似都感觉不到自己在编程，更像是美工，然后js就来啦，js在网页里充当给网页增加动态的角色。他可以改变html和css的内容，做各种特效，处理提交的数据等等。写js就完完全全有写编程语言的感觉啦，当然这也注定了它将会是前端最难的一部分。\n\n写js先从基本语法开始，如果接触过c一类的语言，应该很快上手，没接触过也不要紧，基础的语法并不难，很快就能搞定。js可以写在head里也可以在body最下方，大部分情况建议写在body最下方，因为同步的代码从上往下执行，这样就可以先展示html，也就是页面反应变快一些。这部分虽然简单，但在写复杂网页程序的时候往往错误就出在不经意的语法错误。细节决定成败，简单也要严谨。\n\n上面是js作为一门语言的语法，然后作为网页里的一部分，它还能操作dom，也就是改变html和css。先通过选择器获取dom节点，之后进行操作。当然也可以直接创建dom，网页里的它可以说无所不能。react框架就是用编译成js的jsx包揽了全部页面。\n\n这里插入一个前端开发者必备功能，这里以chrome为例，那就是会用chrome的开发者工具。我们通过打开浏览器然后按f12或者右键审查元素打开，我习惯会把网页在左边，开发者工具在右边，可以按开发者工具右上角切换。前面js的基本语法里有个console.log便是在开发者工具里的console选项里输出内容，这里可以输出一些数组，对象等等alert不能输出的内容，当然也可以在这里直接像命令行一样输入js进行调试。在elements选项里是所有html内容，network里是所有加载的资源以及获取方式，加载时间等等有用信息，这里还能看到网页header，cookie等的信息，分析别人网页的时候很有用哦。中间那一块是css部分，可以直接在这里写css，然后就能看到效果啦，这里比较强大的两个一个是写一个color:#000;点击彩色小方块，然后会有出现一个颜色板和拾色器。另一个是在写css3动画的时候，写一个速度曲线，点击小方块，会出现一个可调整二次贝塞尔曲线的速度曲线改变面板。css右边还有一个盒子模型，必要时还是挺有用的。\n\n至此你应该已经得会写轮播图，瀑布流，分页等等网页特效，甚至于写个简单的贪吃蛇，扫雷游戏。当然这里的逻辑还是需要挺多的，想想挺简单，用原生js写起来自然会感觉到吃力。除非之前进行过编程或者算法训练，不然很容易绕在里面，感觉不上不下。之前我自己的感受就是无数自己想想的小demo死在了我代码写到一半的时候。然后会感觉很吃力，如瓶颈一般。现在想想，与其纠结于此，不如去追求更广的天空。\n\n所以继续来学习jquery，虽然都说用这个的都是老年人，但这些话都是已经把这个库用烂了的人说的。对于一个新手，学jquery也是很重要的一环，这个部分，你会体验到快速开发的乐趣。jquery相当于帮你封装了很多又难理解又难写的原生js，然后你可以直接调用它设定的更简便的形式来写js。在html文件里引入jquery文件，一般推荐min的那个，就可以直接按jquery的语法写啦。开始的话jquery写起来速度可以达到js的好几倍，立刻爱上jquery!!如果用jquery来重写上面那些网页特效，可能会轻松很多。当然网上jquery插件和特效也数不胜数，随便上某度搜就行。前期还是建议自己先造造轮子。\n\n这里插一个提醒，之后讲的很多东西要在服务器运行，ajax也是。所以先配置一下服务器的环境。windows下建议wamp，linux下建议<a href=\"https://lnmp.org/\">lnmp</a>。都是集成安装环境，安装完就可以直接用。然后windows用浏览器访问localhost打开www文件目录，Linux用浏览器访问公网ip会打开wwwroot文件下default文件下index.html文件。这样就可以继续进行下去啦，之后尽量把文件放服务器。如果想要了解服务器知识的话就走向了后端了哦，但前端也可以稍微了解。\n\n然后讲一个js里神奇的东西，为什么放在jquery下面呢，因为从jquery的语法来理解他会变得简单易行，他就是ajax。它是一种对js来说跨时代的技术。如果直接用原生来实现当然也可以，但对于菜鸟时候的我晦涩难懂。所以当我看到jquery实现的ajax，jquery好感++；ajax相当于可以在页面不跳转的情况下直接与后台进行交流。看似简单，但却实用，几乎每个页面都或多或少有ajax的身影，特别是对于前后端数据交流频繁的页面。\n\n通过ajax，再来理解这里面的要用到的其他几个东西。一个是json，它是一种数据格式，常常用于前后端数据交流。因为这种数据很轻便，前后端解析json也很简单。出现json之前很多用的是xml，相比于json，xml解析起来很复杂，现在也少用，但也可以了解。另一个是异步和回调。自行搜异步和同步区别哦，ajax默认是异步的，也就是执行ajax时不会停在这里等数据回来，而是发出了一个ajax执行的指令，然后浏览器就继续扫描执行下面的代码啦，至于ajax，浏览器不去管他什么时候执行完，因为他执行完可以调用一个函数来告诉浏览器执行完了，那个函数就是回调函数。这个弄明白对于以后写node.js很重要。\n\n最近h5这个名词总是很火，那现在就来讲讲html5和css3，html5和css3都是在原来的基础上增加了许多内容。目前主流的浏览器基本也都支持了大部分特性，所以可以放心大胆的写，不放心就看看手册，到这里你应该是查手册和看文档的时候，而不是又看之前看过的教程，那太慢啦。h5新增了很多带语义的标签，js里也开放了很多接口。可以试试，有个大致的了解。css3也一样，增加的一些css属性，有些还非常强大，比如做个3d什么的，也可以实现。这个名词虽然被炒的很高大上的样子，但其实质还是搭在原来的基础知识之上。在基础很牢固之后再去看这些就感到得心应手咯!\n\n看到这的你已经大致走完了入门之路，接下来的进阶才是真正考验人的时候。都说前端入门很容易，确实，自从有了jquery，js的dom操作变得容易，而jquery可能只要半天时间就能学会。而jquery现在的弊端也很明显就是dom操作太多了，导致网页反应慢。大部分的页面用前面的知识都可以做出成果，但要效果最好肯定远不止这些。接下来，就将进入进阶的时候。\n\n我们还是再来学习js---js进阶。这里目前必读的一本书---泽卡斯的《js高级编程指南》，如果能啃下这本书，必定精进一大步。当初我也是略读读了几次，能感受到他的强大和对我的影响力。js进阶，一方面补充了很多之前遗漏的细节，另一方面代码风格，代码思想会发生变化。学学面向对象，函数式编程，异步编程等等编程思想，对于编程的效率甚至体验都会改变。当然你会发现当初的编一行试一行的考虑肯定不是最好的，应该要站在高处看问题。如果是一个成千上万行代码的任务时，需要有总体设计的眼光。推荐在看看《js设计模式》这本。这部分时间将会非常长，当然也有无数人或停滞不前，或退而自满。任何一个行业在深入之后都不会很简单，如果你是被那三个月培训出来10k以上工资吸引进入这个行业，那就得做好打持久战的准备了，不牢固的基础在这时候会被放大。所以建议还是慢慢来，急功近利很难成为真正nb的人。\n\n以前你是一个引用库的人，现在，你已经有能力根据自己的需求自己写一个合适自己的库或者改写别人的库，而不是之前想也不想先引用进来。虽然不提倡自己造轮子，但懂得造轮子的原理还是需要的。比如jquery这个库，没必要再去复制实现一个，但同时可以看看他实现的方法------jquery源码。从中可以学到一些设计的思想，这才是轮子的原理。\n\n未完待续……\n\n&nbsp;",
            "post_title": "前端回忆记录篇---更新中",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "83-autosave-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-20 18:46:13",
            "post_modified_gmt": "2017-3-20 10:46:13",
            "post_content_filtered": "",
            "post_parent": "83",
            "guid": "http://ganjiacheng.cn/blog/?p=98",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "102",
            "post_author": "1",
            "post_date": "2017-3-12 22:39:44",
            "post_date_gmt": "2017-3-12 14:39:44",
            "post_content": "前端起家，而最终还是没留在这块‘宝地’，虽然火，但也不和大波人抢饭吃啦！！\r\n\r\n记载回忆篇教程---'老年人'的理解（这里不讲教程，而是整个的学习过程）<!--more-->\r\n\r\n一款好的文本编辑器是必须先入手的，sublime是我一直在用且功能强大的文本编辑器，软件自寻，装好之后装一些插件,在工具栏Preference-&gt;Browse Packdges先安装包，之后Preference-&gt;Packdge Control-&gt;Install Packdges，搜Emmet，先下这个吧，其他看需求。（之下还有讲sublime的）\r\n\r\n然后开始前端的部分啦！！（不理解的名词自行谷歌哦）\r\n\r\n前端最初始的部分便是html，css，js。什么其他库啊，框架啊，预处理器啊都最终会回到这三个。因为浏览器就认识这三个咯！！\r\n\r\nhtml是使用标签来组成网页内能看到的内容。有html，head，body，div，p，h1，a，img，span，input，button，form等等标签，常用的就没几个，知道每个标签的代表的意思就行。这里算是刚刚开始，我选择的教程是w3school。\r\n\r\ncss是网页中的用来定位，美化的html内容的。这部分和审美设计就相关啦，不过前端基础的一些也得会写。包括布局，居中，字体，盒子模型等等。一般写在head里的style标签内，用选择器来选择html元素，其内写css代码改进网页。很多情况我们会引入外部css文件，写在head的link标签里。\r\n\r\n之后可以写一个简单页面咯，sublime里新建文件保存为xxx.html。输入html:5+tab就会生成一个html的一般模板。在其内继续补充内容。这部分需要大量的练习来熟悉和巩固使用html和css。然后，直到展示类页面基本成型。这里补充写的时候很重要的一点就是理解html块级元素和行内元素，css的定位方法。然后在写的时候进行合理的布局，而不是所有不按自己想法占位的元素，都进行浮动和绝对定位。这对于网页在其他不同大小的屏上效果展示很重要。\r\n\r\n这里先不介绍js，先来尝试一下bootstrap这个奇妙的框架。前面写网页的经历应该会让你发现直接写一个看得过去的页面是一件略复杂的事情，然后前人为了造福后人就帮你把很多展示层面的css和js写好了，你直接引用就行。先找到bootstrap3中文官网的起步部分，在页面头部引入bootstrap的那几个文件。之后按照后面的全局css样式和组件来尝试写页面的每一部分，写起来便轻松愉快啦！！bootstrap更强的是他是移动设备优先，这个之后在述。\r\n\r\n前面部分貌似都感觉不到自己在编程，更像是美工，然后js就来啦，js在网页里充当给网页增加动态的角色。他可以改变html和css的内容，做各种特效，处理提交的数据等等。写js就完完全全有写编程语言的感觉啦，当然这也注定了它将会是前端最难的一部分。\r\n\r\n写js先从基本语法开始，如果接触过c一类的语言，应该很快上手，没接触过也不要紧，基础的语法并不难，很快就能搞定。这部分虽然简单，但在写复杂网页程序的时候往往错误就出在不经意的语法错误。细节决定成败，简单也要严谨。\r\n\r\n上面是js作为一门语言的语法，然后作为网页里的一部分，它还能操作dom，也就是改变html和css。先通过选择器获取dom节点，之后进行操作。当然也可以直接创建dom，网页里的它可以说无所不能。react框架就是用编译成js的jsx包揽了全部页面。\r\n\r\n这里插入一个前端开发者必备功能，这里以chrome为例，那就是会用chrome的开发者工具。我们通过打开浏览器然后按f12或者右键审查元素打开，我习惯会把网页在左边，开发者工具在右边，可以按开发者工具右上角切换。前面js的基本语法里有个console.log便是在开发者工具里的console选项里输出内容，这里可以输出一些数组，对象等等alert不能输出的内容，当然也可以在这里直接像命令行一样输入js进行调试。在elements选项里是所有html内容，network里是所有加载的资源以及获取方式，加载时间等等有用信息，这里还能看到网页header，cookie等的信息，分析别人网页的时候很有用哦。中间那一块是css部分，可以直接在这里写css，然后就能看到效果啦，这里比较强大的两个一个是写一个color:#000;点击彩色小方块，然后会有出现一个颜色板和拾色器。另一个是在写css3动画的时候，写一个速度曲线，点击小方块，会出现一个可调整二次贝塞尔曲线的速度曲线改变面板。css右边还有一个盒子模型，必要时还是挺有用的。\r\n\r\n至此你应该已经得会写轮播图，瀑布流，分页等等网页特效，甚至于写个简单的贪吃蛇，扫雷游戏。当然这里的逻辑还是需要挺多的，想想挺简单，用原生js写起来自然会感觉到吃力。除非之前进行过编程或者算法训练，不然很容易绕在里面，感觉不上不下。之前我自己的感受就是无数自己想想的小demo死在了我代码写到一半的时候。然后会感觉很吃力，如瓶颈一般。现在想想，与其纠结于此，不如去追求更广的天空。未完，待续。。。\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "前端回忆记录篇---更新中",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "83-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-12 22:39:44",
            "post_modified_gmt": "2017-3-12 14:39:44",
            "post_content_filtered": "",
            "post_parent": "83",
            "guid": "http://ganjiacheng.cn/blog/?p=102",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "110",
            "post_author": "1",
            "post_date": "2017-3-13 14:25:27",
            "post_date_gmt": "2017-3-13 06:25:27",
            "post_content": "1.windows上，在pip install xxx失败的时候怎么办？\r\n\r\n答：<a href=\"http://www.lfd.uci.edu/~gohlke/pythonlibs/\">http://www.lfd.uci.edu/~gohlke/pythonlibs/</a>到这里面寻找whl，下载之后用 pip install xxx.whl 来安装。\r\n\r\n<!--more-->\r\n\r\n2.解决pip3报错Fatal error in launcher: Unable to create process using '\"'。\r\n<pre>import pip\r\npip.main(['install','ModuleName'])</pre>\r\n&nbsp;",
            "post_title": "日常问答篇--更新中",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "87-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-13 14:25:27",
            "post_modified_gmt": "2017-3-13 06:25:27",
            "post_content_filtered": "",
            "post_parent": "87",
            "guid": "http://ganjiacheng.cn/blog/?p=110",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "114",
            "post_author": "1",
            "post_date": "2017-3-13 14:34:43",
            "post_date_gmt": "2017-3-13 06:34:43",
            "post_content": "",
            "post_title": "8",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "8",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-13 14:34:43",
            "post_modified_gmt": "2017-3-13 06:34:43",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/8.jpg",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/jpeg",
            "comment_count": "0"
        },
        {
            "ID": "117",
            "post_author": "1",
            "post_date": "2017-10-10 17:02:49",
            "post_date_gmt": "2017-10-10 09:02:49",
            "post_content": "python篇：\n\n1.windows上，在pip install xxx失败的时候怎么办？\n\n答：<a href=\"http://www.lfd.uci.edu/~gohlke/pythonlibs/\">http://www.lfd.uci.edu/~gohlke/pythonlibs/</a>到这里面寻找whl，下载之后用 pip install xxx.whl 来安装。\n\n<!--more-->\n\n2.解决pip3报错Fatal error in launcher: Unable to create process using '\"'。\n\n一种：\n<pre>import pip\npip.main(['install','ModuleName'])</pre>\n另一种：\n<pre class=\"lang-py prettyprint prettyprinted\"><code><span class=\"pln\">python3 </span><span class=\"pun\">-</span><span class=\"pln\">m pip install whlName\n</span></code></pre>\n3.linux上python3中文会显示UnicodeEncodeError: 'ascii' codec can't encode character。\n<pre>import io \nimport sys \nsys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding='utf-8')</pre>\n4.requests爬到的中文网页输出在windows cmd会出错\n<pre>res=requests.get(url)\nres.encoding='gbk'\nprint(res.text)</pre>\n5.cv2.imread读取中文",
            "post_title": "python日常问答篇--更新中",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "87-autosave-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-10-10 17:02:49",
            "post_modified_gmt": "2017-10-10 09:02:49",
            "post_content_filtered": "",
            "post_parent": "87",
            "guid": "http://ganjiacheng.cn/blog/?p=117",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "118",
            "post_author": "1",
            "post_date": "2017-3-13 15:36:15",
            "post_date_gmt": "2017-3-13 07:36:15",
            "post_content": "1.windows上，在pip install xxx失败的时候怎么办？\r\n\r\n答：<a href=\"http://www.lfd.uci.edu/~gohlke/pythonlibs/\">http://www.lfd.uci.edu/~gohlke/pythonlibs/</a>到这里面寻找whl，下载之后用 pip install xxx.whl 来安装。\r\n\r\n<!--more-->\r\n\r\n2.解决pip3报错Fatal error in launcher: Unable to create process using '\"'。\r\n\r\n一种：\r\n<pre>import pip\r\npip.main(['install','ModuleName'])</pre>\r\n另一种：\r\n<pre class=\"lang-py prettyprint prettyprinted\"><code><span class=\"pln\">python3 </span><span class=\"pun\">-</span><span class=\"pln\">m pip install ModuleName\r\n</span></code></pre>\r\n&nbsp;",
            "post_title": "日常问答篇--更新中",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "87-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-13 15:36:15",
            "post_modified_gmt": "2017-3-13 07:36:15",
            "post_content_filtered": "",
            "post_parent": "87",
            "guid": "http://ganjiacheng.cn/blog/?p=118",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "119",
            "post_author": "1",
            "post_date": "2017-3-13 15:37:00",
            "post_date_gmt": "2017-3-13 07:37:00",
            "post_content": "1.windows上，在pip install xxx失败的时候怎么办？\r\n\r\n答：<a href=\"http://www.lfd.uci.edu/~gohlke/pythonlibs/\">http://www.lfd.uci.edu/~gohlke/pythonlibs/</a>到这里面寻找whl，下载之后用 pip install xxx.whl 来安装。\r\n\r\n<!--more-->\r\n\r\n2.解决pip3报错Fatal error in launcher: Unable to create process using '\"'。\r\n\r\n一种：\r\n<pre>import pip\r\npip.main(['install','ModuleName'])</pre>\r\n另一种：\r\n<pre class=\"lang-py prettyprint prettyprinted\"><code><span class=\"pln\">python3 </span><span class=\"pun\">-</span><span class=\"pln\">m pip install whlName\r\n</span></code></pre>\r\n&nbsp;",
            "post_title": "日常问答篇--更新中",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "87-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-13 15:37:00",
            "post_modified_gmt": "2017-3-13 07:37:00",
            "post_content_filtered": "",
            "post_parent": "87",
            "guid": "http://ganjiacheng.cn/blog/?p=119",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "123",
            "post_author": "1",
            "post_date": "2017-3-14 11:17:53",
            "post_date_gmt": "2017-3-14 03:17:53",
            "post_content": "前端起家，而最终还是没留在这块‘宝地’，虽然火，但也不和大波人抢饭吃啦！！\r\n\r\n记载回忆篇教程---'老年人'的理解（这里不讲教程，而是整个的学习过程）<!--more-->\r\n\r\n一款好的文本编辑器是必须先入手的，sublime是我一直在用且功能强大的文本编辑器，软件自寻，装好之后装一些插件,在工具栏Preference-&gt;Browse Packdges先安装包，之后Preference-&gt;Packdge Control-&gt;Install Packdges，搜Emmet，先下这个吧，其他看需求。（之下还有讲sublime的）\r\n\r\n然后开始前端的部分啦！！（不理解的名词自行谷歌哦）先纠正一下外来人对于做网页的理解，可能认为网页只是图片和文字的拼接，这种理解很片面。那你的登陆信息呢？那在网页某宝怎么实现支付呢？用户在访问互联网的时候，很多是通过浏览器，而最开始的前端就是写网页用户直接看到的用到的部分。然后你得收集数据，和后端交互数据，把数据可视化，数据安全等等。甚至前端写的不好，黑客可以通过入侵网页和服务器然后用户访问了网址之后就入侵了他的电脑。当然正常也没这么吓人，但也要防患于未然。\r\n\r\n前端最初始的部分便是html，css，js。什么其他库啊，框架啊，预处理器啊都最终会回到这三个。因为浏览器就认识这三个咯！！关于前端的亲戚------浏览器还有一些有趣的历史故事，大家可以自行发掘。\r\n\r\nhtml是使用标签来组成网页内能看到的内容。有html，head，body，div，p，h1，a，img，span，input，button，form等等标签，常用的就没几个，知道每个标签的代表的意思就行。这里算是刚刚开始，所以推荐的教程是w3school。\r\n\r\ncss是网页中的用来定位，美化的html内容的。这部分和审美设计就相关啦，不过前端基础的一些也得会写。包括布局，居中，字体，盒子模型等等。一般写在head里的style标签内，用选择器来选择html元素，其内写css代码改进网页。很多情况我们会引入外部css文件，写在head的link标签里。\r\n\r\n之后可以写一个简单页面咯，sublime里新建文件保存为xxx.html。输入html:5+tab就会生成一个html的一般模板。在其内继续补充内容。这部分需要大量的练习来熟悉和巩固使用html和css。然后，直到展示类页面基本成型。这里补充写的时候很重要的一点就是理解html块级元素和行内元素，css的定位方法。然后在写的时候进行合理的布局，而不是所有不按自己想法占位的元素，都进行浮动和绝对定位。这对于网页在其他不同大小的屏上效果展示很重要。\r\n\r\n这里先不介绍js，先来尝试一下bootstrap这个奇妙的框架。前面写网页的经历应该会让你发现直接写一个看得过去的页面是一件略复杂的事情，然后前人为了造福后人就帮你把很多展示层面的css和js写好了，你直接引用就行。先找到bootstrap3中文官网的起步部分，在页面头部引入bootstrap的那几个文件。之后按照后面的全局css样式和组件来尝试写页面的每一部分，写起来便轻松愉快啦！！bootstrap更强的是他是移动设备优先，这个之后在述。\r\n\r\n前面部分貌似都感觉不到自己在编程，更像是美工，然后js就来啦，js在网页里充当给网页增加动态的角色。他可以改变html和css的内容，做各种特效，处理提交的数据等等。写js就完完全全有写编程语言的感觉啦，当然这也注定了它将会是前端最难的一部分。\r\n\r\n写js先从基本语法开始，如果接触过c一类的语言，应该很快上手，没接触过也不要紧，基础的语法并不难，很快就能搞定。js可以写在head里也可以在body最下方，大部分情况建议写在body最下方，因为同步的代码从上往下执行，这样就可以先展示html，也就是页面反应变快一些。这部分虽然简单，但在写复杂网页程序的时候往往错误就出在不经意的语法错误。细节决定成败，简单也要严谨。\r\n\r\n上面是js作为一门语言的语法，然后作为网页里的一部分，它还能操作dom，也就是改变html和css。先通过选择器获取dom节点，之后进行操作。当然也可以直接创建dom，网页里的它可以说无所不能。react框架就是用编译成js的jsx包揽了全部页面。\r\n\r\n这里插入一个前端开发者必备功能，这里以chrome为例，那就是会用chrome的开发者工具。我们通过打开浏览器然后按f12或者右键审查元素打开，我习惯会把网页在左边，开发者工具在右边，可以按开发者工具右上角切换。前面js的基本语法里有个console.log便是在开发者工具里的console选项里输出内容，这里可以输出一些数组，对象等等alert不能输出的内容，当然也可以在这里直接像命令行一样输入js进行调试。在elements选项里是所有html内容，network里是所有加载的资源以及获取方式，加载时间等等有用信息，这里还能看到网页header，cookie等的信息，分析别人网页的时候很有用哦。中间那一块是css部分，可以直接在这里写css，然后就能看到效果啦，这里比较强大的两个一个是写一个color:#000;点击彩色小方块，然后会有出现一个颜色板和拾色器。另一个是在写css3动画的时候，写一个速度曲线，点击小方块，会出现一个可调整二次贝塞尔曲线的速度曲线改变面板。css右边还有一个盒子模型，必要时还是挺有用的。\r\n\r\n至此你应该已经得会写轮播图，瀑布流，分页等等网页特效，甚至于写个简单的贪吃蛇，扫雷游戏。当然这里的逻辑还是需要挺多的，想想挺简单，用原生js写起来自然会感觉到吃力。除非之前进行过编程或者算法训练，不然很容易绕在里面，感觉不上不下。之前我自己的感受就是无数自己想想的小demo死在了我代码写到一半的时候。然后会感觉很吃力，如瓶颈一般。现在想想，与其纠结于此，不如去追求更广的天空。\r\n\r\n所以继续来学习jquery，虽然都说用这个的都是老年人，但这些话都是已经把这个库用烂了的人说的。对于一个新手，学jquery也是很重要的一环，这个部分，你会体验到快速开发的乐趣。jquery相当于帮你封装了很多又难理解又难写的原生js，然后你可以直接调用它设定的更简便的形式来写js。在html文件里引入jquery文件，一般推荐min的那个，就可以直接按jquery的语法写啦。开始的话jquery写起来速度可以达到js的好几倍，立刻爱上jquery!!如果用jquery来重写上面那些网页特效，可能会轻松很多。当然网上jquery插件和特效也数不胜数，随便上某度搜就行。前期还是建议自己先造造轮子。\r\n\r\n然后讲一个js里神奇的东西，为什么放在jquery下面呢，因为从jquery的语法来理解他会变得简单易行，他就是ajax。它是一种对js来说跨时代的技术。如果直接用原生来实现当然也可以，但对于菜鸟时候的我晦涩难懂。所以当我看到jquery实现的ajax，jquery好感++；ajax相当于可以在页面不跳转的情况下直接与后台进行交流。看似简单，但却实用，几乎每个页面都或多或少有ajax的身影，特别是对于前后端数据交流频繁的页面。\r\n\r\n通过ajax，再来理解这里面的要用到的其他几个东西。一个是json，它是一种数据格式，常常用于前后端数据交流。因为这种数据很轻便，前后端解析json也很简单。出现json之前很多用的是xml，相比于json，xml解析起来很复杂，现在也少用，但也可以了解。另一个是异步和回调。自行搜异步和同步区别哦，ajax默认是异步的，也就是执行ajax时不会停在这里等数据回来，而是发出了一个ajax执行的指令，然后浏览器就继续扫描执行下面的代码啦，至于ajax，浏览器不去管他什么时候执行完，因为他执行完可以调用一个函数来告诉浏览器执行完了，那个函数就是回调函数。这个弄明白对于以后写node.js很重要。\r\n\r\n未完待续……\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "前端回忆记录篇---更新中",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "83-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-14 11:17:53",
            "post_modified_gmt": "2017-3-14 03:17:53",
            "post_content_filtered": "",
            "post_parent": "83",
            "guid": "http://ganjiacheng.cn/blog/?p=123",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "124",
            "post_author": "1",
            "post_date": "2017-3-14 14:50:59",
            "post_date_gmt": "2017-3-14 06:50:59",
            "post_content": "python篇：\r\n\r\n1.windows上，在pip install xxx失败的时候怎么办？\r\n\r\n答：<a href=\"http://www.lfd.uci.edu/~gohlke/pythonlibs/\">http://www.lfd.uci.edu/~gohlke/pythonlibs/</a>到这里面寻找whl，下载之后用 pip install xxx.whl 来安装。\r\n\r\n<!--more-->\r\n\r\n2.解决pip3报错Fatal error in launcher: Unable to create process using '\"'。\r\n\r\n一种：\r\n<pre>import pip\r\npip.main(['install','ModuleName'])</pre>\r\n另一种：\r\n<pre class=\"lang-py prettyprint prettyprinted\"><code><span class=\"pln\">python3 </span><span class=\"pun\">-</span><span class=\"pln\">m pip install whlName\r\n</span></code></pre>\r\n&nbsp;",
            "post_title": "日常问答篇--更新中",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "87-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-14 14:50:59",
            "post_modified_gmt": "2017-3-14 06:50:59",
            "post_content_filtered": "",
            "post_parent": "87",
            "guid": "http://ganjiacheng.cn/blog/?p=124",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "132",
            "post_author": "1",
            "post_date": "2017-11-30 17:45:47",
            "post_date_gmt": "2017-11-30 09:45:47",
            "post_content": "包括，批量重命名，待更新。。。\r\n\r\n1.批量重命名  changeName.py\r\n<pre>import os\r\nf=os.listdir(\"./\")\r\nf.remove(\"changeName.py\")\r\nj=0\r\nfor i in f:\r\n os.renames(i,str(j)+\".jpg\")\r\n j+=1</pre>\r\n2.实现数组next并循环---js版\r\n<pre>(now+1)%array.length</pre>\r\n3.python字典自动初始化为0\r\n<pre>from collections import defaultdict\r\nd=defaultdict(int)\r\nd['count']+=1</pre>\r\n4.linux+windows 查看端口监听并kill\r\n<pre>#linux\r\nnetstat -apn|grep 8000\r\n或者\r\nps -aux|grep 8000\r\nkill -9 pid\r\n\r\n#windows\r\nnetstat -ano|findstr 3000\r\nnetstat -ano</pre>\r\n5.linux开启防火墙\r\n<pre>firewall-cmd --zone=public --add-port=8892/tcp --permanent\r\nsystemctl restart firewalld</pre>\r\n6.linux下python后台运行\r\n<pre>nohup python -u filename.py &gt; filename.out 2&gt;&amp;1 &amp;\r\ntail -f filename.out</pre>\r\n7.git add，git commit提交错误\r\n<pre>git status\r\ngit reset HEAD</pre>\r\n<pre>git log\r\ngit reset --soft commit_id</pre>\r\n如果使用hard reset 了\r\n<pre>git reflog\r\ngit reset --hard 前面的id</pre>\r\n8.linux查看文件行数（windows可用git bash）\r\n<pre>cat code.py | wc -l</pre>",
            "post_title": "常用编程小操作",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "%e5%b8%b8%e7%94%a8%e5%b0%8f%e7%a8%8b%e5%ba%8f",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-4-25 23:04:30",
            "post_modified_gmt": "2018-4-25 15:04:30",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?page_id=132",
            "menu_order": "0",
            "post_type": "page",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "134",
            "post_author": "1",
            "post_date": "2017-3-15 11:30:28",
            "post_date_gmt": "2017-3-15 03:30:28",
            "post_content": "ppython大致是用socket来实现php和python的联络;\r\n\r\n日常不常用，有必要时还是挺有用的。<!--more-->\r\n\r\n先是用python的socket开一个端口监听，在这个端口来进行数据传输\r\n\r\n之后php连接那个端口，向那个端口传输数据，python在接受到数据处理之后再返回结果。\r\n\r\n这里介绍一下基本使用，先下载<a href=\"http://pan.baidu.com/s/1dEHgYgL\">http://pan.baidu.com/s/1dEHgYgL</a>。\r\n\r\n解压之后放到服务器上。\r\n\r\n为了长久在Linux服务器里可以运行，开个screen\r\n<pre>screen -S ppython</pre>\r\n在screen里运行,可以看到Server Startup\r\n<pre>python php_python.py</pre>\r\n之后进行写各自要执行的python代码和php代码\r\n<pre>#python\r\n#modulename.py\r\ndef add(x,y):\r\n    return x+y</pre>\r\n<pre>&lt;?php\r\nrequire_once(\"php_python.php\");\r\n$x=1;$y=2;\r\n$result=ppython(\"modulename::add\",x,y);\r\necho $result;</pre>\r\n官方文档：<a href=\"https://code.google.com/archive/p/ppython/\">https://code.google.com/archive/p/ppython/</a>",
            "post_title": "使用ppython---实现python和php之间的通信",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e4%bd%bf%e7%94%a8ppython-%e5%ae%9e%e7%8e%b0python%e5%92%8cphp%e4%b9%8b%e9%97%b4%e7%9a%84%e9%80%9a%e4%bf%a1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-8-2 20:28:40",
            "post_modified_gmt": "2017-8-2 12:28:40",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=134",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "12"
        },
        {
            "ID": "135",
            "post_author": "1",
            "post_date": "2017-3-15 11:30:28",
            "post_date_gmt": "2017-3-15 03:30:28",
            "post_content": "ppython大致是用socket来实现php和python的联络;\r\n\r\n日常不常用，有必要时还是挺有用的。\r\n\r\n先是用python的socket开一个端口监听，在这个端口来进行数据传输\r\n\r\n之后php连接那个端口，向那个端口传输数据，python在接受到数据处理之后再返回结果。\r\n\r\n这里介绍一下基本使用，先下载<a href=\"http://pan.baidu.com/s/1dEHgYgL\">http://pan.baidu.com/s/1dEHgYgL</a>。\r\n\r\n解压之后放到服务器上。\r\n\r\n为了长久在Linux服务器里可以运行，开个screen\r\n<pre>screen -S ppython</pre>\r\n在screen里运行,可以看到Server Startup\r\n<pre>python php_python.py</pre>\r\n之后进行写各自要执行的python代码和php代码\r\n<pre>#python\r\n#modulename.py\r\ndef add(x,y):\r\n    return x+y</pre>\r\n<pre>&lt;?php\r\nrequire_once(\"php_python.php\");\r\n$x=1;$y=2;\r\n$result=ppython(\"modulename::add\",x,y);\r\necho $result;</pre>\r\n官方文档：<a href=\"https://code.google.com/archive/p/ppython/\">https://code.google.com/archive/p/ppython/</a>",
            "post_title": "使用ppython---实现python和php之间的通信",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "134-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-15 11:30:28",
            "post_modified_gmt": "2017-3-15 03:30:28",
            "post_content_filtered": "",
            "post_parent": "134",
            "guid": "http://ganjiacheng.cn/blog/?p=135",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "137",
            "post_author": "1",
            "post_date": "2017-3-15 11:31:31",
            "post_date_gmt": "2017-3-15 03:31:31",
            "post_content": "ppython大致是用socket来实现php和python的联络;\n\n日常不常用，有必要时还是挺有用的。<!--more-->\n\n先是用python的socket开一个端口监听，在这个端口来进行数据传输\n\n之后php连接那个端口，向那个端口传输数据，python在接受到数据处理之后再返回结果。\n\n这里介绍一下基本使用，先下载<a href=\"http://pan.baidu.com/s/1dEHgYgL\">http://pan.baidu.com/s/1dEHgYgL</a>。\n\n解压之后放到服务器上。\n\n为了长久在Linux服务器里可以运行，开个screen\n<pre>screen -S ppython</pre>\n在screen里运行,可以看到Server Startup\n<pre>python php_python.py</pre>\n之后进行写各自要执行的python代码和php代码\n<pre>#python\n#modulename.py\ndef add(x,y):\n    return x+y</pre>\n<pre>&lt;?php\nrequire_once(\"php_python.php\");\n$x=1;$y=2;\n$result=ppython(\"modulename::add\",x,y);\necho $result;</pre>\n官方文档：<a href=\"https://code.google.com/archive/p/ppython/\">https://code.google.com/archive/p/ppython/</a>",
            "post_title": "使用ppython---实现python和php之间的通信",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "134-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-15 11:31:31",
            "post_modified_gmt": "2017-3-15 03:31:31",
            "post_content_filtered": "",
            "post_parent": "134",
            "guid": "http://ganjiacheng.cn/blog/?p=137",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "139",
            "post_author": "1",
            "post_date": "2017-3-19 10:59:19",
            "post_date_gmt": "2017-3-19 02:59:19",
            "post_content": "一种情况就是新组成的一个团队，人比较多，要互相留下手机号。这种时候一个个输入到手机里就比较麻烦，所以可以制作一个vcf文件，直接导入到通讯录。\n\nvcf文件制作软件可以到这里下载<a href=\"http://pan.baidu.com/s/1kVLoUTh\">http://pan.baidu.com/s/1kVLoUTh</a><!--more-->\n\n下载后打开里面的exe文件，之后添加需要的人的信息和手机号码，点击保存通讯录就会保存到Contacts.vcf文件里。可能会发生输入名字变成问号的问题，这个时候就要现在外面写好，复制到那个框里面就可以。\n\n使用方法：\n\n把contacts.vcf文件通过电脑发到手机上用软件打开，或者放在云服务器上，用浏览器打开。打开后选择另外的打开方式，选择在通讯录中打开，之后便会跳转到通讯录并自动添加了所有人的电话和信息。点击储存就保存了所有人。\n\n是不是很便捷~",
            "post_title": "便捷的集体通讯录---vcf文件制作使用",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e4%be%bf%e6%8d%b7%e7%9a%84%e9%9b%86%e4%bd%93%e9%80%9a%e8%ae%af%e5%bd%95-vcf%e6%96%87%e4%bb%b6%e5%88%b6%e4%bd%9c%e4%bd%bf%e7%94%a8",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-19 17:17:21",
            "post_modified_gmt": "2017-3-19 09:17:21",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=139",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "140",
            "post_author": "1",
            "post_date": "2017-3-15 12:56:29",
            "post_date_gmt": "2017-3-15 04:56:29",
            "post_content": "",
            "post_title": "便捷的集体通讯录---vcf文件制作使用",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "139-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-15 12:56:29",
            "post_modified_gmt": "2017-3-15 04:56:29",
            "post_content_filtered": "",
            "post_parent": "139",
            "guid": "http://ganjiacheng.cn/blog/?p=140",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "148",
            "post_author": "1",
            "post_date": "2017-3-16 00:48:16",
            "post_date_gmt": "2017-3-15 16:48:16",
            "post_content": "梯度下降法：一般想法就是，开始先找一个点，之后每次找下降最快的那个方向来找下一个点，直到找到最低点。\r\n\r\n看过很多教程或者高数书上的讲解，大致就知道梯度下降是怎么回事情。但很多时候都是被众多的公式和英文名词吓到而不真正理解。<!--more-->\r\n\r\n这次我们来简单理解最初的一个------单变量梯度下降，这里用梯度下降来做线性回归，也就是找一条<strong>h(x)=ax+b</strong>的线来拟合现有的点。\r\n\r\n想象有很多点，中间有条线，所有点不可能完全在线上，相对于线都有一个误差值，所以方程可以看做<strong>h(x)=ax+b+c</strong>(c代表差值)，c=0就相当于点完全在线上。\r\n\r\n之后再理解一个cost function的概念，看下面第二个式子，简单理解一下就是把所有<strong>c求了平方和再求平均</strong>，除以二是之后在偏导数的时候会方便点。\r\n\r\n在下面求偏导就是把一式带入到二式然后求，结果如三四两式。那个<strong>α</strong>是步长也就是下降的快慢，过快或过慢都不好。这样算完就算一次下降，之后就反复进行就可以慢慢向需要的拟合回归线靠拢。\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/IMG_3068.jpg\"><img class=\"alignnone wp-image-170 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/IMG_3068-300x225.jpg\" alt=\"\" width=\"300\" height=\"225\" /></a>---点击查看原图\r\n<pre>#python2.7\r\n#产生点\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nx=np.arange(-2,2,0.1)\r\ny=2*x+np.random.random(len(x))\r\n#随机设定一个初始的a，b\r\na=np.random.random()\r\nb=np.random.random()\r\nl=len(x)\r\n#步长\r\nalpha=0.01\r\n#进行1000次梯度下降，每次计算出上面求出的偏导，并在赋值给a,b。\r\nfor _ in xrange(1000):\r\n    j=0\r\n    k=0\r\n    for i in xrange(l):\r\n        j+=(a*x[i]+b-y[i])*x[i]\r\n        k+=a*x[i]+b-y[i]\r\n    a=a-alpha*j/l\r\n    b=b-alpha*k/l\r\n    print a,b\r\n#画点\r\nplt.plot(x,y,\"ro\")\r\n#画线\r\ntmpx=np.linspace(-2,2)\r\ntmpy=tmpx*a+b\r\nplt.plot(tmpx,tmpy)\r\nplt.show()</pre>\r\n效果展示<img class=\"alignnone size-medium wp-image-163\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/QQ截图20170316004119-300x227.jpg\" alt=\"\" width=\"300\" height=\"227\" />\r\n\r\n致谢：<a href=\"http://blog.csdn.net/abcjennifer/article/details/7691571\">http://blog.csdn.net/abcjennifer/article/details/7691571</a>",
            "post_title": "梯度下降法---学习篇",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e6%a2%af%e5%ba%a6%e4%b8%8b%e9%99%8d%e6%b3%95-%e5%ad%a6%e4%b9%a0%e7%af%87",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-8-2 20:28:35",
            "post_modified_gmt": "2017-8-2 12:28:35",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=148",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "149",
            "post_author": "1",
            "post_date": "2017-3-15 13:29:40",
            "post_date_gmt": "2017-3-15 05:29:40",
            "post_content": "",
            "post_title": "梯度下降法---学习篇",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "148-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-15 13:29:40",
            "post_modified_gmt": "2017-3-15 05:29:40",
            "post_content_filtered": "",
            "post_parent": "148",
            "guid": "http://ganjiacheng.cn/blog/?p=149",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "150",
            "post_author": "1",
            "post_date": "2017-3-20 00:02:31",
            "post_date_gmt": "2017-3-19 16:02:31",
            "post_content": "php也可以通过soap（一种基于xml的协议）和webservice进行数据交互。\r\n\r\n这里通过两种方法来讲解，一个是php的SoapClient对象，另一个是php的curl。\r\n\r\n<!--more-->\r\n\r\n第一种：先要做一件事就是在php.ini中把soap扩展开了。\r\n<pre>extension=php_soap.dll</pre>\r\n然后进行php代码的编写，这里直接讲解带有header验证的soap。没有header验证的话就不需要加设置header那几行。先查看所需的xml，这里用soap12举个栗子，关注下面xml中header和body部分。\r\n<pre>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;soap12:Envelope \r\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \r\n  xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \r\n  xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\"&gt;\r\n  &lt;soap12:Header&gt;\r\n    &lt;HeaderName xxx=\"url\"&gt;\r\n      &lt;username&gt;<span class=\"value\">int</span>&lt;/username&gt;\r\n      &lt;password&gt;<span class=\"value\">string</span>&lt;/password&gt;\r\n    &lt;/HeaderName&gt;\r\n  &lt;/soap12:Header&gt;\r\n  &lt;soap12:Body&gt;\r\n    &lt;FuncName xxx=\"url\"&gt;\r\n       &lt;neededData&gt;data&lt;/neededData&gt;\r\n    &lt;/FuncName&gt;\r\n  &lt;/soap12:Body&gt;\r\n&lt;/soap12:Envelope&gt;</pre>\r\n<pre>&lt;?php\r\n//wsdl地址\r\n$url=\"wsdl地址\";\r\n//出现类似于<span class=\"pln\">SOAP</span><span class=\"pun\">-</span><span class=\"pln\">ERROR</span><span class=\"pun\">:</span> <span class=\"typ\">Parsing</span><span class=\"pln\"> WSDL</span><span class=\"pun\">:</span> <span class=\"typ\">Couldn</span><span class=\"str\">'t load from的错误时加上下面这行</span>\r\nlibxml_disable_entity_loader(false);\r\n//调用SoapClient对象\r\n$client=new SoapClient($url);\r\n//查看里面的函数数组\r\nprint_r($client-&gt;__getFunctions());\r\n//构造header\r\n$header = new SoapHeader('上面xml里的url','HeaderName',array('username'=&gt;xxx,'password'=&gt;xxx),true);\r\n//设置header\r\n$client-&gt;__setSoapHeaders($header);\r\n//调用FuncName并传入数据\r\n$return = $client-&gt;FuncName(array('neededData'=&gt;xxx));\r\nprint_r($return);</pre>\r\n第二种：用php的curl获取数据，之后解析xml，具体来看代码吧\r\n<pre>&lt;?php\r\n//用curl带着post包和header去获取数据\r\nfunction getData($soap_request){\r\n      //构造头信息，和第一种方法的header不一样，具体查看webservice说明。\r\n      $header = array(\r\n          \"Content-type: application/soap+xml; charset=utf-8\",\r\n          \"Host: xxx.xxx.xxx.xxx\",\r\n          \"Content-length: \".strlen($soap_request),\r\n        );\r\n      $soap_do = curl_init();\r\n      curl_setopt($soap_do, CURLOPT_URL, \"wsdl地址\");\r\n      curl_setopt($soap_do, CURLOPT_RETURNTRANSFER, true );\r\n      curl_setopt($soap_do, CURLOPT_POST,           true );\r\n      curl_setopt($soap_do, CURLOPT_POSTFIELDS,     $soap_request);\r\n      curl_setopt($soap_do, CURLOPT_HTTPHEADER,     $header);\r\n      $data = curl_exec($soap_do);\r\n      return $data;\r\n}\r\n//处理得到的xml数据\r\nfunction handData($result,$parentNode,$childNode){\r\n      $xml=simplexml_load_string($result);\r\n      $result = $xml-&gt;children('http://www.w3.org/2003/05/soap-envelope')\r\n        -&gt;children('url')\r\n        -&gt;$parentNode\r\n        -&gt;$childNode;\r\n      return $result;\r\n}\r\n//使用方法\r\n//下面是上面xml的字符形式，将需要传入的数据直接写成标签到xml字符里\r\n$soap_request = \"&lt;?xml version......\";\r\n$return = $this-&gt;getData($soap_request);\r\n//后面两个参数为返回xml的body内的两个标签名\r\n$result = $this-&gt;handData($return,FuncName,returnData);</pre>\r\n总结：一般来说会选择上一种，也可以先根据自己的情况来选择一种理解。毕竟具体问题具体分析，这边不能做到全部问题都概括，所以有多个解法总比唯一解好！\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "php实现Soap调用的两种方法",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "php%e5%ae%9e%e7%8e%b0soap%e8%b0%83%e7%94%a8%e7%9a%84%e4%b8%a4%e7%a7%8d%e6%96%b9%e6%b3%95",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-8-2 20:23:10",
            "post_modified_gmt": "2017-8-2 12:23:10",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=150",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "151",
            "post_author": "1",
            "post_date": "2017-3-15 13:34:28",
            "post_date_gmt": "2017-3-15 05:34:28",
            "post_content": "",
            "post_title": "php里soap xml的使用",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "150-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-15 13:34:28",
            "post_modified_gmt": "2017-3-15 05:34:28",
            "post_content_filtered": "",
            "post_parent": "150",
            "guid": "http://ganjiacheng.cn/blog/?p=151",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "152",
            "post_author": "1",
            "post_date": "2017-3-19 01:33:03",
            "post_date_gmt": "2017-3-18 17:33:03",
            "post_content": "一般的logistics回归过程并不复杂，特别是在理解了梯度下降之后，梯度下降法可以参考我之前的文章，<a href=\"http://ganjiacheng.cn/blog/?p=148\">点击这里查看</a>\r\n\r\n大致讲一下理解：<!--more-->\r\n\r\n大致还是通过梯度下降把需要拟合的直线的前面的系数渐渐靠近，比如用ax+by+c=0，这条直线来进行二分类，a，b，c三个系数就是下面代码中的数组weight，每次迭代改变的就是weight。然后误差是通过把每组训练的数进行sigmoid函数  <img class=\"alignnone size-full wp-image-188\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/0df3d7ca7bcb0a4659502a5f6f63f6246b60af62.jpg.png\" alt=\"\" width=\"99\" height=\"35\" />，在与之前分好的类（这里是txt文件里的-1和1）进行求差就是每次的误差值。具体代码里还有解释。\r\n\r\n\"testSet.txt\"是《机器学习实战》里的一个例子的文件，这里引用一下，下载地址在<a href=\"http://pan.baidu.com/s/1pLLMJdp\">http://pan.baidu.com/s/1pLLMJdp</a>\r\n\r\n这个例子很考验矩阵运算，建议回顾一下线性代数哦！\r\n<pre>#python2.7\r\n#引入必要文件\r\nimport matplotlib.pyplot as plt\r\nimport numpy as np\r\n#打开文件\r\nf=open(\"testSet.txt\")\r\ngdatax=[]\r\ngdatay=[]\r\nrdatax=[]\r\nrdatay=[]\r\nlabel=[]\r\ndata=[]\r\n#读取文件\r\nfor i in f.readlines():\r\n    #strip()是除去开头空格，split()是以空格为间断，变成数组。\r\n    linearr=i.strip().split()\r\n    #读取坐标，这里补1.0是为了使数组长度变成3，便于之后矩阵运算\r\n    data.append([1.0,float(linearr[0]),float(linearr[1])])\r\n    #读取分类\r\n    label.append(int(linearr[2]))\r\n    #为了展示点的分布，分开读取不同类的点\r\n    if int(linearr[2])==1:\r\n        gdatax.append(linearr[0])\r\n        gdatay.append(linearr[1])\r\n    else:\r\n        rdatax.append(linearr[0])\r\n        rdatay.append(linearr[1])\r\n#使list变成numpy里的matrix矩阵\r\ndataMatrix=np.mat(data)\r\n#transpose()是矩阵的转置\r\nlabelMat=np.mat(label).transpose()\r\nm,n=np.shape(dataMatrix)\r\n#梯度下降步长\r\nalpha=0.001\r\n#梯度下降次数\r\nmax=500\r\n#先设定三个系数为1\r\nweights=np.ones((n,1))\r\n#梯度下降主步骤，求sigmoid，和分类对比正确性，在求新的weights\r\nfor k in range(max):\r\n    h=1.0/(1+np.exp(-dataMatrix*weights))\r\n    error=(labelMat-h)\r\n    weights=weights+alpha*dataMatrix.transpose()*error\r\n#创建等差数列\r\nx=np.linspace(-3,3)\r\n#计算y值\r\ny=(-weights[0,0]-weights[1,0]*x)/weights[2,0]\r\n#画图\r\nplt.plot(x,y)\r\nplt.plot(gdatax,gdatay,'ro',c='g')\r\nplt.plot(rdatax,rdatay,'ro',c='r')\r\nplt.show()</pre>\r\n效果展示：<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/QQ截图20170319012731.jpg\"><img class=\"alignnone wp-image-180 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/QQ截图20170319012731-300x240.jpg\" alt=\"\" width=\"300\" height=\"240\" /></a>\r\n\r\n总的来说还可以。梯度下降那块可以优化成随机梯度下降，可以进行更少的迭代获得同等的效果。\r\n\r\n&nbsp;",
            "post_title": "logistics回归做二分类---学习篇",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "logistics%e5%9b%9e%e5%bd%92%e5%81%9a%e4%ba%8c%e5%88%86%e7%b1%bb-%e5%ad%a6%e4%b9%a0%e7%af%87",
            "to_ping": "",
            "pinged": "\nhttp://ganjiacheng.cn/blog/?p=148",
            "post_modified": "2017-8-2 20:28:31",
            "post_modified_gmt": "2017-8-2 12:28:31",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=152",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "153",
            "post_author": "1",
            "post_date": "2017-3-15 13:35:14",
            "post_date_gmt": "2017-3-15 05:35:14",
            "post_content": "",
            "post_title": "logistics回归和softmax回归---学习篇",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "152-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-15 13:35:14",
            "post_modified_gmt": "2017-3-15 05:35:14",
            "post_content_filtered": "",
            "post_parent": "152",
            "guid": "http://ganjiacheng.cn/blog/?p=153",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "156",
            "post_author": "1",
            "post_date": "2017-3-15 13:40:01",
            "post_date_gmt": "2017-3-15 05:40:01",
            "post_content": "先讲回归这个概念，我的理解：如果是二维平面里，指根据现有的点拟合出直线，在用直线做分析与预测。\r\n\r\n简单线性回归便是全部的点都在一类之下。拟合出直线用于发现其中的关系。<!--more-->\r\n\r\nlogistic回归是在两类里做分类，完成训练后，拟合出的直线一边各一类，新来的点就可以很轻易的分类。\r\n\r\nsoftmax回归便是多分类。\r\n\r\n这是简单线性回归的一般公式：<img class=\"alignnone wp-image-47 size-thumbnail\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/IMG_3031-150x150.jpg\" width=\"150\" height=\"150\" />\r\n\r\n然后用python进行了尝试\r\n<pre>import numpy as np\r\nimport matplotlib.pyplot as plt\r\nnum=1000\r\nvectors=[]\r\nxx=0;xy=0;ex=0;ey=0\r\nfor i in xrange(num):\r\n x1=np.random.normal(0.0,0.55)\r\n y1=x1*0.1+0.3+np.random.normal(0.0,0.03)\r\n xx+=x1*x1\r\n xy+=x1*y1\r\n ex+=x1\r\n ey+=y1\r\n vectors.append([x1,y1])\r\nx_data=[v[0] for v in vectors]\r\ny_data=[v[1] for v in vectors]\r\nplt.plot(x_data,y_data,'ro',label='data')\r\nb=(xy-ex*ey/num)/(xx-ex*ex/num)\r\na=ey/num-b*ex/num\r\ntmpx=[-2,0,2]\r\ntmpy=[]\r\nfor i in tmpx:\r\n tmpy.append(b*i+a)\r\nplt.plot(tmpx,tmpy)\r\nplt.legend()\r\nplt.show()</pre>\r\n<img class=\"alignnone size-medium wp-image-49\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/QQ截图20170307175022-300x230.jpg\" alt=\"\" width=\"300\" height=\"230\" />\r\n\r\n效果还可以，之后会对回归进行更多的优化和尝试，最小二乘法，梯度下降等等",
            "post_title": "简单线性回归---学习篇",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "43-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-15 13:40:01",
            "post_modified_gmt": "2017-3-15 05:40:01",
            "post_content_filtered": "",
            "post_parent": "43",
            "guid": "http://ganjiacheng.cn/blog/?p=156",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "157",
            "post_author": "1",
            "post_date": "2017-3-15 22:06:53",
            "post_date_gmt": "2017-3-15 14:06:53",
            "post_content": "先讲回归这个概念，我的理解：如果是二维平面里，指根据现有的点拟合出直线，在用直线做分析与预测。\r\n\r\n简单线性回归便是全部的点都在一类之下。拟合出直线用于发现其中的关系。<!--more-->\r\n\r\nlogistic回归是在两类里做分类，完成训练后，拟合出的直线一边各一类，新来的点就可以很轻易的分类。\r\n\r\nsoftmax回归便是多分类。\r\n\r\n这是简单线性回归的一般公式：<img class=\"alignnone wp-image-47 size-thumbnail\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/IMG_3031-150x150.jpg\" width=\"150\" height=\"150\" />\r\n\r\n然后用python进行了尝试\r\n<pre>#python2.7\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nnum=1000\r\nvectors=[]\r\nxx=0;xy=0;ex=0;ey=0\r\nfor i in xrange(num):\r\n x1=np.random.normal(0.0,0.55)\r\n y1=x1*0.1+0.3+np.random.normal(0.0,0.03)\r\n xx+=x1*x1\r\n xy+=x1*y1\r\n ex+=x1\r\n ey+=y1\r\n vectors.append([x1,y1])\r\nx_data=[v[0] for v in vectors]\r\ny_data=[v[1] for v in vectors]\r\nplt.plot(x_data,y_data,'ro',label='data')\r\nb=(xy-ex*ey/num)/(xx-ex*ex/num)\r\na=ey/num-b*ex/num\r\ntmpx=[-2,0,2]\r\ntmpy=[]\r\nfor i in tmpx:\r\n tmpy.append(b*i+a)\r\nplt.plot(tmpx,tmpy)\r\nplt.legend()\r\nplt.show()</pre>\r\n<img class=\"alignnone size-medium wp-image-49\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/QQ截图20170307175022-300x230.jpg\" alt=\"\" width=\"300\" height=\"230\" />\r\n\r\n效果还可以，之后会对回归进行更多的优化和尝试，最小二乘法，梯度下降等等",
            "post_title": "简单线性回归---学习篇",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "43-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-15 22:06:53",
            "post_modified_gmt": "2017-3-15 14:06:53",
            "post_content_filtered": "",
            "post_parent": "43",
            "guid": "http://ganjiacheng.cn/blog/?p=157",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "161",
            "post_author": "1",
            "post_date": "2017-3-16 00:29:34",
            "post_date_gmt": "2017-3-15 16:29:34",
            "post_content": "",
            "post_title": "IMG_3063",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "img_3063",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-16 00:29:34",
            "post_modified_gmt": "2017-3-15 16:29:34",
            "post_content_filtered": "",
            "post_parent": "148",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/IMG_3063.jpg",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/jpeg",
            "comment_count": "0"
        },
        {
            "ID": "162",
            "post_author": "1",
            "post_date": "2017-3-16 00:40:36",
            "post_date_gmt": "2017-3-15 16:40:36",
            "post_content": "梯度下降法：一般想法就是，开始先找一个点，之后每次找下降最快的那个方向来找下一个点，直到找到最低点。\r\n\r\n看过很多教程或者高数书上的讲解，大致就知道梯度下降是怎么回事情。但很多时候都是被众多的公式和英文名词吓到而不真正理解。\r\n\r\n这次我们来简单理解最初的一个------单变量梯度下降，这里用梯度下降来做线性回归，也就是找一条<strong>h(x)=ax+b</strong>的线来拟合现有的点。\r\n\r\n想象有很多点，中间有条线，所有点不可能完全在线上，相对于线都有一个误差值，所以方程可以看做<strong>h(x)=ax+b+c</strong>(c代表差值)，c=0就相当于点完全在线上。\r\n\r\n之后再理解一个cost function的概念，看下面第二个式子，简单理解一下就是把所有<strong>c求了平方和再求平均</strong>，除以二是之后在偏导数的时候会方便点。\r\n\r\n在下面求偏导就是把一式带入到二式然后求，结果如三四两式。那个<strong>α</strong>是步长也就是下降的快慢，过快或过慢都不好。这样算完就算一次下降，之后就反复进行就可以慢慢向需要的拟合回归线靠拢。\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/IMG_3063.jpg\"><img class=\"alignnone wp-image-161 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/IMG_3063-300x225.jpg\" alt=\"\" width=\"300\" height=\"225\" /></a>---点击查看原图\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "梯度下降法---学习篇",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "148-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-16 00:40:36",
            "post_modified_gmt": "2017-3-15 16:40:36",
            "post_content_filtered": "",
            "post_parent": "148",
            "guid": "http://ganjiacheng.cn/blog/?p=162",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "163",
            "post_author": "1",
            "post_date": "2017-3-16 00:43:00",
            "post_date_gmt": "2017-3-15 16:43:00",
            "post_content": "",
            "post_title": "QQ截图20170316004119",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "qq%e6%88%aa%e5%9b%be20170316004119",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-16 00:43:00",
            "post_modified_gmt": "2017-3-15 16:43:00",
            "post_content_filtered": "",
            "post_parent": "148",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/QQ截图20170316004119.jpg",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/jpeg",
            "comment_count": "0"
        },
        {
            "ID": "164",
            "post_author": "1",
            "post_date": "2017-3-16 00:48:16",
            "post_date_gmt": "2017-3-15 16:48:16",
            "post_content": "梯度下降法：一般想法就是，开始先找一个点，之后每次找下降最快的那个方向来找下一个点，直到找到最低点。\r\n\r\n看过很多教程或者高数书上的讲解，大致就知道梯度下降是怎么回事情。但很多时候都是被众多的公式和英文名词吓到而不真正理解。\r\n\r\n这次我们来简单理解最初的一个------单变量梯度下降，这里用梯度下降来做线性回归，也就是找一条<strong>h(x)=ax+b</strong>的线来拟合现有的点。\r\n\r\n想象有很多点，中间有条线，所有点不可能完全在线上，相对于线都有一个误差值，所以方程可以看做<strong>h(x)=ax+b+c</strong>(c代表差值)，c=0就相当于点完全在线上。\r\n\r\n之后再理解一个cost function的概念，看下面第二个式子，简单理解一下就是把所有<strong>c求了平方和再求平均</strong>，除以二是之后在偏导数的时候会方便点。\r\n\r\n在下面求偏导就是把一式带入到二式然后求，结果如三四两式。那个<strong>α</strong>是步长也就是下降的快慢，过快或过慢都不好。这样算完就算一次下降，之后就反复进行就可以慢慢向需要的拟合回归线靠拢。\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/IMG_3063.jpg\"><img class=\"alignnone wp-image-161 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/IMG_3063-300x225.jpg\" alt=\"\" width=\"300\" height=\"225\" /></a>---点击查看原图\r\n<pre>#python2.7\r\n#产生点\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nx=np.arange(-2,2,0.1)\r\ny=2*x+np.random.random(len(x))\r\n#随机设定一个初始的a，b\r\na=np.random.random()\r\nb=np.random.random()\r\nl=len(x)\r\n#步长\r\nalpha=0.01\r\n#进行1000次梯度下降，每次计算出上面求出的偏导，并在赋值给a,b。\r\nfor _ in xrange(1000):\r\n    j=0\r\n    k=0\r\n    for i in xrange(l):\r\n        j+=(a*x[i]+b-y[i])*x[i]\r\n        k+=a*x[i]+b-y[i]\r\n    a=a-alpha*j/l\r\n    b=b-alpha*k/l\r\n    print a,b\r\n#画点\r\nplt.plot(x,y,\"ro\")\r\n#画线\r\ntmpx=[-2,0,2]\r\ntmpy=[]\r\nfor i in tmpx:\r\n    tmpy.append(a*i+b)\r\nplt.plot(tmpx,tmpy)\r\nplt.show()</pre>\r\n效果展示<img class=\"alignnone size-medium wp-image-163\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/QQ截图20170316004119-300x227.jpg\" alt=\"\" width=\"300\" height=\"227\" />\r\n\r\n&nbsp;",
            "post_title": "梯度下降法---学习篇",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "148-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-16 00:48:16",
            "post_modified_gmt": "2017-3-15 16:48:16",
            "post_content_filtered": "",
            "post_parent": "148",
            "guid": "http://ganjiacheng.cn/blog/?p=164",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "165",
            "post_author": "1",
            "post_date": "2017-3-16 00:49:11",
            "post_date_gmt": "2017-3-15 16:49:11",
            "post_content": "梯度下降法：一般想法就是，开始先找一个点，之后每次找下降最快的那个方向来找下一个点，直到找到最低点。\r\n\r\n看过很多教程或者高数书上的讲解，大致就知道梯度下降是怎么回事情。但很多时候都是被众多的公式和英文名词吓到而不真正理解。<!--more-->\r\n\r\n这次我们来简单理解最初的一个------单变量梯度下降，这里用梯度下降来做线性回归，也就是找一条<strong>h(x)=ax+b</strong>的线来拟合现有的点。\r\n\r\n想象有很多点，中间有条线，所有点不可能完全在线上，相对于线都有一个误差值，所以方程可以看做<strong>h(x)=ax+b+c</strong>(c代表差值)，c=0就相当于点完全在线上。\r\n\r\n之后再理解一个cost function的概念，看下面第二个式子，简单理解一下就是把所有<strong>c求了平方和再求平均</strong>，除以二是之后在偏导数的时候会方便点。\r\n\r\n在下面求偏导就是把一式带入到二式然后求，结果如三四两式。那个<strong>α</strong>是步长也就是下降的快慢，过快或过慢都不好。这样算完就算一次下降，之后就反复进行就可以慢慢向需要的拟合回归线靠拢。\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/IMG_3063.jpg\"><img class=\"alignnone wp-image-161 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/IMG_3063-300x225.jpg\" alt=\"\" width=\"300\" height=\"225\" /></a>---点击查看原图\r\n<pre>#python2.7\r\n#产生点\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nx=np.arange(-2,2,0.1)\r\ny=2*x+np.random.random(len(x))\r\n#随机设定一个初始的a，b\r\na=np.random.random()\r\nb=np.random.random()\r\nl=len(x)\r\n#步长\r\nalpha=0.01\r\n#进行1000次梯度下降，每次计算出上面求出的偏导，并在赋值给a,b。\r\nfor _ in xrange(1000):\r\n    j=0\r\n    k=0\r\n    for i in xrange(l):\r\n        j+=(a*x[i]+b-y[i])*x[i]\r\n        k+=a*x[i]+b-y[i]\r\n    a=a-alpha*j/l\r\n    b=b-alpha*k/l\r\n    print a,b\r\n#画点\r\nplt.plot(x,y,\"ro\")\r\n#画线\r\ntmpx=[-2,0,2]\r\ntmpy=[]\r\nfor i in tmpx:\r\n    tmpy.append(a*i+b)\r\nplt.plot(tmpx,tmpy)\r\nplt.show()</pre>\r\n效果展示<img class=\"alignnone size-medium wp-image-163\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/QQ截图20170316004119-300x227.jpg\" alt=\"\" width=\"300\" height=\"227\" />\r\n\r\n&nbsp;",
            "post_title": "梯度下降法---学习篇",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "148-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-16 00:49:11",
            "post_modified_gmt": "2017-3-15 16:49:11",
            "post_content_filtered": "",
            "post_parent": "148",
            "guid": "http://ganjiacheng.cn/blog/?p=165",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "166",
            "post_author": "1",
            "post_date": "2017-3-16 00:50:40",
            "post_date_gmt": "2017-3-15 16:50:40",
            "post_content": "梯度下降法：一般想法就是，开始先找一个点，之后每次找下降最快的那个方向来找下一个点，直到找到最低点。\r\n\r\n看过很多教程或者高数书上的讲解，大致就知道梯度下降是怎么回事情。但很多时候都是被众多的公式和英文名词吓到而不真正理解。<!--more-->\r\n\r\n这次我们来简单理解最初的一个------单变量梯度下降，这里用梯度下降来做线性回归，也就是找一条<strong>h(x)=ax+b</strong>的线来拟合现有的点。\r\n\r\n想象有很多点，中间有条线，所有点不可能完全在线上，相对于线都有一个误差值，所以方程可以看做<strong>h(x)=ax+b+c</strong>(c代表差值)，c=0就相当于点完全在线上。\r\n\r\n之后再理解一个cost function的概念，看下面第二个式子，简单理解一下就是把所有<strong>c求了平方和再求平均</strong>，除以二是之后在偏导数的时候会方便点。\r\n\r\n在下面求偏导就是把一式带入到二式然后求，结果如三四两式。那个<strong>α</strong>是步长也就是下降的快慢，过快或过慢都不好。这样算完就算一次下降，之后就反复进行就可以慢慢向需要的拟合回归线靠拢。\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/IMG_3063.jpg\"><img class=\"alignnone wp-image-161 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/IMG_3063-300x225.jpg\" alt=\"\" width=\"300\" height=\"225\" /></a>---点击查看原图\r\n<pre>#python2.7\r\n#产生点\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nx=np.arange(-2,2,0.1)\r\ny=2*x+np.random.random(len(x))\r\n#随机设定一个初始的a，b\r\na=np.random.random()\r\nb=np.random.random()\r\nl=len(x)\r\n#步长\r\nalpha=0.01\r\n#进行1000次梯度下降，每次计算出上面求出的偏导，并在赋值给a,b。\r\nfor _ in xrange(1000):\r\n    j=0\r\n    k=0\r\n    for i in xrange(l):\r\n        j+=(a*x[i]+b-y[i])*x[i]\r\n        k+=a*x[i]+b-y[i]\r\n    a=a-alpha*j/l\r\n    b=b-alpha*k/l\r\n    print a,b\r\n#画点\r\nplt.plot(x,y,\"ro\")\r\n#画线\r\ntmpx=[-2,0,2]\r\ntmpy=[]\r\nfor i in tmpx:\r\n    tmpy.append(a*i+b)\r\nplt.plot(tmpx,tmpy)\r\nplt.show()</pre>\r\n效果展示<img class=\"alignnone size-medium wp-image-163\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/QQ截图20170316004119-300x227.jpg\" alt=\"\" width=\"300\" height=\"227\" />\r\n\r\n致谢：http://blog.csdn.net/abcjennifer/article/details/7691571",
            "post_title": "梯度下降法---学习篇",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "148-autosave-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-16 00:50:40",
            "post_modified_gmt": "2017-3-15 16:50:40",
            "post_content_filtered": "",
            "post_parent": "148",
            "guid": "http://ganjiacheng.cn/blog/?p=166",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "167",
            "post_author": "1",
            "post_date": "2017-3-16 00:51:10",
            "post_date_gmt": "2017-3-15 16:51:10",
            "post_content": "梯度下降法：一般想法就是，开始先找一个点，之后每次找下降最快的那个方向来找下一个点，直到找到最低点。\r\n\r\n看过很多教程或者高数书上的讲解，大致就知道梯度下降是怎么回事情。但很多时候都是被众多的公式和英文名词吓到而不真正理解。<!--more-->\r\n\r\n这次我们来简单理解最初的一个------单变量梯度下降，这里用梯度下降来做线性回归，也就是找一条<strong>h(x)=ax+b</strong>的线来拟合现有的点。\r\n\r\n想象有很多点，中间有条线，所有点不可能完全在线上，相对于线都有一个误差值，所以方程可以看做<strong>h(x)=ax+b+c</strong>(c代表差值)，c=0就相当于点完全在线上。\r\n\r\n之后再理解一个cost function的概念，看下面第二个式子，简单理解一下就是把所有<strong>c求了平方和再求平均</strong>，除以二是之后在偏导数的时候会方便点。\r\n\r\n在下面求偏导就是把一式带入到二式然后求，结果如三四两式。那个<strong>α</strong>是步长也就是下降的快慢，过快或过慢都不好。这样算完就算一次下降，之后就反复进行就可以慢慢向需要的拟合回归线靠拢。\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/IMG_3063.jpg\"><img class=\"alignnone wp-image-161 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/IMG_3063-300x225.jpg\" alt=\"\" width=\"300\" height=\"225\" /></a>---点击查看原图\r\n<pre>#python2.7\r\n#产生点\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nx=np.arange(-2,2,0.1)\r\ny=2*x+np.random.random(len(x))\r\n#随机设定一个初始的a，b\r\na=np.random.random()\r\nb=np.random.random()\r\nl=len(x)\r\n#步长\r\nalpha=0.01\r\n#进行1000次梯度下降，每次计算出上面求出的偏导，并在赋值给a,b。\r\nfor _ in xrange(1000):\r\n    j=0\r\n    k=0\r\n    for i in xrange(l):\r\n        j+=(a*x[i]+b-y[i])*x[i]\r\n        k+=a*x[i]+b-y[i]\r\n    a=a-alpha*j/l\r\n    b=b-alpha*k/l\r\n    print a,b\r\n#画点\r\nplt.plot(x,y,\"ro\")\r\n#画线\r\ntmpx=[-2,0,2]\r\ntmpy=[]\r\nfor i in tmpx:\r\n    tmpy.append(a*i+b)\r\nplt.plot(tmpx,tmpy)\r\nplt.show()</pre>\r\n效果展示<img class=\"alignnone size-medium wp-image-163\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/QQ截图20170316004119-300x227.jpg\" alt=\"\" width=\"300\" height=\"227\" />\r\n\r\n致谢：http://blog.csdn.net/abcjennifer/article/details/7691571",
            "post_title": "梯度下降法---学习篇",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "148-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-16 00:51:10",
            "post_modified_gmt": "2017-3-15 16:51:10",
            "post_content_filtered": "",
            "post_parent": "148",
            "guid": "http://ganjiacheng.cn/blog/?p=167",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "168",
            "post_author": "1",
            "post_date": "2017-3-16 00:54:31",
            "post_date_gmt": "2017-3-15 16:54:31",
            "post_content": "梯度下降法：一般想法就是，开始先找一个点，之后每次找下降最快的那个方向来找下一个点，直到找到最低点。\r\n\r\n看过很多教程或者高数书上的讲解，大致就知道梯度下降是怎么回事情。但很多时候都是被众多的公式和英文名词吓到而不真正理解。<!--more-->\r\n\r\n这次我们来简单理解最初的一个------单变量梯度下降，这里用梯度下降来做线性回归，也就是找一条<strong>h(x)=ax+b</strong>的线来拟合现有的点。\r\n\r\n想象有很多点，中间有条线，所有点不可能完全在线上，相对于线都有一个误差值，所以方程可以看做<strong>h(x)=ax+b+c</strong>(c代表差值)，c=0就相当于点完全在线上。\r\n\r\n之后再理解一个cost function的概念，看下面第二个式子，简单理解一下就是把所有<strong>c求了平方和再求平均</strong>，除以二是之后在偏导数的时候会方便点。\r\n\r\n在下面求偏导就是把一式带入到二式然后求，结果如三四两式。那个<strong>α</strong>是步长也就是下降的快慢，过快或过慢都不好。这样算完就算一次下降，之后就反复进行就可以慢慢向需要的拟合回归线靠拢。\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/IMG_3063.jpg\"><img class=\"alignnone wp-image-161 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/IMG_3063-300x225.jpg\" alt=\"\" width=\"300\" height=\"225\" /></a>---点击查看原图\r\n<pre>#python2.7\r\n#产生点\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nx=np.arange(-2,2,0.1)\r\ny=2*x+np.random.random(len(x))\r\n#随机设定一个初始的a，b\r\na=np.random.random()\r\nb=np.random.random()\r\nl=len(x)\r\n#步长\r\nalpha=0.01\r\n#进行1000次梯度下降，每次计算出上面求出的偏导，并在赋值给a,b。\r\nfor _ in xrange(1000):\r\n    j=0\r\n    k=0\r\n    for i in xrange(l):\r\n        j+=(a*x[i]+b-y[i])*x[i]\r\n        k+=a*x[i]+b-y[i]\r\n    a=a-alpha*j/l\r\n    b=b-alpha*k/l\r\n    print a,b\r\n#画点\r\nplt.plot(x,y,\"ro\")\r\n#画线\r\ntmpx=[-2,0,2]\r\ntmpy=[]\r\nfor i in tmpx:\r\n    tmpy.append(a*i+b)\r\nplt.plot(tmpx,tmpy)\r\nplt.show()</pre>\r\n效果展示<img class=\"alignnone size-medium wp-image-163\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/QQ截图20170316004119-300x227.jpg\" alt=\"\" width=\"300\" height=\"227\" />\r\n\r\n致谢：<a href=\"http://blog.csdn.net/abcjennifer/article/details/7691571\">http://blog.csdn.net/abcjennifer/article/details/7691571</a>",
            "post_title": "梯度下降法---学习篇",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "148-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-16 00:54:31",
            "post_modified_gmt": "2017-3-15 16:54:31",
            "post_content_filtered": "",
            "post_parent": "148",
            "guid": "http://ganjiacheng.cn/blog/?p=168",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "169",
            "post_author": "1",
            "post_date": "2017-3-16 00:57:12",
            "post_date_gmt": "2017-3-15 16:57:12",
            "post_content": "先讲回归这个概念，我的理解：如果是二维平面里，指根据现有的点拟合出直线，在用直线做分析与预测。\r\n\r\n简单线性回归便是全部的点都在一类之下。拟合出直线用于发现其中的关系。<!--more-->\r\n\r\nlogistic回归是在两类里做分类，完成训练后，拟合出的直线一边各一类，新来的点就可以很轻易的分类。\r\n\r\nsoftmax回归便是多分类。\r\n\r\n这是简单线性回归的一般公式：<img class=\"alignnone wp-image-47 size-thumbnail\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/IMG_3031-150x150.jpg\" width=\"150\" height=\"150\" />\r\n\r\n然后用python进行了尝试\r\n<pre>#python2.7\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nnum=1000\r\nvectors=[]\r\nxx=0;xy=0;ex=0;ey=0\r\nfor i in xrange(num):\r\n    x1=np.random.normal(0.0,0.55)\r\n    y1=x1*0.1+0.3+np.random.normal(0.0,0.03)\r\n    xx+=x1*x1\r\n    xy+=x1*y1\r\n    ex+=x1\r\n    ey+=y1\r\n    vectors.append([x1,y1])\r\nx_data=[v[0] for v in vectors]\r\ny_data=[v[1] for v in vectors]\r\nplt.plot(x_data,y_data,'ro',label='data')\r\nb=(xy-ex*ey/num)/(xx-ex*ex/num)\r\na=ey/num-b*ex/num\r\ntmpx=[-2,0,2]\r\ntmpy=[]\r\nfor i in tmpx:\r\n    tmpy.append(b*i+a)\r\nplt.plot(tmpx,tmpy)\r\nplt.legend()\r\nplt.show()\r\n</pre>\r\n<img class=\"alignnone size-medium wp-image-49\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/QQ截图20170307175022-300x230.jpg\" alt=\"\" width=\"300\" height=\"230\" />\r\n\r\n效果还可以，之后会对回归进行更多的优化和尝试，最小二乘法，梯度下降等等",
            "post_title": "简单线性回归---学习篇",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "43-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-16 00:57:12",
            "post_modified_gmt": "2017-3-15 16:57:12",
            "post_content_filtered": "",
            "post_parent": "43",
            "guid": "http://ganjiacheng.cn/blog/?p=169",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "170",
            "post_author": "1",
            "post_date": "2017-3-17 12:57:07",
            "post_date_gmt": "2017-3-17 04:57:07",
            "post_content": "",
            "post_title": "IMG_3068",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "img_3068",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-17 12:57:07",
            "post_modified_gmt": "2017-3-17 04:57:07",
            "post_content_filtered": "",
            "post_parent": "148",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/IMG_3068.jpg",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/jpeg",
            "comment_count": "0"
        },
        {
            "ID": "171",
            "post_author": "1",
            "post_date": "2017-3-17 12:57:28",
            "post_date_gmt": "2017-3-17 04:57:28",
            "post_content": "梯度下降法：一般想法就是，开始先找一个点，之后每次找下降最快的那个方向来找下一个点，直到找到最低点。\r\n\r\n看过很多教程或者高数书上的讲解，大致就知道梯度下降是怎么回事情。但很多时候都是被众多的公式和英文名词吓到而不真正理解。<!--more-->\r\n\r\n这次我们来简单理解最初的一个------单变量梯度下降，这里用梯度下降来做线性回归，也就是找一条<strong>h(x)=ax+b</strong>的线来拟合现有的点。\r\n\r\n想象有很多点，中间有条线，所有点不可能完全在线上，相对于线都有一个误差值，所以方程可以看做<strong>h(x)=ax+b+c</strong>(c代表差值)，c=0就相当于点完全在线上。\r\n\r\n之后再理解一个cost function的概念，看下面第二个式子，简单理解一下就是把所有<strong>c求了平方和再求平均</strong>，除以二是之后在偏导数的时候会方便点。\r\n\r\n在下面求偏导就是把一式带入到二式然后求，结果如三四两式。那个<strong>α</strong>是步长也就是下降的快慢，过快或过慢都不好。这样算完就算一次下降，之后就反复进行就可以慢慢向需要的拟合回归线靠拢。\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/IMG_3068.jpg\"><img class=\"alignnone wp-image-170 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/IMG_3068-300x225.jpg\" alt=\"\" width=\"300\" height=\"225\" /></a>---点击查看原图\r\n<pre>#python2.7\r\n#产生点\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nx=np.arange(-2,2,0.1)\r\ny=2*x+np.random.random(len(x))\r\n#随机设定一个初始的a，b\r\na=np.random.random()\r\nb=np.random.random()\r\nl=len(x)\r\n#步长\r\nalpha=0.01\r\n#进行1000次梯度下降，每次计算出上面求出的偏导，并在赋值给a,b。\r\nfor _ in xrange(1000):\r\n    j=0\r\n    k=0\r\n    for i in xrange(l):\r\n        j+=(a*x[i]+b-y[i])*x[i]\r\n        k+=a*x[i]+b-y[i]\r\n    a=a-alpha*j/l\r\n    b=b-alpha*k/l\r\n    print a,b\r\n#画点\r\nplt.plot(x,y,\"ro\")\r\n#画线\r\ntmpx=[-2,0,2]\r\ntmpy=[]\r\nfor i in tmpx:\r\n    tmpy.append(a*i+b)\r\nplt.plot(tmpx,tmpy)\r\nplt.show()</pre>\r\n效果展示<img class=\"alignnone size-medium wp-image-163\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/QQ截图20170316004119-300x227.jpg\" alt=\"\" width=\"300\" height=\"227\" />\r\n\r\n致谢：<a href=\"http://blog.csdn.net/abcjennifer/article/details/7691571\">http://blog.csdn.net/abcjennifer/article/details/7691571</a>",
            "post_title": "梯度下降法---学习篇",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "148-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-17 12:57:28",
            "post_modified_gmt": "2017-3-17 04:57:28",
            "post_content_filtered": "",
            "post_parent": "148",
            "guid": "http://ganjiacheng.cn/blog/?p=171",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "172",
            "post_author": "1",
            "post_date": "2017-3-17 13:17:36",
            "post_date_gmt": "2017-3-17 05:17:36",
            "post_content": "梯度下降法：一般想法就是，开始先找一个点，之后每次找下降最快的那个方向来找下一个点，直到找到最低点。\r\n\r\n看过很多教程或者高数书上的讲解，大致就知道梯度下降是怎么回事情。但很多时候都是被众多的公式和英文名词吓到而不真正理解。<!--more-->\r\n\r\n这次我们来简单理解最初的一个------单变量梯度下降，这里用梯度下降来做线性回归，也就是找一条<strong>h(x)=ax+b</strong>的线来拟合现有的点。\r\n\r\n想象有很多点，中间有条线，所有点不可能完全在线上，相对于线都有一个误差值，所以方程可以看做<strong>h(x)=ax+b+c</strong>(c代表差值)，c=0就相当于点完全在线上。\r\n\r\n之后再理解一个cost function的概念，看下面第二个式子，简单理解一下就是把所有<strong>c求了平方和再求平均</strong>，除以二是之后在偏导数的时候会方便点。\r\n\r\n在下面求偏导就是把一式带入到二式然后求，结果如三四两式。那个<strong>α</strong>是步长也就是下降的快慢，过快或过慢都不好。这样算完就算一次下降，之后就反复进行就可以慢慢向需要的拟合回归线靠拢。\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/IMG_3068.jpg\"><img class=\"alignnone wp-image-170 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/IMG_3068-300x225.jpg\" alt=\"\" width=\"300\" height=\"225\" /></a>---点击查看原图\r\n<pre>#python2.7\r\n#产生点\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nx=np.arange(-2,2,0.1)\r\ny=2*x+np.random.random(len(x))\r\n#随机设定一个初始的a，b\r\na=np.random.random()\r\nb=np.random.random()\r\nl=len(x)\r\n#步长\r\nalpha=0.01\r\n#进行1000次梯度下降，每次计算出上面求出的偏导，并在赋值给a,b。\r\nfor _ in xrange(1000):\r\n    j=0\r\n    k=0\r\n    for i in xrange(l):\r\n        j+=(a*x[i]+b-y[i])*x[i]\r\n        k+=a*x[i]+b-y[i]\r\n    a=a-alpha*j/l\r\n    b=b-alpha*k/l\r\n    print a,b\r\n#画点\r\nplt.plot(x,y,\"ro\")\r\n#画线\r\ntmpx=np.linspace(-2,2)\r\ntmpy=tmpx*a+b\r\nplt.plot(tmpx,tmpy)\r\nplt.show()</pre>\r\n效果展示<img class=\"alignnone size-medium wp-image-163\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/QQ截图20170316004119-300x227.jpg\" alt=\"\" width=\"300\" height=\"227\" />\r\n\r\n致谢：<a href=\"http://blog.csdn.net/abcjennifer/article/details/7691571\">http://blog.csdn.net/abcjennifer/article/details/7691571</a>",
            "post_title": "梯度下降法---学习篇",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "148-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-17 13:17:36",
            "post_modified_gmt": "2017-3-17 05:17:36",
            "post_content_filtered": "",
            "post_parent": "148",
            "guid": "http://ganjiacheng.cn/blog/?p=172",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "173",
            "post_author": "1",
            "post_date": "2017-3-18 13:43:47",
            "post_date_gmt": "2017-3-18 05:43:47",
            "post_content": "<!--more-->前端起家，而最终还是没留在这块‘宝地’，虽然火，但也不和大波人抢饭吃啦！！\r\n\r\n记载回忆篇教程---'老年人'的理解（这里不讲教程，而是整个的学习过程）<!--more-->\r\n\r\n一款好的文本编辑器是必须先入手的，sublime是我一直在用且功能强大的文本编辑器，软件自寻，装好之后装一些插件,在工具栏Preference-&gt;Browse Packdges先安装包，之后Preference-&gt;Packdge Control-&gt;Install Packdges，搜Emmet，先下这个吧，其他看需求。（之下还有讲sublime的）\r\n\r\n然后开始前端的部分啦！！（不理解的名词自行谷歌哦）先纠正一下外来人对于做网页的理解，可能认为网页只是图片和文字的拼接，这种理解很片面。那你的登陆信息呢？那在网页某宝怎么实现支付呢？用户在访问互联网的时候，很多是通过浏览器，而最开始的前端就是写网页用户直接看到的用到的部分。然后你得收集数据，和后端交互数据，把数据可视化，数据安全等等。甚至前端写的不好，黑客可以通过入侵网页和服务器然后用户访问了网址之后就入侵了他的电脑。当然正常也没这么吓人，但也要防患于未然。\r\n\r\n前端最初始的部分便是html，css，js。什么其他库啊，框架啊，预处理器啊都最终会回到这三个。因为浏览器就认识这三个咯！！关于前端的亲戚------浏览器还有一些有趣的历史故事，大家可以自行发掘。\r\n\r\nhtml是使用标签来组成网页内能看到的内容。有html，head，body，div，p，h1，a，img，span，input，button，form等等标签，常用的就没几个，知道每个标签的代表的意思就行。这里算是刚刚开始，所以推荐的教程是w3school。\r\n\r\ncss是网页中的用来定位，美化的html内容的。这部分和审美设计就相关啦，不过前端基础的一些也得会写。包括布局，居中，字体，盒子模型等等。一般写在head里的style标签内，用选择器来选择html元素，其内写css代码改进网页。很多情况我们会引入外部css文件，写在head的link标签里。\r\n\r\n之后可以写一个简单页面咯，sublime里新建文件保存为xxx.html。输入html:5+tab就会生成一个html的一般模板。在其内继续补充内容。这部分需要大量的练习来熟悉和巩固使用html和css。然后，直到展示类页面基本成型。这里补充写的时候很重要的一点就是理解html块级元素和行内元素，css的定位方法。然后在写的时候进行合理的布局，而不是所有不按自己想法占位的元素，都进行浮动和绝对定位。这对于网页在其他不同大小的屏上效果展示很重要。\r\n\r\n这里先不介绍js，先来尝试一下bootstrap这个奇妙的框架。前面写网页的经历应该会让你发现直接写一个看得过去的页面是一件略复杂的事情，然后前人为了造福后人就帮你把很多展示层面的css和js写好了，你直接引用就行。先找到bootstrap3中文官网的起步部分，在页面头部引入bootstrap的那几个文件。之后按照后面的全局css样式和组件来尝试写页面的每一部分，写起来便轻松愉快啦！！bootstrap更强的是他是移动设备优先，这个之后在述。\r\n\r\n前面部分貌似都感觉不到自己在编程，更像是美工，然后js就来啦，js在网页里充当给网页增加动态的角色。他可以改变html和css的内容，做各种特效，处理提交的数据等等。写js就完完全全有写编程语言的感觉啦，当然这也注定了它将会是前端最难的一部分。\r\n\r\n写js先从基本语法开始，如果接触过c一类的语言，应该很快上手，没接触过也不要紧，基础的语法并不难，很快就能搞定。js可以写在head里也可以在body最下方，大部分情况建议写在body最下方，因为同步的代码从上往下执行，这样就可以先展示html，也就是页面反应变快一些。这部分虽然简单，但在写复杂网页程序的时候往往错误就出在不经意的语法错误。细节决定成败，简单也要严谨。\r\n\r\n上面是js作为一门语言的语法，然后作为网页里的一部分，它还能操作dom，也就是改变html和css。先通过选择器获取dom节点，之后进行操作。当然也可以直接创建dom，网页里的它可以说无所不能。react框架就是用编译成js的jsx包揽了全部页面。\r\n\r\n这里插入一个前端开发者必备功能，这里以chrome为例，那就是会用chrome的开发者工具。我们通过打开浏览器然后按f12或者右键审查元素打开，我习惯会把网页在左边，开发者工具在右边，可以按开发者工具右上角切换。前面js的基本语法里有个console.log便是在开发者工具里的console选项里输出内容，这里可以输出一些数组，对象等等alert不能输出的内容，当然也可以在这里直接像命令行一样输入js进行调试。在elements选项里是所有html内容，network里是所有加载的资源以及获取方式，加载时间等等有用信息，这里还能看到网页header，cookie等的信息，分析别人网页的时候很有用哦。中间那一块是css部分，可以直接在这里写css，然后就能看到效果啦，这里比较强大的两个一个是写一个color:#000;点击彩色小方块，然后会有出现一个颜色板和拾色器。另一个是在写css3动画的时候，写一个速度曲线，点击小方块，会出现一个可调整二次贝塞尔曲线的速度曲线改变面板。css右边还有一个盒子模型，必要时还是挺有用的。\r\n\r\n至此你应该已经得会写轮播图，瀑布流，分页等等网页特效，甚至于写个简单的贪吃蛇，扫雷游戏。当然这里的逻辑还是需要挺多的，想想挺简单，用原生js写起来自然会感觉到吃力。除非之前进行过编程或者算法训练，不然很容易绕在里面，感觉不上不下。之前我自己的感受就是无数自己想想的小demo死在了我代码写到一半的时候。然后会感觉很吃力，如瓶颈一般。现在想想，与其纠结于此，不如去追求更广的天空。\r\n\r\n所以继续来学习jquery，虽然都说用这个的都是老年人，但这些话都是已经把这个库用烂了的人说的。对于一个新手，学jquery也是很重要的一环，这个部分，你会体验到快速开发的乐趣。jquery相当于帮你封装了很多又难理解又难写的原生js，然后你可以直接调用它设定的更简便的形式来写js。在html文件里引入jquery文件，一般推荐min的那个，就可以直接按jquery的语法写啦。开始的话jquery写起来速度可以达到js的好几倍，立刻爱上jquery!!如果用jquery来重写上面那些网页特效，可能会轻松很多。当然网上jquery插件和特效也数不胜数，随便上某度搜就行。前期还是建议自己先造造轮子。\r\n\r\n然后讲一个js里神奇的东西，为什么放在jquery下面呢，因为从jquery的语法来理解他会变得简单易行，他就是ajax。它是一种对js来说跨时代的技术。如果直接用原生来实现当然也可以，但对于菜鸟时候的我晦涩难懂。所以当我看到jquery实现的ajax，jquery好感++；ajax相当于可以在页面不跳转的情况下直接与后台进行交流。看似简单，但却实用，几乎每个页面都或多或少有ajax的身影，特别是对于前后端数据交流频繁的页面。\r\n\r\n通过ajax，再来理解这里面的要用到的其他几个东西。一个是json，它是一种数据格式，常常用于前后端数据交流。因为这种数据很轻便，前后端解析json也很简单。出现json之前很多用的是xml，相比于json，xml解析起来很复杂，现在也少用，但也可以了解。另一个是异步和回调。自行搜异步和同步区别哦，ajax默认是异步的，也就是执行ajax时不会停在这里等数据回来，而是发出了一个ajax执行的指令，然后浏览器就继续扫描执行下面的代码啦，至于ajax，浏览器不去管他什么时候执行完，因为他执行完可以调用一个函数来告诉浏览器执行完了，那个函数就是回调函数。这个弄明白对于以后写node.js很重要。\r\n\r\n最近h5这个名词总是很火，那现在就来讲讲html5和css3，html5和css3都是在原来的基础上增加了许多内容。目前主流的浏览器基本也都支持了大部分特性，所以可以放心大胆的写，不放心就看看手册，到这里你应该是查手册和看文档的时候，而不是又看之前看过的教程，那太慢啦。h5新增了很多带语义的标签，js里也开放了很多接口。可以试试，有个大致的了解。css3也一样，增加的一些css属性，有些还非常强大，比如做个3d什么的，也可以实现。这个名词虽然被炒的很高大上的样子，但其实质还是搭在原来的基础知识之上。在基础很牢固之后再去看这些就感到得心应手咯!\r\n\r\n看到这的你已经大致走完了入门之路，接下来的进阶才是真正考验人的时候。都说前端入门很容易，确实，自从有了jquery，js的dom操作变得容易，而jquery可能只要半天时间就能学会。而jquery现在的弊端也很明显就是dom操作太多了，导致网页反应慢。大部分的页面用前面的知识都可以做出成果，但要效果最好肯定不止这些。\r\n\r\n我们还是再来学习js---js进阶。这里目前必读的一本书---泽卡斯的《js高级编程指南》，如果能啃下这本书，必定精进一大步。当初我也是略读读了几次，能感受到他的强大和对我的影响力。js进阶，一方面补充了很多之前遗漏的细节，另一方面代码风格，代码思想会发生变化。学学面向对象，函数式编程，异步编程等等编程思想，对于编程的效率甚至体验都会改变。当然你会发现当初的编一行试一行的考虑肯定不是最好的，应该要站在高处看问题。如果是一个成千上万行代码的任务时，需要有总体设计的眼光。推荐在看看《js设计模式》这本。这部分时间将会非常长，当然也有无数人或停滞不前，或退而自满。任何一个行业在深入之后都不会很简单，如果你是被那三个月培训出来10k以上工资吸引进入这个行业，那就得做好打持久战的准备了，不牢固的基础在这时候会被放大。所以建议还是慢慢来，急功近利很难成为真正nb的人。\r\n\r\n以前你是一个引用库的人，现在，你已经有能力根据自己的需求自己写一个合适自己的库或者改写别人的库，而不是之前想也不想先引用进来。\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "前端回忆记录篇---更新中",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "83-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-18 13:43:47",
            "post_modified_gmt": "2017-3-18 05:43:47",
            "post_content_filtered": "",
            "post_parent": "83",
            "guid": "http://ganjiacheng.cn/blog/?p=173",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "174",
            "post_author": "1",
            "post_date": "2017-3-18 13:44:32",
            "post_date_gmt": "2017-3-18 05:44:32",
            "post_content": "<!--more-->前端起家，而最终还是没留在这块‘宝地’，虽然火，但也不和大波人抢饭吃啦！！\r\n\r\n记载回忆篇教程---'老年人'的理解（这里不讲教程，而是整个的学习过程）<!--more-->\r\n\r\n一款好的文本编辑器是必须先入手的，sublime是我一直在用且功能强大的文本编辑器，软件自寻，装好之后装一些插件,在工具栏Preference-&gt;Browse Packdges先安装包，之后Preference-&gt;Packdge Control-&gt;Install Packdges，搜Emmet，先下这个吧，其他看需求。（之下还有讲sublime的）\r\n\r\n然后开始前端的部分啦！！（不理解的名词自行谷歌哦）先纠正一下外来人对于做网页的理解，可能认为网页只是图片和文字的拼接，这种理解很片面。那你的登陆信息呢？那在网页某宝怎么实现支付呢？用户在访问互联网的时候，很多是通过浏览器，而最开始的前端就是写网页用户直接看到的用到的部分。然后你得收集数据，和后端交互数据，把数据可视化，数据安全等等。甚至前端写的不好，黑客可以通过入侵网页和服务器然后用户访问了网址之后就入侵了他的电脑。当然正常也没这么吓人，但也要防患于未然。\r\n\r\n前端最初始的部分便是html，css，js。什么其他库啊，框架啊，预处理器啊都最终会回到这三个。因为浏览器就认识这三个咯！！关于前端的亲戚------浏览器还有一些有趣的历史故事，大家可以自行发掘。\r\n\r\nhtml是使用标签来组成网页内能看到的内容。有html，head，body，div，p，h1，a，img，span，input，button，form等等标签，常用的就没几个，知道每个标签的代表的意思就行。这里算是刚刚开始，所以推荐的教程是w3school。\r\n\r\ncss是网页中的用来定位，美化的html内容的。这部分和审美设计就相关啦，不过前端基础的一些也得会写。包括布局，居中，字体，盒子模型等等。一般写在head里的style标签内，用选择器来选择html元素，其内写css代码改进网页。很多情况我们会引入外部css文件，写在head的link标签里。\r\n\r\n之后可以写一个简单页面咯，sublime里新建文件保存为xxx.html。输入html:5+tab就会生成一个html的一般模板。在其内继续补充内容。这部分需要大量的练习来熟悉和巩固使用html和css。然后，直到展示类页面基本成型。这里补充写的时候很重要的一点就是理解html块级元素和行内元素，css的定位方法。然后在写的时候进行合理的布局，而不是所有不按自己想法占位的元素，都进行浮动和绝对定位。这对于网页在其他不同大小的屏上效果展示很重要。\r\n\r\n这里先不介绍js，先来尝试一下bootstrap这个奇妙的框架。前面写网页的经历应该会让你发现直接写一个看得过去的页面是一件略复杂的事情，然后前人为了造福后人就帮你把很多展示层面的css和js写好了，你直接引用就行。先找到bootstrap3中文官网的起步部分，在页面头部引入bootstrap的那几个文件。之后按照后面的全局css样式和组件来尝试写页面的每一部分，写起来便轻松愉快啦！！bootstrap更强的是他是移动设备优先，这个之后在述。\r\n\r\n前面部分貌似都感觉不到自己在编程，更像是美工，然后js就来啦，js在网页里充当给网页增加动态的角色。他可以改变html和css的内容，做各种特效，处理提交的数据等等。写js就完完全全有写编程语言的感觉啦，当然这也注定了它将会是前端最难的一部分。\r\n\r\n写js先从基本语法开始，如果接触过c一类的语言，应该很快上手，没接触过也不要紧，基础的语法并不难，很快就能搞定。js可以写在head里也可以在body最下方，大部分情况建议写在body最下方，因为同步的代码从上往下执行，这样就可以先展示html，也就是页面反应变快一些。这部分虽然简单，但在写复杂网页程序的时候往往错误就出在不经意的语法错误。细节决定成败，简单也要严谨。\r\n\r\n上面是js作为一门语言的语法，然后作为网页里的一部分，它还能操作dom，也就是改变html和css。先通过选择器获取dom节点，之后进行操作。当然也可以直接创建dom，网页里的它可以说无所不能。react框架就是用编译成js的jsx包揽了全部页面。\r\n\r\n这里插入一个前端开发者必备功能，这里以chrome为例，那就是会用chrome的开发者工具。我们通过打开浏览器然后按f12或者右键审查元素打开，我习惯会把网页在左边，开发者工具在右边，可以按开发者工具右上角切换。前面js的基本语法里有个console.log便是在开发者工具里的console选项里输出内容，这里可以输出一些数组，对象等等alert不能输出的内容，当然也可以在这里直接像命令行一样输入js进行调试。在elements选项里是所有html内容，network里是所有加载的资源以及获取方式，加载时间等等有用信息，这里还能看到网页header，cookie等的信息，分析别人网页的时候很有用哦。中间那一块是css部分，可以直接在这里写css，然后就能看到效果啦，这里比较强大的两个一个是写一个color:#000;点击彩色小方块，然后会有出现一个颜色板和拾色器。另一个是在写css3动画的时候，写一个速度曲线，点击小方块，会出现一个可调整二次贝塞尔曲线的速度曲线改变面板。css右边还有一个盒子模型，必要时还是挺有用的。\r\n\r\n至此你应该已经得会写轮播图，瀑布流，分页等等网页特效，甚至于写个简单的贪吃蛇，扫雷游戏。当然这里的逻辑还是需要挺多的，想想挺简单，用原生js写起来自然会感觉到吃力。除非之前进行过编程或者算法训练，不然很容易绕在里面，感觉不上不下。之前我自己的感受就是无数自己想想的小demo死在了我代码写到一半的时候。然后会感觉很吃力，如瓶颈一般。现在想想，与其纠结于此，不如去追求更广的天空。\r\n\r\n所以继续来学习jquery，虽然都说用这个的都是老年人，但这些话都是已经把这个库用烂了的人说的。对于一个新手，学jquery也是很重要的一环，这个部分，你会体验到快速开发的乐趣。jquery相当于帮你封装了很多又难理解又难写的原生js，然后你可以直接调用它设定的更简便的形式来写js。在html文件里引入jquery文件，一般推荐min的那个，就可以直接按jquery的语法写啦。开始的话jquery写起来速度可以达到js的好几倍，立刻爱上jquery!!如果用jquery来重写上面那些网页特效，可能会轻松很多。当然网上jquery插件和特效也数不胜数，随便上某度搜就行。前期还是建议自己先造造轮子。\r\n\r\n然后讲一个js里神奇的东西，为什么放在jquery下面呢，因为从jquery的语法来理解他会变得简单易行，他就是ajax。它是一种对js来说跨时代的技术。如果直接用原生来实现当然也可以，但对于菜鸟时候的我晦涩难懂。所以当我看到jquery实现的ajax，jquery好感++；ajax相当于可以在页面不跳转的情况下直接与后台进行交流。看似简单，但却实用，几乎每个页面都或多或少有ajax的身影，特别是对于前后端数据交流频繁的页面。\r\n\r\n通过ajax，再来理解这里面的要用到的其他几个东西。一个是json，它是一种数据格式，常常用于前后端数据交流。因为这种数据很轻便，前后端解析json也很简单。出现json之前很多用的是xml，相比于json，xml解析起来很复杂，现在也少用，但也可以了解。另一个是异步和回调。自行搜异步和同步区别哦，ajax默认是异步的，也就是执行ajax时不会停在这里等数据回来，而是发出了一个ajax执行的指令，然后浏览器就继续扫描执行下面的代码啦，至于ajax，浏览器不去管他什么时候执行完，因为他执行完可以调用一个函数来告诉浏览器执行完了，那个函数就是回调函数。这个弄明白对于以后写node.js很重要。\r\n\r\n最近h5这个名词总是很火，那现在就来讲讲html5和css3，html5和css3都是在原来的基础上增加了许多内容。目前主流的浏览器基本也都支持了大部分特性，所以可以放心大胆的写，不放心就看看手册，到这里你应该是查手册和看文档的时候，而不是又看之前看过的教程，那太慢啦。h5新增了很多带语义的标签，js里也开放了很多接口。可以试试，有个大致的了解。css3也一样，增加的一些css属性，有些还非常强大，比如做个3d什么的，也可以实现。这个名词虽然被炒的很高大上的样子，但其实质还是搭在原来的基础知识之上。在基础很牢固之后再去看这些就感到得心应手咯!\r\n\r\n看到这的你已经大致走完了入门之路，接下来的进阶才是真正考验人的时候。都说前端入门很容易，确实，自从有了jquery，js的dom操作变得容易，而jquery可能只要半天时间就能学会。而jquery现在的弊端也很明显就是dom操作太多了，导致网页反应慢。大部分的页面用前面的知识都可以做出成果，但要效果最好肯定不止这些。\r\n\r\n我们还是再来学习js---js进阶。这里目前必读的一本书---泽卡斯的《js高级编程指南》，如果能啃下这本书，必定精进一大步。当初我也是略读读了几次，能感受到他的强大和对我的影响力。js进阶，一方面补充了很多之前遗漏的细节，另一方面代码风格，代码思想会发生变化。学学面向对象，函数式编程，异步编程等等编程思想，对于编程的效率甚至体验都会改变。当然你会发现当初的编一行试一行的考虑肯定不是最好的，应该要站在高处看问题。如果是一个成千上万行代码的任务时，需要有总体设计的眼光。推荐在看看《js设计模式》这本。这部分时间将会非常长，当然也有无数人或停滞不前，或退而自满。任何一个行业在深入之后都不会很简单，如果你是被那三个月培训出来10k以上工资吸引进入这个行业，那就得做好打持久战的准备了，不牢固的基础在这时候会被放大。所以建议还是慢慢来，急功近利很难成为真正nb的人。\r\n\r\n以前你是一个引用库的人，现在，你已经有能力根据自己的需求自己写一个合适自己的库或者改写别人的库，而不是之前想也不想先引用进来。\r\n\r\n未完待续……\r\n\r\n&nbsp;",
            "post_title": "前端回忆记录篇---更新中",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "83-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-18 13:44:32",
            "post_modified_gmt": "2017-3-18 05:44:32",
            "post_content_filtered": "",
            "post_parent": "83",
            "guid": "http://ganjiacheng.cn/blog/?p=174",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "175",
            "post_author": "1",
            "post_date": "2017-3-18 13:51:49",
            "post_date_gmt": "2017-3-18 05:51:49",
            "post_content": "前端起家，而最终还是没留在这块‘宝地’，虽然火，但也不和大波人抢饭吃啦！！\r\n\r\n记载回忆篇教程---'老年人'的理解（这里不讲教程，而是整个的学习过程）<!--more-->\r\n\r\n一款好的文本编辑器是必须先入手的，sublime是我一直在用且功能强大的文本编辑器，软件自寻，装好之后装一些插件,在工具栏Preference-&gt;Browse Packdges先安装包，之后Preference-&gt;Packdge Control-&gt;Install Packdges，搜Emmet，先下这个吧，其他看需求。（之下还有讲sublime的）\r\n\r\n然后开始前端的部分啦！！（不理解的名词自行谷歌哦）先纠正一下外来人对于做网页的理解，可能认为网页只是图片和文字的拼接，这种理解很片面。那你的登陆信息呢？那在网页某宝怎么实现支付呢？用户在访问互联网的时候，很多是通过浏览器，而最开始的前端就是写网页用户直接看到的用到的部分。然后你得收集数据，和后端交互数据，把数据可视化，数据安全等等。甚至前端写的不好，黑客可以通过入侵网页和服务器然后用户访问了网址之后就入侵了他的电脑。当然正常也没这么吓人，但也要防患于未然。\r\n\r\n前端最初始的部分便是html，css，js。什么其他库啊，框架啊，预处理器啊都最终会回到这三个。因为浏览器就认识这三个咯！！关于前端的亲戚------浏览器还有一些有趣的历史故事，大家可以自行发掘。\r\n\r\nhtml是使用标签来组成网页内能看到的内容。有html，head，body，div，p，h1，a，img，span，input，button，form等等标签，常用的就没几个，知道每个标签的代表的意思就行。这里算是刚刚开始，所以推荐的教程是w3school。\r\n\r\ncss是网页中的用来定位，美化的html内容的。这部分和审美设计就相关啦，不过前端基础的一些也得会写。包括布局，居中，字体，盒子模型等等。一般写在head里的style标签内，用选择器来选择html元素，其内写css代码改进网页。很多情况我们会引入外部css文件，写在head的link标签里。\r\n\r\n之后可以写一个简单页面咯，sublime里新建文件保存为xxx.html。输入html:5+tab就会生成一个html的一般模板。在其内继续补充内容。这部分需要大量的练习来熟悉和巩固使用html和css。然后，直到展示类页面基本成型。这里补充写的时候很重要的一点就是理解html块级元素和行内元素，css的定位方法。然后在写的时候进行合理的布局，而不是所有不按自己想法占位的元素，都进行浮动和绝对定位。这对于网页在其他不同大小的屏上效果展示很重要。\r\n\r\n这里先不介绍js，先来尝试一下bootstrap这个奇妙的框架。前面写网页的经历应该会让你发现直接写一个看得过去的页面是一件略复杂的事情，然后前人为了造福后人就帮你把很多展示层面的css和js写好了，你直接引用就行。先找到bootstrap3中文官网的起步部分，在页面头部引入bootstrap的那几个文件。之后按照后面的全局css样式和组件来尝试写页面的每一部分，写起来便轻松愉快啦！！bootstrap更强的是他是移动设备优先，这个之后在述。\r\n\r\n前面部分貌似都感觉不到自己在编程，更像是美工，然后js就来啦，js在网页里充当给网页增加动态的角色。他可以改变html和css的内容，做各种特效，处理提交的数据等等。写js就完完全全有写编程语言的感觉啦，当然这也注定了它将会是前端最难的一部分。\r\n\r\n写js先从基本语法开始，如果接触过c一类的语言，应该很快上手，没接触过也不要紧，基础的语法并不难，很快就能搞定。js可以写在head里也可以在body最下方，大部分情况建议写在body最下方，因为同步的代码从上往下执行，这样就可以先展示html，也就是页面反应变快一些。这部分虽然简单，但在写复杂网页程序的时候往往错误就出在不经意的语法错误。细节决定成败，简单也要严谨。\r\n\r\n上面是js作为一门语言的语法，然后作为网页里的一部分，它还能操作dom，也就是改变html和css。先通过选择器获取dom节点，之后进行操作。当然也可以直接创建dom，网页里的它可以说无所不能。react框架就是用编译成js的jsx包揽了全部页面。\r\n\r\n这里插入一个前端开发者必备功能，这里以chrome为例，那就是会用chrome的开发者工具。我们通过打开浏览器然后按f12或者右键审查元素打开，我习惯会把网页在左边，开发者工具在右边，可以按开发者工具右上角切换。前面js的基本语法里有个console.log便是在开发者工具里的console选项里输出内容，这里可以输出一些数组，对象等等alert不能输出的内容，当然也可以在这里直接像命令行一样输入js进行调试。在elements选项里是所有html内容，network里是所有加载的资源以及获取方式，加载时间等等有用信息，这里还能看到网页header，cookie等的信息，分析别人网页的时候很有用哦。中间那一块是css部分，可以直接在这里写css，然后就能看到效果啦，这里比较强大的两个一个是写一个color:#000;点击彩色小方块，然后会有出现一个颜色板和拾色器。另一个是在写css3动画的时候，写一个速度曲线，点击小方块，会出现一个可调整二次贝塞尔曲线的速度曲线改变面板。css右边还有一个盒子模型，必要时还是挺有用的。\r\n\r\n至此你应该已经得会写轮播图，瀑布流，分页等等网页特效，甚至于写个简单的贪吃蛇，扫雷游戏。当然这里的逻辑还是需要挺多的，想想挺简单，用原生js写起来自然会感觉到吃力。除非之前进行过编程或者算法训练，不然很容易绕在里面，感觉不上不下。之前我自己的感受就是无数自己想想的小demo死在了我代码写到一半的时候。然后会感觉很吃力，如瓶颈一般。现在想想，与其纠结于此，不如去追求更广的天空。\r\n\r\n所以继续来学习jquery，虽然都说用这个的都是老年人，但这些话都是已经把这个库用烂了的人说的。对于一个新手，学jquery也是很重要的一环，这个部分，你会体验到快速开发的乐趣。jquery相当于帮你封装了很多又难理解又难写的原生js，然后你可以直接调用它设定的更简便的形式来写js。在html文件里引入jquery文件，一般推荐min的那个，就可以直接按jquery的语法写啦。开始的话jquery写起来速度可以达到js的好几倍，立刻爱上jquery!!如果用jquery来重写上面那些网页特效，可能会轻松很多。当然网上jquery插件和特效也数不胜数，随便上某度搜就行。前期还是建议自己先造造轮子。\r\n\r\n然后讲一个js里神奇的东西，为什么放在jquery下面呢，因为从jquery的语法来理解他会变得简单易行，他就是ajax。它是一种对js来说跨时代的技术。如果直接用原生来实现当然也可以，但对于菜鸟时候的我晦涩难懂。所以当我看到jquery实现的ajax，jquery好感++；ajax相当于可以在页面不跳转的情况下直接与后台进行交流。看似简单，但却实用，几乎每个页面都或多或少有ajax的身影，特别是对于前后端数据交流频繁的页面。\r\n\r\n通过ajax，再来理解这里面的要用到的其他几个东西。一个是json，它是一种数据格式，常常用于前后端数据交流。因为这种数据很轻便，前后端解析json也很简单。出现json之前很多用的是xml，相比于json，xml解析起来很复杂，现在也少用，但也可以了解。另一个是异步和回调。自行搜异步和同步区别哦，ajax默认是异步的，也就是执行ajax时不会停在这里等数据回来，而是发出了一个ajax执行的指令，然后浏览器就继续扫描执行下面的代码啦，至于ajax，浏览器不去管他什么时候执行完，因为他执行完可以调用一个函数来告诉浏览器执行完了，那个函数就是回调函数。这个弄明白对于以后写node.js很重要。\r\n\r\n最近h5这个名词总是很火，那现在就来讲讲html5和css3，html5和css3都是在原来的基础上增加了许多内容。目前主流的浏览器基本也都支持了大部分特性，所以可以放心大胆的写，不放心就看看手册，到这里你应该是查手册和看文档的时候，而不是又看之前看过的教程，那太慢啦。h5新增了很多带语义的标签，js里也开放了很多接口。可以试试，有个大致的了解。css3也一样，增加的一些css属性，有些还非常强大，比如做个3d什么的，也可以实现。这个名词虽然被炒的很高大上的样子，但其实质还是搭在原来的基础知识之上。在基础很牢固之后再去看这些就感到得心应手咯!\r\n\r\n看到这的你已经大致走完了入门之路，接下来的进阶才是真正考验人的时候。都说前端入门很容易，确实，自从有了jquery，js的dom操作变得容易，而jquery可能只要半天时间就能学会。而jquery现在的弊端也很明显就是dom操作太多了，导致网页反应慢。大部分的页面用前面的知识都可以做出成果，但要效果最好肯定不止这些。\r\n\r\n我们还是再来学习js---js进阶。这里目前必读的一本书---泽卡斯的《js高级编程指南》，如果能啃下这本书，必定精进一大步。当初我也是略读读了几次，能感受到他的强大和对我的影响力。js进阶，一方面补充了很多之前遗漏的细节，另一方面代码风格，代码思想会发生变化。学学面向对象，函数式编程，异步编程等等编程思想，对于编程的效率甚至体验都会改变。当然你会发现当初的编一行试一行的考虑肯定不是最好的，应该要站在高处看问题。如果是一个成千上万行代码的任务时，需要有总体设计的眼光。推荐在看看《js设计模式》这本。这部分时间将会非常长，当然也有无数人或停滞不前，或退而自满。任何一个行业在深入之后都不会很简单，如果你是被那三个月培训出来10k以上工资吸引进入这个行业，那就得做好打持久战的准备了，不牢固的基础在这时候会被放大。所以建议还是慢慢来，急功近利很难成为真正nb的人。\r\n\r\n以前你是一个引用库的人，现在，你已经有能力根据自己的需求自己写一个合适自己的库或者改写别人的库，而不是之前想也不想先引用进来。\r\n\r\n未完待续……\r\n\r\n&nbsp;",
            "post_title": "前端回忆记录篇---更新中",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "83-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-18 13:51:49",
            "post_modified_gmt": "2017-3-18 05:51:49",
            "post_content_filtered": "",
            "post_parent": "83",
            "guid": "http://ganjiacheng.cn/blog/?p=175",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "176",
            "post_author": "1",
            "post_date": "2017-3-19 00:28:26",
            "post_date_gmt": "2017-3-18 16:28:26",
            "post_content": "先讲回归这个概念，我的理解：如果是二维平面里，指根据现有的点拟合出直线，在用直线做分析与预测。\r\n\r\n简单线性回归便是全部的点都在一类之下。拟合出直线用于发现其中的关系。<!--more-->\r\n\r\nlogistic回归是在两类里做分类，完成训练后，拟合出的直线一边各一类，新来的点就可以很轻易的分类。\r\n\r\nsoftmax回归便是多分类。\r\n\r\n这是简单线性回归的一般公式：<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/IMG_3031.jpg\"><img class=\"alignnone wp-image-47 size-thumbnail\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/IMG_3031-150x150.jpg\" alt=\"\" width=\"150\" height=\"150\" /></a>\r\n\r\n然后用python进行了尝试\r\n<pre>#python2.7\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nnum=1000\r\nvectors=[]\r\nxx=0;xy=0;ex=0;ey=0\r\nfor i in xrange(num):\r\n    x1=np.random.normal(0.0,0.55)\r\n    y1=x1*0.1+0.3+np.random.normal(0.0,0.03)\r\n    xx+=x1*x1\r\n    xy+=x1*y1\r\n    ex+=x1\r\n    ey+=y1\r\n    vectors.append([x1,y1])\r\nx_data=[v[0] for v in vectors]\r\ny_data=[v[1] for v in vectors]\r\nplt.plot(x_data,y_data,'ro',label='data')\r\nb=(xy-ex*ey/num)/(xx-ex*ex/num)\r\na=ey/num-b*ex/num\r\ntmpx=[-2,0,2]\r\ntmpy=[]\r\nfor i in tmpx:\r\n    tmpy.append(b*i+a)\r\nplt.plot(tmpx,tmpy)\r\nplt.legend()\r\nplt.show()\r\n</pre>\r\n<img class=\"alignnone size-medium wp-image-49\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/QQ截图20170307175022-300x230.jpg\" alt=\"\" width=\"300\" height=\"230\" />\r\n\r\n效果还可以，之后会对回归进行更多的优化和尝试，最小二乘法，梯度下降等等",
            "post_title": "简单线性回归---学习篇",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "43-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-19 00:28:26",
            "post_modified_gmt": "2017-3-18 16:28:26",
            "post_content_filtered": "",
            "post_parent": "43",
            "guid": "http://ganjiacheng.cn/blog/?p=176",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "177",
            "post_author": "1",
            "post_date": "2017-3-19 00:54:19",
            "post_date_gmt": "2017-3-18 16:54:19",
            "post_content": "logistics过程并不复杂，特别是在理解了梯度下降之后，梯度下降法可以参考我之前的文章，<a href=\"http://ganjiacheng.cn/blog/?p=148\">点击这里查看</a>\r\n\r\n大致讲一下理解：大致还是通过梯度下降把前面的系数渐渐靠近，比如用ax+by+c=0这条直线来进行二分类，a，b，c三个系数就是下面代码中的weight\r\n\r\n\"testSet.txt\"是《机器学习实战》里的一个例子的文件，这里引用一下，下载地址在<a href=\"http://pan.baidu.com/s/1pLLMJdp\">http://pan.baidu.com/s/1pLLMJdp</a>\r\n<pre></pre>\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "logistics回归做二分类---学习篇",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "152-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-19 00:54:19",
            "post_modified_gmt": "2017-3-18 16:54:19",
            "post_content_filtered": "",
            "post_parent": "152",
            "guid": "http://ganjiacheng.cn/blog/?p=177",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "179",
            "post_author": "1",
            "post_date": "2017-3-19 01:24:24",
            "post_date_gmt": "2017-3-18 17:24:24",
            "post_content": "一般的logistics回归过程并不复杂，特别是在理解了梯度下降之后，梯度下降法可以参考我之前的文章，<a href=\"http://ganjiacheng.cn/blog/?p=148\">点击这里查看</a>\r\n\r\n大致讲一下理解：大致还是通过梯度下降把前面的系数渐渐靠近，比如用ax+by+c=0，这条直线来进行二分类，a，b，c三个系数就是下面代码中的数组weight，每次迭代改变的就是weight。然后误差是通过把每组训练的数进行<a href=\"http://d.hiphotos.baidu.com/baike/s%3D99/sign=a46bd6f1dd33c895a27e9472d01340df/0df3d7ca7bcb0a4659502a5f6f63f6246b60af62.jpg\">sigmoid函数</a>，在与之前分好的类（这里是txt文件里的-1和1）进行求差就是每次的误差值。具体代码里还有解释。\r\n\r\n\"testSet.txt\"是《机器学习实战》里的一个例子的文件，这里引用一下，下载地址在<a href=\"http://pan.baidu.com/s/1pLLMJdp\">http://pan.baidu.com/s/1pLLMJdp</a>\r\n\r\n这个例子很考验矩阵运算，建议回顾一下线性代数哦！\r\n<pre>#python2.7\r\n#引入必要文件\r\nimport matplotlib.pyplot as plt\r\nimport numpy as np\r\n#打开文件\r\nf=open(\"testSet.txt\")\r\ngdatax=[]\r\ngdatay=[]\r\nrdatax=[]\r\nrdatay=[]\r\nlabel=[]\r\ndata=[]\r\n#读取文件\r\nfor i in f.readlines():\r\n    #strip()是除去开头空格，split()是以空格为间断，变成数组。\r\n    linearr=i.strip().split()\r\n    #读取坐标，这里补1.0是为了使数组长度变成3，便于之后矩阵运算\r\n    data.append([1.0,float(linearr[0]),float(linearr[1])])\r\n    #读取分类\r\n    label.append(int(linearr[2]))\r\n    #为了展示点的分布，分开读取不同类的点\r\n    if int(linearr[2])==1:\r\n        gdatax.append(linearr[0])\r\n        gdatay.append(linearr[1])\r\n    else:\r\n        rdatax.append(linearr[0])\r\n        rdatay.append(linearr[1])\r\n#使list变成numpy里的matrix矩阵\r\ndataMatrix=np.mat(data)\r\n#transpose()是矩阵的转置\r\nlabelMat=np.mat(label).transpose()\r\nm,n=np.shape(dataMatrix)\r\n#梯度下降步长\r\nalpha=0.001\r\n#梯度下降次数\r\nmax=500\r\n#先设定三个系数为1\r\nweights=np.ones((n,1))\r\n#梯度下降主步骤，求sigmoid，和分类对比正确性，在求新的weights\r\nfor k in range(max):\r\n    h=1.0/(1+np.exp(-dataMatrix*weights))\r\n    error=(labelMat-h)\r\n    weights=weights+alpha*dataMatrix.transpose()*error\r\n#创建等差数列\r\nx=np.linspace(-3,3)\r\n#计算y值\r\ny=(-weights[0,0]-weights[1,0]*x)/weights[2,0]\r\n#画图\r\nplt.plot(x,y)\r\nplt.plot(gdatax,gdatay,'ro',c='g')\r\nplt.plot(rdatax,rdatay,'ro',c='r')\r\nplt.show()</pre>\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "logistics回归做二分类---学习篇",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "152-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-19 01:24:24",
            "post_modified_gmt": "2017-3-18 17:24:24",
            "post_content_filtered": "",
            "post_parent": "152",
            "guid": "http://ganjiacheng.cn/blog/?p=179",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "180",
            "post_author": "1",
            "post_date": "2017-3-19 01:27:59",
            "post_date_gmt": "2017-3-18 17:27:59",
            "post_content": "",
            "post_title": "QQ截图20170319012731",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "qq%e6%88%aa%e5%9b%be20170319012731",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-19 01:27:59",
            "post_modified_gmt": "2017-3-18 17:27:59",
            "post_content_filtered": "",
            "post_parent": "152",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/QQ截图20170319012731.jpg",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/jpeg",
            "comment_count": "0"
        },
        {
            "ID": "181",
            "post_author": "1",
            "post_date": "2017-3-19 01:33:03",
            "post_date_gmt": "2017-3-18 17:33:03",
            "post_content": "一般的logistics回归过程并不复杂，特别是在理解了梯度下降之后，梯度下降法可以参考我之前的文章，<a href=\"http://ganjiacheng.cn/blog/?p=148\">点击这里查看</a>\r\n\r\n大致讲一下理解：<!--more-->\r\n\r\n大致还是通过梯度下降把需要拟合的直线的前面的系数渐渐靠近，比如用ax+by+c=0，这条直线来进行二分类，a，b，c三个系数就是下面代码中的数组weight，每次迭代改变的就是weight。然后误差是通过把每组训练的数进行<a href=\"http://d.hiphotos.baidu.com/baike/s%3D99/sign=a46bd6f1dd33c895a27e9472d01340df/0df3d7ca7bcb0a4659502a5f6f63f6246b60af62.jpg\">sigmoid函数</a>，在与之前分好的类（这里是txt文件里的-1和1）进行求差就是每次的误差值。具体代码里还有解释。\r\n\r\n\"testSet.txt\"是《机器学习实战》里的一个例子的文件，这里引用一下，下载地址在<a href=\"http://pan.baidu.com/s/1pLLMJdp\">http://pan.baidu.com/s/1pLLMJdp</a>\r\n\r\n这个例子很考验矩阵运算，建议回顾一下线性代数哦！\r\n<pre>#python2.7\r\n#引入必要文件\r\nimport matplotlib.pyplot as plt\r\nimport numpy as np\r\n#打开文件\r\nf=open(\"testSet.txt\")\r\ngdatax=[]\r\ngdatay=[]\r\nrdatax=[]\r\nrdatay=[]\r\nlabel=[]\r\ndata=[]\r\n#读取文件\r\nfor i in f.readlines():\r\n    #strip()是除去开头空格，split()是以空格为间断，变成数组。\r\n    linearr=i.strip().split()\r\n    #读取坐标，这里补1.0是为了使数组长度变成3，便于之后矩阵运算\r\n    data.append([1.0,float(linearr[0]),float(linearr[1])])\r\n    #读取分类\r\n    label.append(int(linearr[2]))\r\n    #为了展示点的分布，分开读取不同类的点\r\n    if int(linearr[2])==1:\r\n        gdatax.append(linearr[0])\r\n        gdatay.append(linearr[1])\r\n    else:\r\n        rdatax.append(linearr[0])\r\n        rdatay.append(linearr[1])\r\n#使list变成numpy里的matrix矩阵\r\ndataMatrix=np.mat(data)\r\n#transpose()是矩阵的转置\r\nlabelMat=np.mat(label).transpose()\r\nm,n=np.shape(dataMatrix)\r\n#梯度下降步长\r\nalpha=0.001\r\n#梯度下降次数\r\nmax=500\r\n#先设定三个系数为1\r\nweights=np.ones((n,1))\r\n#梯度下降主步骤，求sigmoid，和分类对比正确性，在求新的weights\r\nfor k in range(max):\r\n    h=1.0/(1+np.exp(-dataMatrix*weights))\r\n    error=(labelMat-h)\r\n    weights=weights+alpha*dataMatrix.transpose()*error\r\n#创建等差数列\r\nx=np.linspace(-3,3)\r\n#计算y值\r\ny=(-weights[0,0]-weights[1,0]*x)/weights[2,0]\r\n#画图\r\nplt.plot(x,y)\r\nplt.plot(gdatax,gdatay,'ro',c='g')\r\nplt.plot(rdatax,rdatay,'ro',c='r')\r\nplt.show()</pre>\r\n效果展示：<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/QQ截图20170319012731.jpg\"><img class=\"alignnone wp-image-180 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/QQ截图20170319012731-300x240.jpg\" alt=\"\" width=\"300\" height=\"240\" /></a>\r\n\r\n总的来说还可以。梯度下降那块可以优化成随机梯度下降，可以进行更少的迭代获得同等的效果。\r\n\r\n&nbsp;",
            "post_title": "logistics回归做二分类---学习篇",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "152-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-19 01:33:03",
            "post_modified_gmt": "2017-3-18 17:33:03",
            "post_content_filtered": "",
            "post_parent": "152",
            "guid": "http://ganjiacheng.cn/blog/?p=181",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "184",
            "post_author": "1",
            "post_date": "2017-3-19 10:53:50",
            "post_date_gmt": "2017-3-19 02:53:50",
            "post_content": "一种情况就是新组成的一个团队，人比较多，要互相留下手机号。这种时候一个个输入到手机里就比较麻烦，所以可以制作一个vcf文件，直接导入到通讯录。\r\n\r\nvcf文件制作软件可以到这里下载http://pan.baidu.com/s/1kVLoUTh\r\n\r\n下载后打开里面的exe文件，之后添加需要的人的信息和手机号码，点击保存通讯录就会保存到Contacts.vcf文件里。可能会发生输入名字变成问号的问题，这个时候就要现在外面写好，复制到那个框里面就可以。\r\n\r\n使用方法：\r\n\r\n把contacts.vcf文件通过电脑发到手机上用软件打开，或者放在云服务器上，用浏览器打开。打开后选择另外的打开方式，选择在通讯录中打开，之后便会跳转到通讯录并自动添加了所有人的电话和信息。点击储存就保存了所有人。\r\n\r\n是不是很便捷~",
            "post_title": "便捷的集体通讯录---vcf文件制作使用",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "139-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-19 10:53:50",
            "post_modified_gmt": "2017-3-19 02:53:50",
            "post_content_filtered": "",
            "post_parent": "139",
            "guid": "http://ganjiacheng.cn/blog/?p=184",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "185",
            "post_author": "1",
            "post_date": "2017-3-19 10:59:19",
            "post_date_gmt": "2017-3-19 02:59:19",
            "post_content": "一种情况就是新组成的一个团队，人比较多，要互相留下手机号。这种时候一个个输入到手机里就比较麻烦，所以可以制作一个vcf文件，直接导入到通讯录。\r\n\r\nvcf文件制作软件可以到这里下载<a href=\"http://pan.baidu.com/s/1kVLoUTh\">http://pan.baidu.com/s/1kVLoUTh</a><!--more-->\r\n\r\n下载后打开里面的exe文件，之后添加需要的人的信息和手机号码，点击保存通讯录就会保存到Contacts.vcf文件里。可能会发生输入名字变成问号的问题，这个时候就要现在外面写好，复制到那个框里面就可以。\r\n\r\n使用方法：\r\n\r\n把contacts.vcf文件通过电脑发到手机上用软件打开，或者放在云服务器上，用浏览器打开。打开后选择另外的打开方式，选择在通讯录中打开，之后便会跳转到通讯录并自动添加了所有人的电话和信息。点击储存就保存了所有人。\r\n\r\n是不是很便捷~",
            "post_title": "便捷的集体通讯录---vcf文件制作使用",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "139-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-19 10:59:19",
            "post_modified_gmt": "2017-3-19 02:59:19",
            "post_content_filtered": "",
            "post_parent": "139",
            "guid": "http://ganjiacheng.cn/blog/?p=185",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "187",
            "post_author": "1",
            "post_date": "2017-3-19 11:09:15",
            "post_date_gmt": "2017-3-19 03:09:15",
            "post_content": "前端起家，而最终还是没留在这块‘宝地’，虽然火，但也不和大波人抢饭吃啦！！\r\n\r\n记载回忆篇教程---'老年人'的理解（这里不讲教程，而是整个的学习过程）<!--more-->\r\n\r\n一款好的文本编辑器是必须先入手的，sublime是我一直在用且功能强大的文本编辑器，软件自寻，装好之后装一些插件,在工具栏Preference-&gt;Browse Packdges先安装包，之后Preference-&gt;Packdge Control-&gt;Install Packdges，搜Emmet，先下这个吧，其他看需求。（之下还有讲sublime的）\r\n\r\n然后开始前端的部分啦！！（不理解的名词自行谷歌哦）先纠正一下外来人对于做网页的理解，可能认为网页只是图片和文字的拼接，这种理解很片面。那你的登陆信息呢？那在网页某宝怎么实现支付呢？用户在访问互联网的时候，很多是通过浏览器，而最开始的前端就是写网页用户直接看到的用到的部分。然后你得收集数据，和后端交互数据，把数据可视化，数据安全等等。甚至前端写的不好，黑客可以通过入侵网页和服务器然后用户访问了网址之后就入侵了他的电脑。当然正常也没这么吓人，但也要防患于未然。\r\n\r\n前端最初始的部分便是html，css，js。什么其他库啊，框架啊，预处理器啊都最终会回到这三个。因为浏览器就认识这三个咯！！关于前端的亲戚------浏览器还有一些有趣的历史故事，大家可以自行发掘。\r\n\r\nhtml是使用标签来组成网页内能看到的内容。有html，head，body，div，p，h1，a，img，span，input，button，form等等标签，常用的就没几个，知道每个标签的代表的意思就行。这里算是刚刚开始，所以推荐的教程是w3school。\r\n\r\ncss是网页中的用来定位，美化的html内容的。这部分和审美设计就相关啦，不过前端基础的一些也得会写。包括布局，居中，字体，盒子模型等等。一般写在head里的style标签内，用选择器来选择html元素，其内写css代码改进网页。很多情况我们会引入外部css文件，写在head的link标签里。\r\n\r\n之后可以写一个简单页面咯，sublime里新建文件保存为xxx.html。输入html:5+tab就会生成一个html的一般模板。在其内继续补充内容。这部分需要大量的练习来熟悉和巩固使用html和css。然后，直到展示类页面基本成型。这里补充写的时候很重要的一点就是理解html块级元素和行内元素，css的定位方法。然后在写的时候进行合理的布局，而不是所有不按自己想法占位的元素，都进行浮动和绝对定位。这对于网页在其他不同大小的屏上效果展示很重要。\r\n\r\n这里先不介绍js，先来尝试一下bootstrap这个奇妙的框架。前面写网页的经历应该会让你发现直接写一个看得过去的页面是一件略复杂的事情，然后前人为了造福后人就帮你把很多展示层面的css和js写好了，你直接引用就行。先找到bootstrap3中文官网的起步部分，在页面头部引入bootstrap的那几个文件。之后按照后面的全局css样式和组件来尝试写页面的每一部分，写起来便轻松愉快啦！！bootstrap更强的是他是移动设备优先，这个之后在述。\r\n\r\n前面部分貌似都感觉不到自己在编程，更像是美工，然后js就来啦，js在网页里充当给网页增加动态的角色。他可以改变html和css的内容，做各种特效，处理提交的数据等等。写js就完完全全有写编程语言的感觉啦，当然这也注定了它将会是前端最难的一部分。\r\n\r\n写js先从基本语法开始，如果接触过c一类的语言，应该很快上手，没接触过也不要紧，基础的语法并不难，很快就能搞定。js可以写在head里也可以在body最下方，大部分情况建议写在body最下方，因为同步的代码从上往下执行，这样就可以先展示html，也就是页面反应变快一些。这部分虽然简单，但在写复杂网页程序的时候往往错误就出在不经意的语法错误。细节决定成败，简单也要严谨。\r\n\r\n上面是js作为一门语言的语法，然后作为网页里的一部分，它还能操作dom，也就是改变html和css。先通过选择器获取dom节点，之后进行操作。当然也可以直接创建dom，网页里的它可以说无所不能。react框架就是用编译成js的jsx包揽了全部页面。\r\n\r\n这里插入一个前端开发者必备功能，这里以chrome为例，那就是会用chrome的开发者工具。我们通过打开浏览器然后按f12或者右键审查元素打开，我习惯会把网页在左边，开发者工具在右边，可以按开发者工具右上角切换。前面js的基本语法里有个console.log便是在开发者工具里的console选项里输出内容，这里可以输出一些数组，对象等等alert不能输出的内容，当然也可以在这里直接像命令行一样输入js进行调试。在elements选项里是所有html内容，network里是所有加载的资源以及获取方式，加载时间等等有用信息，这里还能看到网页header，cookie等的信息，分析别人网页的时候很有用哦。中间那一块是css部分，可以直接在这里写css，然后就能看到效果啦，这里比较强大的两个一个是写一个color:#000;点击彩色小方块，然后会有出现一个颜色板和拾色器。另一个是在写css3动画的时候，写一个速度曲线，点击小方块，会出现一个可调整二次贝塞尔曲线的速度曲线改变面板。css右边还有一个盒子模型，必要时还是挺有用的。\r\n\r\n至此你应该已经得会写轮播图，瀑布流，分页等等网页特效，甚至于写个简单的贪吃蛇，扫雷游戏。当然这里的逻辑还是需要挺多的，想想挺简单，用原生js写起来自然会感觉到吃力。除非之前进行过编程或者算法训练，不然很容易绕在里面，感觉不上不下。之前我自己的感受就是无数自己想想的小demo死在了我代码写到一半的时候。然后会感觉很吃力，如瓶颈一般。现在想想，与其纠结于此，不如去追求更广的天空。\r\n\r\n所以继续来学习jquery，虽然都说用这个的都是老年人，但这些话都是已经把这个库用烂了的人说的。对于一个新手，学jquery也是很重要的一环，这个部分，你会体验到快速开发的乐趣。jquery相当于帮你封装了很多又难理解又难写的原生js，然后你可以直接调用它设定的更简便的形式来写js。在html文件里引入jquery文件，一般推荐min的那个，就可以直接按jquery的语法写啦。开始的话jquery写起来速度可以达到js的好几倍，立刻爱上jquery!!如果用jquery来重写上面那些网页特效，可能会轻松很多。当然网上jquery插件和特效也数不胜数，随便上某度搜就行。前期还是建议自己先造造轮子。\r\n\r\n这里插一个提醒，之后讲的很多东西要在服务器运行，ajax也是。所以先配置一下服务器的环境。windows下建议wamp，linux下建议<a href=\"https://lnmp.org/\">lnmp</a>。都是集成安装环境，安装完就可以直接用。然后windows用浏览器访问localhost打开www文件目录，Linux用浏览器访问公网ip会打开wwwroot文件下default文件下index.html文件。这样就可以继续进行下去啦，之后尽量把文件放服务器。如果想要了解服务器知识的话就走向了后端了哦，但前端也可以稍微了解。\r\n\r\n然后讲一个js里神奇的东西，为什么放在jquery下面呢，因为从jquery的语法来理解他会变得简单易行，他就是ajax。它是一种对js来说跨时代的技术。如果直接用原生来实现当然也可以，但对于菜鸟时候的我晦涩难懂。所以当我看到jquery实现的ajax，jquery好感++；ajax相当于可以在页面不跳转的情况下直接与后台进行交流。看似简单，但却实用，几乎每个页面都或多或少有ajax的身影，特别是对于前后端数据交流频繁的页面。\r\n\r\n通过ajax，再来理解这里面的要用到的其他几个东西。一个是json，它是一种数据格式，常常用于前后端数据交流。因为这种数据很轻便，前后端解析json也很简单。出现json之前很多用的是xml，相比于json，xml解析起来很复杂，现在也少用，但也可以了解。另一个是异步和回调。自行搜异步和同步区别哦，ajax默认是异步的，也就是执行ajax时不会停在这里等数据回来，而是发出了一个ajax执行的指令，然后浏览器就继续扫描执行下面的代码啦，至于ajax，浏览器不去管他什么时候执行完，因为他执行完可以调用一个函数来告诉浏览器执行完了，那个函数就是回调函数。这个弄明白对于以后写node.js很重要。\r\n\r\n最近h5这个名词总是很火，那现在就来讲讲html5和css3，html5和css3都是在原来的基础上增加了许多内容。目前主流的浏览器基本也都支持了大部分特性，所以可以放心大胆的写，不放心就看看手册，到这里你应该是查手册和看文档的时候，而不是又看之前看过的教程，那太慢啦。h5新增了很多带语义的标签，js里也开放了很多接口。可以试试，有个大致的了解。css3也一样，增加的一些css属性，有些还非常强大，比如做个3d什么的，也可以实现。这个名词虽然被炒的很高大上的样子，但其实质还是搭在原来的基础知识之上。在基础很牢固之后再去看这些就感到得心应手咯!\r\n\r\n看到这的你已经大致走完了入门之路，接下来的进阶才是真正考验人的时候。都说前端入门很容易，确实，自从有了jquery，js的dom操作变得容易，而jquery可能只要半天时间就能学会。而jquery现在的弊端也很明显就是dom操作太多了，导致网页反应慢。大部分的页面用前面的知识都可以做出成果，但要效果最好肯定不止这些。\r\n\r\n我们还是再来学习js---js进阶。这里目前必读的一本书---泽卡斯的《js高级编程指南》，如果能啃下这本书，必定精进一大步。当初我也是略读读了几次，能感受到他的强大和对我的影响力。js进阶，一方面补充了很多之前遗漏的细节，另一方面代码风格，代码思想会发生变化。学学面向对象，函数式编程，异步编程等等编程思想，对于编程的效率甚至体验都会改变。当然你会发现当初的编一行试一行的考虑肯定不是最好的，应该要站在高处看问题。如果是一个成千上万行代码的任务时，需要有总体设计的眼光。推荐在看看《js设计模式》这本。这部分时间将会非常长，当然也有无数人或停滞不前，或退而自满。任何一个行业在深入之后都不会很简单，如果你是被那三个月培训出来10k以上工资吸引进入这个行业，那就得做好打持久战的准备了，不牢固的基础在这时候会被放大。所以建议还是慢慢来，急功近利很难成为真正nb的人。\r\n\r\n以前你是一个引用库的人，现在，你已经有能力根据自己的需求自己写一个合适自己的库或者改写别人的库，而不是之前想也不想先引用进来。\r\n\r\n未完待续……\r\n\r\n&nbsp;",
            "post_title": "前端回忆记录篇---更新中",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "83-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-19 11:09:15",
            "post_modified_gmt": "2017-3-19 03:09:15",
            "post_content_filtered": "",
            "post_parent": "83",
            "guid": "http://ganjiacheng.cn/blog/?p=187",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "188",
            "post_author": "1",
            "post_date": "2017-3-19 11:10:51",
            "post_date_gmt": "2017-3-19 03:10:51",
            "post_content": "",
            "post_title": "0df3d7ca7bcb0a4659502a5f6f63f6246b60af62.jpg",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "0df3d7ca7bcb0a4659502a5f6f63f6246b60af62-jpg",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-19 11:10:51",
            "post_modified_gmt": "2017-3-19 03:10:51",
            "post_content_filtered": "",
            "post_parent": "152",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/0df3d7ca7bcb0a4659502a5f6f63f6246b60af62.jpg.png",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/png",
            "comment_count": "0"
        },
        {
            "ID": "189",
            "post_author": "1",
            "post_date": "2017-3-19 11:11:15",
            "post_date_gmt": "2017-3-19 03:11:15",
            "post_content": "一般的logistics回归过程并不复杂，特别是在理解了梯度下降之后，梯度下降法可以参考我之前的文章，<a href=\"http://ganjiacheng.cn/blog/?p=148\">点击这里查看</a>\r\n\r\n大致讲一下理解：<!--more-->\r\n\r\n大致还是通过梯度下降把需要拟合的直线的前面的系数渐渐靠近，比如用ax+by+c=0，这条直线来进行二分类，a，b，c三个系数就是下面代码中的数组weight，每次迭代改变的就是weight。然后误差是通过把每组训练的数进行sigmoid函数  <img class=\"alignnone size-full wp-image-188\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/0df3d7ca7bcb0a4659502a5f6f63f6246b60af62.jpg.png\" alt=\"\" width=\"99\" height=\"35\" />，在与之前分好的类（这里是txt文件里的-1和1）进行求差就是每次的误差值。具体代码里还有解释。\r\n\r\n\"testSet.txt\"是《机器学习实战》里的一个例子的文件，这里引用一下，下载地址在<a href=\"http://pan.baidu.com/s/1pLLMJdp\">http://pan.baidu.com/s/1pLLMJdp</a>\r\n\r\n这个例子很考验矩阵运算，建议回顾一下线性代数哦！\r\n<pre>#python2.7\r\n#引入必要文件\r\nimport matplotlib.pyplot as plt\r\nimport numpy as np\r\n#打开文件\r\nf=open(\"testSet.txt\")\r\ngdatax=[]\r\ngdatay=[]\r\nrdatax=[]\r\nrdatay=[]\r\nlabel=[]\r\ndata=[]\r\n#读取文件\r\nfor i in f.readlines():\r\n    #strip()是除去开头空格，split()是以空格为间断，变成数组。\r\n    linearr=i.strip().split()\r\n    #读取坐标，这里补1.0是为了使数组长度变成3，便于之后矩阵运算\r\n    data.append([1.0,float(linearr[0]),float(linearr[1])])\r\n    #读取分类\r\n    label.append(int(linearr[2]))\r\n    #为了展示点的分布，分开读取不同类的点\r\n    if int(linearr[2])==1:\r\n        gdatax.append(linearr[0])\r\n        gdatay.append(linearr[1])\r\n    else:\r\n        rdatax.append(linearr[0])\r\n        rdatay.append(linearr[1])\r\n#使list变成numpy里的matrix矩阵\r\ndataMatrix=np.mat(data)\r\n#transpose()是矩阵的转置\r\nlabelMat=np.mat(label).transpose()\r\nm,n=np.shape(dataMatrix)\r\n#梯度下降步长\r\nalpha=0.001\r\n#梯度下降次数\r\nmax=500\r\n#先设定三个系数为1\r\nweights=np.ones((n,1))\r\n#梯度下降主步骤，求sigmoid，和分类对比正确性，在求新的weights\r\nfor k in range(max):\r\n    h=1.0/(1+np.exp(-dataMatrix*weights))\r\n    error=(labelMat-h)\r\n    weights=weights+alpha*dataMatrix.transpose()*error\r\n#创建等差数列\r\nx=np.linspace(-3,3)\r\n#计算y值\r\ny=(-weights[0,0]-weights[1,0]*x)/weights[2,0]\r\n#画图\r\nplt.plot(x,y)\r\nplt.plot(gdatax,gdatay,'ro',c='g')\r\nplt.plot(rdatax,rdatay,'ro',c='r')\r\nplt.show()</pre>\r\n效果展示：<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/QQ截图20170319012731.jpg\"><img class=\"alignnone wp-image-180 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/QQ截图20170319012731-300x240.jpg\" alt=\"\" width=\"300\" height=\"240\" /></a>\r\n\r\n总的来说还可以。梯度下降那块可以优化成随机梯度下降，可以进行更少的迭代获得同等的效果。\r\n\r\n&nbsp;",
            "post_title": "logistics回归做二分类---学习篇",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "152-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-19 11:11:15",
            "post_modified_gmt": "2017-3-19 03:11:15",
            "post_content_filtered": "",
            "post_parent": "152",
            "guid": "http://ganjiacheng.cn/blog/?p=189",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "191",
            "post_author": "1",
            "post_date": "2017-3-19 16:35:42",
            "post_date_gmt": "2017-3-19 08:35:42",
            "post_content": "php也可以通过soap（一种基于xml的协议）和webservice进行数据交互。\r\n\r\n这里通过两种方法来讲解，一个是php的SoapClient对象，另一个是php的curl。\r\n\r\n<!--more-->\r\n\r\n第一种：先要做一件事就是在php.ini中把soap扩展开了。\r\n<pre>extension=php_soap.dll</pre>\r\n然后进行php代码的编写。\r\n<pre>$client = new SoapClient(\"http://***.******.com/services/AcceptedBusiness?wsdl\");</pre>\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "php中实现Soap调用的两种方法",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "150-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-19 16:35:42",
            "post_modified_gmt": "2017-3-19 08:35:42",
            "post_content_filtered": "",
            "post_parent": "150",
            "guid": "http://ganjiacheng.cn/blog/?p=191",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "192",
            "post_author": "1",
            "post_date": "2017-3-19 17:15:07",
            "post_date_gmt": "2017-3-19 09:15:07",
            "post_content": "php也可以通过soap（一种基于xml的协议）和webservice进行数据交互。\r\n\r\n这里通过两种方法来讲解，一个是php的SoapClient对象，另一个是php的curl。\r\n\r\n<!--more-->\r\n\r\n第一种：先要做一件事就是在php.ini中把soap扩展开了。\r\n<pre>extension=php_soap.dll</pre>\r\n然后进行php代码的编写，这里直接讲解带有header验证的soap。没有header验证的话就不需要加设置header那几行。先查看所需的xml，这里用soap12举个栗子。\r\n<pre>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;soap12:Envelope \r\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \r\n  xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \r\n  xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\"&gt;\r\n  &lt;soap12:Header&gt;\r\n    &lt;HeaderName xxx=\"url\"&gt;\r\n      &lt;username&gt;<span class=\"value\">int</span>&lt;/username&gt;\r\n      &lt;password&gt;<span class=\"value\">string</span>&lt;/password&gt;\r\n    &lt;/HeaderName&gt;\r\n  &lt;/soap12:Header&gt;\r\n  &lt;soap12:Body&gt;\r\n    &lt;FuncName xxx=\"url\"&gt;\r\n       &lt;neededData&gt;data&lt;/neededData&gt;\r\n    &lt;/FuncName&gt;\r\n  &lt;/soap12:Body&gt;\r\n&lt;/soap12:Envelope&gt;</pre>\r\n<pre>&lt;?php\r\n//wsdl地址\r\n$url=\"wsdl地址\";\r\n//出现类似于<span class=\"pln\">SOAP</span><span class=\"pun\">-</span><span class=\"pln\">ERROR</span><span class=\"pun\">:</span> <span class=\"typ\">Parsing</span><span class=\"pln\"> WSDL</span><span class=\"pun\">:</span> <span class=\"typ\">Couldn</span><span class=\"str\">'t load from的错误时加上下面这行</span>\r\nlibxml_disable_entity_loader(false);\r\n//调用SoapClient对象\r\n$client=new SoapClient($url);\r\n//查看里面的函数数组\r\nprint_r($client-&gt;__getFunctions());\r\n//构造header\r\n$header = new SoapHeader('上面xml里的url','HeaderName',array('username'=&gt;xxx,'password'=&gt;xxx),true);\r\n//设置header\r\n$client-&gt;__setSoapHeaders($header);\r\n//调用FuncName并传入数据\r\n$yue = $client-&gt;FuncName(array('neededData'=&gt;xxx));</pre>\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "php中实现Soap调用的两种方法",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "150-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-19 17:15:07",
            "post_modified_gmt": "2017-3-19 09:15:07",
            "post_content_filtered": "",
            "post_parent": "150",
            "guid": "http://ganjiacheng.cn/blog/?p=192",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "195",
            "post_author": "1",
            "post_date": "2017-3-19 22:59:24",
            "post_date_gmt": "2017-3-19 14:59:24",
            "post_content": "php也可以通过soap（一种基于xml的协议）和webservice进行数据交互。\r\n\r\n这里通过两种方法来讲解，一个是php的SoapClient对象，另一个是php的curl。\r\n\r\n<!--more-->\r\n\r\n第一种：先要做一件事就是在php.ini中把soap扩展开了。\r\n<pre>extension=php_soap.dll</pre>\r\n然后进行php代码的编写，这里直接讲解带有header验证的soap。没有header验证的话就不需要加设置header那几行。先查看所需的xml，这里用soap12举个栗子，关注下面xml中header和body部分。\r\n<pre>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;soap12:Envelope \r\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \r\n  xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \r\n  xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\"&gt;\r\n  &lt;soap12:Header&gt;\r\n    &lt;HeaderName xxx=\"url\"&gt;\r\n      &lt;username&gt;<span class=\"value\">int</span>&lt;/username&gt;\r\n      &lt;password&gt;<span class=\"value\">string</span>&lt;/password&gt;\r\n    &lt;/HeaderName&gt;\r\n  &lt;/soap12:Header&gt;\r\n  &lt;soap12:Body&gt;\r\n    &lt;FuncName xxx=\"url\"&gt;\r\n       &lt;neededData&gt;data&lt;/neededData&gt;\r\n    &lt;/FuncName&gt;\r\n  &lt;/soap12:Body&gt;\r\n&lt;/soap12:Envelope&gt;</pre>\r\n<pre>&lt;?php\r\n//wsdl地址\r\n$url=\"wsdl地址\";\r\n//出现类似于<span class=\"pln\">SOAP</span><span class=\"pun\">-</span><span class=\"pln\">ERROR</span><span class=\"pun\">:</span> <span class=\"typ\">Parsing</span><span class=\"pln\"> WSDL</span><span class=\"pun\">:</span> <span class=\"typ\">Couldn</span><span class=\"str\">'t load from的错误时加上下面这行</span>\r\nlibxml_disable_entity_loader(false);\r\n//调用SoapClient对象\r\n$client=new SoapClient($url);\r\n//查看里面的函数数组\r\nprint_r($client-&gt;__getFunctions());\r\n//构造header\r\n$header = new SoapHeader('上面xml里的url','HeaderName',array('username'=&gt;xxx,'password'=&gt;xxx),true);\r\n//设置header\r\n$client-&gt;__setSoapHeaders($header);\r\n//调用FuncName并传入数据\r\n$return = $client-&gt;FuncName(array('neededData'=&gt;xxx));\r\nprint_r($return);</pre>\r\n第二种：用php的curl获取数据，之后解析xml，具体来看代码吧\r\n<pre></pre>\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "php实现Soap调用的两种方法",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "150-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-19 22:59:24",
            "post_modified_gmt": "2017-3-19 14:59:24",
            "post_content_filtered": "",
            "post_parent": "150",
            "guid": "http://ganjiacheng.cn/blog/?p=195",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "196",
            "post_author": "1",
            "post_date": "2017-3-19 23:27:38",
            "post_date_gmt": "2017-3-19 15:27:38",
            "post_content": "php也可以通过soap（一种基于xml的协议）和webservice进行数据交互。\r\n\r\n这里通过两种方法来讲解，一个是php的SoapClient对象，另一个是php的curl。\r\n\r\n<!--more-->\r\n\r\n第一种：先要做一件事就是在php.ini中把soap扩展开了。\r\n<pre>extension=php_soap.dll</pre>\r\n然后进行php代码的编写，这里直接讲解带有header验证的soap。没有header验证的话就不需要加设置header那几行。先查看所需的xml，这里用soap12举个栗子，关注下面xml中header和body部分。\r\n<pre>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;soap12:Envelope \r\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \r\n  xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \r\n  xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\"&gt;\r\n  &lt;soap12:Header&gt;\r\n    &lt;HeaderName xxx=\"url\"&gt;\r\n      &lt;username&gt;<span class=\"value\">int</span>&lt;/username&gt;\r\n      &lt;password&gt;<span class=\"value\">string</span>&lt;/password&gt;\r\n    &lt;/HeaderName&gt;\r\n  &lt;/soap12:Header&gt;\r\n  &lt;soap12:Body&gt;\r\n    &lt;FuncName xxx=\"url\"&gt;\r\n       &lt;neededData&gt;data&lt;/neededData&gt;\r\n    &lt;/FuncName&gt;\r\n  &lt;/soap12:Body&gt;\r\n&lt;/soap12:Envelope&gt;</pre>\r\n<pre>&lt;?php\r\n//wsdl地址\r\n$url=\"wsdl地址\";\r\n//出现类似于<span class=\"pln\">SOAP</span><span class=\"pun\">-</span><span class=\"pln\">ERROR</span><span class=\"pun\">:</span> <span class=\"typ\">Parsing</span><span class=\"pln\"> WSDL</span><span class=\"pun\">:</span> <span class=\"typ\">Couldn</span><span class=\"str\">'t load from的错误时加上下面这行</span>\r\nlibxml_disable_entity_loader(false);\r\n//调用SoapClient对象\r\n$client=new SoapClient($url);\r\n//查看里面的函数数组\r\nprint_r($client-&gt;__getFunctions());\r\n//构造header\r\n$header = new SoapHeader('上面xml里的url','HeaderName',array('username'=&gt;xxx,'password'=&gt;xxx),true);\r\n//设置header\r\n$client-&gt;__setSoapHeaders($header);\r\n//调用FuncName并传入数据\r\n$return = $client-&gt;FuncName(array('neededData'=&gt;xxx));\r\nprint_r($return);</pre>\r\n第二种：用php的curl获取数据，之后解析xml，具体来看代码吧\r\n<pre>&lt;?php\r\n//用curl带着post包和header去获取数据\r\nfunction getData($soap_request){\r\n      //构造头信息，和第一种方法的header不一样，具体查看webservice说明。\r\n      $header = array(\r\n          \"Content-type: application/soap+xml; charset=utf-8\",\r\n          \"Host: xxx.xxx.xxx.xxx\",\r\n          \"Content-length: \".strlen($soap_request),\r\n        );\r\n      $soap_do = curl_init();\r\n      curl_setopt($soap_do, CURLOPT_URL, \"wsdl地址\");\r\n      curl_setopt($soap_do, CURLOPT_RETURNTRANSFER, true );\r\n      curl_setopt($soap_do, CURLOPT_POST,           true );\r\n      curl_setopt($soap_do, CURLOPT_POSTFIELDS,     $soap_request);\r\n      curl_setopt($soap_do, CURLOPT_HTTPHEADER,     $header);\r\n      $data = curl_exec($soap_do);\r\n      return $data;\r\n}\r\n//处理得到的xml数据\r\nfunction handData($result,$parentNode,$childNode){\r\n      $xml=simplexml_load_string($result);\r\n      $result = $xml-&gt;children('http://www.w3.org/2003/05/soap-envelope')\r\n        -&gt;children('url')\r\n        -&gt;$parentNode\r\n        -&gt;$childNode;\r\n      return $result;\r\n}\r\n//使用方法\r\n//下面是上面xml的字符形式，将需要传入的数据直接写成标签到xml字符里\r\n$soap_request = \"&lt;?xml version......\";\r\n$return = $this-&gt;getData($soap_request);\r\n//后面两个参数为返回xml的body内的两个标签名\r\n$result = $this-&gt;handData($return,FuncName,returnData);</pre>\r\n总结：一般来说会选择上一种，也可以先根据自己的情况来选择一种理解。毕竟具体问题具体分析，这边不能做到全部问题都概括，所以有多个解法总比唯一解好！\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "php实现Soap调用的两种方法",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "150-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-19 23:27:38",
            "post_modified_gmt": "2017-3-19 15:27:38",
            "post_content_filtered": "",
            "post_parent": "150",
            "guid": "http://ganjiacheng.cn/blog/?p=196",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "197",
            "post_author": "1",
            "post_date": "2017-3-20 18:46:59",
            "post_date_gmt": "2017-3-20 10:46:59",
            "post_content": "前端起家，而最终还是没留在这块‘宝地’，虽然火，但也不和大波人抢饭吃啦！！\r\n\r\n记载回忆篇教程---'老年人'的理解（这里不讲教程，而是整个的学习过程）<!--more-->\r\n\r\n一款好的文本编辑器是必须先入手的，sublime是我一直在用且功能强大的文本编辑器，软件自寻，装好之后装一些插件,在工具栏Preference-&gt;Browse Packdges先安装包，之后Preference-&gt;Packdge Control-&gt;Install Packdges，搜Emmet，先下这个吧，其他看需求。（之下还有讲sublime的）\r\n\r\n然后开始前端的部分啦！！（不理解的名词自行谷歌哦）先纠正一下外来人对于做网页的理解，可能认为网页只是图片和文字的拼接，这种理解很片面。那你的登陆信息呢？那在网页某宝怎么实现支付呢？用户在访问互联网的时候，很多是通过浏览器，而最开始的前端就是写网页用户直接看到的用到的部分。然后你得收集数据，和后端交互数据，把数据可视化，数据安全等等。甚至前端写的不好，黑客可以通过入侵网页和服务器然后用户访问了网址之后就入侵了他的电脑。当然正常也没这么吓人，但也要防患于未然。\r\n\r\n前端最初始的部分便是html，css，js。什么其他库啊，框架啊，预处理器啊都最终会回到这三个。因为浏览器就认识这三个咯！！关于前端的亲戚------浏览器还有一些有趣的历史故事，大家可以自行发掘。\r\n\r\nhtml是使用标签来组成网页内能看到的内容。有html，head，body，div，p，h1，a，img，span，input，button，form等等标签，常用的就没几个，知道每个标签的代表的意思就行。这里算是刚刚开始，所以推荐的教程是w3school。\r\n\r\ncss是网页中的用来定位，美化的html内容的。这部分和审美设计就相关啦，不过前端基础的一些也得会写。包括布局，居中，字体，盒子模型等等。一般写在head里的style标签内，用选择器来选择html元素，其内写css代码改进网页。很多情况我们会引入外部css文件，写在head的link标签里。\r\n\r\n之后可以写一个简单页面咯，sublime里新建文件保存为xxx.html。输入html:5+tab就会生成一个html的一般模板。在其内继续补充内容。这部分需要大量的练习来熟悉和巩固使用html和css。然后，直到展示类页面基本成型。这里补充写的时候很重要的一点就是理解html块级元素和行内元素，css的定位方法。然后在写的时候进行合理的布局，而不是所有不按自己想法占位的元素，都进行浮动和绝对定位。这对于网页在其他不同大小的屏上效果展示很重要。\r\n\r\n这里先不介绍js，先来尝试一下bootstrap这个奇妙的框架。前面写网页的经历应该会让你发现直接写一个看得过去的页面是一件略复杂的事情，然后前人为了造福后人就帮你把很多展示层面的css和js写好了，你直接引用就行。先找到bootstrap3中文官网的起步部分，在页面头部引入bootstrap的那几个文件。之后按照后面的全局css样式和组件来尝试写页面的每一部分，写起来便轻松愉快啦！！bootstrap更强的是他是移动设备优先，这个之后在述。\r\n\r\n前面部分貌似都感觉不到自己在编程，更像是美工，然后js就来啦，js在网页里充当给网页增加动态的角色。他可以改变html和css的内容，做各种特效，处理提交的数据等等。写js就完完全全有写编程语言的感觉啦，当然这也注定了它将会是前端最难的一部分。\r\n\r\n写js先从基本语法开始，如果接触过c一类的语言，应该很快上手，没接触过也不要紧，基础的语法并不难，很快就能搞定。js可以写在head里也可以在body最下方，大部分情况建议写在body最下方，因为同步的代码从上往下执行，这样就可以先展示html，也就是页面反应变快一些。这部分虽然简单，但在写复杂网页程序的时候往往错误就出在不经意的语法错误。细节决定成败，简单也要严谨。\r\n\r\n上面是js作为一门语言的语法，然后作为网页里的一部分，它还能操作dom，也就是改变html和css。先通过选择器获取dom节点，之后进行操作。当然也可以直接创建dom，网页里的它可以说无所不能。react框架就是用编译成js的jsx包揽了全部页面。\r\n\r\n这里插入一个前端开发者必备功能，这里以chrome为例，那就是会用chrome的开发者工具。我们通过打开浏览器然后按f12或者右键审查元素打开，我习惯会把网页在左边，开发者工具在右边，可以按开发者工具右上角切换。前面js的基本语法里有个console.log便是在开发者工具里的console选项里输出内容，这里可以输出一些数组，对象等等alert不能输出的内容，当然也可以在这里直接像命令行一样输入js进行调试。在elements选项里是所有html内容，network里是所有加载的资源以及获取方式，加载时间等等有用信息，这里还能看到网页header，cookie等的信息，分析别人网页的时候很有用哦。中间那一块是css部分，可以直接在这里写css，然后就能看到效果啦，这里比较强大的两个一个是写一个color:#000;点击彩色小方块，然后会有出现一个颜色板和拾色器。另一个是在写css3动画的时候，写一个速度曲线，点击小方块，会出现一个可调整二次贝塞尔曲线的速度曲线改变面板。css右边还有一个盒子模型，必要时还是挺有用的。\r\n\r\n至此你应该已经得会写轮播图，瀑布流，分页等等网页特效，甚至于写个简单的贪吃蛇，扫雷游戏。当然这里的逻辑还是需要挺多的，想想挺简单，用原生js写起来自然会感觉到吃力。除非之前进行过编程或者算法训练，不然很容易绕在里面，感觉不上不下。之前我自己的感受就是无数自己想想的小demo死在了我代码写到一半的时候。然后会感觉很吃力，如瓶颈一般。现在想想，与其纠结于此，不如去追求更广的天空。\r\n\r\n所以继续来学习jquery，虽然都说用这个的都是老年人，但这些话都是已经把这个库用烂了的人说的。对于一个新手，学jquery也是很重要的一环，这个部分，你会体验到快速开发的乐趣。jquery相当于帮你封装了很多又难理解又难写的原生js，然后你可以直接调用它设定的更简便的形式来写js。在html文件里引入jquery文件，一般推荐min的那个，就可以直接按jquery的语法写啦。开始的话jquery写起来速度可以达到js的好几倍，立刻爱上jquery!!如果用jquery来重写上面那些网页特效，可能会轻松很多。当然网上jquery插件和特效也数不胜数，随便上某度搜就行。前期还是建议自己先造造轮子。\r\n\r\n这里插一个提醒，之后讲的很多东西要在服务器运行，ajax也是。所以先配置一下服务器的环境。windows下建议wamp，linux下建议<a href=\"https://lnmp.org/\">lnmp</a>。都是集成安装环境，安装完就可以直接用。然后windows用浏览器访问localhost打开www文件目录，Linux用浏览器访问公网ip会打开wwwroot文件下default文件下index.html文件。这样就可以继续进行下去啦，之后尽量把文件放服务器。如果想要了解服务器知识的话就走向了后端了哦，但前端也可以稍微了解。\r\n\r\n然后讲一个js里神奇的东西，为什么放在jquery下面呢，因为从jquery的语法来理解他会变得简单易行，他就是ajax。它是一种对js来说跨时代的技术。如果直接用原生来实现当然也可以，但对于菜鸟时候的我晦涩难懂。所以当我看到jquery实现的ajax，jquery好感++；ajax相当于可以在页面不跳转的情况下直接与后台进行交流。看似简单，但却实用，几乎每个页面都或多或少有ajax的身影，特别是对于前后端数据交流频繁的页面。\r\n\r\n通过ajax，再来理解这里面的要用到的其他几个东西。一个是json，它是一种数据格式，常常用于前后端数据交流。因为这种数据很轻便，前后端解析json也很简单。出现json之前很多用的是xml，相比于json，xml解析起来很复杂，现在也少用，但也可以了解。另一个是异步和回调。自行搜异步和同步区别哦，ajax默认是异步的，也就是执行ajax时不会停在这里等数据回来，而是发出了一个ajax执行的指令，然后浏览器就继续扫描执行下面的代码啦，至于ajax，浏览器不去管他什么时候执行完，因为他执行完可以调用一个函数来告诉浏览器执行完了，那个函数就是回调函数。这个弄明白对于以后写node.js很重要。\r\n\r\n最近h5这个名词总是很火，那现在就来讲讲html5和css3，html5和css3都是在原来的基础上增加了许多内容。目前主流的浏览器基本也都支持了大部分特性，所以可以放心大胆的写，不放心就看看手册，到这里你应该是查手册和看文档的时候，而不是又看之前看过的教程，那太慢啦。h5新增了很多带语义的标签，js里也开放了很多接口。可以试试，有个大致的了解。css3也一样，增加的一些css属性，有些还非常强大，比如做个3d什么的，也可以实现。这个名词虽然被炒的很高大上的样子，但其实质还是搭在原来的基础知识之上。在基础很牢固之后再去看这些就感到得心应手咯!\r\n\r\n看到这的你已经大致走完了入门之路，接下来的进阶才是真正考验人的时候。都说前端入门很容易，确实，自从有了jquery，js的dom操作变得容易，而jquery可能只要半天时间就能学会。而jquery现在的弊端也很明显就是dom操作太多了，导致网页反应慢。大部分的页面用前面的知识都可以做出成果，但要效果最好肯定远不止这些。接下来，就将进入进阶的时候！！！",
            "post_title": "前端回忆录---上篇",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "83-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-20 18:46:59",
            "post_modified_gmt": "2017-3-20 10:46:59",
            "post_content_filtered": "",
            "post_parent": "83",
            "guid": "http://ganjiacheng.cn/blog/?p=197",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "198",
            "post_author": "1",
            "post_date": "2017-3-20 20:14:50",
            "post_date_gmt": "2017-3-20 12:14:50",
            "post_content": "下篇开始，对于我自己来说也就是在这边徘徊，暂时也并不能完全很好的掌握这些或深入的或新颖的知识，因为前端新东西出现的实在太快了。这里的我只大致做一个引导，如有错误请及时指出。毕竟修行在个人，还是得靠自己摸索。<!--more-->\r\n\r\n我们还是再来学习js---js进阶。这里目前必读的一本书---泽卡斯的《js高级编程指南》，如果能啃下这本书，必定精进一大步。当初我也是略读读了几次，能感受到他的强大和对我的影响力。js进阶，一方面补充了很多之前遗漏的细节，另一方面代码风格，代码思想会发生变化。学学面向对象，函数式编程，异步编程等等编程思想，对于编程的效率甚至体验都会改变。当然你会发现当初的编一行试一行的考虑肯定不是最好的，应该要站在高处看问题。如果是一个成千上万行代码的任务时，需要有总体设计的眼光。推荐在看看《js设计模式》这本。这部分时间将会非常长，当然也有无数人或停滞不前，或退而自满。任何一个行业在深入之后都不会很简单，如果你是被那三个月培训出来10k以上工资吸引进入这个行业，那就得做好打持久战的准备了，不牢固的基础在这时候会被放大。所以建议还是慢慢来，急功近利很难成为真正nb的人。\r\n\r\n以前你是一个引用库的人，现在，你已经有能力根据自己的需求自己写一个合适自己的库或者改写别人的库，而不是之前想也不想先引用进来。虽然不提倡自己造轮子，但懂得造轮子的原理还是需要的。比如jquery这个库，没必要再去复制实现一个，但同时可以看看他实现的方法------jquery源码。从中可以学到一些设计的思想，这才是轮子的原理。\r\n\r\n在讲点js里有趣的东西，毕竟编程很无聊，但要从无聊中寻找美的东西。canvas指的是画布，在h5里也是一个新标签，他意味着你可以用js代码在一张白纸上创作，你可以从无到有创作一个张画出来，或者把一张画复制到canvas画板上操作，之后再用js加点动作，简单的动画或者游戏就可以实现，是不是很有趣呢!更强大的是这个标签加上webgl技术就可以实现3d的创作，甚至于创作3d的游戏。\r\n\r\n接下来开始讲一个新东西---css预处理器sass。你可以编写sass语言，然后编译成可用的css。开始你可能会奇怪写css明明好好地为什么要多一步编译呢，因为css作为一门编程语言没有很好的嵌套，继承，函数等等，这就造成写css的时候写了很多重复的代码。sass就很好的解决了这个问题，它的具体安装和语法可以看<a href=\"http://sass.bootcss.com/docs/guide/\">文档</a>，它完全支持css3，所以它也可以帮你解决那些需要分浏览器写的代码。\r\n\r\njs也有一些需要编译才能用的扩展语言，比如TypeScript，CoffeeScript，jsx等。他们对于js的语法做了一些改变使得一些人更容易上手，同时也对js一些危险的语法做了保护或更改。付出的代价就是每次更改需要多一步编译的工作。\r\n\r\n突然会发现需要编译的地方好多，同时为了网页反应速度更快还得把加载的资源比如图片之类打包起来，js文件也可以进行压缩使文件更小。这些工作都是不复杂的机械式操作，所以我们可以找一个工具把这些直接完成，那就是现在讲的<a href=\"http://www.gulpjs.com.cn/docs/getting-started/\">gulp</a>。在用他之前你先得配置好node环境----node.js和npm(node.js的包管理器)。之后再按照gulp的教程来进行操作，这里有一份gulp完成上面那些操作的模板，<a href=\"http://pan.baidu.com/s/1i4CpzgD\">点这里下载</a>，下载完后用npm安装对应的模块，然后在代码里设置正确的路径，之后就可以运行了。他会监听指定的文件，保存之后就会自动触发，自动化了很多麻烦机械的步骤。\r\n\r\n对于node.js，前端可以了解，亦可以有研究，毕竟是用js来写。他可以用来写后台，虽说这统一了前后端语言，让前端也可以写后台，但在目前前后端分离的情况下实现的情形并不多。我当初用他的socket模块写过一个简单的聊天室，关于socket，可以了解一下tcp/ip，三次握手等。同时，推荐一本书<a href=\"http://www.kancloud.cn/kancloud/tealeaf-http/43837\">《http下午茶》</a>，他是讲http协议和一些请求之类，对于写后台还是很有帮助的。反正一般后台该有的node,js也可以实现，但技术肯定是有好有坏，在准备用node写后台之前最好了解一下node的优势和劣势。\r\n\r\n再来讲最火的三个框架---angular2，react，vue。我的感觉是angular2企业内部用的较多，react可以用来搭建大型应用，vue适合轻量级的网页。就试过react，给我的感觉就是初始上手有点困难，可能不是很适合刚入门的开发者，稍微有点经验之后再来学习框架可能会有更深刻的理解。当初是被react的全家桶吸引，react和react native，毕竟也是google工程师开发出来的。前端组件化也是在react出现之后才有的名词，很多人认为这也是前端发展的大方向，或许是吧，个人有个人的理解。总有对比这三个框架的文章见到，一般就按需求来做选择，也没必要在一个框架上吊死。虽然可能学一个框架的成本并不低，但在用熟了之后会发现再也离不开，因为多多少少会被这个框架设计的思想所束缚。个人感觉框架是用来帮助人的，而不是束缚，在学框架的同时不要忘记语言本身。\r\n\r\n学到这儿，我相信您已经可以自己完成之后的路了，后面更加深入的可以是前端的深入研究，可以是编程提高的算法与数据结构，也可以是服务器端的复杂逻辑与数据交互等等，后面的路更是丰富多彩，希望本篇前端之路只是一个开端。",
            "post_title": "前端回忆录---下篇",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e5%89%8d%e7%ab%af%e5%9b%9e%e5%bf%86%e5%bd%95-%e4%b8%8b%e7%af%87",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-8-2 20:28:03",
            "post_modified_gmt": "2017-8-2 12:28:03",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=198",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "199",
            "post_author": "1",
            "post_date": "2017-3-20 19:04:57",
            "post_date_gmt": "2017-3-20 11:04:57",
            "post_content": "下篇开始，对于我自己来说也就是在这边徘徊，并不能很好的掌握这些或深入的或新颖的知识。这里的我只大致做一个引导，如有错误请及时指出。毕竟修行在个人，还是得靠自己摸索。\r\n\r\n我们还是再来学习js---js进阶。这里目前必读的一本书---泽卡斯的《js高级编程指南》，如果能啃下这本书，必定精进一大步。当初我也是略读读了几次，能感受到他的强大和对我的影响力。js进阶，一方面补充了很多之前遗漏的细节，另一方面代码风格，代码思想会发生变化。学学面向对象，函数式编程，异步编程等等编程思想，对于编程的效率甚至体验都会改变。当然你会发现当初的编一行试一行的考虑肯定不是最好的，应该要站在高处看问题。如果是一个成千上万行代码的任务时，需要有总体设计的眼光。推荐在看看《js设计模式》这本。这部分时间将会非常长，当然也有无数人或停滞不前，或退而自满。任何一个行业在深入之后都不会很简单，如果你是被那三个月培训出来10k以上工资吸引进入这个行业，那就得做好打持久战的准备了，不牢固的基础在这时候会被放大。所以建议还是慢慢来，急功近利很难成为真正nb的人。\r\n\r\n以前你是一个引用库的人，现在，你已经有能力根据自己的需求自己写一个合适自己的库或者改写别人的库，而不是之前想也不想先引用进来。虽然不提倡自己造轮子，但懂得造轮子的原理还是需要的。比如jquery这个库，没必要再去复制实现一个，但同时可以看看他实现的方法------jquery源码。从中可以学到一些设计的思想，这才是轮子的原理。\r\n\r\n接下来开始讲一个新东西---css预处理器sass。你可以编写sass语言，然后编译成可用的css。开始你可能会奇怪写css明明好好地为什么要多一步编译呢，因为css作为一门编程语言没有很好的嵌套，继承，函数等等，这就造成写css的时候写了很多重复的代码。sass就很好的解决了这个问题，它的具体安装和语法可以看<a href=\"http://sass.bootcss.com/docs/guide/\">文档</a>，它完全支持css3，所以它也可以帮你解决那些需要分浏览器写的代码。\r\n\r\n未完待续……",
            "post_title": "前端回忆录---下篇",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "198-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-20 19:04:57",
            "post_modified_gmt": "2017-3-20 11:04:57",
            "post_content_filtered": "",
            "post_parent": "198",
            "guid": "http://ganjiacheng.cn/blog/?p=199",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "200",
            "post_author": "1",
            "post_date": "2017-3-20 20:14:45",
            "post_date_gmt": "2017-3-20 12:14:45",
            "post_content": "下篇开始，对于我自己来说也就是在这边徘徊，并不能很好的掌握这些或深入的或新颖的知识。这里的我只大致做一个引导，如有错误请及时指出。毕竟修行在个人，还是得靠自己摸索。<!--more-->\r\n\r\n我们还是再来学习js---js进阶。这里目前必读的一本书---泽卡斯的《js高级编程指南》，如果能啃下这本书，必定精进一大步。当初我也是略读读了几次，能感受到他的强大和对我的影响力。js进阶，一方面补充了很多之前遗漏的细节，另一方面代码风格，代码思想会发生变化。学学面向对象，函数式编程，异步编程等等编程思想，对于编程的效率甚至体验都会改变。当然你会发现当初的编一行试一行的考虑肯定不是最好的，应该要站在高处看问题。如果是一个成千上万行代码的任务时，需要有总体设计的眼光。推荐在看看《js设计模式》这本。这部分时间将会非常长，当然也有无数人或停滞不前，或退而自满。任何一个行业在深入之后都不会很简单，如果你是被那三个月培训出来10k以上工资吸引进入这个行业，那就得做好打持久战的准备了，不牢固的基础在这时候会被放大。所以建议还是慢慢来，急功近利很难成为真正nb的人。\r\n\r\n以前你是一个引用库的人，现在，你已经有能力根据自己的需求自己写一个合适自己的库或者改写别人的库，而不是之前想也不想先引用进来。虽然不提倡自己造轮子，但懂得造轮子的原理还是需要的。比如jquery这个库，没必要再去复制实现一个，但同时可以看看他实现的方法------jquery源码。从中可以学到一些设计的思想，这才是轮子的原理。\r\n\r\n接下来开始讲一个新东西---css预处理器sass。你可以编写sass语言，然后编译成可用的css。开始你可能会奇怪写css明明好好地为什么要多一步编译呢，因为css作为一门编程语言没有很好的嵌套，继承，函数等等，这就造成写css的时候写了很多重复的代码。sass就很好的解决了这个问题，它的具体安装和语法可以看<a href=\"http://sass.bootcss.com/docs/guide/\">文档</a>，它完全支持css3，所以它也可以帮你解决那些需要分浏览器写的代码。\r\n\r\njs也有一些需要编译才能用的扩展语言，比如TypeScript，CoffeeScript，jsx等。他们对于js的语法做了一些改变使得一些人更容易上手，同时也对js一些危险的语法做了保护或更改。付出的代价就是每次更改需要多一步编译的工作。\r\n\r\n突然会发现需要编译的地方好多，同时为了网页反应速度更快还得把加载的资源比如图片之类打包起来，js文件也可以进行压缩使文件更小。这些工作都是不复杂的机械式操作，所以我们可以找一个工具把这些直接完成，那就是现在讲的<a href=\"http://www.gulpjs.com.cn/docs/getting-started/\">gulp</a>。在用他之前你先得配置好node环境----node.js和npm(node.js的包管理器)。之后再按照gulp的教程来进行操作，这里有一份gulp完成上面那些操作的模板，<a href=\"http://pan.baidu.com/s/1i4CpzgD\">点这里下载</a>，下载完后用npm安装对应的模块，然后在代码里设置正确的路径，之后就可以运行了。他会监听指定的文件，保存之后就会自动触发，自动化了很多麻烦机械的步骤。\r\n\r\n对于node.js，前端可以了解，亦可以有研究，毕竟是用js来写。他可以用来写后台，虽说这统一了前后端语言，让前端也可以写后台，但在目前前后端分离的情况下实现的情形并不多。我当初用他的socket模块写过一个简单的聊天室，关于socket，可以了解一下tcp/ip，三次握手等。同时，推荐一本书<a href=\"http://www.kancloud.cn/kancloud/tealeaf-http/43837\">《http下午茶》</a>，他是讲http协议和一些请求之类，对于写后台还是很有帮助的。反正一般后台该有的node,js也可以实现，但技术肯定是有好有坏，在准备用node写后台之前最好了解一下node的优势和劣势。\r\n\r\n再来讲最火的三个框架---angular2，react，vue。我的感觉是angular2企业内部用的较多，react可以用来搭建大型应用，vue适合轻量级的网页。就试过react，给我的感觉就是初始上手有点困难，可能不是很适合刚入门的开发者，稍微有点经验之后再来学习框架可能会有更深刻的理解。当初是被react的全家桶吸引，react和react native，毕竟也是google工程师开发出来的。前端组件化也是在react出现之后才有的名词，很多人认为这也是前端发展的大方向，或许是吧，个人有个人的理解。总有对比这三个框架的文章见到，一般就按需求来做选择，也没必要在一个框架上吊死。虽然可能学一个框架的成本并不低，但在用熟了之后会发现再也离不开，因为多多少少会被这个框架设计的思想所束缚。\r\n\r\n未完待续……",
            "post_title": "前端回忆录---下篇",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "198-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-20 20:14:45",
            "post_modified_gmt": "2017-3-20 12:14:45",
            "post_content_filtered": "",
            "post_parent": "198",
            "guid": "http://ganjiacheng.cn/blog/?p=200",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "203",
            "post_author": "1",
            "post_date": "2017-3-22 16:12:00",
            "post_date_gmt": "2017-3-22 08:12:00",
            "post_content": "下篇开始，对于我自己来说也就是在这边徘徊，并不能很好的掌握这些或深入的或新颖的知识。这里的我只大致做一个引导，如有错误请及时指出。毕竟修行在个人，还是得靠自己摸索。<!--more-->\n\n我们还是再来学习js---js进阶。这里目前必读的一本书---泽卡斯的《js高级编程指南》，如果能啃下这本书，必定精进一大步。当初我也是略读读了几次，能感受到他的强大和对我的影响力。js进阶，一方面补充了很多之前遗漏的细节，另一方面代码风格，代码思想会发生变化。学学面向对象，函数式编程，异步编程等等编程思想，对于编程的效率甚至体验都会改变。当然你会发现当初的编一行试一行的考虑肯定不是最好的，应该要站在高处看问题。如果是一个成千上万行代码的任务时，需要有总体设计的眼光。推荐在看看《js设计模式》这本。这部分时间将会非常长，当然也有无数人或停滞不前，或退而自满。任何一个行业在深入之后都不会很简单，如果你是被那三个月培训出来10k以上工资吸引进入这个行业，那就得做好打持久战的准备了，不牢固的基础在这时候会被放大。所以建议还是慢慢来，急功近利很难成为真正nb的人。\n\n以前你是一个引用库的人，现在，你已经有能力根据自己的需求自己写一个合适自己的库或者改写别人的库，而不是之前想也不想先引用进来。虽然不提倡自己造轮子，但懂得造轮子的原理还是需要的。比如jquery这个库，没必要再去复制实现一个，但同时可以看看他实现的方法------jquery源码。从中可以学到一些设计的思想，这才是轮子的原理。\n\n在讲点js里有趣的东西，毕竟编程很无聊，但要从无聊中寻找美的东西。canvas指的是画布，在h5里也是一个新标签，他意味着你可以用js代码在一张白纸上创作，你可以从无到有创作一个张画出来，或者把一张画复制到canvas画板上操作，之后再用js加点动作，简单的动画或者游戏就可以实现，是不是很有趣呢!更强大的是这个标签加上webgl技术就可以实现3d的创作，甚至于创作3d的游戏。\n\n接下来开始讲一个新东西---css预处理器sass。你可以编写sass语言，然后编译成可用的css。开始你可能会奇怪写css明明好好地为什么要多一步编译呢，因为css作为一门编程语言没有很好的嵌套，继承，函数等等，这就造成写css的时候写了很多重复的代码。sass就很好的解决了这个问题，它的具体安装和语法可以看<a href=\"http://sass.bootcss.com/docs/guide/\">文档</a>，它完全支持css3，所以它也可以帮你解决那些需要分浏览器写的代码。\n\njs也有一些需要编译才能用的扩展语言，比如TypeScript，CoffeeScript，jsx等。他们对于js的语法做了一些改变使得一些人更容易上手，同时也对js一些危险的语法做了保护或更改。付出的代价就是每次更改需要多一步编译的工作。\n\n突然会发现需要编译的地方好多，同时为了网页反应速度更快还得把加载的资源比如图片之类打包起来，js文件也可以进行压缩使文件更小。这些工作都是不复杂的机械式操作，所以我们可以找一个工具把这些直接完成，那就是现在讲的<a href=\"http://www.gulpjs.com.cn/docs/getting-started/\">gulp</a>。在用他之前你先得配置好node环境----node.js和npm(node.js的包管理器)。之后再按照gulp的教程来进行操作，这里有一份gulp完成上面那些操作的模板，<a href=\"http://pan.baidu.com/s/1i4CpzgD\">点这里下载</a>，下载完后用npm安装对应的模块，然后在代码里设置正确的路径，之后就可以运行了。他会监听指定的文件，保存之后就会自动触发，自动化了很多麻烦机械的步骤。\n\n对于node.js，前端可以了解，亦可以有研究，毕竟是用js来写。他可以用来写后台，虽说这统一了前后端语言，让前端也可以写后台，但在目前前后端分离的情况下实现的情形并不多。我当初用他的socket模块写过一个简单的聊天室，关于socket，可以了解一下tcp/ip，三次握手等。同时，推荐一本书<a href=\"http://www.kancloud.cn/kancloud/tealeaf-http/43837\">《http下午茶》</a>，他是讲http协议和一些请求之类，对于写后台还是很有帮助的。反正一般后台该有的node,js也可以实现，但技术肯定是有好有坏，在准备用node写后台之前最好了解一下node的优势和劣势。\n\n再来讲最火的三个框架---angular2，react，vue。我的感觉是angular2企业内部用的较多，react可以用来搭建大型应用，vue适合轻量级的网页。就试过react，给我的感觉就是初始上手有点困难，可能不是很适合刚入门的开发者，稍微有点经验之后再来学习框架可能会有更深刻的理解。当初是被react的全家桶吸引，react和react native，毕竟也是google工程师开发出来的。前端组件化也是在react出现之后才有的名词，很多人认为这也是前端发展的大方向，或许是吧，个人有个人的理解。总有对比这三个框架的文章见到，一般就按需求来做选择，也没必要在一个框架上吊死。虽然可能学一个框架的成本并不低，但在用熟了之后会发现再也离不开，因为多多少少会被这个框架设计的思想所束缚。个人感觉框架是用来帮助人的，而不是束缚，在学框架的同时不要忘记语言本身。\n\n学到这儿，我相信您已经可以自己完成之后的路了，后面更加深入的可以是前面jiang gu可以是编程提高的算法与数据结构，也可以是服务器端的复杂逻辑与数据交互等等，后面的路更是丰富多彩，本篇前端之路只是一个开端。",
            "post_title": "前端回忆录---下篇",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "198-autosave-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-22 16:12:00",
            "post_modified_gmt": "2017-3-22 08:12:00",
            "post_content_filtered": "",
            "post_parent": "198",
            "guid": "http://ganjiacheng.cn/blog/?p=203",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "204",
            "post_author": "1",
            "post_date": "2017-3-22 16:13:40",
            "post_date_gmt": "2017-3-22 08:13:40",
            "post_content": "下篇开始，对于我自己来说也就是在这边徘徊，并不能很好的掌握这些或深入的或新颖的知识。这里的我只大致做一个引导，如有错误请及时指出。毕竟修行在个人，还是得靠自己摸索。<!--more-->\r\n\r\n我们还是再来学习js---js进阶。这里目前必读的一本书---泽卡斯的《js高级编程指南》，如果能啃下这本书，必定精进一大步。当初我也是略读读了几次，能感受到他的强大和对我的影响力。js进阶，一方面补充了很多之前遗漏的细节，另一方面代码风格，代码思想会发生变化。学学面向对象，函数式编程，异步编程等等编程思想，对于编程的效率甚至体验都会改变。当然你会发现当初的编一行试一行的考虑肯定不是最好的，应该要站在高处看问题。如果是一个成千上万行代码的任务时，需要有总体设计的眼光。推荐在看看《js设计模式》这本。这部分时间将会非常长，当然也有无数人或停滞不前，或退而自满。任何一个行业在深入之后都不会很简单，如果你是被那三个月培训出来10k以上工资吸引进入这个行业，那就得做好打持久战的准备了，不牢固的基础在这时候会被放大。所以建议还是慢慢来，急功近利很难成为真正nb的人。\r\n\r\n以前你是一个引用库的人，现在，你已经有能力根据自己的需求自己写一个合适自己的库或者改写别人的库，而不是之前想也不想先引用进来。虽然不提倡自己造轮子，但懂得造轮子的原理还是需要的。比如jquery这个库，没必要再去复制实现一个，但同时可以看看他实现的方法------jquery源码。从中可以学到一些设计的思想，这才是轮子的原理。\r\n\r\n在讲点js里有趣的东西，毕竟编程很无聊，但要从无聊中寻找美的东西。canvas指的是画布，在h5里也是一个新标签，他意味着你可以用js代码在一张白纸上创作，你可以从无到有创作一个张画出来，或者把一张画复制到canvas画板上操作，之后再用js加点动作，简单的动画或者游戏就可以实现，是不是很有趣呢!更强大的是这个标签加上webgl技术就可以实现3d的创作，甚至于创作3d的游戏。\r\n\r\n接下来开始讲一个新东西---css预处理器sass。你可以编写sass语言，然后编译成可用的css。开始你可能会奇怪写css明明好好地为什么要多一步编译呢，因为css作为一门编程语言没有很好的嵌套，继承，函数等等，这就造成写css的时候写了很多重复的代码。sass就很好的解决了这个问题，它的具体安装和语法可以看<a href=\"http://sass.bootcss.com/docs/guide/\">文档</a>，它完全支持css3，所以它也可以帮你解决那些需要分浏览器写的代码。\r\n\r\njs也有一些需要编译才能用的扩展语言，比如TypeScript，CoffeeScript，jsx等。他们对于js的语法做了一些改变使得一些人更容易上手，同时也对js一些危险的语法做了保护或更改。付出的代价就是每次更改需要多一步编译的工作。\r\n\r\n突然会发现需要编译的地方好多，同时为了网页反应速度更快还得把加载的资源比如图片之类打包起来，js文件也可以进行压缩使文件更小。这些工作都是不复杂的机械式操作，所以我们可以找一个工具把这些直接完成，那就是现在讲的<a href=\"http://www.gulpjs.com.cn/docs/getting-started/\">gulp</a>。在用他之前你先得配置好node环境----node.js和npm(node.js的包管理器)。之后再按照gulp的教程来进行操作，这里有一份gulp完成上面那些操作的模板，<a href=\"http://pan.baidu.com/s/1i4CpzgD\">点这里下载</a>，下载完后用npm安装对应的模块，然后在代码里设置正确的路径，之后就可以运行了。他会监听指定的文件，保存之后就会自动触发，自动化了很多麻烦机械的步骤。\r\n\r\n对于node.js，前端可以了解，亦可以有研究，毕竟是用js来写。他可以用来写后台，虽说这统一了前后端语言，让前端也可以写后台，但在目前前后端分离的情况下实现的情形并不多。我当初用他的socket模块写过一个简单的聊天室，关于socket，可以了解一下tcp/ip，三次握手等。同时，推荐一本书<a href=\"http://www.kancloud.cn/kancloud/tealeaf-http/43837\">《http下午茶》</a>，他是讲http协议和一些请求之类，对于写后台还是很有帮助的。反正一般后台该有的node,js也可以实现，但技术肯定是有好有坏，在准备用node写后台之前最好了解一下node的优势和劣势。\r\n\r\n再来讲最火的三个框架---angular2，react，vue。我的感觉是angular2企业内部用的较多，react可以用来搭建大型应用，vue适合轻量级的网页。就试过react，给我的感觉就是初始上手有点困难，可能不是很适合刚入门的开发者，稍微有点经验之后再来学习框架可能会有更深刻的理解。当初是被react的全家桶吸引，react和react native，毕竟也是google工程师开发出来的。前端组件化也是在react出现之后才有的名词，很多人认为这也是前端发展的大方向，或许是吧，个人有个人的理解。总有对比这三个框架的文章见到，一般就按需求来做选择，也没必要在一个框架上吊死。虽然可能学一个框架的成本并不低，但在用熟了之后会发现再也离不开，因为多多少少会被这个框架设计的思想所束缚。个人感觉框架是用来帮助人的，而不是束缚，在学框架的同时不要忘记语言本身。\r\n\r\n学到这儿，我相信您已经可以自己完成之后的路了，后面更加深入的可以是前端的深入研究，可以是编程提高的算法与数据结构，也可以是服务器端的复杂逻辑与数据交互等等，后面的路更是丰富多彩，希望本篇前端之路只是一个开端。",
            "post_title": "前端回忆录---下篇",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "198-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-22 16:13:40",
            "post_modified_gmt": "2017-3-22 08:13:40",
            "post_content_filtered": "",
            "post_parent": "198",
            "guid": "http://ganjiacheng.cn/blog/?p=204",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "208",
            "post_author": "1",
            "post_date": "2017-3-24 16:05:57",
            "post_date_gmt": "2017-3-24 08:05:57",
            "post_content": "下篇开始，对于我自己来说也就是在这边徘徊，暂时也并不能完全很好的掌握这些或深入的或新颖的知识，因为前端新东西出现的实在太快了。这里的我只大致做一个引导，如有错误请及时指出。毕竟修行在个人，还是得靠自己摸索。<!--more-->\r\n\r\n我们还是再来学习js---js进阶。这里目前必读的一本书---泽卡斯的《js高级编程指南》，如果能啃下这本书，必定精进一大步。当初我也是略读读了几次，能感受到他的强大和对我的影响力。js进阶，一方面补充了很多之前遗漏的细节，另一方面代码风格，代码思想会发生变化。学学面向对象，函数式编程，异步编程等等编程思想，对于编程的效率甚至体验都会改变。当然你会发现当初的编一行试一行的考虑肯定不是最好的，应该要站在高处看问题。如果是一个成千上万行代码的任务时，需要有总体设计的眼光。推荐在看看《js设计模式》这本。这部分时间将会非常长，当然也有无数人或停滞不前，或退而自满。任何一个行业在深入之后都不会很简单，如果你是被那三个月培训出来10k以上工资吸引进入这个行业，那就得做好打持久战的准备了，不牢固的基础在这时候会被放大。所以建议还是慢慢来，急功近利很难成为真正nb的人。\r\n\r\n以前你是一个引用库的人，现在，你已经有能力根据自己的需求自己写一个合适自己的库或者改写别人的库，而不是之前想也不想先引用进来。虽然不提倡自己造轮子，但懂得造轮子的原理还是需要的。比如jquery这个库，没必要再去复制实现一个，但同时可以看看他实现的方法------jquery源码。从中可以学到一些设计的思想，这才是轮子的原理。\r\n\r\n在讲点js里有趣的东西，毕竟编程很无聊，但要从无聊中寻找美的东西。canvas指的是画布，在h5里也是一个新标签，他意味着你可以用js代码在一张白纸上创作，你可以从无到有创作一个张画出来，或者把一张画复制到canvas画板上操作，之后再用js加点动作，简单的动画或者游戏就可以实现，是不是很有趣呢!更强大的是这个标签加上webgl技术就可以实现3d的创作，甚至于创作3d的游戏。\r\n\r\n接下来开始讲一个新东西---css预处理器sass。你可以编写sass语言，然后编译成可用的css。开始你可能会奇怪写css明明好好地为什么要多一步编译呢，因为css作为一门编程语言没有很好的嵌套，继承，函数等等，这就造成写css的时候写了很多重复的代码。sass就很好的解决了这个问题，它的具体安装和语法可以看<a href=\"http://sass.bootcss.com/docs/guide/\">文档</a>，它完全支持css3，所以它也可以帮你解决那些需要分浏览器写的代码。\r\n\r\njs也有一些需要编译才能用的扩展语言，比如TypeScript，CoffeeScript，jsx等。他们对于js的语法做了一些改变使得一些人更容易上手，同时也对js一些危险的语法做了保护或更改。付出的代价就是每次更改需要多一步编译的工作。\r\n\r\n突然会发现需要编译的地方好多，同时为了网页反应速度更快还得把加载的资源比如图片之类打包起来，js文件也可以进行压缩使文件更小。这些工作都是不复杂的机械式操作，所以我们可以找一个工具把这些直接完成，那就是现在讲的<a href=\"http://www.gulpjs.com.cn/docs/getting-started/\">gulp</a>。在用他之前你先得配置好node环境----node.js和npm(node.js的包管理器)。之后再按照gulp的教程来进行操作，这里有一份gulp完成上面那些操作的模板，<a href=\"http://pan.baidu.com/s/1i4CpzgD\">点这里下载</a>，下载完后用npm安装对应的模块，然后在代码里设置正确的路径，之后就可以运行了。他会监听指定的文件，保存之后就会自动触发，自动化了很多麻烦机械的步骤。\r\n\r\n对于node.js，前端可以了解，亦可以有研究，毕竟是用js来写。他可以用来写后台，虽说这统一了前后端语言，让前端也可以写后台，但在目前前后端分离的情况下实现的情形并不多。我当初用他的socket模块写过一个简单的聊天室，关于socket，可以了解一下tcp/ip，三次握手等。同时，推荐一本书<a href=\"http://www.kancloud.cn/kancloud/tealeaf-http/43837\">《http下午茶》</a>，他是讲http协议和一些请求之类，对于写后台还是很有帮助的。反正一般后台该有的node,js也可以实现，但技术肯定是有好有坏，在准备用node写后台之前最好了解一下node的优势和劣势。\r\n\r\n再来讲最火的三个框架---angular2，react，vue。我的感觉是angular2企业内部用的较多，react可以用来搭建大型应用，vue适合轻量级的网页。就试过react，给我的感觉就是初始上手有点困难，可能不是很适合刚入门的开发者，稍微有点经验之后再来学习框架可能会有更深刻的理解。当初是被react的全家桶吸引，react和react native，毕竟也是google工程师开发出来的。前端组件化也是在react出现之后才有的名词，很多人认为这也是前端发展的大方向，或许是吧，个人有个人的理解。总有对比这三个框架的文章见到，一般就按需求来做选择，也没必要在一个框架上吊死。虽然可能学一个框架的成本并不低，但在用熟了之后会发现再也离不开，因为多多少少会被这个框架设计的思想所束缚。个人感觉框架是用来帮助人的，而不是束缚，在学框架的同时不要忘记语言本身。\r\n\r\n学到这儿，我相信您已经可以自己完成之后的路了，后面更加深入的可以是前端的深入研究，可以是编程提高的算法与数据结构，也可以是服务器端的复杂逻辑与数据交互等等，后面的路更是丰富多彩，希望本篇前端之路只是一个开端。",
            "post_title": "前端回忆录---下篇",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "198-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-24 16:05:57",
            "post_modified_gmt": "2017-3-24 08:05:57",
            "post_content_filtered": "",
            "post_parent": "198",
            "guid": "http://ganjiacheng.cn/blog/?p=208",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "210",
            "post_author": "1",
            "post_date": "2017-3-26 15:09:15",
            "post_date_gmt": "2017-3-26 07:09:15",
            "post_content": "也不知道为什么要叫许愿墙，在<a href=\"http://www.qdfuns.com/\">前端网</a>看到许多人实现了，便来实现一个自己的版本，顺便许个愿！\r\n\r\n这里需要先看一下下面这张图，对于后面的理解很有帮助。<!--more-->\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/2014091409260873.png\"><img class=\"alignnone wp-image-213 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/2014091409260873-300x159.png\" alt=\"\" width=\"300\" height=\"159\" /></a>\r\n\r\n使用方法：下面代码复制到一个html文件里，之后浏览器打开就行。\r\n\r\n具体实现在代码中注释。\r\n<pre>&lt;!doctype html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;&lt;/title&gt;\r\n    &lt;style type=\"text/css\"&gt;\r\n    /*去除默认内外边距*/\r\n    * {\r\n        margin: 0px;\r\n        padding: 0px;\r\n    }\r\n    /*背景颜色*/\r\n    html,\r\n    body {\r\n        height: 100%;\r\n        background: -webkit-linear-gradient(top, rgb(203, 235, 219) 0%, rgb(55, 148, 192) 120%);\r\n        background: -moz-linear-gradient(top, rgb(203, 235, 219) 0%, rgb(55, 148, 192) 120%);\r\n    }\r\n    /*画边框曲线*/\r\n    .item {\r\n        width: 200px;\r\n        height: 200px;\r\n        -webkit-border-bottom-left-radius: 20px 500px;\r\n        -webkit-border-bottom-right-radius: 500px 30px;\r\n        -webkit-border-top-right-radius: 5px 100px;\r\n        -moz-border-bottom-left-radius: 20px 500px;\r\n        -moz-border-bottom-right-radius: 500px 30px;\r\n        -moz-border-top-right-radius: 5px 100px;\r\n        box-shadow: 0 2px 10px 1px rgba(0, 0, 0, 0.2);\r\n        -webkit-box-shadow: 0 2px 10px 1px rgba(0, 0, 0, 0.2);\r\n        -moz-box-shadow: 0 2px 10px 1px rgba(0, 0, 0, 0.2);\r\n        position: absolute;\r\n        background: #FF9FDC;\r\n        cursor: move;\r\n        z-index: 2;\r\n    }\r\n    /*文字位置和属性*/\r\n    .txt {\r\n        margin-left: 25%;\r\n        margin-top: 10%;\r\n        color: white;\r\n        font-size: 20px;\r\n        font-family: \"YouYuan\";\r\n    }\r\n    /*设置关闭链接位置*/\r\n    .close {\r\n        position: absolute;\r\n        bottom: 10%;\r\n        right: 10%;\r\n    }\r\n    &lt;/style&gt;\r\n&lt;/head&gt;\r\n\r\n&lt;body&gt;\r\n    &lt;div class=\"item\" id=\"box\"&gt;\r\n        &lt;div class=\"txt\"&gt;2017许愿墙&lt;/div&gt;\r\n        &lt;div class=\"txt\"&gt;This is the best future&lt;/div&gt;\r\n        &lt;div class=\"close\"&gt;&lt;a href=\"#\" id=\"close\"&gt;关闭&lt;/a&gt;&lt;/div&gt;\r\n    &lt;/div&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n    //理解执行函数\r\n    (function() {\r\n        //初始化变量，获取元素，设置动作\r\n        var state = 0,\r\n            X = 0,\r\n            Y = 0;\r\n        var box = document.getElementById(\"box\");\r\n        var txt = document.getElementsByClassName(\"txt\");\r\n        var close = document.getElementById(\"close\");\r\n        box.onmouseup = up;\r\n        box.onmousedown = down;\r\n        box.onmousemove = move;\r\n        close.onmousedown = closeBox;\r\n        //点击关闭链接box添加隐藏属性\r\n        function closeBox(e) {\r\n            e.preventDefault();\r\n            document.getElementById(\"box\").style.display = \"none\";\r\n        }\r\n        //鼠标按下设置开关state为1，在加上box距离左上的距离\r\n        function down(e) {\r\n            e.preventDefault();\r\n            state = 1;\r\n            X += e.offsetX;\r\n            Y += e.offsetY;\r\n        }\r\n        //因为点击文字也同时点击了外面的box，所以需要在点到文字的div时进行处理，把XY赋值为文字div距离外部div的左上距离\r\n        //这里需要理解一下浏览器点击子div的时候相当于也点击了父div，而且事件是从内而外触发的\r\n        for (var i in txt) {\r\n            txt[i].onmousedown = function(e) {\r\n                X = this.offsetLeft;\r\n                Y = this.offsetTop;\r\n            }\r\n        }\r\n        //松开鼠标，恢复初始值\r\n        function up() {\r\n            X = 0;\r\n            Y = 0;\r\n            state = 0;\r\n        }\r\n        //移动时，判断鼠标是否为按下。实现拖动效果\r\n        function move(e) {\r\n            if (state) {\r\n                document.getElementById(\"box\").style.top = e.clientY - Y + \"px\";\r\n                document.getElementById(\"box\").style.left = e.clientX - X + \"px\";\r\n            }\r\n        }\r\n    }());\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n效果预览：<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/QQ截图20170326144840.jpg\"><img class=\"alignnone wp-image-212 size-full\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/QQ截图20170326144840.jpg\" alt=\"\" width=\"285\" height=\"265\" /></a>\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "许愿墙效果（仿）",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e8%ae%b8%e6%84%bf%e5%a2%99%e6%95%88%e6%9e%9c%ef%bc%88%e4%bb%bf%ef%bc%89",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-8-2 20:27:59",
            "post_modified_gmt": "2017-8-2 12:27:59",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=210",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "211",
            "post_author": "1",
            "post_date": "2017-3-26 00:41:03",
            "post_date_gmt": "2017-3-25 16:41:03",
            "post_content": "我也不知道为什么要叫许愿墙，在<a href=\"http://www.qdfuns.com/\">前端网</a>看到许多人实现了，便来实现一个自己的版本，顺便许个愿！\r\n\r\n&nbsp;",
            "post_title": "许愿墙效果（仿）",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "210-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-26 00:41:03",
            "post_modified_gmt": "2017-3-25 16:41:03",
            "post_content_filtered": "",
            "post_parent": "210",
            "guid": "http://ganjiacheng.cn/blog/?p=211",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "212",
            "post_author": "1",
            "post_date": "2017-3-26 14:49:23",
            "post_date_gmt": "2017-3-26 06:49:23",
            "post_content": "",
            "post_title": "QQ截图20170326144840",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "qq%e6%88%aa%e5%9b%be20170326144840",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-26 14:49:23",
            "post_modified_gmt": "2017-3-26 06:49:23",
            "post_content_filtered": "",
            "post_parent": "210",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/QQ截图20170326144840.jpg",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/jpeg",
            "comment_count": "0"
        },
        {
            "ID": "213",
            "post_author": "1",
            "post_date": "2017-3-26 14:59:33",
            "post_date_gmt": "2017-3-26 06:59:33",
            "post_content": "",
            "post_title": "2014091409260873",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "2014091409260873",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-26 14:59:33",
            "post_modified_gmt": "2017-3-26 06:59:33",
            "post_content_filtered": "",
            "post_parent": "210",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/2014091409260873.png",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/png",
            "comment_count": "0"
        },
        {
            "ID": "214",
            "post_author": "1",
            "post_date": "2017-3-26 15:09:15",
            "post_date_gmt": "2017-3-26 07:09:15",
            "post_content": "也不知道为什么要叫许愿墙，在<a href=\"http://www.qdfuns.com/\">前端网</a>看到许多人实现了，便来实现一个自己的版本，顺便许个愿！\r\n\r\n这里需要先看一下下面这张图，对于后面的理解很有帮助。\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/2014091409260873.png\"><img class=\"alignnone wp-image-213 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/2014091409260873-300x159.png\" alt=\"\" width=\"300\" height=\"159\" /></a>\r\n\r\n使用方法：下面代码复制到一个html文件里，之后浏览器打开就行。\r\n\r\n具体实现在代码中注释。\r\n<pre>&lt;!doctype html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;&lt;/title&gt;\r\n    &lt;style type=\"text/css\"&gt;\r\n    /*去除默认内外边距*/\r\n    * {\r\n        margin: 0px;\r\n        padding: 0px;\r\n    }\r\n    /*背景颜色*/\r\n    html,\r\n    body {\r\n        height: 100%;\r\n        background: -webkit-linear-gradient(top, rgb(203, 235, 219) 0%, rgb(55, 148, 192) 120%);\r\n        background: -moz-linear-gradient(top, rgb(203, 235, 219) 0%, rgb(55, 148, 192) 120%);\r\n    }\r\n    /*画边框曲线*/\r\n    .item {\r\n        width: 200px;\r\n        height: 200px;\r\n        -webkit-border-bottom-left-radius: 20px 500px;\r\n        -webkit-border-bottom-right-radius: 500px 30px;\r\n        -webkit-border-top-right-radius: 5px 100px;\r\n        -moz-border-bottom-left-radius: 20px 500px;\r\n        -moz-border-bottom-right-radius: 500px 30px;\r\n        -moz-border-top-right-radius: 5px 100px;\r\n        box-shadow: 0 2px 10px 1px rgba(0, 0, 0, 0.2);\r\n        -webkit-box-shadow: 0 2px 10px 1px rgba(0, 0, 0, 0.2);\r\n        -moz-box-shadow: 0 2px 10px 1px rgba(0, 0, 0, 0.2);\r\n        position: absolute;\r\n        background: #FF9FDC;\r\n        cursor: move;\r\n        z-index: 2;\r\n    }\r\n    /*文字位置和属性*/\r\n    .txt {\r\n        margin-left: 25%;\r\n        margin-top: 10%;\r\n        color: white;\r\n        font-size: 20px;\r\n        font-family: \"YouYuan\";\r\n    }\r\n    /*设置关闭链接位置*/\r\n    .close {\r\n        position: absolute;\r\n        bottom: 10%;\r\n        right: 10%;\r\n    }\r\n    &lt;/style&gt;\r\n&lt;/head&gt;\r\n\r\n&lt;body&gt;\r\n    &lt;div class=\"item\" id=\"box\"&gt;\r\n        &lt;div class=\"txt\"&gt;2017许愿墙&lt;/div&gt;\r\n        &lt;div class=\"txt\"&gt;This is the best future&lt;/div&gt;\r\n        &lt;div class=\"close\"&gt;&lt;a href=\"#\" id=\"close\"&gt;关闭&lt;/a&gt;&lt;/div&gt;\r\n    &lt;/div&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n    //理解执行函数\r\n    (function() {\r\n        //初始化变量，获取元素，设置动作\r\n        var state = 0,\r\n            X = 0,\r\n            Y = 0;\r\n        var box = document.getElementById(\"box\");\r\n        var txt = document.getElementsByClassName(\"txt\");\r\n        var close = document.getElementById(\"close\");\r\n        box.onmouseup = up;\r\n        box.onmousedown = down;\r\n        box.onmousemove = move;\r\n        close.onmousedown = closeBox;\r\n        //点击关闭链接box添加隐藏属性\r\n        function closeBox(e) {\r\n            e.preventDefault();\r\n            document.getElementById(\"box\").style.display = \"none\";\r\n        }\r\n        //鼠标按下设置开关state为1，在加上box距离左上的距离\r\n        function down(e) {\r\n            e.preventDefault();\r\n            state = 1;\r\n            X += e.offsetX;\r\n            Y += e.offsetY;\r\n        }\r\n        //因为点击文字也同时点击了外面的box，所以需要在点到文字的div时进行处理，把XY赋值为文字div距离外部div的左上距离\r\n        //这里需要理解一下浏览器点击子div的时候相当于也点击了父div，而且事件是从内而外触发的\r\n        for (var i in txt) {\r\n            txt[i].onmousedown = function(e) {\r\n                X = this.offsetLeft;\r\n                Y = this.offsetTop;\r\n            }\r\n        }\r\n        //松开鼠标，恢复初始值\r\n        function up() {\r\n            X = 0;\r\n            Y = 0;\r\n            state = 0;\r\n        }\r\n        //移动时，判断鼠标是否为按下。实现拖动效果\r\n        function move(e) {\r\n            if (state) {\r\n                document.getElementById(\"box\").style.top = e.clientY - Y + \"px\";\r\n                document.getElementById(\"box\").style.left = e.clientX - X + \"px\";\r\n            }\r\n        }\r\n    }());\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n效果预览：<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/QQ截图20170326144840.jpg\"><img class=\"alignnone wp-image-212 size-full\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/QQ截图20170326144840.jpg\" alt=\"\" width=\"285\" height=\"265\" /></a>\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "许愿墙效果（仿）",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "210-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-26 15:09:15",
            "post_modified_gmt": "2017-3-26 07:09:15",
            "post_content_filtered": "",
            "post_parent": "210",
            "guid": "http://ganjiacheng.cn/blog/?p=214",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "215",
            "post_author": "1",
            "post_date": "2017-3-26 15:09:43",
            "post_date_gmt": "2017-3-26 07:09:43",
            "post_content": "也不知道为什么要叫许愿墙，在<a href=\"http://www.qdfuns.com/\">前端网</a>看到许多人实现了，便来实现一个自己的版本，顺便许个愿！\r\n\r\n这里需要先看一下下面这张图，对于后面的理解很有帮助。\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/2014091409260873.png\"><img class=\"alignnone wp-image-213 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/2014091409260873-300x159.png\" alt=\"\" width=\"300\" height=\"159\" /></a><!--more-->\r\n\r\n使用方法：下面代码复制到一个html文件里，之后浏览器打开就行。\r\n\r\n具体实现在代码中注释。\r\n<pre>&lt;!doctype html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;&lt;/title&gt;\r\n    &lt;style type=\"text/css\"&gt;\r\n    /*去除默认内外边距*/\r\n    * {\r\n        margin: 0px;\r\n        padding: 0px;\r\n    }\r\n    /*背景颜色*/\r\n    html,\r\n    body {\r\n        height: 100%;\r\n        background: -webkit-linear-gradient(top, rgb(203, 235, 219) 0%, rgb(55, 148, 192) 120%);\r\n        background: -moz-linear-gradient(top, rgb(203, 235, 219) 0%, rgb(55, 148, 192) 120%);\r\n    }\r\n    /*画边框曲线*/\r\n    .item {\r\n        width: 200px;\r\n        height: 200px;\r\n        -webkit-border-bottom-left-radius: 20px 500px;\r\n        -webkit-border-bottom-right-radius: 500px 30px;\r\n        -webkit-border-top-right-radius: 5px 100px;\r\n        -moz-border-bottom-left-radius: 20px 500px;\r\n        -moz-border-bottom-right-radius: 500px 30px;\r\n        -moz-border-top-right-radius: 5px 100px;\r\n        box-shadow: 0 2px 10px 1px rgba(0, 0, 0, 0.2);\r\n        -webkit-box-shadow: 0 2px 10px 1px rgba(0, 0, 0, 0.2);\r\n        -moz-box-shadow: 0 2px 10px 1px rgba(0, 0, 0, 0.2);\r\n        position: absolute;\r\n        background: #FF9FDC;\r\n        cursor: move;\r\n        z-index: 2;\r\n    }\r\n    /*文字位置和属性*/\r\n    .txt {\r\n        margin-left: 25%;\r\n        margin-top: 10%;\r\n        color: white;\r\n        font-size: 20px;\r\n        font-family: \"YouYuan\";\r\n    }\r\n    /*设置关闭链接位置*/\r\n    .close {\r\n        position: absolute;\r\n        bottom: 10%;\r\n        right: 10%;\r\n    }\r\n    &lt;/style&gt;\r\n&lt;/head&gt;\r\n\r\n&lt;body&gt;\r\n    &lt;div class=\"item\" id=\"box\"&gt;\r\n        &lt;div class=\"txt\"&gt;2017许愿墙&lt;/div&gt;\r\n        &lt;div class=\"txt\"&gt;This is the best future&lt;/div&gt;\r\n        &lt;div class=\"close\"&gt;&lt;a href=\"#\" id=\"close\"&gt;关闭&lt;/a&gt;&lt;/div&gt;\r\n    &lt;/div&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n    //理解执行函数\r\n    (function() {\r\n        //初始化变量，获取元素，设置动作\r\n        var state = 0,\r\n            X = 0,\r\n            Y = 0;\r\n        var box = document.getElementById(\"box\");\r\n        var txt = document.getElementsByClassName(\"txt\");\r\n        var close = document.getElementById(\"close\");\r\n        box.onmouseup = up;\r\n        box.onmousedown = down;\r\n        box.onmousemove = move;\r\n        close.onmousedown = closeBox;\r\n        //点击关闭链接box添加隐藏属性\r\n        function closeBox(e) {\r\n            e.preventDefault();\r\n            document.getElementById(\"box\").style.display = \"none\";\r\n        }\r\n        //鼠标按下设置开关state为1，在加上box距离左上的距离\r\n        function down(e) {\r\n            e.preventDefault();\r\n            state = 1;\r\n            X += e.offsetX;\r\n            Y += e.offsetY;\r\n        }\r\n        //因为点击文字也同时点击了外面的box，所以需要在点到文字的div时进行处理，把XY赋值为文字div距离外部div的左上距离\r\n        //这里需要理解一下浏览器点击子div的时候相当于也点击了父div，而且事件是从内而外触发的\r\n        for (var i in txt) {\r\n            txt[i].onmousedown = function(e) {\r\n                X = this.offsetLeft;\r\n                Y = this.offsetTop;\r\n            }\r\n        }\r\n        //松开鼠标，恢复初始值\r\n        function up() {\r\n            X = 0;\r\n            Y = 0;\r\n            state = 0;\r\n        }\r\n        //移动时，判断鼠标是否为按下。实现拖动效果\r\n        function move(e) {\r\n            if (state) {\r\n                document.getElementById(\"box\").style.top = e.clientY - Y + \"px\";\r\n                document.getElementById(\"box\").style.left = e.clientX - X + \"px\";\r\n            }\r\n        }\r\n    }());\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n效果预览：<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/QQ截图20170326144840.jpg\"><img class=\"alignnone wp-image-212 size-full\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/QQ截图20170326144840.jpg\" alt=\"\" width=\"285\" height=\"265\" /></a>\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "许愿墙效果（仿）",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "210-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-26 15:09:43",
            "post_modified_gmt": "2017-3-26 07:09:43",
            "post_content_filtered": "",
            "post_parent": "210",
            "guid": "http://ganjiacheng.cn/blog/?p=215",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "216",
            "post_author": "1",
            "post_date": "2017-3-26 15:10:45",
            "post_date_gmt": "2017-3-26 07:10:45",
            "post_content": "也不知道为什么要叫许愿墙，在<a href=\"http://www.qdfuns.com/\">前端网</a>看到许多人实现了，便来实现一个自己的版本，顺便许个愿！\r\n\r\n这里需要先看一下下面这张图，对于后面的理解很有帮助。<!--more-->\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/2014091409260873.png\"><img class=\"alignnone wp-image-213 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/2014091409260873-300x159.png\" alt=\"\" width=\"300\" height=\"159\" /></a>\r\n\r\n使用方法：下面代码复制到一个html文件里，之后浏览器打开就行。\r\n\r\n具体实现在代码中注释。\r\n<pre>&lt;!doctype html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;&lt;/title&gt;\r\n    &lt;style type=\"text/css\"&gt;\r\n    /*去除默认内外边距*/\r\n    * {\r\n        margin: 0px;\r\n        padding: 0px;\r\n    }\r\n    /*背景颜色*/\r\n    html,\r\n    body {\r\n        height: 100%;\r\n        background: -webkit-linear-gradient(top, rgb(203, 235, 219) 0%, rgb(55, 148, 192) 120%);\r\n        background: -moz-linear-gradient(top, rgb(203, 235, 219) 0%, rgb(55, 148, 192) 120%);\r\n    }\r\n    /*画边框曲线*/\r\n    .item {\r\n        width: 200px;\r\n        height: 200px;\r\n        -webkit-border-bottom-left-radius: 20px 500px;\r\n        -webkit-border-bottom-right-radius: 500px 30px;\r\n        -webkit-border-top-right-radius: 5px 100px;\r\n        -moz-border-bottom-left-radius: 20px 500px;\r\n        -moz-border-bottom-right-radius: 500px 30px;\r\n        -moz-border-top-right-radius: 5px 100px;\r\n        box-shadow: 0 2px 10px 1px rgba(0, 0, 0, 0.2);\r\n        -webkit-box-shadow: 0 2px 10px 1px rgba(0, 0, 0, 0.2);\r\n        -moz-box-shadow: 0 2px 10px 1px rgba(0, 0, 0, 0.2);\r\n        position: absolute;\r\n        background: #FF9FDC;\r\n        cursor: move;\r\n        z-index: 2;\r\n    }\r\n    /*文字位置和属性*/\r\n    .txt {\r\n        margin-left: 25%;\r\n        margin-top: 10%;\r\n        color: white;\r\n        font-size: 20px;\r\n        font-family: \"YouYuan\";\r\n    }\r\n    /*设置关闭链接位置*/\r\n    .close {\r\n        position: absolute;\r\n        bottom: 10%;\r\n        right: 10%;\r\n    }\r\n    &lt;/style&gt;\r\n&lt;/head&gt;\r\n\r\n&lt;body&gt;\r\n    &lt;div class=\"item\" id=\"box\"&gt;\r\n        &lt;div class=\"txt\"&gt;2017许愿墙&lt;/div&gt;\r\n        &lt;div class=\"txt\"&gt;This is the best future&lt;/div&gt;\r\n        &lt;div class=\"close\"&gt;&lt;a href=\"#\" id=\"close\"&gt;关闭&lt;/a&gt;&lt;/div&gt;\r\n    &lt;/div&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n    //理解执行函数\r\n    (function() {\r\n        //初始化变量，获取元素，设置动作\r\n        var state = 0,\r\n            X = 0,\r\n            Y = 0;\r\n        var box = document.getElementById(\"box\");\r\n        var txt = document.getElementsByClassName(\"txt\");\r\n        var close = document.getElementById(\"close\");\r\n        box.onmouseup = up;\r\n        box.onmousedown = down;\r\n        box.onmousemove = move;\r\n        close.onmousedown = closeBox;\r\n        //点击关闭链接box添加隐藏属性\r\n        function closeBox(e) {\r\n            e.preventDefault();\r\n            document.getElementById(\"box\").style.display = \"none\";\r\n        }\r\n        //鼠标按下设置开关state为1，在加上box距离左上的距离\r\n        function down(e) {\r\n            e.preventDefault();\r\n            state = 1;\r\n            X += e.offsetX;\r\n            Y += e.offsetY;\r\n        }\r\n        //因为点击文字也同时点击了外面的box，所以需要在点到文字的div时进行处理，把XY赋值为文字div距离外部div的左上距离\r\n        //这里需要理解一下浏览器点击子div的时候相当于也点击了父div，而且事件是从内而外触发的\r\n        for (var i in txt) {\r\n            txt[i].onmousedown = function(e) {\r\n                X = this.offsetLeft;\r\n                Y = this.offsetTop;\r\n            }\r\n        }\r\n        //松开鼠标，恢复初始值\r\n        function up() {\r\n            X = 0;\r\n            Y = 0;\r\n            state = 0;\r\n        }\r\n        //移动时，判断鼠标是否为按下。实现拖动效果\r\n        function move(e) {\r\n            if (state) {\r\n                document.getElementById(\"box\").style.top = e.clientY - Y + \"px\";\r\n                document.getElementById(\"box\").style.left = e.clientX - X + \"px\";\r\n            }\r\n        }\r\n    }());\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n效果预览：<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/QQ截图20170326144840.jpg\"><img class=\"alignnone wp-image-212 size-full\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/03/QQ截图20170326144840.jpg\" alt=\"\" width=\"285\" height=\"265\" /></a>\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "许愿墙效果（仿）",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "210-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-26 15:10:45",
            "post_modified_gmt": "2017-3-26 07:10:45",
            "post_content_filtered": "",
            "post_parent": "210",
            "guid": "http://ganjiacheng.cn/blog/?p=216",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "219",
            "post_author": "1",
            "post_date": "2017-3-30 22:10:50",
            "post_date_gmt": "2017-3-30 14:10:50",
            "post_content": "本来以为配置https应该和配置http是差不多的，没想到还是出了许多问题，分享给大家。\r\n\r\n现在市面有许多免费的ssl证书，可以找一个，本人使用了<a href=\"https://www.qcloud.com/product/ssl\">腾讯云的免费dv证书</a>。<!--more-->\r\n\r\n之后就会得到两个文件，分别为test.com_bundle.crt和test.com.key\r\n\r\n本人配置的环境是在centos，php集成环境lnmp下\r\n\r\n先在服务器找到文件usr/local/nginx/conf/nginx.conf\r\n\r\n之后把上述两个文件放到同一目录下，在原本的server listen 80下面新开一个server listen 443，代码如下\r\n<pre>server {\r\n        listen 443;\r\n        server_name test.com; #填写绑定证书的域名\r\n        ssl on;\r\n        ssl_certificate test.com_bundle.crt;\r\n        ssl_certificate_key test.com.key;\r\n        ssl_session_timeout 5m;\r\n        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #按照这个协议配置\r\n        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;#按照这个套件配置\r\n        ssl_prefer_server_ciphers on;\r\n        location / {\r\n            root   /home/wwwroot/default;\r\n            index  index.html index.htm index.php;\r\n        }\r\n        location ~ [^/]\\.php(/|$)\r\n            {\r\n                #这个root必须加上.\r\n                root   /home/wwwroot/default;\r\n                # comment try_files $uri =404; to enable pathinfo\r\n                try_files $uri =404;\r\n                fastcgi_pass  unix:/tmp/php-cgi.sock;\r\n                fastcgi_index index.php;\r\n                include fastcgi.conf;\r\n                #include pathinfo.conf;\r\n                #开启https\r\n                include fastcgi_params;\r\n                fastcgi_param HTTPS on;\r\n            }\r\n    }</pre>\r\n之后如果想要把http的都转到https去，可以在server listen 80里面location最上面加如下一段\r\n<pre>location / {\r\n                rewrite ^(.*) https://$host$1 permanent;\r\n        }</pre>\r\n之后需要远程连接服务器到命令行输入\r\n<pre>nginx -s reload</pre>\r\n最后打开浏览器访问看看效果",
            "post_title": "nginx+php下配置https",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "nginxphp%e4%b8%8b%e9%85%8d%e7%bd%aehttps",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-8-2 20:27:50",
            "post_modified_gmt": "2017-8-2 12:27:50",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=219",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "220",
            "post_author": "1",
            "post_date": "2017-3-30 20:44:13",
            "post_date_gmt": "2017-3-30 12:44:13",
            "post_content": "本来以为配置https应该和配置http是差不多的，没想到还是出了许多问题，分享给大家。\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "nginx+php下配置https",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "219-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-30 20:44:13",
            "post_modified_gmt": "2017-3-30 12:44:13",
            "post_content_filtered": "",
            "post_parent": "219",
            "guid": "http://ganjiacheng.cn/blog/?p=220",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "221",
            "post_author": "1",
            "post_date": "2017-3-30 20:54:41",
            "post_date_gmt": "2017-3-30 12:54:41",
            "post_content": "本来以为配置https应该和配置http是差不多的，没想到还是出了许多问题，分享给大家。\r\n\r\n现在市面有许多免费的ssl证书，可以找一个，本人使用了<a href=\"https://www.qcloud.com/product/ssl\">腾讯云的免费dv证书</a>。\r\n\r\n之后就会得到两个文件，分别为test.com_bundle.crt和test.com.key\r\n\r\n本人配置的环境是在centos，php集成环境lnmp下\r\n\r\n先在服务器找到文件usr/local/nginx/conf/nginx.conf\r\n\r\n之后把上述两个文件放到同一目录下\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "nginx+php下配置https",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "219-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-30 20:54:41",
            "post_modified_gmt": "2017-3-30 12:54:41",
            "post_content_filtered": "",
            "post_parent": "219",
            "guid": "http://ganjiacheng.cn/blog/?p=221",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "223",
            "post_author": "1",
            "post_date": "2017-3-30 21:54:39",
            "post_date_gmt": "2017-3-30 13:54:39",
            "post_content": "本来以为配置https应该和配置http是差不多的，没想到还是出了许多问题，分享给大家。\r\n\r\n现在市面有许多免费的ssl证书，可以找一个，本人使用了<a href=\"https://www.qcloud.com/product/ssl\">腾讯云的免费dv证书</a>。\r\n\r\n之后就会得到两个文件，分别为test.com_bundle.crt和test.com.key\r\n\r\n本人配置的环境是在centos，php集成环境lnmp下\r\n\r\n先在服务器找到文件usr/local/nginx/conf/nginx.conf\r\n\r\n之后把上述两个文件放到同一目录下，在原本的server listen 80下面新开一个server listen 443，代码如下\r\n<pre>server {\r\n        listen 443;\r\n        server_name test.com; #填写绑定证书的域名\r\n        ssl on;\r\n        ssl_certificate test.com_bundle.crt;\r\n        ssl_certificate_key test.com.key;\r\n        ssl_session_timeout 5m;\r\n        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #按照这个协议配置\r\n        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;#按照这个套件配置\r\n        ssl_prefer_server_ciphers on;\r\n        location / {\r\n            root   /home/wwwroot/default;\r\n            index  index.html index.htm index.php;\r\n        }\r\n        location ~ [^/]\\.php(/|$)\r\n            {\r\n                #这个root必须加上.\r\n                root   /home/wwwroot/default;\r\n                # comment try_files $uri =404; to enable pathinfo\r\n                try_files $uri =404;\r\n                fastcgi_pass  unix:/tmp/php-cgi.sock;\r\n                fastcgi_index index.php;\r\n                include fastcgi.conf;\r\n                #include pathinfo.conf;\r\n                #开启https\r\n                include fastcgi_params;\r\n                fastcgi_param HTTPS on;\r\n            }\r\n    }</pre>\r\n之后如果想要把http的都转到https去，可以在server listen 80里面location最上面加如下一段\r\n<pre>location / {\r\n                rewrite ^(.*) https://$host$1 permanent;\r\n        }</pre>\r\n之后需要远程连接服务器到命令行输入\r\n<pre>nginx -s reload</pre>\r\n再打开浏览器访问看看效果",
            "post_title": "nginx+php下配置https",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "219-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-30 21:54:39",
            "post_modified_gmt": "2017-3-30 13:54:39",
            "post_content_filtered": "",
            "post_parent": "219",
            "guid": "http://ganjiacheng.cn/blog/?p=223",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "224",
            "post_author": "1",
            "post_date": "2017-3-30 22:10:50",
            "post_date_gmt": "2017-3-30 14:10:50",
            "post_content": "本来以为配置https应该和配置http是差不多的，没想到还是出了许多问题，分享给大家。\r\n\r\n现在市面有许多免费的ssl证书，可以找一个，本人使用了<a href=\"https://www.qcloud.com/product/ssl\">腾讯云的免费dv证书</a>。<!--more-->\r\n\r\n之后就会得到两个文件，分别为test.com_bundle.crt和test.com.key\r\n\r\n本人配置的环境是在centos，php集成环境lnmp下\r\n\r\n先在服务器找到文件usr/local/nginx/conf/nginx.conf\r\n\r\n之后把上述两个文件放到同一目录下，在原本的server listen 80下面新开一个server listen 443，代码如下\r\n<pre>server {\r\n        listen 443;\r\n        server_name test.com; #填写绑定证书的域名\r\n        ssl on;\r\n        ssl_certificate test.com_bundle.crt;\r\n        ssl_certificate_key test.com.key;\r\n        ssl_session_timeout 5m;\r\n        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #按照这个协议配置\r\n        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;#按照这个套件配置\r\n        ssl_prefer_server_ciphers on;\r\n        location / {\r\n            root   /home/wwwroot/default;\r\n            index  index.html index.htm index.php;\r\n        }\r\n        location ~ [^/]\\.php(/|$)\r\n            {\r\n                #这个root必须加上.\r\n                root   /home/wwwroot/default;\r\n                # comment try_files $uri =404; to enable pathinfo\r\n                try_files $uri =404;\r\n                fastcgi_pass  unix:/tmp/php-cgi.sock;\r\n                fastcgi_index index.php;\r\n                include fastcgi.conf;\r\n                #include pathinfo.conf;\r\n                #开启https\r\n                include fastcgi_params;\r\n                fastcgi_param HTTPS on;\r\n            }\r\n    }</pre>\r\n之后如果想要把http的都转到https去，可以在server listen 80里面location最上面加如下一段\r\n<pre>location / {\r\n                rewrite ^(.*) https://$host$1 permanent;\r\n        }</pre>\r\n之后需要远程连接服务器到命令行输入\r\n<pre>nginx -s reload</pre>\r\n最后打开浏览器访问看看效果",
            "post_title": "nginx+php下配置https",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "219-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-30 22:10:50",
            "post_modified_gmt": "2017-3-30 14:10:50",
            "post_content_filtered": "",
            "post_parent": "219",
            "guid": "http://ganjiacheng.cn/blog/?p=224",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "226",
            "post_author": "1",
            "post_date": "2017-3-31 00:01:39",
            "post_date_gmt": "2017-3-30 16:01:39",
            "post_content": "这里的需求是用户在某个网页下单之后，需要打印机打出票据。\r\n\r\n实现：用python访问一个网络接口获取需要打印的数据（json格式），之后调用系统win32print的打印接口打印出来。\r\n\r\n时时打印的话下面用轮询并定时sleep实现。<!--more-->\r\n\r\n再用Tkinter写一个桌面程序可以用来提醒并可以使程序长久运行。\r\n\r\n之后再用py2exe把python文件变成一个exe文件方便在后台执行。\r\n<pre>#coding:utf-8\r\n#python2.7\r\n#引入需要的库\r\nfrom tkMessageBox import *\r\nfrom Tkinter import *\r\nimport hashlib\r\nimport urllib2\r\nimport json\r\nimport win32ui  \r\nimport win32print  \r\nimport win32con  \r\nimport time\r\nimport socket\r\n#定义打印机，获取内容，定义样式，打印\r\ndef send_to_printer(title,txt,txt1,txt2,txt3,txt4,txt5): \r\n    hDC = win32ui.CreateDC()  \r\n    hDC.CreatePrinterDC(win32print.GetDefaultPrinter())  \r\n    hDC.StartDoc(title)\r\n    hDC.StartPage()\r\n    hDC.SetMapMode(win32con.MM_TWIPS)\r\n    #定义位置\r\n    ulc_x = 1000  \r\n    lrc_x = 11500  \r\n    lrc_y = -11500 \r\n    ulc_y = -100  \r\n    hDC.DrawText(txt,(ulc_x,ulc_y,lrc_x,lrc_y),win32con.DT_LEFT)\r\n    ulc_x = 100\r\n    ulc_y = -400  \r\n    hDC.DrawText(txt1,(ulc_x,ulc_y,lrc_x,lrc_y),win32con.DT_LEFT) \r\n    ulc_x = 100\r\n    ulc_y = -2300  \r\n    hDC.DrawText(txt1,(ulc_x,ulc_y,lrc_x,lrc_y),win32con.DT_LEFT)\r\n    ulc_x = 150 \r\n    ulc_y = -700  \r\n    hDC.DrawText(txt2,(ulc_x,ulc_y,lrc_x,lrc_y),win32con.DT_LEFT) \r\n    ulc_x = 150 \r\n    ulc_y = -1000  \r\n    hDC.DrawText(txt3,(ulc_x,ulc_y,lrc_x,lrc_y),win32con.DT_LEFT) \r\n    #修改字体大小\r\n    font = win32ui.CreateFont({\r\n        \"name\": \"Lucida Console\",\r\n        \"height\": 400,\r\n        \"weight\": 400,\r\n    })\r\n    hDC.SelectObject(font) \r\n    ulc_x = 150 \r\n    ulc_y = -1400  \r\n    hDC.DrawText(txt4,(ulc_x,ulc_y,lrc_x,lrc_y),win32con.DT_LEFT) \r\n    ulc_x = 150 \r\n    ulc_y = -1800  \r\n    hDC.DrawText(txt5,(ulc_x,ulc_y,lrc_x,lrc_y),win32con.DT_LEFT) \r\n    hDC.EndPage()  \r\n    hDC.EndDoc()\r\n#开一个桌面程序，提醒并在后台运行\r\nroot = Tk()\r\n#设置socket超时时间\r\nsocket.setdefaulttimeout(20)\r\nshowinfo('信息', '打印机已成功运行')\r\nroot.destroy()\r\n#下面轮询调用接口并处理数据，导入打印\r\nwhile 1:\r\n    #捕获所有错误，使中间不会中断\r\n    try:\r\n        #调用接口获取json并处理\r\n        response = urllib2.urlopen('http://test.com') \r\n        ret = response.read()\r\n        #print ret\r\n        res=json.loads(ret)\r\n        #处理数据这部分自定义\r\n        txt=\"1\";txt2=\"2\";txt3=\"3\";txt4=\"4\";txt5=\"5\"\r\n        send_to_printer(\"title\",txt,txt1,txt2,txt3,txt4,txt5)\r\n        response.close()\r\n        #5秒调用一次\r\n        time.sleep(5)\r\n    except Exception,e:  \r\n        #错误处理，可以打印在log上，这里只简单的捕获\r\n        print Exception,\":\",e</pre>\r\n在用py2exe之前还得写另一个setup.py\r\n<pre>from distutils.core import setup\r\nimport py2exe\r\n#filename是上面写的那个python文件的文件名\r\nsetup(windows=[\"filename.py\"])</pre>\r\n把两个文件放在同目录下，用shift+右键，在此处打开命令行，运行\r\n<pre>python setup.py py2exe</pre>\r\n在产生的dist文件夹里有相同文件名的exe文件，可以双击直接执行，会先报一个成功运行，之后就在后台运行。\r\n\r\n因为他会在后台一直运行着，所以关闭的话也得到任务管理器-&gt;进程里找到那个文件名的exe后台进程，把它结束掉就行。",
            "post_title": "python实现简单时时打印桌面程序",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "python%e5%ae%9e%e7%8e%b0%e7%ae%80%e5%8d%95%e6%97%b6%e6%97%b6%e6%89%93%e5%8d%b0%e6%a1%8c%e9%9d%a2%e7%a8%8b%e5%ba%8f",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-8-2 20:27:35",
            "post_modified_gmt": "2017-8-2 12:27:35",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=226",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "227",
            "post_author": "1",
            "post_date": "2017-3-30 22:39:24",
            "post_date_gmt": "2017-3-30 14:39:24",
            "post_content": "",
            "post_title": "python实现简单时时打印桌面程序",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "226-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-30 22:39:24",
            "post_modified_gmt": "2017-3-30 14:39:24",
            "post_content_filtered": "",
            "post_parent": "226",
            "guid": "http://ganjiacheng.cn/blog/?p=227",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "228",
            "post_author": "1",
            "post_date": "2017-3-30 23:40:11",
            "post_date_gmt": "2017-3-30 15:40:11",
            "post_content": "这里的需求是用户在某个网页下单之后，需要打印机打出票据。\r\n\r\n实现：用python访问一个网络接口获取需要打印的数据（json格式），之后调用系统win32print的打印接口打印出来。\r\n\r\n时时打印的话下面用轮询并定时sleep实现。<!--more-->\r\n\r\n再用Tkinter写一个桌面程序可以用来提醒并可以使程序长久运行。\r\n\r\n之后再用py2exe把python文件变成一个exe文件方便在后台执行。\r\n<pre>#coding:utf-8\r\n#python2.7\r\n#引入需要的库\r\nfrom tkMessageBox import *\r\nfrom Tkinter import *\r\nimport hashlib\r\nimport urllib2\r\nimport json\r\nimport win32ui  \r\nimport win32print  \r\nimport win32con  \r\nimport time\r\nimport socket\r\n#定义打印机，获取内容，定义样式，打印\r\ndef send_to_printer(title,txt,txt1,txt2,txt3,txt4,txt5): \r\n    hDC = win32ui.CreateDC()  \r\n    hDC.CreatePrinterDC(win32print.GetDefaultPrinter())  \r\n    hDC.StartDoc(title)\r\n    hDC.StartPage()\r\n    hDC.SetMapMode(win32con.MM_TWIPS)\r\n    #定义位置\r\n    ulc_x = 1000  \r\n    lrc_x = 11500  \r\n    lrc_y = -11500 \r\n    ulc_y = -100  \r\n    hDC.DrawText(txt,(ulc_x,ulc_y,lrc_x,lrc_y),win32con.DT_LEFT)\r\n    ulc_x = 100\r\n    ulc_y = -400  \r\n    hDC.DrawText(txt1,(ulc_x,ulc_y,lrc_x,lrc_y),win32con.DT_LEFT) \r\n    ulc_x = 100\r\n    ulc_y = -2300  \r\n    hDC.DrawText(txt1,(ulc_x,ulc_y,lrc_x,lrc_y),win32con.DT_LEFT)\r\n    ulc_x = 150 \r\n    ulc_y = -700  \r\n    hDC.DrawText(txt2,(ulc_x,ulc_y,lrc_x,lrc_y),win32con.DT_LEFT) \r\n    ulc_x = 150 \r\n    ulc_y = -1000  \r\n    hDC.DrawText(txt3,(ulc_x,ulc_y,lrc_x,lrc_y),win32con.DT_LEFT) \r\n    #修改字体大小\r\n    font = win32ui.CreateFont({\r\n        \"name\": \"Lucida Console\",\r\n        \"height\": 400,\r\n        \"weight\": 400,\r\n    })\r\n    hDC.SelectObject(font) \r\n    ulc_x = 150 \r\n    ulc_y = -1400  \r\n    hDC.DrawText(txt4,(ulc_x,ulc_y,lrc_x,lrc_y),win32con.DT_LEFT) \r\n    ulc_x = 150 \r\n    ulc_y = -1800  \r\n    hDC.DrawText(txt5,(ulc_x,ulc_y,lrc_x,lrc_y),win32con.DT_LEFT) \r\n    hDC.EndPage()  \r\n    hDC.EndDoc()\r\n#开一个桌面程序，提醒并在后台运行\r\nroot = Tk()\r\n#设置socket超时时间\r\nsocket.setdefaulttimeout(20)\r\nshowinfo('信息', '打印机已成功运行')\r\nroot.destroy()\r\n#下面轮询调用接口并处理数据，导入打印\r\nwhile 1:\r\n    #捕获所有错误，使中间不会中断\r\n    try:\r\n        #调用接口获取json并处理\r\n        response = urllib2.urlopen('http://test.com') \r\n        ret = response.read()\r\n        #print ret\r\n        res=json.loads(ret)\r\n        #处理数据这部分自定义\r\n        txt=\"1\";txt2=\"2\";txt3=\"3\";txt4=\"4\";txt5=\"5\"\r\n        send_to_printer(\"title\",txt,txt1,txt2,txt3,txt4,txt5)\r\n        response.close()\r\n        #5秒调用一次\r\n        time.sleep(5)\r\n    except Exception,e:  \r\n        #错误处理，可以打印在log上，这里只简单的捕获\r\n        print Exception,\":\",e</pre>\r\n在用py2exe之前还得写另一个setup.py\r\n<pre>from distutils.core import setup\r\nimport py2exe\r\n#filename是上面写的那个python文件的文件名\r\nsetup(windows=[\"filename.py\"])</pre>\r\n把两个文件放在同目录下，用shift+右键，在此处打开命令行，运行\r\n<pre>python setup.py py2exe</pre>\r\n在产生的dist文件夹里有相同文件名的exe文件，可以双击直接执行，会先报一个成功运行，之后就在后台运行。\r\n\r\n因为他会在后台一直运行着，所以关闭的话也得到任务管理器-&gt;进程里找到那个文件名的exe后台进程，把它结束掉就行。",
            "post_title": "python实现简单时时打印桌面程序",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "226-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-30 23:40:11",
            "post_modified_gmt": "2017-3-30 15:40:11",
            "post_content_filtered": "",
            "post_parent": "226",
            "guid": "http://ganjiacheng.cn/blog/?p=228",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "229",
            "post_author": "1",
            "post_date": "2017-3-30 23:51:29",
            "post_date_gmt": "2017-3-30 15:51:29",
            "post_content": "我叫甘家城，来自宁波余姚，目前是杭电的一名大二学生，作为一个电子专业的学生，同时能入手前端，玩玩php，耍耍python，妙哉！\r\n<h5>All of life is an act of letting go, but what hurts the most is not taking a moment to say goodbye.</h5>\r\n私人邮箱：935669873@qq.com\r\n\r\n&nbsp;",
            "post_title": "个人简介",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "2-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-30 23:51:29",
            "post_modified_gmt": "2017-3-30 15:51:29",
            "post_content_filtered": "",
            "post_parent": "2",
            "guid": "http://ganjiacheng.cn/blog/?p=229",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "230",
            "post_author": "1",
            "post_date": "2017-3-30 23:52:12",
            "post_date_gmt": "2017-3-30 15:52:12",
            "post_content": "我叫甘家城，来自宁波余姚，目前是杭电的一名大二学生，作为一个电子专业的学生，同时能入手前端，玩玩php，耍耍python，妙哉！\r\n<h5>All of life is an act of letting go, but what hurts the most is not taking a moment to say goodbye.</h5>\r\n&nbsp;\r\n\r\n私人邮箱：935669873@qq.com\r\n\r\n&nbsp;",
            "post_title": "个人简介",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "2-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-3-30 23:52:12",
            "post_modified_gmt": "2017-3-30 15:52:12",
            "post_content_filtered": "",
            "post_parent": "2",
            "guid": "http://ganjiacheng.cn/blog/?p=230",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "234",
            "post_author": "1",
            "post_date": "2017-4-7 11:33:34",
            "post_date_gmt": "2017-4-7 03:33:34",
            "post_content": "最近，微信小程序开放了个人开发者，所以立刻申请了一个来试试。\r\n\r\n小程序从之前刚出来时在开发者圈火极一时，而现在却用的不多，也有限制多的缘故，所以在开放了部分限制之后再来看他的发展吧。<!--more-->\r\n\r\n这里讨论一下初探小程序的一点想法。\r\n\r\n在<a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/\">小程序手册</a>中也已经很明白了，把视图和逻辑分开，有点类似于react的虚拟dom，不直接去操作dom，而是改变数据之后自动刷新页面的渲染，使改动最小化。最初的试验感觉他的数据应该是单向绑定，也就是m-v而没有v-m。\r\n\r\n另外，微信写了各种接近微信ui的组件供直接调用。html代替用的是wxml，这个可以看手册了解。关于css，他用的是wxss，wxss基本和css是相同的。js的话就是变化最大的地方，因为完全dom没有关系，直接操作数据就可以改变页面内容。所以在了解之后其实开发速度是很快的。\r\n\r\n使用过后的感觉便是比起一般的网页流畅一些，但相较于app可能还有距离。\r\n\r\n开发的话，先在微信公众平台新注册一个，选择小程序。下载开发者工具，再本地新建一个空文件夹，之后添加项目到这里面，就会自动创建一个示例demo。\r\n\r\n这里简单做一个文字二维码的功能的小程序。\r\n\r\nwxml部分基本直接用组件就行 ，然后绑定一下事件，如bindtap，{{}}是从js里传入的数据。\r\n<pre>&lt;!--index.wxml--&gt;\r\n&lt;view class=\"container\"&gt;\r\n  &lt;form bindsubmit=\"formSubmit\"&gt;\r\n    &lt;view class=\"section\"&gt;\r\n      &lt;input placeholder=\"请输入想说的话\" auto-focus name=\"input\"/&gt;\r\n    &lt;/view&gt;\r\n    &lt;view class='btn'&gt;\r\n      &lt;button formType=\"submit\"&gt;提交&lt;/button&gt;\r\n    &lt;/view&gt;\r\n  &lt;/form&gt;\r\n  &lt;view class=\"img\"&gt;\r\n    &lt;image src=\"{{imgurl}}\" bindtap=\"ch\"&gt;&lt;/image&gt;\r\n  &lt;/view&gt;\r\n&lt;/view&gt;</pre>\r\nwxss因为和css基本一样就不写太多了，而且ui的话很多组件已经做好了。\r\n<pre>/**index.wxss**/\r\n.btn{\r\n  margin-top: 10%;\r\n}\r\n.section{\r\n  border-bottom:solid 1px lightgrey;\r\n  font-size:50rpx;\r\n}</pre>\r\njs里，getApp()从app.js和app.json获取配置信息，data便是可以传入wxml里的数据下面是两个事件，一开始的话会自动创建几个默认事件---开始加载，加载完成等等。然后可以自己添加事件。wx.xxx就是调用接口，接口具体也可以看文档。wx.request是获取服务器数据，这里首先需要到微信公众平台--设置里配置一下服务器域名，否则会报错。写多了容易发现有各种回调，所以要很清晰每一步。\r\n<pre>//index.js\r\n//获取应用实例\r\nvar app = getApp()\r\nPage({\r\n  data: {\r\n    imgult:'',\r\n    imgfile:''\r\n  },\r\n  ch:function(e){\r\n    var that=this\r\n    if(that.data.imgfile==''){\r\n      return\r\n    }\r\n    wx.previewImage({\r\n      current: that.data.imgfile,\r\n      urls: [that.data.imgfile] \r\n    })\r\n  },\r\n  formSubmit: function(e) {\r\n    var that = this\r\n    wx.request({\r\n      url: 'https://xxx.cn/test.php',\r\n      data: {\r\n        data: e.detail.value.input ,\r\n      },\r\n      header: {\r\n          'content-type': 'application/json'\r\n      },\r\n      success: function(res) {\r\n        that.setData({\r\n          imgurl:res.data\r\n        }),\r\n        wx.downloadFile({\r\n          url: 'https://xxx.cn/EXAMPLE_TMP_SERVERPATHtest.png',\r\n          success: function(res) {\r\n            var tempFilePaths = res.tempFilePath\r\n            that.setData({     \r\n              imgfile:res.tempFilePath\r\n            })\r\n            console.log(that.data.imgfile)\r\n          }\r\n        })\r\n      }\r\n    })\r\n  },\r\n})</pre>\r\n服务器端用了<a href=\"http://phpqrcode.sourceforge.net/\">phpqrcode</a>来生成二维码。下面是参考代码。效果：如果是数字便生成添加联系人的二维码，如果是文字，就产生文字二维码。然后通过base64编码到返回，小程序获取到64编码的图片字符放到img中就可以直接展示。\r\n<pre>&lt;?php\r\ninclude('phpqrcode/qrlib.php');\r\ninclude('config.php'); \r\n$tempDir = EXAMPLE_TMP_SERVERPATH; \r\n$a=$_GET['data'];\r\nif(!is_numeric($a)){\r\n    QRcode::png($a,$tempDir.'test.png',QR_ECLEVEL_L, 10);\r\n    $str = file_get_contents($tempDir.'test.png');\r\n    echo \"data:image/png;base64,\".base64_encode($str);\r\n}else{\r\n    $name = ''; \r\n    $phone = $a;\r\n    $codeContents  = 'BEGIN:VCARD'.\"\\n\"; \r\n    $codeContents .= 'FN:'.$name.\"\\n\"; \r\n    $codeContents .= 'TEL;WORK;VOICE:'.$phone.\"\\n\"; \r\n    $codeContents .= 'END:VCARD'; \r\n    QRcode::png($codeContents, $tempDir.'test.png', QR_ECLEVEL_L, 10); \r\n    $str = file_get_contents($tempDir.'test.png');\r\n    echo \"data:image/png;base64,\".base64_encode($str);\r\n}</pre>\r\n效果展示：<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/QQ截图20170407112928.jpg\"><img class=\"alignnone wp-image-239 size-thumbnail\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/QQ截图20170407112928-150x150.jpg\" alt=\"\" width=\"150\" height=\"150\" /></a>",
            "post_title": "微信小程序初探与文字二维码举例",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e5%be%ae%e4%bf%a1%e5%b0%8f%e7%a8%8b%e5%ba%8f%e5%88%9d%e6%8e%a2%e4%b8%8e%e6%96%87%e5%ad%97%e4%ba%8c%e7%bb%b4%e7%a0%81%e4%b8%be%e4%be%8b",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-8-2 20:27:24",
            "post_modified_gmt": "2017-8-2 12:27:24",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=234",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "235",
            "post_author": "1",
            "post_date": "2017-4-3 23:46:29",
            "post_date_gmt": "2017-4-3 15:46:29",
            "post_content": "最近，微信小程序开放了个人开发者，所以立刻申请了一个来试试。\r\n\r\n小程序从之前刚出来时在开发者圈火极一时，而现在却用的不多，也有限制多的缘故，所以在开放了部分限制之后再来看他的发展吧。\r\n\r\n这里讨论一下初探小程序的一点想法。\r\n\r\n在<a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/\">小程序手册</a>中也已经很明白了，把视图和逻辑分开，有点类似于react的\r\n\r\n&nbsp;",
            "post_title": "微信小程序初探",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "234-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-4-3 23:46:29",
            "post_modified_gmt": "2017-4-3 15:46:29",
            "post_content_filtered": "",
            "post_parent": "234",
            "guid": "http://ganjiacheng.cn/blog/?p=235",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "236",
            "post_author": "1",
            "post_date": "2017-4-5 09:39:58",
            "post_date_gmt": "2017-4-5 01:39:58",
            "post_content": "最近，微信小程序开放了个人开发者，所以立刻申请了一个来试试。\r\n\r\n小程序从之前刚出来时在开发者圈火极一时，而现在却用的不多，也有限制多的缘故，所以在开放了部分限制之后再来看他的发展吧。\r\n\r\n这里讨论一下初探小程序的一点想法。\r\n\r\n在<a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/\">小程序手册</a>中也已经很明白了，把视图和逻辑分开，有点类似于react的虚拟dom，不直接去操作dom，而是改变数据之后自动刷新页面的渲染，使改动最小化。最初的试验感觉他的数据应该是单向绑定，也就是m-v而没有v-m。\r\n\r\n另外，微信写了各种接近微信ui的组件供直接调用。语言用的是wxml，这个可以看手册了解。关于css，他用的是wcss\r\n\r\n&nbsp;",
            "post_title": "微信小程序初探",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "234-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-4-5 09:39:58",
            "post_modified_gmt": "2017-4-5 01:39:58",
            "post_content_filtered": "",
            "post_parent": "234",
            "guid": "http://ganjiacheng.cn/blog/?p=236",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "237",
            "post_author": "1",
            "post_date": "2017-4-7 11:03:49",
            "post_date_gmt": "2017-4-7 03:03:49",
            "post_content": "最近，微信小程序开放了个人开发者，所以立刻申请了一个来试试。\r\n\r\n小程序从之前刚出来时在开发者圈火极一时，而现在却用的不多，也有限制多的缘故，所以在开放了部分限制之后再来看他的发展吧。\r\n\r\n这里讨论一下初探小程序的一点想法。\r\n\r\n在<a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/\">小程序手册</a>中也已经很明白了，把视图和逻辑分开，有点类似于react的虚拟dom，不直接去操作dom，而是改变数据之后自动刷新页面的渲染，使改动最小化。最初的试验感觉他的数据应该是单向绑定，也就是m-v而没有v-m。\r\n\r\n另外，微信写了各种接近微信ui的组件供直接调用。html代替用的是wxml，这个可以看手册了解。关于css，他用的是wxss，wxss基本和css是相同的。js的话就是变化最大的地方，因为完全dom没有关系，直接操作数据就可以改变页面内容。所以在了解之后其实开发速度是很快的。\r\n\r\n使用过后的感觉便是比起一般的网页流畅一些，但相较于app可能还有距离。",
            "post_title": "微信小程序初探",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "234-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-4-7 11:03:49",
            "post_modified_gmt": "2017-4-7 03:03:49",
            "post_content_filtered": "",
            "post_parent": "234",
            "guid": "http://ganjiacheng.cn/blog/?p=237",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "238",
            "post_author": "1",
            "post_date": "2017-4-7 11:06:57",
            "post_date_gmt": "2017-4-7 03:06:57",
            "post_content": "最近，微信小程序开放了个人开发者，所以立刻申请了一个来试试。\r\n\r\n小程序从之前刚出来时在开发者圈火极一时，而现在却用的不多，也有限制多的缘故，所以在开放了部分限制之后再来看他的发展吧。\r\n\r\n这里讨论一下初探小程序的一点想法。\r\n\r\n在<a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/\">小程序手册</a>中也已经很明白了，把视图和逻辑分开，有点类似于react的虚拟dom，不直接去操作dom，而是改变数据之后自动刷新页面的渲染，使改动最小化。最初的试验感觉他的数据应该是单向绑定，也就是m-v而没有v-m。\r\n\r\n另外，微信写了各种接近微信ui的组件供直接调用。html代替用的是wxml，这个可以看手册了解。关于css，他用的是wxss，wxss基本和css是相同的。js的话就是变化最大的地方，因为完全dom没有关系，直接操作数据就可以改变页面内容。所以在了解之后其实开发速度是很快的。\r\n\r\n使用过后的感觉便是比起一般的网页流畅一些，但相较于app可能还有距离。\r\n\r\n开发的话，先在微信公众平台新注册一个，选择小程序。下载开发者工具，再本地新建一个空文件夹，之后添加项目到这里面，就会自动创建一个示例demo。\r\n\r\n&nbsp;",
            "post_title": "微信小程序初探",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "234-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-4-7 11:06:57",
            "post_modified_gmt": "2017-4-7 03:06:57",
            "post_content_filtered": "",
            "post_parent": "234",
            "guid": "http://ganjiacheng.cn/blog/?p=238",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "239",
            "post_author": "1",
            "post_date": "2017-4-7 11:31:15",
            "post_date_gmt": "2017-4-7 03:31:15",
            "post_content": "",
            "post_title": "QQ截图20170407112928",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "qq%e6%88%aa%e5%9b%be20170407112928",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-4-7 11:31:15",
            "post_modified_gmt": "2017-4-7 03:31:15",
            "post_content_filtered": "",
            "post_parent": "234",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/QQ截图20170407112928.jpg",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/jpeg",
            "comment_count": "0"
        },
        {
            "ID": "240",
            "post_author": "1",
            "post_date": "2017-4-7 11:33:34",
            "post_date_gmt": "2017-4-7 03:33:34",
            "post_content": "最近，微信小程序开放了个人开发者，所以立刻申请了一个来试试。\r\n\r\n小程序从之前刚出来时在开发者圈火极一时，而现在却用的不多，也有限制多的缘故，所以在开放了部分限制之后再来看他的发展吧。<!--more-->\r\n\r\n这里讨论一下初探小程序的一点想法。\r\n\r\n在<a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/\">小程序手册</a>中也已经很明白了，把视图和逻辑分开，有点类似于react的虚拟dom，不直接去操作dom，而是改变数据之后自动刷新页面的渲染，使改动最小化。最初的试验感觉他的数据应该是单向绑定，也就是m-v而没有v-m。\r\n\r\n另外，微信写了各种接近微信ui的组件供直接调用。html代替用的是wxml，这个可以看手册了解。关于css，他用的是wxss，wxss基本和css是相同的。js的话就是变化最大的地方，因为完全dom没有关系，直接操作数据就可以改变页面内容。所以在了解之后其实开发速度是很快的。\r\n\r\n使用过后的感觉便是比起一般的网页流畅一些，但相较于app可能还有距离。\r\n\r\n开发的话，先在微信公众平台新注册一个，选择小程序。下载开发者工具，再本地新建一个空文件夹，之后添加项目到这里面，就会自动创建一个示例demo。\r\n\r\n这里简单做一个文字二维码的功能的小程序。\r\n\r\nwxml部分基本直接用组件就行 ，然后绑定一下事件，如bindtap，{{}}是从js里传入的数据。\r\n<pre>&lt;!--index.wxml--&gt;\r\n&lt;view class=\"container\"&gt;\r\n  &lt;form bindsubmit=\"formSubmit\"&gt;\r\n    &lt;view class=\"section\"&gt;\r\n      &lt;input placeholder=\"请输入想说的话\" auto-focus name=\"input\"/&gt;\r\n    &lt;/view&gt;\r\n    &lt;view class='btn'&gt;\r\n      &lt;button formType=\"submit\"&gt;提交&lt;/button&gt;\r\n    &lt;/view&gt;\r\n  &lt;/form&gt;\r\n  &lt;view class=\"img\"&gt;\r\n    &lt;image src=\"{{imgurl}}\" bindtap=\"ch\"&gt;&lt;/image&gt;\r\n  &lt;/view&gt;\r\n&lt;/view&gt;</pre>\r\nwxss因为和css基本一样就不写太多了，而且ui的话很多组件已经做好了。\r\n<pre>/**index.wxss**/\r\n.btn{\r\n  margin-top: 10%;\r\n}\r\n.section{\r\n  border-bottom:solid 1px lightgrey;\r\n  font-size:50rpx;\r\n}</pre>\r\njs里，getApp()从app.js和app.json获取配置信息，data便是可以传入wxml里的数据下面是两个事件，一开始的话会自动创建几个默认事件---开始加载，加载完成等等。然后可以自己添加事件。wx.xxx就是调用接口，接口具体也可以看文档。wx.request是获取服务器数据，这里首先需要到微信公众平台--设置里配置一下服务器域名，否则会报错。写多了容易发现有各种回调，所以要很清晰每一步。\r\n<pre>//index.js\r\n//获取应用实例\r\nvar app = getApp()\r\nPage({\r\n  data: {\r\n    imgult:'',\r\n    imgfile:''\r\n  },\r\n  ch:function(e){\r\n    var that=this\r\n    if(that.data.imgfile==''){\r\n      return\r\n    }\r\n    wx.previewImage({\r\n      current: that.data.imgfile,\r\n      urls: [that.data.imgfile] \r\n    })\r\n  },\r\n  formSubmit: function(e) {\r\n    var that = this\r\n    wx.request({\r\n      url: 'https://xxx.cn/test.php',\r\n      data: {\r\n        data: e.detail.value.input ,\r\n      },\r\n      header: {\r\n          'content-type': 'application/json'\r\n      },\r\n      success: function(res) {\r\n        that.setData({\r\n          imgurl:res.data\r\n        }),\r\n        wx.downloadFile({\r\n          url: 'https://xxx.cn/EXAMPLE_TMP_SERVERPATHtest.png',\r\n          success: function(res) {\r\n            var tempFilePaths = res.tempFilePath\r\n            that.setData({     \r\n              imgfile:res.tempFilePath\r\n            })\r\n            console.log(that.data.imgfile)\r\n          }\r\n        })\r\n      }\r\n    })\r\n  },\r\n})</pre>\r\n服务器端用了<a href=\"http://phpqrcode.sourceforge.net/\">phpqrcode</a>来生成二维码。下面是参考代码。效果：如果是数字便生成添加联系人的二维码，如果是文字，就产生文字二维码。然后通过base64编码到返回，小程序获取到64编码的图片字符放到img中就可以直接展示。\r\n<pre>&lt;?php\r\ninclude('phpqrcode/qrlib.php');\r\ninclude('config.php'); \r\n$tempDir = EXAMPLE_TMP_SERVERPATH; \r\n$a=$_GET['data'];\r\nif(!is_numeric($a)){\r\n    QRcode::png($a,$tempDir.'test.png',QR_ECLEVEL_L, 10);\r\n    $str = file_get_contents($tempDir.'test.png');\r\n    echo \"data:image/png;base64,\".base64_encode($str);\r\n}else{\r\n    $name = ''; \r\n    $phone = $a;\r\n    $codeContents  = 'BEGIN:VCARD'.\"\\n\"; \r\n    $codeContents .= 'FN:'.$name.\"\\n\"; \r\n    $codeContents .= 'TEL;WORK;VOICE:'.$phone.\"\\n\"; \r\n    $codeContents .= 'END:VCARD'; \r\n    QRcode::png($codeContents, $tempDir.'test.png', QR_ECLEVEL_L, 10); \r\n    $str = file_get_contents($tempDir.'test.png');\r\n    echo \"data:image/png;base64,\".base64_encode($str);\r\n}</pre>\r\n效果展示：<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/QQ截图20170407112928.jpg\"><img class=\"alignnone wp-image-239 size-thumbnail\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/QQ截图20170407112928-150x150.jpg\" alt=\"\" width=\"150\" height=\"150\" /></a>",
            "post_title": "微信小程序初探与文字二维码举例",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "234-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-4-7 11:33:34",
            "post_modified_gmt": "2017-4-7 03:33:34",
            "post_content_filtered": "",
            "post_parent": "234",
            "guid": "http://ganjiacheng.cn/blog/?p=240",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "243",
            "post_author": "1",
            "post_date": "2017-4-17 13:30:15",
            "post_date_gmt": "0-0-0 00:00:00",
            "post_content": "正则\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;",
            "post_title": "正则小记---爬网页",
            "post_excerpt": "",
            "post_status": "draft",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-4-17 13:30:15",
            "post_modified_gmt": "2017-4-17 05:30:15",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=243",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "244",
            "post_author": "1",
            "post_date": "2017-4-17 12:45:15",
            "post_date_gmt": "2017-4-17 04:45:15",
            "post_content": "初识正则，这里只简单记录一些常用正则语法，便于之后查找与使用。\r\n<pre></pre>\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "正则小记",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "243-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-4-17 12:45:15",
            "post_modified_gmt": "2017-4-17 04:45:15",
            "post_content_filtered": "",
            "post_parent": "243",
            "guid": "http://ganjiacheng.cn/blog/?p=244",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "245",
            "post_author": "1",
            "post_date": "2017-4-17 13:15:23",
            "post_date_gmt": "2017-4-17 05:15:23",
            "post_content": "初识正则，这里只简单记录一些常用正则语法，便于之后查找与使用。\r\n<pre>\\d   数字0-9\r\n\\D   非数字\r\n.    任意字符\r\n^    起始位置\r\n$    结束位置\r\n?    量词，0个或一个\r\n+    量词，一个或多个\r\n*    量词，0个或多个\r\n{n,m}  最少n个最多m个\r\n|    多个中选一个\r\n\\w   字母数字下划线\r\n\\W   非字母数字下划线\r\n\\s   空白符\r\n\\b   单词边界\r\n\\B   非单词边界</pre>\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "正则小记",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "243-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-4-17 13:15:23",
            "post_modified_gmt": "2017-4-17 05:15:23",
            "post_content_filtered": "",
            "post_parent": "243",
            "guid": "http://ganjiacheng.cn/blog/?p=245",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "252",
            "post_author": "1",
            "post_date": "2017-4-21 11:43:10",
            "post_date_gmt": "2017-4-21 03:43:10",
            "post_content": "问题：有25匹马，速度都不同，但每匹马的速度都是定值。现在只有5条赛道，无法计时，即每赛一场最多只能知道5匹马的相对快慢。问最少赛几场可以找出25匹马中速度最快的前5名？<!--more-->\r\n\r\n写下一些个人思路。\r\n\r\n先把25匹马分成5组，每组5匹马，跑五次。得到五次的结果。\r\n\r\n在把5次都跑第一名的马拿出来跑一次。\r\n\r\n然后分别标上如下图序号。箭头方向表示由慢到快。\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/image-1.jpg\"><img class=\"alignnone wp-image-255 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/image-1-300x225.jpg\" alt=\"\" width=\"300\" height=\"225\" /></a>\r\n\r\n此时可以得到11是其中跑得最快的，由于要选5匹，故可以去掉一些已经评不上的。\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/image-2.jpg\"><img class=\"alignnone wp-image-256 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/image-2-300x225.jpg\" alt=\"\" width=\"300\" height=\"225\" /></a>\r\n\r\n考虑特殊情况，要次数最少的话就得碰运气，第七次跑51，12，13，14，15或者15，21，31，41，51。如果51或者15赢了就可以得到最快的五匹马。\r\n\r\n考虑一般情况的话，再分析图，12，21至少有一个需要选。13，22，31至少有一个需要选。所以第七次上面五匹马跑一次。\r\n\r\n之后分类讨论，主要考虑前两名。\r\n\r\n如果12，21是前两名，则他们为总的第二三名，由于13，22，31也至少选一个，所以其中一个最快的是总的第四名。总的还差一匹马，第八次就跑13，22，31中的另外两个加上总第四名那匹马的右边和下面两匹马。第八次跑最快的就是总的第五名。得到最快5匹马。\r\n\r\n如果前两名是12，21中的一个加上13，22，31中的一个。则第八次跑的马为上面剩下的三个加上13，22，31种最快那匹的右边和下面那两匹马。这里得到的结果又可以分类讨论，方法和上面差不多，最差的情况也可以选出总的第四快的马。\r\n\r\n再跑第九次，选出第五快的马。\r\n\r\n结论：碰运气跑最快7次，一般情况跑最快8次，最慢9次。",
            "post_title": "赛马问题",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e8%b5%9b%e9%a9%ac%e9%97%ae%e9%a2%98",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-8-2 20:26:58",
            "post_modified_gmt": "2017-8-2 12:26:58",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=252",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "253",
            "post_author": "1",
            "post_date": "2017-4-21 11:03:46",
            "post_date_gmt": "2017-4-21 03:03:46",
            "post_content": "问题：有25匹马，速度都不同，但每匹马的速度都是定值。现在只有5条赛道，无法计时，即每赛一场最多只能知道5匹马的相对快慢。问最少赛几场可以找出25匹马中速度最快的前5名？<!--more-->\r\n\r\n写下一些个人思路。\r\n\r\n先把25匹马分成5组，每组5匹马，跑五次。得到五次的结果。然后分别标上如下图序号。序号前一个代表第几次跑的，后一个代表本次第几名。\r\n\r\n&nbsp;",
            "post_title": "赛马问题",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "252-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-4-21 11:03:46",
            "post_modified_gmt": "2017-4-21 03:03:46",
            "post_content_filtered": "",
            "post_parent": "252",
            "guid": "http://ganjiacheng.cn/blog/?p=253",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "254",
            "post_author": "1",
            "post_date": "2017-4-21 11:04:34",
            "post_date_gmt": "2017-4-21 03:04:34",
            "post_content": "",
            "post_title": "image",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "image",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-4-21 11:04:34",
            "post_modified_gmt": "2017-4-21 03:04:34",
            "post_content_filtered": "",
            "post_parent": "252",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/image.jpg",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/jpeg",
            "comment_count": "0"
        },
        {
            "ID": "255",
            "post_author": "1",
            "post_date": "2017-4-21 11:09:02",
            "post_date_gmt": "2017-4-21 03:09:02",
            "post_content": "",
            "post_title": "image",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "image-2",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-4-21 11:09:02",
            "post_modified_gmt": "2017-4-21 03:09:02",
            "post_content_filtered": "",
            "post_parent": "252",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/image-1.jpg",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/jpeg",
            "comment_count": "0"
        },
        {
            "ID": "256",
            "post_author": "1",
            "post_date": "2017-4-21 11:12:32",
            "post_date_gmt": "2017-4-21 03:12:32",
            "post_content": "",
            "post_title": "image",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "image-3",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-4-21 11:12:32",
            "post_modified_gmt": "2017-4-21 03:12:32",
            "post_content_filtered": "",
            "post_parent": "252",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/image-2.jpg",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/jpeg",
            "comment_count": "0"
        },
        {
            "ID": "257",
            "post_author": "1",
            "post_date": "2017-4-21 11:43:10",
            "post_date_gmt": "2017-4-21 03:43:10",
            "post_content": "问题：有25匹马，速度都不同，但每匹马的速度都是定值。现在只有5条赛道，无法计时，即每赛一场最多只能知道5匹马的相对快慢。问最少赛几场可以找出25匹马中速度最快的前5名？<!--more-->\r\n\r\n写下一些个人思路。\r\n\r\n先把25匹马分成5组，每组5匹马，跑五次。得到五次的结果。\r\n\r\n在把5次都跑第一名的马拿出来跑一次。\r\n\r\n然后分别标上如下图序号。箭头方向表示由慢到快。\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/image-1.jpg\"><img class=\"alignnone wp-image-255 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/image-1-300x225.jpg\" alt=\"\" width=\"300\" height=\"225\" /></a>\r\n\r\n此时可以得到11是其中跑得最快的，由于要选5匹，故可以去掉一些已经评不上的。\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/image-2.jpg\"><img class=\"alignnone wp-image-256 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/image-2-300x225.jpg\" alt=\"\" width=\"300\" height=\"225\" /></a>\r\n\r\n考虑特殊情况，要次数最少的话就得碰运气，第七次跑51，12，13，14，15或者15，21，31，41，51。如果51或者15赢了就可以得到最快的五匹马。\r\n\r\n考虑一般情况的话，再分析图，12，21至少有一个需要选。13，22，31至少有一个需要选。所以第七次上面五匹马跑一次。\r\n\r\n之后分类讨论，主要考虑前两名。\r\n\r\n如果12，21是前两名，则他们为总的第二三名，由于13，22，31也至少选一个，所以其中一个最快的是总的第四名。总的还差一匹马，第八次就跑13，22，31中的另外两个加上总第四名那匹马的右边和下面两匹马。第八次跑最快的就是总的第五名。得到最快5匹马。\r\n\r\n如果前两名是12，21中的一个加上13，22，31中的一个。则第八次跑的马为上面剩下的三个加上13，22，31种最快那匹的右边和下面那两匹马。这里得到的结果又可以分类讨论，方法和上面差不多，最差的情况也可以选出总的第四快的马。\r\n\r\n再跑第九次，选出第五快的马。\r\n\r\n结论：碰运气跑最快7次，一般情况跑最快8次，最慢9次。",
            "post_title": "赛马问题",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "252-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-4-21 11:43:10",
            "post_modified_gmt": "2017-4-21 03:43:10",
            "post_content_filtered": "",
            "post_parent": "252",
            "guid": "http://ganjiacheng.cn/blog/?p=257",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "258",
            "post_author": "1",
            "post_date": "2017-4-21 11:48:26",
            "post_date_gmt": "0-0-0 00:00:00",
            "post_content": "",
            "post_title": "python几个关键字的学习",
            "post_excerpt": "",
            "post_status": "draft",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-4-21 11:48:26",
            "post_modified_gmt": "2017-4-21 03:48:26",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=258",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "259",
            "post_author": "1",
            "post_date": "2017-4-21 11:48:26",
            "post_date_gmt": "2017-4-21 03:48:26",
            "post_content": "",
            "post_title": "python几个关键字的学习",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "258-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-4-21 11:48:26",
            "post_modified_gmt": "2017-4-21 03:48:26",
            "post_content_filtered": "",
            "post_parent": "258",
            "guid": "http://ganjiacheng.cn/blog/?p=259",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "262",
            "post_author": "1",
            "post_date": "2017-4-29 11:22:31",
            "post_date_gmt": "2017-4-29 03:22:31",
            "post_content": "这是<a href=\"https://www.tensorflow.org/\">tensorflow官网</a>的第一个例子，按他的做就可以在测试数据集达到91%左右的识别率。之后的cnn版本就可以在测试数据集达到98%以上的正确率。\r\n\r\n因为直接用他的写没什么感觉，然后稍微摸索了一下mnist的内容。<!--more-->\r\n\r\n下面先将mnist的55000个测试数据变成图片的形式，直观一点。\r\n<pre>#python3.5\r\n#windows\r\n#引入所需库\r\nimport tensorflow.examples.tutorials.mnist.input_data as input_data\r\nimport tensorflow as tf\r\nfrom PIL import Image,ImageFilter\r\nimport numpy as np\r\nimport os\r\n#关掉警告,tensorflow会有op unknown的警告\r\nos.environ['TF_CPP_MIN_LOG_LEVEL'] = '3' \r\n#读取mnist数据,第一次的话会自动下载\r\nmnist=input_data.read_data_sets(\"MNIST_data/\", one_hot=True)\r\n#将每个784*1的像素数据变成28*28,再生成图像\r\nfor z in range(len(mnist.train.images)):\r\n    imgArr=mnist.train.images[z]\r\n    im=Image.new(\"RGB\",(28,28))\r\n    for i in range(28):\r\n        for j in range(28):\r\n            r=int(imgArr[i*28+j]*255)\r\n            im.putpixel((j,i),(r,r,r))\r\n    num=np.argmax(mnist.train.labels[z])\r\n    im.save(\"train/\"+str(z)+\"_\"+str(num)+\".jpg\",\"jpeg\")\r\nprint(\"finish\")</pre>\r\n之后直接读取图像来进行训练。\r\n<pre>#python3.5\r\n#windows\r\nimport tensorflow.examples.tutorials.mnist.input_data as input_data\r\nimport tensorflow as tf\r\nimport numpy as np\r\nfrom PIL import Image,ImageFilter\r\nimport os\r\nmnists=input_data.read_data_sets(\"MNIST_data/\", one_hot=True)\r\nos.environ['TF_CPP_MIN_LOG_LEVEL'] = '3' \r\nf=os.listdir(\"train/\")\r\nL=len(f)-1\r\nmnist=np.zeros((L,784))\r\nlabel=np.zeros((L,10))\r\n#读取每个图像数据存到mnist中，类别存到label中\r\nfor i in range(L):\r\n    imgdir='train/'+str(f[i])\r\n    img=Image.open(imgdir).convert(\"L\")\r\n    mnist[i]=np.array(img.getdata())/255\r\n    label[i]=[1 if j==int(f[i].split(\"_\")[1][:-4]) else 0 for j in range(10)]\r\n#之后的操作和tensorflow官网一样\r\nx=tf.placeholder(tf.float32,[None,784])\r\nw=tf.Variable(tf.zeros([784,10]))\r\nb=tf.Variable(tf.zeros([10]))\r\ny=tf.nn.softmax(tf.matmul(x,w)+b)\r\ny_=tf.placeholder(tf.float32,[None,10])\r\ncross_entropy=-tf.reduce_sum(y_*tf.log(y))\r\ntrain_step=tf.train.GradientDescentOptimizer(0.01).minimize(cross_entropy)\r\nsess=tf.InteractiveSession()\r\ntf.global_variables_initializer().run()\r\nfor _ in range(1000):\r\n    rand=np.random.randint(0,L,(100,))\r\n    batch_xs=mnist[rand]\r\n    batch_ys=label[rand]\r\n    sess.run(train_step,feed_dict={x:batch_xs,y_:batch_ys})\r\ncorrect_prediction=tf.equal(tf.argmax(y,1),tf.argmax(y_,1))\r\naccuracy=tf.reduce_mean(tf.cast(correct_prediction,tf.float32))\r\nprint(sess.run(accuracy,feed_dict={x:mnists.test.images,y_:mnists.test.labels})</pre>\r\n运行结果91%左右。也算稍稍做了改变。\r\n\r\ncnn版的还有待研究，虽然代码也很简单。先贴在这里（网上找的，兄台没记住链接不好意思）。\r\n<pre>import tensorflow as tf\r\nfrom tensorflow.examples.tutorials.mnist import input_data\r\ndef weight_varible(shape):\r\n    initial = tf.truncated_normal(shape, stddev=0.1)\r\n    return tf.Variable(initial)\r\n\r\ndef bias_variable(shape):\r\n    initial = tf.constant(0.1, shape=shape)\r\n    return tf.Variable(initial)\r\n\r\ndef conv2d(x, W):\r\n    return tf.nn.conv2d(x, W, strides=[1, 1, 1, 1], padding='SAME')\r\n\r\ndef max_pool_2x2(x):\r\n    return tf.nn.max_pool(x, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')\r\n\r\n\r\nmnist = input_data.read_data_sets(\"MNIST_data/\", one_hot=True)\r\nprint(\"Download Done!\")\r\n\r\nsess = tf.InteractiveSession()\r\n\r\n# paras\r\nW_conv1 = weight_varible([5, 5, 1, 32])\r\nb_conv1 = bias_variable([32])\r\n\r\n# conv layer-1\r\nx = tf.placeholder(tf.float32, [None, 784])\r\nx_image = tf.reshape(x, [-1, 28, 28, 1])\r\n\r\nh_conv1 = tf.nn.relu(conv2d(x_image, W_conv1) + b_conv1)\r\nh_pool1 = max_pool_2x2(h_conv1)\r\n\r\n# conv layer-2\r\nW_conv2 = weight_varible([5, 5, 32, 64])\r\nb_conv2 = bias_variable([64])\r\n\r\nh_conv2 = tf.nn.relu(conv2d(h_pool1, W_conv2) + b_conv2)\r\nh_pool2 = max_pool_2x2(h_conv2)\r\n\r\n# full connection\r\nW_fc1 = weight_varible([7 * 7 * 64, 1024])\r\nb_fc1 = bias_variable([1024])\r\n\r\nh_pool2_flat = tf.reshape(h_pool2, [-1, 7 * 7 * 64])\r\nh_fc1 = tf.nn.relu(tf.matmul(h_pool2_flat, W_fc1) + b_fc1)\r\n\r\n# dropout\r\nkeep_prob = tf.placeholder(tf.float32)\r\nh_fc1_drop = tf.nn.dropout(h_fc1, keep_prob)\r\n\r\n# output layer: softmax\r\nW_fc2 = weight_varible([1024, 10])\r\nb_fc2 = bias_variable([10])\r\n\r\ny_conv = tf.nn.softmax(tf.matmul(h_fc1_drop, W_fc2) + b_fc2)\r\ny_ = tf.placeholder(tf.float32, [None, 10])\r\n\r\n# model training\r\ncross_entropy = -tf.reduce_sum(y_ * tf.log(y_conv))\r\ntrain_step = tf.train.AdamOptimizer(1e-4).minimize(cross_entropy)\r\n\r\ncorrect_prediction = tf.equal(tf.arg_max(y_conv, 1), tf.arg_max(y_, 1))\r\naccuracy = tf.reduce_mean(tf.cast(correct_prediction, tf.float32))\r\n\r\nsess.run(tf.initialize_all_variables())\r\nfor i in range(2000):\r\n    batch = mnist.train.next_batch(50)\r\n\r\n    if i % 100 == 0:\r\n        train_accuacy = accuracy.eval(feed_dict={x: batch[0], y_: batch[1], keep_prob: 1.0})\r\n        print(\"step %d, training accuracy %g\"%(i, train_accuacy))\r\n    train_step.run(feed_dict = {x: batch[0], y_: batch[1], keep_prob: 0.5})\r\n\r\n# accuacy on test\r\nprint(\"test accuracy %g\"%(accuracy.eval(feed_dict={x: mnist.test.images[0:2000], y_: mnist.test.labels[0:2000], keep_prob: 1.0})))</pre>",
            "post_title": "tensorflow入门之mnist手写数字识别",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "tensorflow%e5%85%a5%e9%97%a8%e4%b9%8bmnist%e6%89%8b%e5%86%99%e6%95%b0%e5%ad%97%e8%af%86%e5%88%ab",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-5-30 11:05:27",
            "post_modified_gmt": "2017-5-30 03:05:27",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=262",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "263",
            "post_author": "1",
            "post_date": "2017-4-29 11:22:31",
            "post_date_gmt": "2017-4-29 03:22:31",
            "post_content": "",
            "post_title": "机器学习之mnist数字识别----tensorflow",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "262-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-4-29 11:22:31",
            "post_modified_gmt": "2017-4-29 03:22:31",
            "post_content_filtered": "",
            "post_parent": "262",
            "guid": "http://ganjiacheng.cn/blog/?p=263",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "265",
            "post_author": "1",
            "post_date": "2017-4-30 13:42:01",
            "post_date_gmt": "2017-4-30 05:42:01",
            "post_content": "<p style=\"text-align: left;\">之前讲过最简单的<a href=\"https://ganjiacheng.cn/blog/?p=43\">线性拟合</a>和<a href=\"https://ganjiacheng.cn/blog/?p=152\">逻辑回归</a>，但常常的情况并不是一条直线就能解决问题的,所以来研究一下非线性的。<!--more--></p>\r\n<p style=\"text-align: left;\">总体方法还是和之前差不多的，只是改变了初始的变量的指数。首先列出式子，求cost function（代价函数，一般理解就是拟合的线与实际的点差多少距离经过处理的总和）。在根据梯度下降最小化cost function，就可以求得接近点的一组系数解，也就是下面的θ，之后就得到直线了。</p>\r\n<p style=\"text-align: left;\"><a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/QQ图片20170430130303-e1493528641389.jpg\"><img class=\"alignnone wp-image-266 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/QQ图片20170430130303-e1493528641389-225x300.jpg\" alt=\"\" width=\"225\" height=\"300\" /></a></p>\r\n<p style=\"text-align: left;\">先来看非线性拟合，这里还是用for而不是矩阵来实现中间一些计算。</p>\r\n\r\n<pre style=\"text-align: left;\">#python2.7\r\n#coding:utf-8\r\n#引入相关库\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\n#模拟产生点坐标\r\nk=int(np.random.random()*5+1)\r\nx=np.arange(-2,2,0.1)\r\ny=0\r\nfor i in range(k):\r\n    y+=np.random.random()*(x**k)\r\ny+=np.random.random(len(x))\r\n#N--幂指数也就是最高x^6\r\n#这里可以改进，如果N再高计算中会出现nan\r\nN=6\r\n#这个矩阵为上面的θ\r\nA=np.array([1]*N)\r\n#点的数量\r\nl=len(x)\r\n#梯度下降步长\r\nalpha=0.01\r\n#进行一千次迭代\r\nfor _ in xrange(1000):\r\n    #z为cost function叠加的那部分和的矩阵\r\n    z=np.zeros(N)\r\n    #遍历每个点，计算代价和\r\n    for i in xrange(l):\r\n        sh=0\r\n        for j in xrange(N):\r\n            sh+=A[j]*x[i]**j\r\n        for m in xrange(N):\r\n            z[m]+=(sh-y[i])*x[i]**m\r\n    #直接用矩阵计算更新所有θ\r\n    A=A-alpha*z/l \r\n#下面为画图部分\r\nplt.plot(x,y,\"ro\")\r\ntmpx=np.linspace(-2,2)\r\ndef cal(x):\r\n    tmpy=0\r\n    for i in xrange(N):\r\n        tmpy+=A[i]*x**i\r\n    return tmpy\r\ntmpy=[cal(tmpx[i]) for i in range(len(tmpx))]\r\nplt.plot(tmpx,tmpy)\r\nplt.show()</pre>\r\n<p style=\"text-align: left;\">效果展示：<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/figure_1-3-1.png\"><img class=\"alignnone wp-image-268 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/figure_1-3-1-300x225.png\" alt=\"\" width=\"300\" height=\"225\" /></a></p>\r\n<p style=\"text-align: left;\">再来看非线性logistic回归。</p>\r\n<p style=\"text-align: left;\"><img class=\"alignnone size-medium wp-image-269\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/QQ图片20170430132521-e1493529949189-225x300.jpg\" alt=\"\" width=\"225\" height=\"300\" /></p>\r\n<p style=\"text-align: left;\">这里和上面主要改变的就是多了一步sigmoid函数，还有在求cost function的时候多了一步求ln，我发现比较可靠的一种理解是为了让函数为凸函数，梯度下降可以保证取到全局最低点。再求偏导得到更新θ的式子，基本是一样的。</p>\r\n\r\n<pre style=\"text-align: left;\">#python2.7\r\n#coding:utf-8\r\n#产生点并写入文件\r\nimport numpy as np\r\nf=open(\"testSet2.txt\",\"w\")\r\nfor i in xrange(500):\r\n    a=np.random.random()*5 if np.random.random()&gt;0.5 else -np.random.random()*5\r\n    b=np.random.random()*5 if np.random.random()&gt;0.5 else -np.random.random()*5\r\n    if a**2+b**2&lt;5:\r\n        print &gt;&gt; f,str(a)+\"    \"+str(b)+\"   0\"\r\n    else:\r\n        print &gt;&gt; f,str(a)+\"    \"+str(b)+\"   1\"</pre>\r\n<pre style=\"text-align: left;\">#python2.7\r\n#coding:utf-8\r\n#引入相关库\r\nimport matplotlib.pyplot as plt\r\nimport numpy as np\r\n#读取文件中的点坐标及分类\r\nf=open(\"testSet2.txt\")\r\n#两类点坐标\r\ngdatax=[]\r\ngdatay=[]\r\nrdatax=[]\r\nrdatay=[]\r\n#类别\r\nlabel=[]\r\n#点坐标\r\ndata=[]\r\n#代表有5个θ\r\nN=5\r\n#θ的矩阵\r\nA=np.array([1]*N)\r\n#步长，这里设的比较大因为小了到不了最低点\r\nalpha=0.1\r\n#不同类的点画不同颜色的点\r\nfor i in f.readlines():\r\n    linearr=i.strip().split()\r\n    data.append([float(linearr[0]),float(linearr[1])])\r\n    label.append(int(linearr[2]))\r\n    if int(linearr[2])==1:\r\n        gdatax.append(linearr[0])\r\n        gdatay.append(linearr[1])\r\n    else:\r\n        rdatax.append(linearr[0])\r\n        rdatay.append(linearr[1])\r\nl=len(label)\r\n#迭代2000次，过程和上面一样\r\nfor _ in xrange(2000):\r\n    z=np.zeros(N)\r\n    for i in xrange(l):\r\n        sh=1/(1+np.exp(-A[0]-data[i][0]*A[1]-data[i][1]*A[2]-A[3]*data[i][0]**2-A[4]*data[i][1]**2))\r\n        z[0]+=sh-label[i]\r\n        z[1]+=(sh-label[i])*data[i][0]\r\n        z[2]+=(sh-label[i])*data[i][1]\r\n        z[3]+=(sh-label[i])*data[i][0]**2\r\n        z[4]+=(sh-label[i])*data[i][1]**2\r\n    A=A-alpha*z/l\r\n#下面为画图过程\r\ntmpx=[i/10.0 for i in xrange(-30,30)]\r\ntmpy=[]\r\ntmpz=[]\r\nfor i in tmpx:\r\n    su=A[2]**2-4*A[4]*(A[0]+A[1]*i+A[3]*i**2)\r\n    if su&lt;0:\r\n        tmpy.append(0)\r\n        tmpz.append(0)\r\n    else:\r\n        tmpy.append((-A[2]-np.sqrt(su))/(2*A[4]))\r\n        tmpz.append((-A[2]+np.sqrt(su))/(2*A[4]))\r\nplt.plot(tmpx,tmpy)\r\nplt.plot(tmpx,tmpz)\r\nplt.plot(gdatax,gdatay,'ro',c='g')\r\nplt.plot(rdatax,rdatay,'ro',c='r')\r\nplt.show()</pre>\r\n效果展示：<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/figure_1-2.png\"><img class=\"alignnone wp-image-270 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/figure_1-2-300x225.png\" alt=\"\" width=\"300\" height=\"225\" /></a>\r\n\r\n致谢：<a href=\"http://blog.csdn.net/abcjennifer/article/details/7716281\">http://blog.csdn.net/abcjennifer/article/details/7716281</a>",
            "post_title": "单变量非线性拟合和逻辑回归",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e5%8d%95%e5%8f%98%e9%87%8f%e9%9d%9e%e7%ba%bf%e6%80%a7%e6%8b%9f%e5%90%88%e5%92%8c%e9%80%bb%e8%be%91%e5%9b%9e%e5%bd%92",
            "to_ping": "",
            "pinged": "\nhttps://ganjiacheng.cn/blog/?p=43",
            "post_modified": "2017-5-30 10:28:18",
            "post_modified_gmt": "2017-5-30 02:28:18",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=265",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "266",
            "post_author": "1",
            "post_date": "2017-4-30 13:03:35",
            "post_date_gmt": "2017-4-30 05:03:35",
            "post_content": "",
            "post_title": "QQ图片20170430130303",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "qq%e5%9b%be%e7%89%8720170430130303",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-4-30 13:04:08",
            "post_modified_gmt": "2017-4-30 05:04:08",
            "post_content_filtered": "",
            "post_parent": "265",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/QQ图片20170430130303.jpg",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/jpeg",
            "comment_count": "0"
        },
        {
            "ID": "267",
            "post_author": "1",
            "post_date": "2017-4-30 13:15:05",
            "post_date_gmt": "2017-4-30 05:15:05",
            "post_content": "",
            "post_title": "figure_1-3",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "figure_1-3",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-4-30 13:15:05",
            "post_modified_gmt": "2017-4-30 05:15:05",
            "post_content_filtered": "",
            "post_parent": "265",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/figure_1-3.png",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/png",
            "comment_count": "0"
        },
        {
            "ID": "268",
            "post_author": "1",
            "post_date": "2017-4-30 13:17:03",
            "post_date_gmt": "2017-4-30 05:17:03",
            "post_content": "",
            "post_title": "figure_1-3",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "figure_1-3-2",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-4-30 13:17:03",
            "post_modified_gmt": "2017-4-30 05:17:03",
            "post_content_filtered": "",
            "post_parent": "265",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/figure_1-3-1.png",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/png",
            "comment_count": "0"
        },
        {
            "ID": "269",
            "post_author": "1",
            "post_date": "2017-4-30 13:25:30",
            "post_date_gmt": "2017-4-30 05:25:30",
            "post_content": "",
            "post_title": "QQ图片20170430132521",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "qq%e5%9b%be%e7%89%8720170430132521",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-4-30 13:25:58",
            "post_modified_gmt": "2017-4-30 05:25:58",
            "post_content_filtered": "",
            "post_parent": "265",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/QQ图片20170430132521.jpg",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/jpeg",
            "comment_count": "0"
        },
        {
            "ID": "270",
            "post_author": "1",
            "post_date": "2017-4-30 13:37:25",
            "post_date_gmt": "2017-4-30 05:37:25",
            "post_content": "",
            "post_title": "figure_1-2",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "figure_1-2",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-4-30 13:37:25",
            "post_modified_gmt": "2017-4-30 05:37:25",
            "post_content_filtered": "",
            "post_parent": "265",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/figure_1-2.png",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/png",
            "comment_count": "0"
        },
        {
            "ID": "271",
            "post_author": "1",
            "post_date": "2017-4-30 13:41:39",
            "post_date_gmt": "2017-4-30 05:41:39",
            "post_content": "<p style=\"text-align: left;\">之前讲过最简单的<a href=\"https://ganjiacheng.cn/blog/?p=43\">线性拟合</a>和<a href=\"https://ganjiacheng.cn/blog/?p=152\">逻辑回归</a>，但常常的情况并不是一条直线就能解决问题的,所以来研究一下非线性的。<!--more--></p>\r\n<p style=\"text-align: left;\">总体方法还是和之前差不多的，只是改变了初始的变量的指数。首先列出式子，求cost function（代价函数，一般理解就是拟合的线与实际的点差多少距离经过处理的总和）。在根据梯度下降最小化cost function，就可以求得接近点的一组系数解，也就是下面的θ，之后就得到直线了。</p>\r\n<p style=\"text-align: left;\"><a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/QQ图片20170430130303-e1493528641389.jpg\"><img class=\"alignnone wp-image-266 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/QQ图片20170430130303-e1493528641389-225x300.jpg\" alt=\"\" width=\"225\" height=\"300\" /></a></p>\r\n<p style=\"text-align: left;\">先来看非线性拟合，这里还是用for而不是矩阵来实现中间一些计算。</p>\r\n\r\n<pre style=\"text-align: left;\">#python2.7\r\n#coding:utf-8\r\n#引入相关库\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\n#模拟产生点坐标\r\nk=int(np.random.random()*5+1)\r\nx=np.arange(-2,2,0.1)\r\ny=0\r\nfor i in range(k):\r\n    y+=np.random.random()*(x**k)\r\ny+=np.random.random(len(x))/5\r\n#N--幂指数也就是最高x^6\r\n#这里可以改进，如果N再高计算中会出现nan\r\nN=6\r\n#这个矩阵为上面的θ\r\nA=np.array([1]*N)\r\n#点的数量\r\nl=len(x)\r\n#梯度下降步长\r\nalpha=0.01\r\n#进行一千次迭代\r\nfor _ in xrange(1000):\r\n    #z为cost function叠加的那部分和的矩阵\r\n    z=np.zeros(N)\r\n    #遍历每个点，计算代价和\r\n    for i in xrange(l):\r\n        sh=0\r\n        for j in xrange(N):\r\n            sh+=A[j]*x[i]**j\r\n        for m in xrange(N):\r\n            z[m]+=(sh-y[i])*x[i]**m\r\n    #直接用矩阵计算更新所有θ\r\n    A=A-alpha*z/l \r\n#下面为画图部分\r\nplt.plot(x,y,\"ro\")\r\ntmpx=np.linspace(-2,2)\r\ndef cal(x):\r\n    tmpy=0\r\n    for i in xrange(N):\r\n        tmpy+=A[i]*x**i\r\n    return tmpy\r\ntmpy=[cal(tmpx[i]) for i in range(len(tmpx))]\r\nplt.plot(tmpx,tmpy)\r\nplt.show()</pre>\r\n<p style=\"text-align: left;\">效果展示：<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/figure_1-3-1.png\"><img class=\"alignnone wp-image-268 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/figure_1-3-1-300x225.png\" alt=\"\" width=\"300\" height=\"225\" /></a></p>\r\n<p style=\"text-align: left;\">再来看非线性logistic回归。</p>\r\n<p style=\"text-align: left;\"><img class=\"alignnone size-medium wp-image-269\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/QQ图片20170430132521-e1493529949189-225x300.jpg\" alt=\"\" width=\"225\" height=\"300\" /></p>\r\n<p style=\"text-align: left;\">这里和上面主要改变的就是多了一步sigmoid函数，还有在求cost function的时候多了一步求ln，我发现比较可靠的一种理解是为了让函数为凸函数，梯度下降可以保证取到全局最低点。再求偏导得到更新θ的式子，基本是一样的。</p>\r\n\r\n<pre style=\"text-align: left;\">#python2.7\r\n#coding:utf-8\r\n#产生点并写入文件\r\nimport numpy as np\r\nf=open(\"testSet2.txt\",\"w\")\r\nfor i in xrange(500):\r\n    a=np.random.random()*5 if np.random.random()&gt;0.5 else -np.random.random()*5\r\n    b=np.random.random()*5 if np.random.random()&gt;0.5 else -np.random.random()*5\r\n    if a**2+b**2&lt;5:\r\n        print &gt;&gt; f,str(a)+\"    \"+str(b)+\"   0\"\r\n    else:\r\n        print &gt;&gt; f,str(a)+\"    \"+str(b)+\"   1\"</pre>\r\n<pre style=\"text-align: left;\">#python2.7\r\n#coding:utf-8\r\n#引入相关库\r\nimport matplotlib.pyplot as plt\r\nimport numpy as np\r\n#读取文件中的点坐标及分类\r\nf=open(\"testSet2.txt\")\r\n#两类点坐标\r\ngdatax=[]\r\ngdatay=[]\r\nrdatax=[]\r\nrdatay=[]\r\n#类别\r\nlabel=[]\r\n#点坐标\r\ndata=[]\r\n#代表有5个θ\r\nN=5\r\n#θ的矩阵\r\nA=np.array([1]*N)\r\n#步长，这里设的比较大因为小了到不了最低点\r\nalpha=0.1\r\n#不同类的点画不同颜色的点\r\nfor i in f.readlines():\r\n    linearr=i.strip().split()\r\n    data.append([float(linearr[0]),float(linearr[1])])\r\n    label.append(int(linearr[2]))\r\n    if int(linearr[2])==1:\r\n        gdatax.append(linearr[0])\r\n        gdatay.append(linearr[1])\r\n    else:\r\n        rdatax.append(linearr[0])\r\n        rdatay.append(linearr[1])\r\nl=len(label)\r\n#迭代2000次，过程和上面一样\r\nfor _ in xrange(2000):\r\n    z=np.zeros(N)\r\n    for i in xrange(l):\r\n        sh=1/(1+np.exp(-A[0]-data[i][0]*A[1]-data[i][1]*A[2]-A[3]*data[i][0]**2-A[4]*data[i][1]**2))\r\n        z[0]+=sh-label[i]\r\n        z[1]+=(sh-label[i])*data[i][0]\r\n        z[2]+=(sh-label[i])*data[i][1]\r\n        z[3]+=(sh-label[i])*data[i][0]**2\r\n        z[4]+=(sh-label[i])*data[i][1]**2\r\n    A=A-alpha*z/l\r\n#下面为画图过程\r\ntmpx=[i/10.0 for i in xrange(-30,30)]\r\ntmpy=[]\r\ntmpz=[]\r\nfor i in tmpx:\r\n    su=A[2]**2-4*A[4]*(A[0]+A[1]*i+A[3]*i**2)\r\n    if su&lt;0:\r\n        tmpy.append(0)\r\n        tmpz.append(0)\r\n    else:\r\n        tmpy.append((-A[2]-np.sqrt(su))/(2*A[4]))\r\n        tmpz.append((-A[2]+np.sqrt(su))/(2*A[4]))\r\nplt.plot(tmpx,tmpy)\r\nplt.plot(tmpx,tmpz)\r\nplt.plot(gdatax,gdatay,'ro',c='g')\r\nplt.plot(rdatax,rdatay,'ro',c='r')\r\nplt.show()</pre>\r\n效果展示：<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/figure_1-2.png\"><img class=\"alignnone wp-image-270 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/figure_1-2-300x225.png\" alt=\"\" width=\"300\" height=\"225\" /></a>\r\n\r\n致谢：<a href=\"http://blog.csdn.net/abcjennifer/article/details/7716281\">http://blog.csdn.net/abcjennifer/article/details/7716281</a>",
            "post_title": "单变量非线性拟合和逻辑回归",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "265-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-4-30 13:41:39",
            "post_modified_gmt": "2017-4-30 05:41:39",
            "post_content_filtered": "",
            "post_parent": "265",
            "guid": "http://ganjiacheng.cn/blog/?p=271",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "272",
            "post_author": "1",
            "post_date": "2017-4-30 13:42:01",
            "post_date_gmt": "2017-4-30 05:42:01",
            "post_content": "<p style=\"text-align: left;\">之前讲过最简单的<a href=\"https://ganjiacheng.cn/blog/?p=43\">线性拟合</a>和<a href=\"https://ganjiacheng.cn/blog/?p=152\">逻辑回归</a>，但常常的情况并不是一条直线就能解决问题的,所以来研究一下非线性的。<!--more--></p>\r\n<p style=\"text-align: left;\">总体方法还是和之前差不多的，只是改变了初始的变量的指数。首先列出式子，求cost function（代价函数，一般理解就是拟合的线与实际的点差多少距离经过处理的总和）。在根据梯度下降最小化cost function，就可以求得接近点的一组系数解，也就是下面的θ，之后就得到直线了。</p>\r\n<p style=\"text-align: left;\"><a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/QQ图片20170430130303-e1493528641389.jpg\"><img class=\"alignnone wp-image-266 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/QQ图片20170430130303-e1493528641389-225x300.jpg\" alt=\"\" width=\"225\" height=\"300\" /></a></p>\r\n<p style=\"text-align: left;\">先来看非线性拟合，这里还是用for而不是矩阵来实现中间一些计算。</p>\r\n\r\n<pre style=\"text-align: left;\">#python2.7\r\n#coding:utf-8\r\n#引入相关库\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\n#模拟产生点坐标\r\nk=int(np.random.random()*5+1)\r\nx=np.arange(-2,2,0.1)\r\ny=0\r\nfor i in range(k):\r\n    y+=np.random.random()*(x**k)\r\ny+=np.random.random(len(x))\r\n#N--幂指数也就是最高x^6\r\n#这里可以改进，如果N再高计算中会出现nan\r\nN=6\r\n#这个矩阵为上面的θ\r\nA=np.array([1]*N)\r\n#点的数量\r\nl=len(x)\r\n#梯度下降步长\r\nalpha=0.01\r\n#进行一千次迭代\r\nfor _ in xrange(1000):\r\n    #z为cost function叠加的那部分和的矩阵\r\n    z=np.zeros(N)\r\n    #遍历每个点，计算代价和\r\n    for i in xrange(l):\r\n        sh=0\r\n        for j in xrange(N):\r\n            sh+=A[j]*x[i]**j\r\n        for m in xrange(N):\r\n            z[m]+=(sh-y[i])*x[i]**m\r\n    #直接用矩阵计算更新所有θ\r\n    A=A-alpha*z/l \r\n#下面为画图部分\r\nplt.plot(x,y,\"ro\")\r\ntmpx=np.linspace(-2,2)\r\ndef cal(x):\r\n    tmpy=0\r\n    for i in xrange(N):\r\n        tmpy+=A[i]*x**i\r\n    return tmpy\r\ntmpy=[cal(tmpx[i]) for i in range(len(tmpx))]\r\nplt.plot(tmpx,tmpy)\r\nplt.show()</pre>\r\n<p style=\"text-align: left;\">效果展示：<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/figure_1-3-1.png\"><img class=\"alignnone wp-image-268 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/figure_1-3-1-300x225.png\" alt=\"\" width=\"300\" height=\"225\" /></a></p>\r\n<p style=\"text-align: left;\">再来看非线性logistic回归。</p>\r\n<p style=\"text-align: left;\"><img class=\"alignnone size-medium wp-image-269\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/QQ图片20170430132521-e1493529949189-225x300.jpg\" alt=\"\" width=\"225\" height=\"300\" /></p>\r\n<p style=\"text-align: left;\">这里和上面主要改变的就是多了一步sigmoid函数，还有在求cost function的时候多了一步求ln，我发现比较可靠的一种理解是为了让函数为凸函数，梯度下降可以保证取到全局最低点。再求偏导得到更新θ的式子，基本是一样的。</p>\r\n\r\n<pre style=\"text-align: left;\">#python2.7\r\n#coding:utf-8\r\n#产生点并写入文件\r\nimport numpy as np\r\nf=open(\"testSet2.txt\",\"w\")\r\nfor i in xrange(500):\r\n    a=np.random.random()*5 if np.random.random()&gt;0.5 else -np.random.random()*5\r\n    b=np.random.random()*5 if np.random.random()&gt;0.5 else -np.random.random()*5\r\n    if a**2+b**2&lt;5:\r\n        print &gt;&gt; f,str(a)+\"    \"+str(b)+\"   0\"\r\n    else:\r\n        print &gt;&gt; f,str(a)+\"    \"+str(b)+\"   1\"</pre>\r\n<pre style=\"text-align: left;\">#python2.7\r\n#coding:utf-8\r\n#引入相关库\r\nimport matplotlib.pyplot as plt\r\nimport numpy as np\r\n#读取文件中的点坐标及分类\r\nf=open(\"testSet2.txt\")\r\n#两类点坐标\r\ngdatax=[]\r\ngdatay=[]\r\nrdatax=[]\r\nrdatay=[]\r\n#类别\r\nlabel=[]\r\n#点坐标\r\ndata=[]\r\n#代表有5个θ\r\nN=5\r\n#θ的矩阵\r\nA=np.array([1]*N)\r\n#步长，这里设的比较大因为小了到不了最低点\r\nalpha=0.1\r\n#不同类的点画不同颜色的点\r\nfor i in f.readlines():\r\n    linearr=i.strip().split()\r\n    data.append([float(linearr[0]),float(linearr[1])])\r\n    label.append(int(linearr[2]))\r\n    if int(linearr[2])==1:\r\n        gdatax.append(linearr[0])\r\n        gdatay.append(linearr[1])\r\n    else:\r\n        rdatax.append(linearr[0])\r\n        rdatay.append(linearr[1])\r\nl=len(label)\r\n#迭代2000次，过程和上面一样\r\nfor _ in xrange(2000):\r\n    z=np.zeros(N)\r\n    for i in xrange(l):\r\n        sh=1/(1+np.exp(-A[0]-data[i][0]*A[1]-data[i][1]*A[2]-A[3]*data[i][0]**2-A[4]*data[i][1]**2))\r\n        z[0]+=sh-label[i]\r\n        z[1]+=(sh-label[i])*data[i][0]\r\n        z[2]+=(sh-label[i])*data[i][1]\r\n        z[3]+=(sh-label[i])*data[i][0]**2\r\n        z[4]+=(sh-label[i])*data[i][1]**2\r\n    A=A-alpha*z/l\r\n#下面为画图过程\r\ntmpx=[i/10.0 for i in xrange(-30,30)]\r\ntmpy=[]\r\ntmpz=[]\r\nfor i in tmpx:\r\n    su=A[2]**2-4*A[4]*(A[0]+A[1]*i+A[3]*i**2)\r\n    if su&lt;0:\r\n        tmpy.append(0)\r\n        tmpz.append(0)\r\n    else:\r\n        tmpy.append((-A[2]-np.sqrt(su))/(2*A[4]))\r\n        tmpz.append((-A[2]+np.sqrt(su))/(2*A[4]))\r\nplt.plot(tmpx,tmpy)\r\nplt.plot(tmpx,tmpz)\r\nplt.plot(gdatax,gdatay,'ro',c='g')\r\nplt.plot(rdatax,rdatay,'ro',c='r')\r\nplt.show()</pre>\r\n效果展示：<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/figure_1-2.png\"><img class=\"alignnone wp-image-270 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/04/figure_1-2-300x225.png\" alt=\"\" width=\"300\" height=\"225\" /></a>\r\n\r\n致谢：<a href=\"http://blog.csdn.net/abcjennifer/article/details/7716281\">http://blog.csdn.net/abcjennifer/article/details/7716281</a>",
            "post_title": "单变量非线性拟合和逻辑回归",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "265-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-4-30 13:42:01",
            "post_modified_gmt": "2017-4-30 05:42:01",
            "post_content_filtered": "",
            "post_parent": "265",
            "guid": "http://ganjiacheng.cn/blog/?p=272",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "273",
            "post_author": "1",
            "post_date": "2017-5-1 21:17:30",
            "post_date_gmt": "2017-5-1 13:17:30",
            "post_content": "刚开始理解svm（支持向量机）还是挺复杂的，现在稍微有了一点思路，便写下来。由于代码实现中对于svm基本是黑盒，所以这里直接讲一下，再用代码实现。<!--more-->\r\n\r\n在线性的情况下，svm就直接找一个超平面（下面就是那条线）来分割不同的两类。比如这个二分类，在超平面上的点距离这条线为0，定一侧距离这条线为正，一侧距离这条线为负，那么只要找到两类点和超平面最大的距离和就行。\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/05/figure_1-2.png\"><img class=\"alignnone wp-image-276 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/05/figure_1-2-300x225.png\" alt=\"\" width=\"300\" height=\"225\" /></a>\r\n<pre>#python2.7\r\n#coding:utf-8\r\n#引入所需库\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nfrom sklearn import svm\r\n#点集和类别\r\nf=open(\"testSet.txt\")\r\ndata=[]\r\nlabel=[]\r\n#取点\r\nfor i in f.readlines():\r\n    linearr=i.strip().split()\r\n    data.append([float(linearr[0]),float(linearr[1])])\r\n    label.append(int(linearr[2]))\r\ndata=np.array(data)\r\n#建立线性模型\r\nclf = svm.SVC(kernel='linear')\r\n#训练\r\nclf.fit(data, label)\r\n#取到训练完的权值\r\nw = clf.coef_[0]\r\na = -w[0] / w[1]\r\n#设定x坐标\r\nxx = np.linspace(-5, 5)\r\n#根据权值求得y\r\nyy = a * xx - (clf.intercept_[0]) / w[1]\r\n#画直线\r\nplt.plot(xx, yy, 'k-')\r\n#画点集\r\nplt.scatter(data[:, 0], data[:, 1], s=30, c=label, cmap=plt.cm.Paired)\r\nplt.show()</pre>\r\n对于非线性的情况，个人简单的理解：如果在一维没法分类解决的问题，就放到二维去解决，同理，二维可以用三维解决。\r\n\r\n例：下图中，圈是一类，叉是另一类。在一维点集里，没法用一个点来分别两个类别。所以升维到二维后，就发现很简单的用一条曲线就做好了分类。而找这条曲线或曲面首先就需要一个核函数。\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/05/IMG_3199-e1493609643520.jpg\"><img class=\"alignnone wp-image-274 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/05/IMG_3199-e1493609643520-300x259.jpg\" alt=\"\" width=\"300\" height=\"259\" /></a>\r\n<pre>#python2.7\r\n#coding:utf-8\r\n#引入所需库\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nfrom sklearn import svm\r\n#这个文件创建方式<a href=\"https://ganjiacheng.cn/blog/?p=265\">点击这里</a>\r\nf=open(\"testSet2.txt\")\r\ndata=[]\r\nlabel=[]\r\n#定义250000个点的二维点集\r\nxx,yy=np.meshgrid(np.linspace(-3, 3, 500),np.linspace(-3, 3, 500))\r\n#读取点\r\nfor i in f.readlines():\r\n    linearr=i.strip().split()\r\n    data.append([float(linearr[0]),float(linearr[1])])\r\n    label.append(int(linearr[2]))\r\ndata=np.array(data)\r\n#建立模型，核函数默认\r\nclf = svm.SVC()\r\n#训练数据\r\nclf.fit(data, label)\r\n#根据250000个点得到距离超平面距离\r\nZ = clf.decision_function(np.c_[xx.ravel(), yy.ravel()])\r\n#结果转为二维\r\nZ = Z.reshape(xx.shape)\r\n#画出平面上距离超平面为0的轮廓\r\ncontours = plt.contour(xx, yy, Z, levels=[0], linewidths=2,linetypes='--')\r\n#画点集\r\nplt.scatter(data[:, 0], data[:, 1], s=30, c=label, cmap=plt.cm.Paired)\r\nplt.show()</pre>\r\n结果展示：<img class=\"alignnone size-medium wp-image-278\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/05/figure_1-2-1-300x225.png\" alt=\"\" width=\"300\" height=\"225\" />",
            "post_title": "svm分类器---sklearn",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "svm%e5%88%86%e7%b1%bb%e5%99%a8-sklearn",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-5-1 21:17:30",
            "post_modified_gmt": "2017-5-1 13:17:30",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=273",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "274",
            "post_author": "1",
            "post_date": "2017-5-1 11:33:07",
            "post_date_gmt": "2017-5-1 03:33:07",
            "post_content": "",
            "post_title": "IMG_3199",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "img_3199",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-5-1 11:33:07",
            "post_modified_gmt": "2017-5-1 03:33:07",
            "post_content_filtered": "",
            "post_parent": "273",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2017/05/IMG_3199.jpg",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/jpeg",
            "comment_count": "0"
        },
        {
            "ID": "275",
            "post_author": "1",
            "post_date": "2017-5-1 11:40:09",
            "post_date_gmt": "2017-5-1 03:40:09",
            "post_content": "刚开始理解svm（支持向量机）还是挺复杂的，现在稍微有了一点思路，便写下来。由于代码实现中对于svm基本是黑盒，所以这里直接讲一下，在用代码实现。\r\n\r\n支持向量机有个超平面的概念，个人简单的理解：如果在一维没法分类解决的问题，就放到二维去解决，同理，二维可以用三维解决。\r\n\r\n例：下图中，圈是一类，叉是另一类。在一维点集里，没法用一个点来分别两个类别。所以升维到二维后，就发现很简单的用一条曲线就做好了分类。\r\n\r\n<img class=\"alignnone size-medium wp-image-274\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/05/IMG_3199-e1493609643520-300x259.jpg\" alt=\"\" width=\"300\" height=\"259\" />\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "svm分类器---sklearn",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "273-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-5-1 11:40:09",
            "post_modified_gmt": "2017-5-1 03:40:09",
            "post_content_filtered": "",
            "post_parent": "273",
            "guid": "http://ganjiacheng.cn/blog/?p=275",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "276",
            "post_author": "1",
            "post_date": "2017-5-1 11:57:06",
            "post_date_gmt": "2017-5-1 03:57:06",
            "post_content": "",
            "post_title": "figure_1-2",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "figure_1-2-2",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-5-1 11:57:06",
            "post_modified_gmt": "2017-5-1 03:57:06",
            "post_content_filtered": "",
            "post_parent": "273",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2017/05/figure_1-2.png",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/png",
            "comment_count": "0"
        },
        {
            "ID": "277",
            "post_author": "1",
            "post_date": "2017-5-1 12:05:27",
            "post_date_gmt": "2017-5-1 04:05:27",
            "post_content": "刚开始理解svm（支持向量机）还是挺复杂的，现在稍微有了一点思路，便写下来。由于代码实现中对于svm基本是黑盒，所以这里直接讲一下，在用代码实现。\r\n\r\n在线性的情况下，svm就直接找一个超平面（下面就是那条线）来分割不同的两类。在超平面上的点\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/05/figure_1-2.png\"><img class=\"alignnone wp-image-276 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/05/figure_1-2-300x225.png\" alt=\"\" width=\"300\" height=\"225\" /></a>\r\n\r\n对于非线性的情况，个人简单的理解：如果在一维没法分类解决的问题，就放到二维去解决，同理，二维可以用三维解决。\r\n\r\n例：下图中，圈是一类，叉是另一类。在一维点集里，没法用一个点来分别两个类别。所以升维到二维后，就发现很简单的用一条曲线就做好了分类。而找这条曲线或曲面首先就需要一个核函数。\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/05/IMG_3199-e1493609643520.jpg\"><img class=\"alignnone wp-image-274 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/05/IMG_3199-e1493609643520-300x259.jpg\" alt=\"\" width=\"300\" height=\"259\" /></a>\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "svm分类器---sklearn",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "273-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-5-1 12:05:27",
            "post_modified_gmt": "2017-5-1 04:05:27",
            "post_content_filtered": "",
            "post_parent": "273",
            "guid": "http://ganjiacheng.cn/blog/?p=277",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "278",
            "post_author": "1",
            "post_date": "2017-5-1 21:14:34",
            "post_date_gmt": "2017-5-1 13:14:34",
            "post_content": "",
            "post_title": "figure_1-2",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "figure_1-2-3",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-5-1 21:14:34",
            "post_modified_gmt": "2017-5-1 13:14:34",
            "post_content_filtered": "",
            "post_parent": "273",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2017/05/figure_1-2-1.png",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/png",
            "comment_count": "0"
        },
        {
            "ID": "279",
            "post_author": "1",
            "post_date": "2017-5-1 21:17:30",
            "post_date_gmt": "2017-5-1 13:17:30",
            "post_content": "刚开始理解svm（支持向量机）还是挺复杂的，现在稍微有了一点思路，便写下来。由于代码实现中对于svm基本是黑盒，所以这里直接讲一下，再用代码实现。<!--more-->\r\n\r\n在线性的情况下，svm就直接找一个超平面（下面就是那条线）来分割不同的两类。比如这个二分类，在超平面上的点距离这条线为0，定一侧距离这条线为正，一侧距离这条线为负，那么只要找到两类点和超平面最大的距离和就行。\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/05/figure_1-2.png\"><img class=\"alignnone wp-image-276 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/05/figure_1-2-300x225.png\" alt=\"\" width=\"300\" height=\"225\" /></a>\r\n<pre>#python2.7\r\n#coding:utf-8\r\n#引入所需库\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nfrom sklearn import svm\r\n#点集和类别\r\nf=open(\"testSet.txt\")\r\ndata=[]\r\nlabel=[]\r\n#取点\r\nfor i in f.readlines():\r\n    linearr=i.strip().split()\r\n    data.append([float(linearr[0]),float(linearr[1])])\r\n    label.append(int(linearr[2]))\r\ndata=np.array(data)\r\n#建立线性模型\r\nclf = svm.SVC(kernel='linear')\r\n#训练\r\nclf.fit(data, label)\r\n#取到训练完的权值\r\nw = clf.coef_[0]\r\na = -w[0] / w[1]\r\n#设定x坐标\r\nxx = np.linspace(-5, 5)\r\n#根据权值求得y\r\nyy = a * xx - (clf.intercept_[0]) / w[1]\r\n#画直线\r\nplt.plot(xx, yy, 'k-')\r\n#画点集\r\nplt.scatter(data[:, 0], data[:, 1], s=30, c=label, cmap=plt.cm.Paired)\r\nplt.show()</pre>\r\n对于非线性的情况，个人简单的理解：如果在一维没法分类解决的问题，就放到二维去解决，同理，二维可以用三维解决。\r\n\r\n例：下图中，圈是一类，叉是另一类。在一维点集里，没法用一个点来分别两个类别。所以升维到二维后，就发现很简单的用一条曲线就做好了分类。而找这条曲线或曲面首先就需要一个核函数。\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/05/IMG_3199-e1493609643520.jpg\"><img class=\"alignnone wp-image-274 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/05/IMG_3199-e1493609643520-300x259.jpg\" alt=\"\" width=\"300\" height=\"259\" /></a>\r\n<pre>#python2.7\r\n#coding:utf-8\r\n#引入所需库\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nfrom sklearn import svm\r\n#这个文件创建方式<a href=\"https://ganjiacheng.cn/blog/?p=265\">点击这里</a>\r\nf=open(\"testSet2.txt\")\r\ndata=[]\r\nlabel=[]\r\n#定义250000个点的二维点集\r\nxx,yy=np.meshgrid(np.linspace(-3, 3, 500),np.linspace(-3, 3, 500))\r\n#读取点\r\nfor i in f.readlines():\r\n    linearr=i.strip().split()\r\n    data.append([float(linearr[0]),float(linearr[1])])\r\n    label.append(int(linearr[2]))\r\ndata=np.array(data)\r\n#建立模型，核函数默认\r\nclf = svm.SVC()\r\n#训练数据\r\nclf.fit(data, label)\r\n#根据250000个点得到距离超平面距离\r\nZ = clf.decision_function(np.c_[xx.ravel(), yy.ravel()])\r\n#结果转为二维\r\nZ = Z.reshape(xx.shape)\r\n#画出平面上距离超平面为0的轮廓\r\ncontours = plt.contour(xx, yy, Z, levels=[0], linewidths=2,linetypes='--')\r\n#画点集\r\nplt.scatter(data[:, 0], data[:, 1], s=30, c=label, cmap=plt.cm.Paired)\r\nplt.show()</pre>\r\n结果展示：<img class=\"alignnone size-medium wp-image-278\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/05/figure_1-2-1-300x225.png\" alt=\"\" width=\"300\" height=\"225\" />",
            "post_title": "svm分类器---sklearn",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "273-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-5-1 21:17:30",
            "post_modified_gmt": "2017-5-1 13:17:30",
            "post_content_filtered": "",
            "post_parent": "273",
            "guid": "http://ganjiacheng.cn/blog/?p=279",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "282",
            "post_author": "1",
            "post_date": "2017-5-30 10:24:53",
            "post_date_gmt": "2017-5-30 02:24:53",
            "post_content": "因为网络等因素，有时候浏览器加载页面时间会很长，一直让用户看着白屏幕也不好。\r\n\r\n所以需要有loading动画来挽留用户。<!--more-->\r\n\r\n这个动画可以用css实现，也可以用js实现。\r\n\r\n这里先举两个简单的css的例子：\r\n\r\n<a href=\"https://ganjiacheng.cn/blogdemo/loading.html\">点击这里看演示</a>\r\n\r\n<a href=\"https://ganjiacheng.cn/blogdemo/loading1.html\">另一个演示</a>\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;loading&lt;/title&gt;\r\n    &lt;style type=\"text/css\"&gt;\r\n        .loading{\r\n            position:relative;\r\n        }\r\n        .loading span{\r\n            position: absolute;\r\n            bottom:-40px;\r\n            width: 10px;\r\n            height: 5px;\r\n            background-color: #000;\r\n            -webkit-animation:loading 1s;\r\n            -webkit-animation-iteration-count:infinite;\r\n            animation-timing-function: linear;\r\n        }\r\n        .loading span:nth-child(2){\r\n            left: 30px;\r\n            animation-delay: .2s;\r\n        }\r\n        .loading span:nth-child(3){\r\n            left: 60px;\r\n            animation-delay: .4s;\r\n        }\r\n        .loading span:nth-child(4){\r\n            left: 90px;\r\n            animation-delay: .6s;\r\n        }\r\n        .loading span:nth-child(5){\r\n            left: 120px;\r\n            animation-delay: .8s;\r\n        }\r\n        @-webkit-keyframes loading\r\n        {\r\n            0%   {height: 5px;transform:translateY(0px);}\r\n            50%  {height: 30px;transform:translateY(15px);}\r\n            100% {height: 5px;transform:translateY(0px);}\r\n        }\r\n    &lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;div class=\"loading\"&gt;\r\n        &lt;span&gt;&lt;/span&gt;\r\n        &lt;span&gt;&lt;/span&gt;\r\n        &lt;span&gt;&lt;/span&gt;\r\n        &lt;span&gt;&lt;/span&gt;\r\n        &lt;span&gt;&lt;/span&gt;\r\n    &lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;Document&lt;/title&gt;\r\n    &lt;style type=\"text/css\"&gt;\r\n        .loading,.loadingjs{\r\n            font-size: 50px;\r\n        }\r\n        .loading span{\r\n            position: absolute;\r\n        }\r\n        .loading span{\r\n            left:-10%;\r\n            width:100px;\r\n            animation:mymove 5s infinite;\r\n            animation-timing-function: cubic-bezier(0.38, 0.99, 0.45, 0.13);\r\n        }\r\n        .loading span:nth-child(2){\r\n            animation-delay:0.3s;\r\n        }\r\n        .loading span:nth-child(3){\r\n            animation-delay:0.6s;\r\n        }\r\n        .loading span:nth-child(4){\r\n            animation-delay:0.9s;\r\n        }\r\n        .loading span:nth-child(5){\r\n            animation-delay:1.2s;\r\n        }\r\n        @keyframes mymove{\r\n            from {left:-10%;}\r\n            to {left: 90%;}\r\n        }\r\n    &lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;div class=\"loading\" id=\"loading\"&gt;\r\n        &lt;span&gt;.&lt;/span&gt;\r\n        &lt;span&gt;.&lt;/span&gt;\r\n        &lt;span&gt;.&lt;/span&gt;\r\n        &lt;span&gt;.&lt;/span&gt;\r\n        &lt;span&gt;.&lt;/span&gt;\r\n    &lt;/div&gt;\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>",
            "post_title": "几个loading动画---可更新",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e5%87%a0%e4%b8%aaloading%e5%8a%a8%e7%94%bb-%e5%8f%af%e6%9b%b4%e6%96%b0",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-5-30 10:24:53",
            "post_modified_gmt": "2017-5-30 02:24:53",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=282",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "283",
            "post_author": "1",
            "post_date": "2017-5-15 10:32:20",
            "post_date_gmt": "2017-5-15 02:32:20",
            "post_content": "因为网络等因素，有时候浏览器加载页面时间会很长，一直让用户看着白屏幕也不好。\r\n\r\n所以需要有loading动画来挽留用户。\r\n\r\n这个动画可以用css实现，也可以用js实现。\r\n\r\n这里先举两个简单的css的例子：\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "几个loading动画---更新中",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "282-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-5-15 10:32:20",
            "post_modified_gmt": "2017-5-15 02:32:20",
            "post_content_filtered": "",
            "post_parent": "282",
            "guid": "http://ganjiacheng.cn/blog/?p=283",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "287",
            "post_author": "1",
            "post_date": "2017-5-26 01:34:05",
            "post_date_gmt": "2017-5-25 17:34:05",
            "post_content": "人脸检测技术，在深度学习之前，特征+分类器一直是最好的选择，dlib便是用hog特征+级联分类器实现了认脸的检测，它本身是用c++写的，但也有python接口。要看具体的文档可以到<a href=\"http://dlib.net/\">dlib官网</a>，这里只实现一个简单的应用。<!--more-->这是一个认脸定位+是不是笑脸的分类的应用。使用dlib定位，使用sklearn的svm来完成分类，笑脸与不笑脸是预先训练的，数据得自行准备。准备笑脸的图放在smile文件夹下，不笑的图放在no smile文件夹下。\r\n<pre>#python3.5\r\n#windows\r\n#author:gjc\r\nimport cv2\r\nimport dlib\r\nimport numpy as np\r\nfrom sklearn import svm\r\nimport os\r\nfrom PIL import Image\r\n#获取默认摄像头\r\ncap = cv2.VideoCapture(0)\r\n#dlib加载68个点模型\r\ndetector=dlib.get_frontal_face_detector()\r\npredictor_path = \"shape_predictor_68_face_landmarks.dat\"\r\npredictor = dlib.shape_predictor(predictor_path)\r\ndata=[]\r\nlabel=[]\r\n#读取认脸已分类好的数据\r\ndef read(dir,l):\r\n    f=os.listdir(dir)\r\n    L=len(f)-1\r\n    for i in range(L):\r\n        imgdir=dir+str(f[i])\r\n        im=Image.open(imgdir)\r\n        #draw = ImageDraw.Draw(im)\r\n        dets=detector(np.array(im),0)\r\n        if len(dets)==0:\r\n            continue\r\n        facepoint = np.array([[p.x, p.y] for p in predictor(np.array(im), dets[0]).parts()])\r\n        arr=np.zeros((20,2))\r\n        for j in range(48,68):\r\n            #draw.arc((facepoint[j][0]-5, facepoint[j][1]-5, facepoint[j][0]+5, facepoint[j][1]+5), 0, 360, fill=(55,255,155))  \r\n            arr[j-48][0]=facepoint[j][0]-facepoint[27][0]\r\n            arr[j-48][1]=facepoint[j][1]-facepoint[27][1]\r\n        arr=(arr-arr.min())/(arr.max()-arr.min())\r\n        data.append(arr.flatten())\r\n        label.append(l)\r\nread(\"smile/\",1)\r\nread(\"nosmile/\",0)\r\n#用svm进行分类\r\nclf = svm.SVC()\r\nclf.fit(np.array(data), label)\r\nwhile(1):\r\n    #读取摄像头图片\r\n    ret, frame = cap.read()\r\n    #定位\r\n    dets=detector(frame,0)\r\n    #画人脸的框\r\n    for i,d in enumerate(dets):\r\n        cv2.rectangle(frame, (int(d.left()), int(d.top())), (int(d.right()), int(d.bottom())), (0,255,0),2,0)\r\n    for i,d in enumerate(dets):\r\n        facepoint = np.array([[p.x, p.y] for p in predictor(frame, dets[i]).parts()])\r\n        #画68个点\r\n        for j in range(68):\r\n            #if facepoint[j][1]&lt;640 and facepoint[j][0]&lt;480:\r\n            #frame[facepoint[j][1]][facepoint[j][0]] = [0,0,0]\r\n            #cv2.line(frame,(facepoint[j][0],facepoint[j][1]),(facepoint[j+1][0],facepoint[j+1][1]),(155,155,155),2)\r\n            cv2.circle(frame,(facepoint[j][0],facepoint[j][1]),2,(55,255,155),2)\r\n        arr=np.zeros((20,2))\r\n        #读取特征点，归一化\r\n        for j in range(48,68):\r\n            arr[j-48][0]=facepoint[j][0]-facepoint[27][0]\r\n            arr[j-48][1]=facepoint[j][1]-facepoint[27][1]\r\n        arr=(arr-arr.min())/(arr.max()-arr.min())\r\n        #svm分类判断是否笑脸\r\n        if clf.decision_function(arr.flatten().reshape(1,-1))&gt;0:\r\n            cv2.putText(frame, 'smile', (int(d.left()),int(d.top())), cv2.FONT_HERSHEY_COMPLEX, 1, (255, 255 ,0), thickness = 2, lineType = 8)  \r\n        else:\r\n            cv2.putText(frame, 'No smile', (int(d.left()),int(d.top())), cv2.FONT_HERSHEY_COMPLEX, 1, (255, 255 ,0), thickness = 2, lineType = 8)  \r\n    #展示处理后的图片\r\n    cv2.imshow(\"capture\", frame)\r\n    if cv2.waitKey(1) &amp; 0xFF == ord('q'):\r\n        break\r\ncap.release()\r\ncv2.destroyAllWindows()</pre>\r\n效果如下：\r\n\r\n<img class=\"alignnone size-medium wp-image-294\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/05/QQ截图20170530130825-300x237.jpg\" alt=\"\" width=\"300\" height=\"237\" /> <img class=\"alignnone size-medium wp-image-295\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/05/QQ截图20170530130839-300x237.jpg\" alt=\"\" width=\"300\" height=\"237\" />",
            "post_title": "使用dlib实现人脸检测和笑脸识别",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e4%bd%bf%e7%94%a8dlib%e5%ae%9e%e7%8e%b0%e4%ba%ba%e8%84%b8%e6%a3%80%e6%b5%8b%e5%92%8c%e7%ac%91%e8%84%b8%e8%af%86%e5%88%ab",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-5-30 13:11:25",
            "post_modified_gmt": "2017-5-30 05:11:25",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=287",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "288",
            "post_author": "1",
            "post_date": "2017-5-26 01:34:05",
            "post_date_gmt": "2017-5-25 17:34:05",
            "post_content": "要说物体检测技术，在深度学习之前，特征+分类器一直是最好的选择，dlib便是用hog特征+级联分类器实现了认脸的检测，它本身是用c++写的，但也有python接口。要看具体的文档可以到<a href=\"http://dlib.net/\">dlib官网</a>，这里只实现一个简单的应用。",
            "post_title": "使用dlib实现认脸检测识别---python",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "287-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-5-26 01:34:05",
            "post_modified_gmt": "2017-5-25 17:34:05",
            "post_content_filtered": "",
            "post_parent": "287",
            "guid": "http://ganjiacheng.cn/blog/?p=288",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "290",
            "post_author": "1",
            "post_date": "2017-5-30 10:24:00",
            "post_date_gmt": "2017-5-30 02:24:00",
            "post_content": "因为网络等因素，有时候浏览器加载页面时间会很长，一直让用户看着白屏幕也不好。\r\n\r\n所以需要有loading动画来挽留用户。<!--more-->\r\n\r\n这个动画可以用css实现，也可以用js实现。\r\n\r\n这里先举两个简单的css的例子：\r\n\r\n<a href=\"https://ganjiacheng.cn/blogdemo/loading.html\">点击这里看演示</a>\r\n\r\n<a href=\"https://ganjiacheng.cn/blogdemo/loading1.html\">另一个演示</a>\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;loading&lt;/title&gt;\r\n    &lt;style type=\"text/css\"&gt;\r\n        .loading{\r\n            position:relative;\r\n        }\r\n        .loading span{\r\n            position: absolute;\r\n            bottom:-40px;\r\n            width: 10px;\r\n            height: 5px;\r\n            background-color: #000;\r\n            -webkit-animation:loading 1s;\r\n            -webkit-animation-iteration-count:infinite;\r\n            animation-timing-function: linear;\r\n        }\r\n        .loading span:nth-child(2){\r\n            left: 30px;\r\n            animation-delay: .2s;\r\n        }\r\n        .loading span:nth-child(3){\r\n            left: 60px;\r\n            animation-delay: .4s;\r\n        }\r\n        .loading span:nth-child(4){\r\n            left: 90px;\r\n            animation-delay: .6s;\r\n        }\r\n        .loading span:nth-child(5){\r\n            left: 120px;\r\n            animation-delay: .8s;\r\n        }\r\n        @-webkit-keyframes loading\r\n        {\r\n            0%   {height: 5px;transform:translateY(0px);}\r\n            50%  {height: 30px;transform:translateY(15px);}\r\n            100% {height: 5px;transform:translateY(0px);}\r\n        }\r\n    &lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;div class=\"loading\"&gt;\r\n        &lt;span&gt;&lt;/span&gt;\r\n        &lt;span&gt;&lt;/span&gt;\r\n        &lt;span&gt;&lt;/span&gt;\r\n        &lt;span&gt;&lt;/span&gt;\r\n        &lt;span&gt;&lt;/span&gt;\r\n    &lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;Document&lt;/title&gt;\r\n    &lt;style type=\"text/css\"&gt;\r\n        .loading,.loadingjs{\r\n            font-size: 50px;\r\n        }\r\n        .loading span{\r\n            position: absolute;\r\n        }\r\n        .loading span{\r\n            left:-10%;\r\n            width:100px;\r\n            animation:mymove 5s infinite;\r\n            animation-timing-function: cubic-bezier(0.38, 0.99, 0.45, 0.13);\r\n        }\r\n        .loading span:nth-child(2){\r\n            animation-delay:0.3s;\r\n        }\r\n        .loading span:nth-child(3){\r\n            animation-delay:0.6s;\r\n        }\r\n        .loading span:nth-child(4){\r\n            animation-delay:0.9s;\r\n        }\r\n        .loading span:nth-child(5){\r\n            animation-delay:1.2s;\r\n        }\r\n        @keyframes mymove{\r\n            from {left:-10%;}\r\n            to {left: 90%;}\r\n        }\r\n    &lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;div class=\"loading\" id=\"loading\"&gt;\r\n        &lt;span&gt;.&lt;/span&gt;\r\n        &lt;span&gt;.&lt;/span&gt;\r\n        &lt;span&gt;.&lt;/span&gt;\r\n        &lt;span&gt;.&lt;/span&gt;\r\n        &lt;span&gt;.&lt;/span&gt;\r\n    &lt;/div&gt;\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>",
            "post_title": "几个loading动画---可更新",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "282-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-5-30 10:24:00",
            "post_modified_gmt": "2017-5-30 02:24:00",
            "post_content_filtered": "",
            "post_parent": "282",
            "guid": "http://ganjiacheng.cn/blog/?p=290",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "291",
            "post_author": "1",
            "post_date": "2017-5-30 11:03:24",
            "post_date_gmt": "2017-5-30 03:03:24",
            "post_content": "这是<a href=\"https://www.tensorflow.org/\">tensorflow官网</a>的第一个例子，按他的做就可以在测试数据集达到91%左右的识别率。之后的cnn版本就可以在测试数据集达到98%以上的正确率。\r\n\r\n因为直接用他的写没什么感觉，然后稍微摸索了一下mnist的内容。<!--more-->\r\n\r\n下面先将mnist的55000个测试数据变成图片的形式，直观一点。\r\n<pre>#python3.5\r\n#windows\r\n#引入所需库\r\nimport tensorflow.examples.tutorials.mnist.input_data as input_data\r\nimport tensorflow as tf\r\nfrom PIL import Image,ImageFilter\r\nimport numpy as np\r\nimport os\r\n#关掉警告,tensorflow会有op unknown的警告\r\nos.environ['TF_CPP_MIN_LOG_LEVEL'] = '3' \r\n#读取mnist数据,第一次的话会自动下载\r\nmnist=input_data.read_data_sets(\"MNIST_data/\", one_hot=True)\r\n#将每个784*1的像素数据变成28*28,再生成图像\r\nfor z in range(len(mnist.train.images)):\r\n    imgArr=mnist.train.images[z]\r\n    im=Image.new(\"RGB\",(28,28))\r\n    for i in range(28):\r\n        for j in range(28):\r\n            r=int(imgArr[i*28+j]*255)\r\n            im.putpixel((j,i),(r,r,r))\r\n    num=np.argmax(mnist.train.labels[z])\r\n    im.save(\"train/\"+str(z)+\"_\"+str(num)+\".jpg\",\"jpeg\")\r\nprint(\"finish\")</pre>\r\n之后直接读取图像来进行训练。\r\n<pre>#python3.5\r\n#windows\r\nimport tensorflow.examples.tutorials.mnist.input_data as input_data\r\nimport tensorflow as tf\r\nimport numpy as np\r\nfrom PIL import Image,ImageFilter\r\nimport os\r\nmnists=input_data.read_data_sets(\"MNIST_data/\", one_hot=True)\r\nos.environ['TF_CPP_MIN_LOG_LEVEL'] = '3' \r\nf=os.listdir(\"train/\")\r\nL=len(f)-1\r\nmnist=np.zeros((L,784))\r\nlabel=np.zeros((L,10))\r\n#读取每个图像数据存到mnist中，类别存到label中\r\nfor i in range(L):\r\n    imgdir='train/'+str(f[i])\r\n    img=Image.open(imgdir).convert(\"L\")\r\n    mnist[i]=np.array(img.getdata())/255\r\n    label[i]=[1 if j==int(f[i].split(\"_\")[1][:-4]) else 0 for j in range(10)]\r\n#之后的操作和tensorflow官网一样\r\nx=tf.placeholder(tf.float32,[None,784])\r\nw=tf.Variable(tf.zeros([784,10]))\r\nb=tf.Variable(tf.zeros([10]))\r\ny=tf.nn.softmax(tf.matmul(x,w)+b)\r\ny_=tf.placeholder(tf.float32,[None,10])\r\ncross_entropy=-tf.reduce_sum(y_*tf.log(y))\r\ntrain_step=tf.train.GradientDescentOptimizer(0.01).minimize(cross_entropy)\r\nsess=tf.InteractiveSession()\r\ntf.global_variables_initializer().run()\r\nfor _ in range(1000):\r\n    rand=np.random.randint(0,L,(100,))\r\n    batch_xs=mnist[rand]\r\n    batch_ys=label[rand]\r\n    sess.run(train_step,feed_dict={x:batch_xs,y_:batch_ys})\r\ncorrect_prediction=tf.equal(tf.argmax(y,1),tf.argmax(y_,1))\r\naccuracy=tf.reduce_mean(tf.cast(correct_prediction,tf.float32))\r\nprint(sess.run(accuracy,feed_dict={x:mnists.test.images,y_:mnists.test.labels})</pre>\r\n运行结果91%左右。也算稍稍做了改变。\r\n\r\ncnn版的还有待研究，虽然代码也很简单。先贴在这里。\r\n<pre>import tensorflow as tf\r\nfrom tensorflow.examples.tutorials.mnist import input_data\r\ndef weight_varible(shape):\r\n    initial = tf.truncated_normal(shape, stddev=0.1)\r\n    return tf.Variable(initial)\r\n\r\ndef bias_variable(shape):\r\n    initial = tf.constant(0.1, shape=shape)\r\n    return tf.Variable(initial)\r\n\r\ndef conv2d(x, W):\r\n    return tf.nn.conv2d(x, W, strides=[1, 1, 1, 1], padding='SAME')\r\n\r\ndef max_pool_2x2(x):\r\n    return tf.nn.max_pool(x, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')\r\n\r\n\r\nmnist = input_data.read_data_sets(\"MNIST_data/\", one_hot=True)\r\nprint(\"Download Done!\")\r\n\r\nsess = tf.InteractiveSession()\r\n\r\n# paras\r\nW_conv1 = weight_varible([5, 5, 1, 32])\r\nb_conv1 = bias_variable([32])\r\n\r\n# conv layer-1\r\nx = tf.placeholder(tf.float32, [None, 784])\r\nx_image = tf.reshape(x, [-1, 28, 28, 1])\r\n\r\nh_conv1 = tf.nn.relu(conv2d(x_image, W_conv1) + b_conv1)\r\nh_pool1 = max_pool_2x2(h_conv1)\r\n\r\n# conv layer-2\r\nW_conv2 = weight_varible([5, 5, 32, 64])\r\nb_conv2 = bias_variable([64])\r\n\r\nh_conv2 = tf.nn.relu(conv2d(h_pool1, W_conv2) + b_conv2)\r\nh_pool2 = max_pool_2x2(h_conv2)\r\n\r\n# full connection\r\nW_fc1 = weight_varible([7 * 7 * 64, 1024])\r\nb_fc1 = bias_variable([1024])\r\n\r\nh_pool2_flat = tf.reshape(h_pool2, [-1, 7 * 7 * 64])\r\nh_fc1 = tf.nn.relu(tf.matmul(h_pool2_flat, W_fc1) + b_fc1)\r\n\r\n# dropout\r\nkeep_prob = tf.placeholder(tf.float32)\r\nh_fc1_drop = tf.nn.dropout(h_fc1, keep_prob)\r\n\r\n# output layer: softmax\r\nW_fc2 = weight_varible([1024, 10])\r\nb_fc2 = bias_variable([10])\r\n\r\ny_conv = tf.nn.softmax(tf.matmul(h_fc1_drop, W_fc2) + b_fc2)\r\ny_ = tf.placeholder(tf.float32, [None, 10])\r\n\r\n# model training\r\ncross_entropy = -tf.reduce_sum(y_ * tf.log(y_conv))\r\ntrain_step = tf.train.AdamOptimizer(1e-4).minimize(cross_entropy)\r\n\r\ncorrect_prediction = tf.equal(tf.arg_max(y_conv, 1), tf.arg_max(y_, 1))\r\naccuracy = tf.reduce_mean(tf.cast(correct_prediction, tf.float32))\r\n\r\nsess.run(tf.initialize_all_variables())\r\nfor i in range(2000):\r\n    batch = mnist.train.next_batch(50)\r\n\r\n    if i % 100 == 0:\r\n        train_accuacy = accuracy.eval(feed_dict={x: batch[0], y_: batch[1], keep_prob: 1.0})\r\n        print(\"step %d, training accuracy %g\"%(i, train_accuacy))\r\n    train_step.run(feed_dict = {x: batch[0], y_: batch[1], keep_prob: 0.5})\r\n\r\n# accuacy on test\r\nprint(\"test accuracy %g\"%(accuracy.eval(feed_dict={x: mnist.test.images[0:2000], y_: mnist.test.labels[0:2000], keep_prob: 1.0})))</pre>",
            "post_title": "tensorflow入门之mnist手写数字识别",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "262-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-5-30 11:03:24",
            "post_modified_gmt": "2017-5-30 03:03:24",
            "post_content_filtered": "",
            "post_parent": "262",
            "guid": "http://ganjiacheng.cn/blog/?p=291",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "292",
            "post_author": "1",
            "post_date": "2017-5-30 11:05:27",
            "post_date_gmt": "2017-5-30 03:05:27",
            "post_content": "这是<a href=\"https://www.tensorflow.org/\">tensorflow官网</a>的第一个例子，按他的做就可以在测试数据集达到91%左右的识别率。之后的cnn版本就可以在测试数据集达到98%以上的正确率。\r\n\r\n因为直接用他的写没什么感觉，然后稍微摸索了一下mnist的内容。<!--more-->\r\n\r\n下面先将mnist的55000个测试数据变成图片的形式，直观一点。\r\n<pre>#python3.5\r\n#windows\r\n#引入所需库\r\nimport tensorflow.examples.tutorials.mnist.input_data as input_data\r\nimport tensorflow as tf\r\nfrom PIL import Image,ImageFilter\r\nimport numpy as np\r\nimport os\r\n#关掉警告,tensorflow会有op unknown的警告\r\nos.environ['TF_CPP_MIN_LOG_LEVEL'] = '3' \r\n#读取mnist数据,第一次的话会自动下载\r\nmnist=input_data.read_data_sets(\"MNIST_data/\", one_hot=True)\r\n#将每个784*1的像素数据变成28*28,再生成图像\r\nfor z in range(len(mnist.train.images)):\r\n    imgArr=mnist.train.images[z]\r\n    im=Image.new(\"RGB\",(28,28))\r\n    for i in range(28):\r\n        for j in range(28):\r\n            r=int(imgArr[i*28+j]*255)\r\n            im.putpixel((j,i),(r,r,r))\r\n    num=np.argmax(mnist.train.labels[z])\r\n    im.save(\"train/\"+str(z)+\"_\"+str(num)+\".jpg\",\"jpeg\")\r\nprint(\"finish\")</pre>\r\n之后直接读取图像来进行训练。\r\n<pre>#python3.5\r\n#windows\r\nimport tensorflow.examples.tutorials.mnist.input_data as input_data\r\nimport tensorflow as tf\r\nimport numpy as np\r\nfrom PIL import Image,ImageFilter\r\nimport os\r\nmnists=input_data.read_data_sets(\"MNIST_data/\", one_hot=True)\r\nos.environ['TF_CPP_MIN_LOG_LEVEL'] = '3' \r\nf=os.listdir(\"train/\")\r\nL=len(f)-1\r\nmnist=np.zeros((L,784))\r\nlabel=np.zeros((L,10))\r\n#读取每个图像数据存到mnist中，类别存到label中\r\nfor i in range(L):\r\n    imgdir='train/'+str(f[i])\r\n    img=Image.open(imgdir).convert(\"L\")\r\n    mnist[i]=np.array(img.getdata())/255\r\n    label[i]=[1 if j==int(f[i].split(\"_\")[1][:-4]) else 0 for j in range(10)]\r\n#之后的操作和tensorflow官网一样\r\nx=tf.placeholder(tf.float32,[None,784])\r\nw=tf.Variable(tf.zeros([784,10]))\r\nb=tf.Variable(tf.zeros([10]))\r\ny=tf.nn.softmax(tf.matmul(x,w)+b)\r\ny_=tf.placeholder(tf.float32,[None,10])\r\ncross_entropy=-tf.reduce_sum(y_*tf.log(y))\r\ntrain_step=tf.train.GradientDescentOptimizer(0.01).minimize(cross_entropy)\r\nsess=tf.InteractiveSession()\r\ntf.global_variables_initializer().run()\r\nfor _ in range(1000):\r\n    rand=np.random.randint(0,L,(100,))\r\n    batch_xs=mnist[rand]\r\n    batch_ys=label[rand]\r\n    sess.run(train_step,feed_dict={x:batch_xs,y_:batch_ys})\r\ncorrect_prediction=tf.equal(tf.argmax(y,1),tf.argmax(y_,1))\r\naccuracy=tf.reduce_mean(tf.cast(correct_prediction,tf.float32))\r\nprint(sess.run(accuracy,feed_dict={x:mnists.test.images,y_:mnists.test.labels})</pre>\r\n运行结果91%左右。也算稍稍做了改变。\r\n\r\ncnn版的还有待研究，虽然代码也很简单。先贴在这里（网上找的，兄台没记住链接不好意思）。\r\n<pre>import tensorflow as tf\r\nfrom tensorflow.examples.tutorials.mnist import input_data\r\ndef weight_varible(shape):\r\n    initial = tf.truncated_normal(shape, stddev=0.1)\r\n    return tf.Variable(initial)\r\n\r\ndef bias_variable(shape):\r\n    initial = tf.constant(0.1, shape=shape)\r\n    return tf.Variable(initial)\r\n\r\ndef conv2d(x, W):\r\n    return tf.nn.conv2d(x, W, strides=[1, 1, 1, 1], padding='SAME')\r\n\r\ndef max_pool_2x2(x):\r\n    return tf.nn.max_pool(x, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')\r\n\r\n\r\nmnist = input_data.read_data_sets(\"MNIST_data/\", one_hot=True)\r\nprint(\"Download Done!\")\r\n\r\nsess = tf.InteractiveSession()\r\n\r\n# paras\r\nW_conv1 = weight_varible([5, 5, 1, 32])\r\nb_conv1 = bias_variable([32])\r\n\r\n# conv layer-1\r\nx = tf.placeholder(tf.float32, [None, 784])\r\nx_image = tf.reshape(x, [-1, 28, 28, 1])\r\n\r\nh_conv1 = tf.nn.relu(conv2d(x_image, W_conv1) + b_conv1)\r\nh_pool1 = max_pool_2x2(h_conv1)\r\n\r\n# conv layer-2\r\nW_conv2 = weight_varible([5, 5, 32, 64])\r\nb_conv2 = bias_variable([64])\r\n\r\nh_conv2 = tf.nn.relu(conv2d(h_pool1, W_conv2) + b_conv2)\r\nh_pool2 = max_pool_2x2(h_conv2)\r\n\r\n# full connection\r\nW_fc1 = weight_varible([7 * 7 * 64, 1024])\r\nb_fc1 = bias_variable([1024])\r\n\r\nh_pool2_flat = tf.reshape(h_pool2, [-1, 7 * 7 * 64])\r\nh_fc1 = tf.nn.relu(tf.matmul(h_pool2_flat, W_fc1) + b_fc1)\r\n\r\n# dropout\r\nkeep_prob = tf.placeholder(tf.float32)\r\nh_fc1_drop = tf.nn.dropout(h_fc1, keep_prob)\r\n\r\n# output layer: softmax\r\nW_fc2 = weight_varible([1024, 10])\r\nb_fc2 = bias_variable([10])\r\n\r\ny_conv = tf.nn.softmax(tf.matmul(h_fc1_drop, W_fc2) + b_fc2)\r\ny_ = tf.placeholder(tf.float32, [None, 10])\r\n\r\n# model training\r\ncross_entropy = -tf.reduce_sum(y_ * tf.log(y_conv))\r\ntrain_step = tf.train.AdamOptimizer(1e-4).minimize(cross_entropy)\r\n\r\ncorrect_prediction = tf.equal(tf.arg_max(y_conv, 1), tf.arg_max(y_, 1))\r\naccuracy = tf.reduce_mean(tf.cast(correct_prediction, tf.float32))\r\n\r\nsess.run(tf.initialize_all_variables())\r\nfor i in range(2000):\r\n    batch = mnist.train.next_batch(50)\r\n\r\n    if i % 100 == 0:\r\n        train_accuacy = accuracy.eval(feed_dict={x: batch[0], y_: batch[1], keep_prob: 1.0})\r\n        print(\"step %d, training accuracy %g\"%(i, train_accuacy))\r\n    train_step.run(feed_dict = {x: batch[0], y_: batch[1], keep_prob: 0.5})\r\n\r\n# accuacy on test\r\nprint(\"test accuracy %g\"%(accuracy.eval(feed_dict={x: mnist.test.images[0:2000], y_: mnist.test.labels[0:2000], keep_prob: 1.0})))</pre>",
            "post_title": "tensorflow入门之mnist手写数字识别",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "262-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-5-30 11:05:27",
            "post_modified_gmt": "2017-5-30 03:05:27",
            "post_content_filtered": "",
            "post_parent": "262",
            "guid": "http://ganjiacheng.cn/blog/?p=292",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "293",
            "post_author": "1",
            "post_date": "2017-5-30 11:10:24",
            "post_date_gmt": "2017-5-30 03:10:24",
            "post_content": "认脸检测技术，在深度学习之前，特征+分类器一直是最好的选择，dlib便是用hog特征+级联分类器实现了认脸的检测，它本身是用c++写的，但也有python接口。要看具体的文档可以到<a href=\"http://dlib.net/\">dlib官网</a>，这里只实现一个简单的应用。\r\n\r\n&nbsp;",
            "post_title": "使用dlib实现认脸检测识别---python",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "287-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-5-30 11:10:24",
            "post_modified_gmt": "2017-5-30 03:10:24",
            "post_content_filtered": "",
            "post_parent": "287",
            "guid": "http://ganjiacheng.cn/blog/?p=293",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "294",
            "post_author": "1",
            "post_date": "2017-5-30 13:09:03",
            "post_date_gmt": "2017-5-30 05:09:03",
            "post_content": "",
            "post_title": "QQ截图20170530130825",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "qq%e6%88%aa%e5%9b%be20170530130825",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-5-30 13:09:03",
            "post_modified_gmt": "2017-5-30 05:09:03",
            "post_content_filtered": "",
            "post_parent": "287",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2017/05/QQ截图20170530130825.jpg",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/jpeg",
            "comment_count": "0"
        },
        {
            "ID": "295",
            "post_author": "1",
            "post_date": "2017-5-30 13:09:10",
            "post_date_gmt": "2017-5-30 05:09:10",
            "post_content": "",
            "post_title": "QQ截图20170530130839",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "qq%e6%88%aa%e5%9b%be20170530130839",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-5-30 13:09:10",
            "post_modified_gmt": "2017-5-30 05:09:10",
            "post_content_filtered": "",
            "post_parent": "287",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2017/05/QQ截图20170530130839.jpg",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/jpeg",
            "comment_count": "0"
        },
        {
            "ID": "296",
            "post_author": "1",
            "post_date": "2017-5-30 13:10:55",
            "post_date_gmt": "2017-5-30 05:10:55",
            "post_content": "人脸检测技术，在深度学习之前，特征+分类器一直是最好的选择，dlib便是用hog特征+级联分类器实现了认脸的检测，它本身是用c++写的，但也有python接口。要看具体的文档可以到<a href=\"http://dlib.net/\">dlib官网</a>，这里只实现一个简单的应用。<!--more-->这是一个认脸定位+是不是笑脸的分类的应用。使用dlib定位，使用sklearn的svm来完成分类，笑脸与不笑脸是预先训练的，数据得自行准备。准备笑脸的图放在smile文件夹下，不笑的图放在no smile文件夹下。\r\n<pre>#python3.5\r\n#windows\r\n#author:gjc\r\nimport cv2\r\nimport dlib\r\nimport numpy as np\r\nfrom sklearn import svm\r\nimport os\r\nfrom PIL import Image\r\n#获取默认摄像头\r\ncap = cv2.VideoCapture(0)\r\n#dlib加载68个点模型\r\ndetector=dlib.get_frontal_face_detector()\r\npredictor_path = \"shape_predictor_68_face_landmarks.dat\"\r\npredictor = dlib.shape_predictor(predictor_path)\r\ndata=[]\r\nlabel=[]\r\n#读取认脸已分类好的数据\r\ndef read(dir,l):\r\n    f=os.listdir(dir)\r\n    L=len(f)-1\r\n    for i in range(L):\r\n        imgdir=dir+str(f[i])\r\n        im=Image.open(imgdir)\r\n        #draw = ImageDraw.Draw(im)\r\n        dets=detector(np.array(im),0)\r\n        if len(dets)==0:\r\n            continue\r\n        facepoint = np.array([[p.x, p.y] for p in predictor(np.array(im), dets[0]).parts()])\r\n        arr=np.zeros((20,2))\r\n        for j in range(48,68):\r\n            #draw.arc((facepoint[j][0]-5, facepoint[j][1]-5, facepoint[j][0]+5, facepoint[j][1]+5), 0, 360, fill=(55,255,155))  \r\n            arr[j-48][0]=facepoint[j][0]-facepoint[27][0]\r\n            arr[j-48][1]=facepoint[j][1]-facepoint[27][1]\r\n        arr=(arr-arr.min())/(arr.max()-arr.min())\r\n        data.append(arr.flatten())\r\n        label.append(l)\r\nread(\"smile/\",1)\r\nread(\"nosmile/\",0)\r\n#用svm进行分类\r\nclf = svm.SVC()\r\nclf.fit(np.array(data), label)\r\nwhile(1):\r\n    #读取摄像头图片\r\n    ret, frame = cap.read()\r\n    #定位\r\n    dets=detector(frame,0)\r\n    #画人脸的框\r\n    for i,d in enumerate(dets):\r\n        cv2.rectangle(frame, (int(d.left()), int(d.top())), (int(d.right()), int(d.bottom())), (0,255,0),2,0)\r\n    for i,d in enumerate(dets):\r\n        facepoint = np.array([[p.x, p.y] for p in predictor(frame, dets[i]).parts()])\r\n        #画68个点\r\n        for j in range(68):\r\n            #if facepoint[j][1]&lt;640 and facepoint[j][0]&lt;480:\r\n            #frame[facepoint[j][1]][facepoint[j][0]] = [0,0,0]\r\n            #cv2.line(frame,(facepoint[j][0],facepoint[j][1]),(facepoint[j+1][0],facepoint[j+1][1]),(155,155,155),2)\r\n            cv2.circle(frame,(facepoint[j][0],facepoint[j][1]),2,(55,255,155),2)\r\n        arr=np.zeros((20,2))\r\n        #读取特征点，归一化\r\n        for j in range(48,68):\r\n            arr[j-48][0]=facepoint[j][0]-facepoint[27][0]\r\n            arr[j-48][1]=facepoint[j][1]-facepoint[27][1]\r\n        arr=(arr-arr.min())/(arr.max()-arr.min())\r\n        #svm分类判断是否笑脸\r\n        if clf.decision_function(arr.flatten().reshape(1,-1))&gt;0:\r\n            cv2.putText(frame, 'smile', (int(d.left()),int(d.top())), cv2.FONT_HERSHEY_COMPLEX, 1, (255, 255 ,0), thickness = 2, lineType = 8)  \r\n        else:\r\n            cv2.putText(frame, 'No smile', (int(d.left()),int(d.top())), cv2.FONT_HERSHEY_COMPLEX, 1, (255, 255 ,0), thickness = 2, lineType = 8)  \r\n    #展示处理后的图片\r\n    cv2.imshow(\"capture\", frame)\r\n    if cv2.waitKey(1) &amp; 0xFF == ord('q'):\r\n        break\r\ncap.release()\r\ncv2.destroyAllWindows()</pre>\r\n效果如下：\r\n\r\n<img class=\"alignnone size-medium wp-image-294\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/05/QQ截图20170530130825-300x237.jpg\" alt=\"\" width=\"300\" height=\"237\" /> <img class=\"alignnone size-medium wp-image-295\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/05/QQ截图20170530130839-300x237.jpg\" alt=\"\" width=\"300\" height=\"237\" />",
            "post_title": "使用dlib实现人脸检测和笑脸识别",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "287-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-5-30 13:10:55",
            "post_modified_gmt": "2017-5-30 05:10:55",
            "post_content_filtered": "",
            "post_parent": "287",
            "guid": "http://ganjiacheng.cn/blog/?p=296",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "298",
            "post_author": "1",
            "post_date": "2017-5-30 17:24:05",
            "post_date_gmt": "2017-5-30 09:24:05",
            "post_content": "python篇：\r\n\r\n1.windows上，在pip install xxx失败的时候怎么办？\r\n\r\n答：<a href=\"http://www.lfd.uci.edu/~gohlke/pythonlibs/\">http://www.lfd.uci.edu/~gohlke/pythonlibs/</a>到这里面寻找whl，下载之后用 pip install xxx.whl 来安装。\r\n\r\n<!--more-->\r\n\r\n2.解决pip3报错Fatal error in launcher: Unable to create process using '\"'。\r\n\r\n一种：\r\n<pre>import pip\r\npip.main(['install','ModuleName'])</pre>\r\n另一种：\r\n<pre class=\"lang-py prettyprint prettyprinted\"><code><span class=\"pln\">python3 </span><span class=\"pun\">-</span><span class=\"pln\">m pip install whlName\r\n</span></code></pre>\r\n3.linux上python3中文会显示UnicodeEncodeError: 'ascii' codec can't encode character。\r\n<pre>import io\r\nimport sys\r\nsys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding='utf-8')</pre>",
            "post_title": "python日常问答篇--更新中",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "87-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-5-30 17:24:05",
            "post_modified_gmt": "2017-5-30 09:24:05",
            "post_content_filtered": "",
            "post_parent": "87",
            "guid": "http://ganjiacheng.cn/blog/?p=298",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "300",
            "post_author": "1",
            "post_date": "2017-7-22 16:04:02",
            "post_date_gmt": "2017-7-22 08:04:02",
            "post_content": "这里讲讲yolo在windows的配置，实际操作可行，这里使用时电脑为win8.1。\r\n\r\n开始前可以到nvidia官网先看看显卡是否支持gpu哦！<!--more-->\r\n\r\n首先下载vs2015，cuda，cudnn并配置好，这里不多叙述，标准就是：能在vs创建一个cuda项目并运行他的默认导入的代码并得到结果。在下载个opencv2.4.9，这里2.49是项目需求，改其他版本的话得改代码。\r\n\r\n之后使用了git下载github上某个大神改好后的代码\r\n<pre>git clone https://github.com/AlexeyAB/darknet.git</pre>\r\n在vs里打开项目，打开build下的darknet.sln\r\n\r\n然后在右边项目上右键-&gt;属性，\r\n\r\n在 vc++目录 中编辑包含目录，把opencv里的include文件夹路径添加到里面。\r\n\r\n在 c/c++   常规    附加包含目录 中把opencv的include路径加进去，如果没有cudaToolkitIncludeDir则把cuda和cudnn的include路径加进去。\r\n\r\n在c/c++   预处理器   预处理器定义中加上OPENCV和GPU。有报错的话也可以加上_CRT_SECURE_NO_DEPRECATE，_SCL_SECURE_NO_DEPRECATE这两个。\r\n\r\n在链接器   常规   添加库目录中加入opencv的lib路径，如果没有cuda_Path的话加上cuda，cudnn的lib路径。\r\n\r\n在链接器   输入   附加依赖项中加入pthreadVC2.lib（自行下载），cublas.lib，curand.lib，cudart.lib和opencv里的所有lib。\r\n\r\n然后就可以尝试运行啦。少库的话把库的路径加进去就行。\r\n\r\n之后就可以下载一个<a href=\"https://pjreddie.com/media/files/yolo.weights\">yolo.weights</a>，放在x64文件夹下。\r\n\r\n在x64文件夹下运行\r\n<pre>darknet.exe detector test data/coco.data yolo.cfg yolo.weights -i 0 -thresh 0.2</pre>\r\n输入图片文件路径\r\n\r\n配置好opencv的话就会直接展示，否则会保存成prediction.png文件。\r\n\r\n或者运行下面的代码就会调用摄像头并时时检测。\r\n<pre>darknet.exe detector demo data/coco.data yolo.cfg yolo.weights</pre>\r\n看data/coco.name就可以知道该模型可识别的80类。\r\n\r\ncpu上的平均8秒一张图左右，\r\n\r\n我的920m gpu可以达到5fps，也还达不到视频标准。\r\n\r\n下次再具体讲讲训练自己的数据。\r\n\r\n参考地址：<a href=\"https://github.com/AlexeyAB/darknet\">https://github.com/AlexeyAB/darknet</a>",
            "post_title": "yolo v2在windows的配置",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "yolo-v2%e5%9c%a8windows%e7%9a%84%e9%85%8d%e7%bd%ae",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-22 16:04:02",
            "post_modified_gmt": "2017-7-22 08:04:02",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=300",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "301",
            "post_author": "1",
            "post_date": "2017-6-6 10:41:09",
            "post_date_gmt": "2017-6-6 02:41:09",
            "post_content": "",
            "post_title": "yolov2训练自己数据集",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "300-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-6-6 10:41:09",
            "post_modified_gmt": "2017-6-6 02:41:09",
            "post_content_filtered": "",
            "post_parent": "300",
            "guid": "http://ganjiacheng.cn/blog/?p=301",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "302",
            "post_author": "1",
            "post_date": "2017-6-6 10:41:17",
            "post_date_gmt": "2017-6-6 02:41:17",
            "post_content": "",
            "post_title": "yolo v2训练自己数据集",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "300-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-6-6 10:41:17",
            "post_modified_gmt": "2017-6-6 02:41:17",
            "post_content_filtered": "",
            "post_parent": "300",
            "guid": "http://ganjiacheng.cn/blog/?p=302",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "304",
            "post_author": "1",
            "post_date": "2017-6-6 10:47:38",
            "post_date_gmt": "2017-6-6 02:47:38",
            "post_content": "",
            "post_title": "yolo v2配置与训练自己数据集",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "300-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-6-6 10:47:38",
            "post_modified_gmt": "2017-6-6 02:47:38",
            "post_content_filtered": "",
            "post_parent": "300",
            "guid": "http://ganjiacheng.cn/blog/?p=304",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "305",
            "post_author": "1",
            "post_date": "2017-7-14 11:49:45",
            "post_date_gmt": "2017-7-14 03:49:45",
            "post_content": "RSA加密具体细节这里就不说了可以自行搜索。这里做php实现的例子。\r\n\r\n思路：在服务器端php先产生一个公钥给js用于加密，同时产生一个私钥用于解密并保存在session中，js获取用户输入并用公钥加密，然后将加密的字符串提交到后端，后端php用私钥解密后得到实际用户输入。<!--more-->\r\n\r\n这里主要安全的一点就是信息传输过程中始终是加密后的字符串，即使被抓包也无法得到实际用户输入。\r\n\r\n首先下载用于rsa加密的一些文件，<a href=\"http://pan.baidu.com/s/1o84ZXDw\">点击这里下载</a>。\r\n\r\n将这个文件夹与下面的php文件放在服务器中的同目录。\r\n\r\n下面编写文件file1.php\r\n<pre>&lt;?php\r\n//产生公钥与私钥\r\n@session_start();\r\nset_include_path('rsa/classes/phpseclib/');\r\ninclude_once('Crypt/RSA.php');\r\n$rsa = new Crypt_RSA();\r\n$rsa-&gt;setPrivateKeyFormat(CRYPT_RSA_PRIVATE_FORMAT_PKCS1);\r\n$rsa-&gt;setPublicKeyFormat(CRYPT_RSA_PUBLIC_FORMAT_RAW);\r\n$key = $rsa-&gt;createKey(1024);\r\n$privatekey = $key['privatekey'];\r\n$_SESSION['privatekey'] = $privatekey;\r\n$publickey = $key['publickey']['n']-&gt;toHex();\r\n?&gt;\r\n&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;test&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;input type=\"text\" placeholder=\"要加密字符串\" id=\"str\"&gt;\r\n    &lt;button id=\"sub\"&gt;submit&lt;/button&gt;\r\n    &lt;div id=\"encrypted\"&gt;&lt;/div&gt;\r\n    &lt;div id=\"decrypted\"&gt;&lt;/div&gt;\r\n    &lt;script src=\"//cdn.bootcss.com/jquery/3.1.0/jquery.min.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\" src=\"rsa/jsbn/jsbn.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\" src=\"rsa/jsbn/prng4.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\" src=\"rsa/jsbn/rng.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\" src=\"rsa/jsbn/rsa.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n    //js获得公钥进行加密\r\n    var publickey = \"&lt;?=$publickey?&gt;\";\r\n    var rsakey = new RSAKey();\r\n    rsakey.setPublic(publickey, \"10001\");\r\n    $(\"#sub\").click(function(){\r\n        var enc = rsakey.encrypt($(\"#str\").val());\r\n        $('#encrypted').html(\"加密后\\n\"+enc);\r\n        $.post('file2.php', {enc: enc}, function(data) {\r\n            $('#decrypted').html(\"解密后\\n\"+data);\r\n        });\r\n    });\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n下面是file2.php\r\n<pre>&lt;?php\r\n//获取私钥与加密后字符串进行解密\r\n@session_start();\r\nset_include_path('rsa/classes/phpseclib/');\r\ninclude_once('Crypt/RSA.php');\r\n$encrypted = $_POST['enc'];\r\n$rsa = new Crypt_RSA();\r\n$encrypted=pack('H*', $encrypted);\r\n$rsa-&gt;loadKey($_SESSION['privatekey']);\r\n$rsa-&gt;setEncryptionMode(CRYPT_RSA_ENCRYPTION_PKCS1);\r\n$decrypted = $rsa-&gt;decrypt($encrypted);\r\necho $decrypted;</pre>\r\n效果展示：\r\n\r\n<img class=\"alignnone size-medium wp-image-323\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/07/QQ截图20170714114735-300x93.jpg\" alt=\"\" width=\"300\" height=\"93\" />\r\n\r\n完成rsa加密咯，目前还算比较安全的一种加密，可以在一些比较重要的信息传递中使用。",
            "post_title": "php实现RSA加密",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "php%e5%ae%9e%e7%8e%b0rsa%e5%8a%a0%e5%af%86",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-14 11:49:45",
            "post_modified_gmt": "2017-7-14 03:49:45",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=305",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "306",
            "post_author": "1",
            "post_date": "2017-6-6 10:48:50",
            "post_date_gmt": "2017-6-6 02:48:50",
            "post_content": "",
            "post_title": "php实现RSA加密",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "305-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-6-6 10:48:50",
            "post_modified_gmt": "2017-6-6 02:48:50",
            "post_content_filtered": "",
            "post_parent": "305",
            "guid": "http://ganjiacheng.cn/blog/?p=306",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "307",
            "post_author": "1",
            "post_date": "2017-11-22 18:31:25",
            "post_date_gmt": "2017-11-22 10:31:25",
            "post_content": "websocket也没啥好讲的，就一可以实现长连接的协议，其中也有三次握手之说。具体的也不去探究了，这里用node.js做后端来实现与前端js的websocket连接。并完成一个简易的联机游戏。<!--more-->\r\n\r\n首先参考这个<a href=\"https://socket.io/\">socket.io的网址</a>，参考get start可得到一些安装的基本步骤，这里默认已经安装好node.js以及npm，具体操作包括如下\r\n<pre>npm init</pre>\r\n<pre><code>npm install --save express@4.15.2</code></pre>\r\n<pre><code>npm install --save socket.io</code></pre>\r\n之后要进行的是服务器的编写，保存为index.js\r\n<pre>//引入必要库\r\nvar app=require('express')();\r\nvar http=require('http').Server(app);\r\nvar io=require('socket.io')(http);\r\n//n用于保存连接数目，now用于保存当前落子玩家\r\nvar n=0;\r\nvar now=0;\r\n//加载html文件\r\napp.get('/',function(req,res){\r\n    res.sendFile(__dirname + '/index.html');\r\n})\r\n//websocket连接操作\r\nio.on('connection',function(socket) {\r\n    n++;\r\n    //断开连接操作\r\n    socket.on('disconnect',function(){\r\n        n--;\r\n        console.log('out');\r\n    });\r\n    //收到消息，触发指定事件，并传送得到的消息\r\n    socket.on('msg',function(info){\r\n        console.log(now)\r\n        if(info[2]!=now &amp;&amp; n&gt;=2){\r\n            io.emit('message',{for:info})\r\n            now=info[2];\r\n        }\r\n    })\r\n});\r\n//打开http服务器\r\nhttp.listen(3000,function(){\r\n    console.log('start')\r\n})</pre>\r\n接下来要编辑的是html文件，同目录下保存为index.html\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;五子棋&lt;/title&gt;\r\n    &lt;style type=\"text/css\"&gt;\r\n        canvas{\r\n            border:solid 1px black;\r\n            background-color: #5b7d7d;\r\n            -webkit-tap-highlight-color:rgba(0,0,0,0)\r\n        }\r\n    &lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;canvas id=\"can\" width=\"600\" height=\"800\"&gt;not support&lt;/canvas&gt;\r\n    &lt;script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.3/socket.io.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-3.2.1.min.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        //获取canvas，设置宽高\r\n        //获取屏宽和高并设置小的一方为棋盘长度\r\n        var can = document.getElementById('can');\r\n        var x = window.innerWidth&gt;window.innerHeight?window.innerHeight:window.innerWidth;\r\n        var w = can.width = x-20;\r\n        var h = can.height = x-20;\r\n        var con = can.getContext('2d');\r\n        var nowIn=1;\r\n        var alreadyIn=[];\r\n        var blackIn=[];\r\n        var whiteIn=[];\r\n        var local=Math.random();\r\n        //画线，做棋盘。\r\n        function drawline(con,color,stepx,stepy){\r\n            con.strokeStyle=color;\r\n            con.lineWidth=1;\r\n            for(var i=stepx+0.5;i&lt;can.width;i+=stepx){\r\n                con.beginPath();\r\n                con.moveTo(i,0);\r\n                con.lineTo(i,h);\r\n                con.stroke();\r\n            }\r\n            for(var i=stepy+0.5;i&lt;can.height;i+=stepy){\r\n                con.beginPath();\r\n                con.moveTo(0,i);\r\n                con.lineTo(w,i);\r\n                con.stroke();\r\n            }\r\n        }\r\n        //画棋子\r\n        function drawqi(x,y,color){\r\n            con.beginPath();\r\n            con.fillStyle=color;\r\n            con.arc(x*w/15,y*w/15,w/38,0,2*Math.PI);\r\n            con.stroke();\r\n            con.fill();\r\n            con.closePath();\r\n        }\r\n        //判断胜利，这里采用逐子判断。\r\n        function judgeWin(chess){\r\n            for(var i=0;i&lt;chess.length;i++){\r\n                sp=chess[i].split(\",\")\r\n                if(sp[0]&gt;=2 &amp;&amp; sp[1]&gt;=2){\r\n                    if($.inArray((parseInt(sp[0])-1)+\",\"+(parseInt(sp[1])-1),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])-2)+\",\"+(parseInt(sp[1])-2),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])+1)+\",\"+(parseInt(sp[1])+1),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])+2)+\",\"+(parseInt(sp[1])+2),chess)!=-1){\r\n                        return true;\r\n                    }\r\n                    if($.inArray((parseInt(sp[0])-1)+\",\"+(parseInt(sp[1])),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])-2)+\",\"+(parseInt(sp[1])),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])+1)+\",\"+(parseInt(sp[1])),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])+2)+\",\"+(parseInt(sp[1])),chess)!=-1){\r\n                        return true;\r\n                    }\r\n                    if($.inArray((parseInt(sp[0]))+\",\"+(parseInt(sp[1])-1),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0]))+\",\"+(parseInt(sp[1])-2),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0]))+\",\"+(parseInt(sp[1])+1),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0]))+\",\"+(parseInt(sp[1])+2),chess)!=-1){\r\n                        return true;\r\n                    }\r\n                    if($.inArray((parseInt(sp[0])-1)+\",\"+(parseInt(sp[1])+1),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])-2)+\",\"+(parseInt(sp[1])+2),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])+1)+\",\"+(parseInt(sp[1])-1),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])+2)+\",\"+(parseInt(sp[1])-2),chess)!=-1){\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false\r\n        }\r\n        //触发画线，连接websocket\r\n        drawline(con,'lightgray',w/15,h/15);\r\n        var socket=io();\r\n        //canvas点击事件，获取最近的一个落子点坐标，发送事件。\r\n        can.onclick=function(e){\r\n            mx=Math.round(e.offsetX/w*15);\r\n            my=Math.round(e.offsetY/w*15);\r\n            if($.inArray((mx*15+my),alreadyIn)==-1){\r\n                socket.emit('msg',[mx,my,local])\r\n            }\r\n        }\r\n        //服务器返回触发事件，接收消息并展示给已连接用户\r\n        socket.on('message',function(msg){\r\n            mx=msg.for[0]\r\n            my=msg.for[1]\r\n            \r\n            alreadyIn.push(mx*15+my);\r\n            if(nowIn==0){\r\n                draw=drawqi(mx,my,\"#000\");\r\n                blackIn.push([mx,my].toString())\r\n                if(judgeWin(blackIn)){\r\n                    alert(\"black win\");\r\n                }\r\n            }else{\r\n                draw=drawqi(mx,my,\"#fff\");\r\n                whiteIn.push([mx,my].toString());\r\n                if(judgeWin(whiteIn)){\r\n                    setTimeout(alert(\"white win\"),500);\r\n                }\r\n            }\r\n            nowIn=1-nowIn;\r\n        })\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n效果图：<img class=\"alignnone size-medium wp-image-437\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/11/MQKABG9HRBVI2B0OE-298x300.png\" alt=\"\" width=\"298\" height=\"300\" />\r\n\r\n一般看看socket.io的文档便可以get到一点websocket的灵感，之后就可以自行拓展。\r\n\r\n当然这还是websocket最基础的一部分，之后有待进一步探索。",
            "post_title": "用node.js的socket.io实现双人五子棋对战",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e7%94%a8node-js%e7%9a%84socket-io%e5%ae%9e%e7%8e%b0%e5%8f%8c%e4%ba%ba%e4%ba%94%e5%ad%90%e6%a3%8b%e5%af%b9%e6%88%98",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-11-26 13:01:18",
            "post_modified_gmt": "2017-11-26 05:01:18",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=307",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "308",
            "post_author": "1",
            "post_date": "2017-6-6 10:53:12",
            "post_date_gmt": "2017-6-6 02:53:12",
            "post_content": "",
            "post_title": "Nodejs的socket实现简易聊天室",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "307-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-6-6 10:53:12",
            "post_modified_gmt": "2017-6-6 02:53:12",
            "post_content_filtered": "",
            "post_parent": "307",
            "guid": "http://ganjiacheng.cn/blog/?p=308",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "316",
            "post_author": "1",
            "post_date": "2017-7-13 09:56:37",
            "post_date_gmt": "2017-7-13 01:56:37",
            "post_content": "首先安装好python3.x以及jieba,wordcloud库,这是前提。\r\n\r\n然后搜罗了一份唐诗的txt文档，<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/07/poetry.txt\">具体看这里</a>。\r\n\r\n思路：先用<a href=\"https://github.com/fxsjy/jieba\">jieba</a>把每首诗标题去掉，提取出正文。再jiaba.cut做分词，分完的词保存下来，再用worcloud作词云，具体可以看<a href=\"http://amueller.github.io/word_cloud/index.html\">wordcloud文档</a>。<!--more-->\r\n\r\n具体代码：\r\n<pre>#coding:utf-8\r\n#python3.5\r\n#引入库文件\r\nfrom wordcloud import WordCloud\r\nimport jieba\r\nss=\"\"\r\nf=open('poetry.txt',encoding='utf-8')\r\n#读取每首诗并去掉标题\r\n#进行分词并存储\r\nfor i in f.readlines():\r\n    l=i[i.find(':')+1:-1]\r\n    s=jieba.cut(l,cut_all=False)\r\n    for j in s:\r\n        if j==':' or j=='，' or j=='。':\r\n            continue\r\n        else:\r\n            ss+=j+\" \"\r\n#引入中文字体文件\r\nfont=\"C:/Windows/Fonts/simfang.ttf\"\r\n#构建词云并保存\r\n#如需展示的话可以用matplotlib，具体可以看wordcloud文档\r\nword=WordCloud(width=4000,height=2000,font_path=font,max_words=2000,max_font_size=500).generate(ss)\r\nword.to_file('filename.png')</pre>\r\n效果展示：\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/07/xxn.png\"><img class=\"alignnone wp-image-319 size-large\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/07/xxn-1024x512.png\" alt=\"\" width=\"525\" height=\"263\" /></a>\r\n\r\n&nbsp;",
            "post_title": "使用python的jieba,wordcloud做唐诗分析",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e4%bd%bf%e7%94%a8python%e7%9a%84jiebawordcloud%e5%81%9a%e5%94%90%e8%af%97%e5%88%86%e6%9e%90",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-13 09:56:37",
            "post_modified_gmt": "2017-7-13 01:56:37",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=316",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "317",
            "post_author": "1",
            "post_date": "2017-7-13 09:42:10",
            "post_date_gmt": "2017-7-13 01:42:10",
            "post_content": "",
            "post_title": "poetry",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "poetry",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-13 09:42:10",
            "post_modified_gmt": "2017-7-13 01:42:10",
            "post_content_filtered": "",
            "post_parent": "316",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2017/07/poetry.txt",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "text/plain",
            "comment_count": "0"
        },
        {
            "ID": "318",
            "post_author": "1",
            "post_date": "2017-7-13 09:48:03",
            "post_date_gmt": "2017-7-13 01:48:03",
            "post_content": "首先安装好python3.x以及jieba,wordcloud库,这是前提。\r\n\r\n然后搜罗了一份唐诗的txt文档，<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/07/poetry.txt\">具体看这里</a>。\r\n\r\n思路：先用<a href=\"https://github.com/fxsjy/jieba\">jieba</a>把每首诗标题去掉，提取出正文。再jiaba.cut做分词，分完的词保存下来，再用worcloud作词云，具体可以看<a href=\"http://amueller.github.io/word_cloud/index.html\">wordcloud文档</a>。\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "使用python的jieba,wordcloud做唐诗分析",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "316-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-13 09:48:03",
            "post_modified_gmt": "2017-7-13 01:48:03",
            "post_content_filtered": "",
            "post_parent": "316",
            "guid": "http://ganjiacheng.cn/blog/?p=318",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "319",
            "post_author": "1",
            "post_date": "2017-7-13 09:49:24",
            "post_date_gmt": "2017-7-13 01:49:24",
            "post_content": "",
            "post_title": "xxn",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "xxn",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-13 09:49:24",
            "post_modified_gmt": "2017-7-13 01:49:24",
            "post_content_filtered": "",
            "post_parent": "316",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2017/07/xxn.png",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/png",
            "comment_count": "0"
        },
        {
            "ID": "320",
            "post_author": "1",
            "post_date": "2017-7-13 09:55:46",
            "post_date_gmt": "2017-7-13 01:55:46",
            "post_content": "首先安装好python3.x以及jieba,wordcloud库,这是前提。\r\n\r\n然后搜罗了一份唐诗的txt文档，<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/07/poetry.txt\">具体看这里</a>。\r\n\r\n思路：先用<a href=\"https://github.com/fxsjy/jieba\">jieba</a>把每首诗标题去掉，提取出正文。再jiaba.cut做分词，分完的词保存下来，再用worcloud作词云，具体可以看<a href=\"http://amueller.github.io/word_cloud/index.html\">wordcloud文档</a>。<!--more-->\r\n\r\n具体代码：\r\n<pre>#coding:utf-8\r\n#python3.5\r\n#引入库文件\r\nfrom wordcloud import WordCloud\r\nimport jieba\r\nss=\"\"\r\nf=open('poetry.txt',encoding='utf-8')\r\n#读取每首诗并去掉标题\r\n#进行分词并存储\r\nfor i in f.readlines():\r\n    l=i[i.find(':')+1:-1]\r\n    s=jieba.cut(l,cut_all=False)\r\n    for j in s:\r\n        if j==':' or j=='，' or j=='。':\r\n            continue\r\n        else:\r\n            ss+=j+\" \"\r\n#引入中文字体文件\r\nfont=\"C:/Windows/Fonts/simfang.ttf\"\r\n#构建词云并保存\r\n#如需展示的话可以用matplotlib，具体可以看wordcloud文档\r\nword=WordCloud(width=4000,height=2000,font_path=font,max_words=2000,max_font_size=500).generate(ss)\r\nword.to_file('filename.png')</pre>\r\n效果展示：\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/07/xxn.png\"><img class=\"alignnone wp-image-319 size-large\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/07/xxn-1024x512.png\" alt=\"\" width=\"525\" height=\"263\" /></a>\r\n\r\n&nbsp;",
            "post_title": "使用python的jieba,wordcloud做唐诗分析",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "316-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-13 09:55:46",
            "post_modified_gmt": "2017-7-13 01:55:46",
            "post_content_filtered": "",
            "post_parent": "316",
            "guid": "http://ganjiacheng.cn/blog/?p=320",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "321",
            "post_author": "1",
            "post_date": "2017-7-14 11:12:48",
            "post_date_gmt": "2017-7-14 03:12:48",
            "post_content": "RSA加密具体细节这里就不说了可以自行搜索。这里做php实现的例子。\r\n\r\n思路：在服务器端php先产生一个公钥给js用于加密，同时产生一个私钥用于解密并保存在session中，js获取用户输入并用公钥加密，然后将加密的字符串提交到后端，后端php用私钥解密后得到实际用户输入。\r\n\r\n这里主要安全的一点就是信息传输过程中始终是加密后的字符串，即使被抓包也无法得到实际用户输入。\r\n\r\n&nbsp;",
            "post_title": "php实现RSA加密",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "305-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-14 11:12:48",
            "post_modified_gmt": "2017-7-14 03:12:48",
            "post_content_filtered": "",
            "post_parent": "305",
            "guid": "http://ganjiacheng.cn/blog/?p=321",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "322",
            "post_author": "1",
            "post_date": "2017-7-14 11:14:02",
            "post_date_gmt": "2017-7-14 03:14:02",
            "post_content": "RSA加密具体细节这里就不说了可以自行搜索。这里做php实现的例子。\r\n\r\n思路：在服务器端php先产生一个公钥给js用于加密，同时产生一个私钥用于解密并保存在session中，js获取用户输入并用公钥加密，然后将加密的字符串提交到后端，后端php用私钥解密后得到实际用户输入。\r\n\r\n这里主要安全的一点就是信息传输过程中始终是加密后的字符串，即使被抓包也无法得到实际用户输入。\r\n\r\n首先下载用于rsa加密的一些文件，<a href=\"http://pan.baidu.com/s/1o84ZXDw\">点击这里下载</a>。\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "php实现RSA加密",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "305-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-14 11:14:02",
            "post_modified_gmt": "2017-7-14 03:14:02",
            "post_content_filtered": "",
            "post_parent": "305",
            "guid": "http://ganjiacheng.cn/blog/?p=322",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "323",
            "post_author": "1",
            "post_date": "2017-7-14 11:48:08",
            "post_date_gmt": "2017-7-14 03:48:08",
            "post_content": "",
            "post_title": "QQ截图20170714114735",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "qq%e6%88%aa%e5%9b%be20170714114735",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-14 11:48:08",
            "post_modified_gmt": "2017-7-14 03:48:08",
            "post_content_filtered": "",
            "post_parent": "305",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2017/07/QQ截图20170714114735.jpg",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/jpeg",
            "comment_count": "0"
        },
        {
            "ID": "324",
            "post_author": "1",
            "post_date": "2017-7-14 11:49:27",
            "post_date_gmt": "2017-7-14 03:49:27",
            "post_content": "RSA加密具体细节这里就不说了可以自行搜索。这里做php实现的例子。\r\n\r\n思路：在服务器端php先产生一个公钥给js用于加密，同时产生一个私钥用于解密并保存在session中，js获取用户输入并用公钥加密，然后将加密的字符串提交到后端，后端php用私钥解密后得到实际用户输入。<!--more-->\r\n\r\n这里主要安全的一点就是信息传输过程中始终是加密后的字符串，即使被抓包也无法得到实际用户输入。\r\n\r\n首先下载用于rsa加密的一些文件，<a href=\"http://pan.baidu.com/s/1o84ZXDw\">点击这里下载</a>。\r\n\r\n将这个文件夹与下面的php文件放在服务器中的同目录。\r\n\r\n下面编写文件file1.php\r\n<pre>&lt;?php\r\n//产生公钥与私钥\r\n@session_start();\r\nset_include_path('rsa/classes/phpseclib/');\r\ninclude_once('Crypt/RSA.php');\r\n$rsa = new Crypt_RSA();\r\n$rsa-&gt;setPrivateKeyFormat(CRYPT_RSA_PRIVATE_FORMAT_PKCS1);\r\n$rsa-&gt;setPublicKeyFormat(CRYPT_RSA_PUBLIC_FORMAT_RAW);\r\n$key = $rsa-&gt;createKey(1024);\r\n$privatekey = $key['privatekey'];\r\n$_SESSION['privatekey'] = $privatekey;\r\n$publickey = $key['publickey']['n']-&gt;toHex();\r\n?&gt;\r\n&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;test&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;input type=\"text\" placeholder=\"要加密字符串\" id=\"str\"&gt;\r\n    &lt;button id=\"sub\"&gt;submit&lt;/button&gt;\r\n    &lt;div id=\"encrypted\"&gt;&lt;/div&gt;\r\n    &lt;div id=\"decrypted\"&gt;&lt;/div&gt;\r\n    &lt;script src=\"//cdn.bootcss.com/jquery/3.1.0/jquery.min.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\" src=\"rsa/jsbn/jsbn.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\" src=\"rsa/jsbn/prng4.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\" src=\"rsa/jsbn/rng.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\" src=\"rsa/jsbn/rsa.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n    //js获得公钥进行加密\r\n    var publickey = \"&lt;?=$publickey?&gt;\";\r\n    var rsakey = new RSAKey();\r\n    rsakey.setPublic(publickey, \"10001\");\r\n    $(\"#sub\").click(function(){\r\n        var enc = rsakey.encrypt($(\"#str\").val());\r\n        $('#encrypted').html(\"加密后\\n\"+enc);\r\n        $.post('file2.php', {enc: enc}, function(data) {\r\n            $('#decrypted').html(\"解密后\\n\"+data);\r\n        });\r\n    });\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n下面是file2.php\r\n<pre>&lt;?php\r\n//获取私钥与加密后字符串进行解密\r\n@session_start();\r\nset_include_path('rsa/classes/phpseclib/');\r\ninclude_once('Crypt/RSA.php');\r\n$encrypted = $_POST['enc'];\r\n$rsa = new Crypt_RSA();\r\n$encrypted=pack('H*', $encrypted);\r\n$rsa-&gt;loadKey($_SESSION['privatekey']);\r\n$rsa-&gt;setEncryptionMode(CRYPT_RSA_ENCRYPTION_PKCS1);\r\n$decrypted = $rsa-&gt;decrypt($encrypted);\r\necho $decrypted;</pre>\r\n效果展示：\r\n\r\n<img class=\"alignnone size-medium wp-image-323\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/07/QQ截图20170714114735-300x93.jpg\" alt=\"\" width=\"300\" height=\"93\" />\r\n\r\n完成rsa加密咯，目前还算比较安全的一种加密，可以在一些比较重要的信息传递中使用。",
            "post_title": "php实现RSA加密",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "305-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-14 11:49:27",
            "post_modified_gmt": "2017-7-14 03:49:27",
            "post_content_filtered": "",
            "post_parent": "305",
            "guid": "http://ganjiacheng.cn/blog/?p=324",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "327",
            "post_author": "1",
            "post_date": "2017-7-22 15:14:35",
            "post_date_gmt": "2017-7-22 07:14:35",
            "post_content": "这里先从最近看ReactNative文档发现的expo说起，因为使用expo可以直接在ios或者安卓展示ReactNative的效果，门槛突然降低了许多，因此，突发奇想试试做native app。\r\n\r\n首先可以按照ReactNative的<a href=\"https://facebook.github.io/react-native/docs/getting-started.html\">GetStart</a>配置完环境并完成一个hello world！<!--more-->\r\n\r\n总体如果有node和npm的话就以下两步：\r\n<pre>npm install <span class=\"token operator\">-</span>g create<span class=\"token operator\">-</span>react<span class=\"token operator\">-</span>native<span class=\"token operator\">-</span>app</pre>\r\n<pre>create<span class=\"token operator\">-</span>react<span class=\"token operator\">-</span>native<span class=\"token operator\">-</span>app AwesomeProject \r\ncd AwesomeProject \r\nnpm start</pre>\r\n然后等出现一个二维码，用手机上的expo App扫码就行，ios和安卓都行哦！\r\n\r\n再来上新闻代码，写在文件的app.js里，这里在IOS上做尝试。\r\n\r\n先引入之后会用到一些的组件\r\n<pre>import React, { Component, PropTypes } from 'react';\r\nimport { AppRegistry,RefreshControl,TouchableWithoutFeedback, WebView,ActivityIndicator ,ListView, Text, Image, View, StyleSheet, TextInput, Button, Alert, ScrollView, NavigatorIOS, TouchableHighlight, FlatList } from 'react-native';</pre>\r\n第一个主组件，写了一个ios的导航条，内容在main组件里\r\n<pre> export default class Test extends Component {\r\n    constructor(props){\r\n      super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            &lt;NavigatorIOS initialRoute={{\r\n                component: main,\r\n                title: \"头条\",\r\n            }} style={{\r\n                flex: 1\r\n            }}\r\n            ref=\"navWorkspace\"\r\n            /&gt;\r\n        )\r\n    }\r\n}</pre>\r\nmain组件，主要用到了fetch来拉取新闻，在放入ListView组件内，\r\n\r\n其中又加了RefreshControl组件来下拉刷新，ListView的onEndReached来控制上拉加载更多。这里有个疑问，用FlatList不能实现上拉加载更多？\r\n<pre>class main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            onEndStart: true,\r\n            totalList:[],\r\n            dataSource: null,\r\n            page:2,\r\n            refreshing:false,\r\n        };\r\n    }\r\n    fetchData(){\r\n      return fetch(\"http://api.dagoogle.cn/news/get-news?page=1\").then((response)=&gt;response.json())\r\n    }\r\n    _onRefresh(){\r\n      this.setState({\r\n        refreshing:true\r\n      })\r\n      this.fetchData().then((responseJson)=&gt;{\r\n        var tmp=parseInt(responseJson.data[0].news_id)-parseInt(this.state.totalList[0].news_id)\r\n        if(tmp!=0){\r\n          for(let i=tmp-1;i&gt;=0;i--){\r\n              this.state.totalList.unshift(responseJson.data[i])\r\n            }\r\n          }\r\n          let ds = new ListView.DataSource({\r\n                    rowHasChanged: (r1, r2) =&gt; r1 !== r2\r\n                });\r\n        this.setState({\r\n          refreshing:false,\r\n          dataSource:ds.cloneWithRows(this.state.totalList)\r\n        })\r\n      })\r\n    }\r\n    getnews(page){\r\n      return fetch(\"http://api.dagoogle.cn/news/get-news?page=\"+page)\r\n            .then((response) =&gt; response.json())\r\n            .then((responseJson) =&gt; {\r\n                let ds = new ListView.DataSource({\r\n                    rowHasChanged: (r1, r2) =&gt; r1 !== r2\r\n                });\r\n                for(let i in responseJson.data){\r\n                  this.state.totalList.push(responseJson.data[i])\r\n                }\r\n                this.setState({\r\n                    dataSource: ds.cloneWithRows(this.state.totalList),\r\n                    onEndStart: false\r\n                })\r\n            })\r\n    }\r\n    componentDidMount() {\r\n        return fetch(\"http://api.dagoogle.cn/news/get-news?page=1\")\r\n            .then((response) =&gt; response.json())\r\n            .then((responseJson) =&gt; {\r\n                let ds = new ListView.DataSource({\r\n                    rowHasChanged: (r1, r2) =&gt; r1 !== r2\r\n                });\r\n                this.setState({\r\n                    totalList: responseJson.data,\r\n                    dataSource: ds.cloneWithRows(responseJson.data),\r\n                    onEndStart: false\r\n                })\r\n            })\r\n    }\r\n    toend(){\r\n      if(!this.state.onEndStart){\r\n        this.getnews(this.state.page);\r\n        this.setState({\r\n          page:this.state.page+1\r\n        })\r\n      }\r\n    }\r\n    goTo(key){\r\n      this.props.navigator.push({\r\n          component: Detail,\r\n          title: '详情',\r\n          rightButtonTitle: '收藏',\r\n          passProps: { title: this.state.totalList[key].title,content:this.state.totalList[key].content,source:this.state.totalList[key].source},\r\n          onRightButtonPress: function() {alert(1)}\r\n      });\r\n    }\r\n    render() {\r\n        if (this.state.onEndStart) {\r\n            return (\r\n                &lt;ActivityIndicator style={{flex:1,alignItems:'center',height:80}} animating={true}/&gt;\r\n            )\r\n        }\r\n        return (\r\n            &lt;ListView\r\n            refreshControl={\r\n              &lt;RefreshControl\r\n                refreshing={this.state.refreshing}\r\n                onRefresh={this._onRefresh.bind(this)}\r\n              /&gt;\r\n            }\r\n            style={{marginTop:65}}\r\n            dataSource={this.state.dataSource}\r\n            renderRow={(item,sectionId,rowId) =&gt; \r\n              &lt;TouchableWithoutFeedback onPress={this.goTo.bind(this,rowId)}&gt;\r\n              &lt;View style={styles.list_item}&gt;\r\n                &lt;Text style={styles.list_item_font}&gt;\r\n                    {item.title}\r\n                &lt;/Text&gt;\r\n                &lt;Image source={{\r\n                    uri: item.top_image\r\n                }} style={styles.image}/&gt;\r\n              &lt;/View&gt;\r\n              &lt;/TouchableWithoutFeedback&gt;\r\n            }\r\n            onEndReachedThreshold={150}\r\n            onEndReached={this.toend.bind(this)}\r\n            /&gt;\r\n        )\r\n    }\r\n}</pre>\r\n之后点击新闻跳转到详情页。下面是详情页的组件\r\n<pre>class Detail extends Component{\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n  render(){\r\n    var html=\"&lt;h3 style='margin-bottom:0'&gt;\"+this.props.title+\"&lt;/h3&gt;\"+\"&lt;div style='color:gray;margin-bottom:-15;'&gt;\"+this.props.source+\"&lt;/div&gt;\"+this.props.content;\r\n    return(\r\n        &lt;View style={{flex:1}}&gt;\r\n          &lt;WebView source={{html:html}}/&gt;\r\n        &lt;/View&gt;\r\n      )\r\n  }\r\n}</pre>\r\n样式的话写在最后StyleSheet组件中，在上面的组件内可以直接用style={styles.xxx}调用样式。\r\n<pre>const styles = StyleSheet.create({\r\n    flex: {\r\n        flex: 1,\r\n    },\r\n    list_item1: {\r\n        marginLeft: 10,\r\n        marginRight: 10,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#ddd',\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    list_item: {\r\n        height:80,\r\n        marginLeft: 10,\r\n        marginRight: 10,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#ddd',\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    list_item_font: {\r\n        marginRight: 1,\r\n        flex: 3,\r\n        fontSize: 16,\r\n    },\r\n    image: {\r\n        flex: 1,\r\n        width: 60,\r\n        height: 60,\r\n    }\r\n});</pre>\r\n然后就可以\r\n<pre>npm start</pre>\r\n在手机expo里看到效果咯。\r\n\r\n效果展示：\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/07/879A2A927D3994102C60A656BDC2F1B1.png\"><img class=\"alignnone wp-image-329 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/07/879A2A927D3994102C60A656BDC2F1B1-169x300.png\" alt=\"\" width=\"169\" height=\"300\" /></a>",
            "post_title": "用ReactNative做一个简单新闻app",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e7%94%a8reactnative%e5%81%9a%e4%b8%80%e4%b8%aa%e7%ae%80%e5%8d%95%e6%96%b0%e9%97%bbapp",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-8-2 20:24:31",
            "post_modified_gmt": "2017-8-2 12:24:31",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=327",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "328",
            "post_author": "1",
            "post_date": "2017-7-22 14:49:07",
            "post_date_gmt": "2017-7-22 06:49:07",
            "post_content": "这里先从最近看ReactNative文档发现的expo说起，因为使用expo可以直接在ios或者安卓展示ReactNative的效果，门槛突然降低了许多，因此，突发奇想试试做native app。\r\n\r\n首先可以按照ReactNative的<a href=\"https://facebook.github.io/react-native/docs/getting-started.html\">GetStart</a>配置完环境并完成一个hello world！\r\n\r\n总体如果有node和npm的话就以下两步：\r\n<pre>npm install <span class=\"token operator\">-</span>g create<span class=\"token operator\">-</span>react<span class=\"token operator\">-</span>native<span class=\"token operator\">-</span>app</pre>\r\n<pre>create<span class=\"token operator\">-</span>react<span class=\"token operator\">-</span>native<span class=\"token operator\">-</span>app AwesomeProject \r\ncd AwesomeProject \r\nnpm start</pre>\r\n然后等出现一个二维码，用手机上的expo App扫码就行，ios和安卓都行哦！\r\n\r\n再来上新闻代码，写在文件的app.js里\r\n<pre></pre>\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "用ReactNative做一个简单新闻app",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "327-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-22 14:49:07",
            "post_modified_gmt": "2017-7-22 06:49:07",
            "post_content_filtered": "",
            "post_parent": "327",
            "guid": "http://ganjiacheng.cn/blog/?p=328",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "329",
            "post_author": "1",
            "post_date": "2017-7-22 15:10:42",
            "post_date_gmt": "2017-7-22 07:10:42",
            "post_content": "",
            "post_title": "879A2A927D3994102C60A656BDC2F1B1",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "879a2a927d3994102c60a656bdc2f1b1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-22 15:10:42",
            "post_modified_gmt": "2017-7-22 07:10:42",
            "post_content_filtered": "",
            "post_parent": "327",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2017/07/879A2A927D3994102C60A656BDC2F1B1.png",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/png",
            "comment_count": "0"
        },
        {
            "ID": "330",
            "post_author": "1",
            "post_date": "2017-7-22 15:12:14",
            "post_date_gmt": "2017-7-22 07:12:14",
            "post_content": "这里先从最近看ReactNative文档发现的expo说起，因为使用expo可以直接在ios或者安卓展示ReactNative的效果，门槛突然降低了许多，因此，突发奇想试试做native app。\r\n\r\n首先可以按照ReactNative的<a href=\"https://facebook.github.io/react-native/docs/getting-started.html\">GetStart</a>配置完环境并完成一个hello world！<!--more-->\r\n\r\n总体如果有node和npm的话就以下两步：\r\n<pre>npm install <span class=\"token operator\">-</span>g create<span class=\"token operator\">-</span>react<span class=\"token operator\">-</span>native<span class=\"token operator\">-</span>app</pre>\r\n<pre>create<span class=\"token operator\">-</span>react<span class=\"token operator\">-</span>native<span class=\"token operator\">-</span>app AwesomeProject \r\ncd AwesomeProject \r\nnpm start</pre>\r\n然后等出现一个二维码，用手机上的expo App扫码就行，ios和安卓都行哦！\r\n\r\n再来上新闻代码，写在文件的app.js里，这里在IOS上做尝试。\r\n\r\n先引入之后会用到一些的组件\r\n<pre>import React, { Component, PropTypes } from 'react';\r\nimport { AppRegistry,RefreshControl,TouchableWithoutFeedback, WebView,ActivityIndicator ,ListView, Text, Image, View, StyleSheet, TextInput, Button, Alert, ScrollView, NavigatorIOS, TouchableHighlight, FlatList } from 'react-native';</pre>\r\n第一个主组件，写了一个ios的导航条，内容在main组件里\r\n<pre> export default class Test extends Component {\r\n    constructor(props){\r\n      super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            &lt;NavigatorIOS initialRoute={{\r\n                component: main,\r\n                title: \"头条\",\r\n            }} style={{\r\n                flex: 1\r\n            }}\r\n            ref=\"navWorkspace\"\r\n            /&gt;\r\n        )\r\n    }\r\n}</pre>\r\nmain组件，主要用到了fetch来拉取新闻，在放入ListView组件内，\r\n\r\n其中又加了RefreshControl组件来下拉刷新，ListView的onEndReached来控制上拉加载更多。\r\n<pre>class main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            onEndStart: true,\r\n            totalList:[],\r\n            dataSource: null,\r\n            page:2,\r\n            refreshing:false,\r\n        };\r\n    }\r\n    fetchData(){\r\n      return fetch(\"http://api.dagoogle.cn/news/get-news?page=1\").then((response)=&gt;response.json())\r\n    }\r\n    _onRefresh(){\r\n      this.setState({\r\n        refreshing:true\r\n      })\r\n      this.fetchData().then((responseJson)=&gt;{\r\n        var tmp=parseInt(responseJson.data[0].news_id)-parseInt(this.state.totalList[0].news_id)\r\n        if(tmp!=0){\r\n          for(let i=tmp-1;i&gt;=0;i--){\r\n              this.state.totalList.unshift(responseJson.data[i])\r\n            }\r\n          }\r\n          let ds = new ListView.DataSource({\r\n                    rowHasChanged: (r1, r2) =&gt; r1 !== r2\r\n                });\r\n        this.setState({\r\n          refreshing:false,\r\n          dataSource:ds.cloneWithRows(this.state.totalList)\r\n        })\r\n      })\r\n    }\r\n    getnews(page){\r\n      return fetch(\"http://api.dagoogle.cn/news/get-news?page=\"+page)\r\n            .then((response) =&gt; response.json())\r\n            .then((responseJson) =&gt; {\r\n                let ds = new ListView.DataSource({\r\n                    rowHasChanged: (r1, r2) =&gt; r1 !== r2\r\n                });\r\n                for(let i in responseJson.data){\r\n                  this.state.totalList.push(responseJson.data[i])\r\n                }\r\n                this.setState({\r\n                    dataSource: ds.cloneWithRows(this.state.totalList),\r\n                    onEndStart: false\r\n                })\r\n            })\r\n    }\r\n    componentDidMount() {\r\n        return fetch(\"http://api.dagoogle.cn/news/get-news?page=1\")\r\n            .then((response) =&gt; response.json())\r\n            .then((responseJson) =&gt; {\r\n                let ds = new ListView.DataSource({\r\n                    rowHasChanged: (r1, r2) =&gt; r1 !== r2\r\n                });\r\n                this.setState({\r\n                    totalList: responseJson.data,\r\n                    dataSource: ds.cloneWithRows(responseJson.data),\r\n                    onEndStart: false\r\n                })\r\n            })\r\n    }\r\n    toend(){\r\n      if(!this.state.onEndStart){\r\n        this.getnews(this.state.page);\r\n        this.setState({\r\n          page:this.state.page+1\r\n        })\r\n      }\r\n    }\r\n    goTo(key){\r\n      this.props.navigator.push({\r\n          component: Detail,\r\n          title: '详情',\r\n          rightButtonTitle: '收藏',\r\n          passProps: { title: this.state.totalList[key].title,content:this.state.totalList[key].content,source:this.state.totalList[key].source},\r\n          onRightButtonPress: function() {alert(1)}\r\n      });\r\n    }\r\n    render() {\r\n        if (this.state.onEndStart) {\r\n            return (\r\n                &lt;ActivityIndicator style={{flex:1,alignItems:'center',height:80}} animating={true}/&gt;\r\n            )\r\n        }\r\n        return (\r\n            &lt;ListView\r\n            refreshControl={\r\n              &lt;RefreshControl\r\n                refreshing={this.state.refreshing}\r\n                onRefresh={this._onRefresh.bind(this)}\r\n              /&gt;\r\n            }\r\n            style={{marginTop:65}}\r\n            dataSource={this.state.dataSource}\r\n            renderRow={(item,sectionId,rowId) =&gt; \r\n              &lt;TouchableWithoutFeedback onPress={this.goTo.bind(this,rowId)}&gt;\r\n              &lt;View style={styles.list_item}&gt;\r\n                &lt;Text style={styles.list_item_font}&gt;\r\n                    {item.title}\r\n                &lt;/Text&gt;\r\n                &lt;Image source={{\r\n                    uri: item.top_image\r\n                }} style={styles.image}/&gt;\r\n              &lt;/View&gt;\r\n              &lt;/TouchableWithoutFeedback&gt;\r\n            }\r\n            onEndReachedThreshold={150}\r\n            onEndReached={this.toend.bind(this)}\r\n            /&gt;\r\n        )\r\n    }\r\n}</pre>\r\n之后点击新闻跳转到详情页。下面是详情页的组件\r\n<pre>class Detail extends Component{\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n  render(){\r\n    var html=\"&lt;h3 style='margin-bottom:0'&gt;\"+this.props.title+\"&lt;/h3&gt;\"+\"&lt;div style='color:gray;margin-bottom:-15;'&gt;\"+this.props.source+\"&lt;/div&gt;\"+this.props.content;\r\n    return(\r\n        &lt;View style={{flex:1}}&gt;\r\n          &lt;WebView source={{html:html}}/&gt;\r\n        &lt;/View&gt;\r\n      )\r\n  }\r\n}</pre>\r\n样式的话写在最后StyleSheet组件中，在上面的组件内可以直接用style={styles.xxx}调用样式。\r\n<pre>const styles = StyleSheet.create({\r\n    flex: {\r\n        flex: 1,\r\n    },\r\n    list_item1: {\r\n        marginLeft: 10,\r\n        marginRight: 10,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#ddd',\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    list_item: {\r\n        height:80,\r\n        marginLeft: 10,\r\n        marginRight: 10,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#ddd',\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    list_item_font: {\r\n        marginRight: 1,\r\n        flex: 3,\r\n        fontSize: 16,\r\n    },\r\n    image: {\r\n        flex: 1,\r\n        width: 60,\r\n        height: 60,\r\n    }\r\n});</pre>\r\n然后就可以\r\n<pre>npm start</pre>\r\n在手机expo里看到效果咯。\r\n\r\n效果展示：\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/07/879A2A927D3994102C60A656BDC2F1B1.png\"><img class=\"alignnone wp-image-329 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/07/879A2A927D3994102C60A656BDC2F1B1-169x300.png\" alt=\"\" width=\"169\" height=\"300\" /></a>",
            "post_title": "用ReactNative做一个简单新闻app",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "327-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-22 15:12:14",
            "post_modified_gmt": "2017-7-22 07:12:14",
            "post_content_filtered": "",
            "post_parent": "327",
            "guid": "http://ganjiacheng.cn/blog/?p=330",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "331",
            "post_author": "1",
            "post_date": "2017-7-22 15:14:35",
            "post_date_gmt": "2017-7-22 07:14:35",
            "post_content": "这里先从最近看ReactNative文档发现的expo说起，因为使用expo可以直接在ios或者安卓展示ReactNative的效果，门槛突然降低了许多，因此，突发奇想试试做native app。\r\n\r\n首先可以按照ReactNative的<a href=\"https://facebook.github.io/react-native/docs/getting-started.html\">GetStart</a>配置完环境并完成一个hello world！<!--more-->\r\n\r\n总体如果有node和npm的话就以下两步：\r\n<pre>npm install <span class=\"token operator\">-</span>g create<span class=\"token operator\">-</span>react<span class=\"token operator\">-</span>native<span class=\"token operator\">-</span>app</pre>\r\n<pre>create<span class=\"token operator\">-</span>react<span class=\"token operator\">-</span>native<span class=\"token operator\">-</span>app AwesomeProject \r\ncd AwesomeProject \r\nnpm start</pre>\r\n然后等出现一个二维码，用手机上的expo App扫码就行，ios和安卓都行哦！\r\n\r\n再来上新闻代码，写在文件的app.js里，这里在IOS上做尝试。\r\n\r\n先引入之后会用到一些的组件\r\n<pre>import React, { Component, PropTypes } from 'react';\r\nimport { AppRegistry,RefreshControl,TouchableWithoutFeedback, WebView,ActivityIndicator ,ListView, Text, Image, View, StyleSheet, TextInput, Button, Alert, ScrollView, NavigatorIOS, TouchableHighlight, FlatList } from 'react-native';</pre>\r\n第一个主组件，写了一个ios的导航条，内容在main组件里\r\n<pre> export default class Test extends Component {\r\n    constructor(props){\r\n      super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            &lt;NavigatorIOS initialRoute={{\r\n                component: main,\r\n                title: \"头条\",\r\n            }} style={{\r\n                flex: 1\r\n            }}\r\n            ref=\"navWorkspace\"\r\n            /&gt;\r\n        )\r\n    }\r\n}</pre>\r\nmain组件，主要用到了fetch来拉取新闻，在放入ListView组件内，\r\n\r\n其中又加了RefreshControl组件来下拉刷新，ListView的onEndReached来控制上拉加载更多。这里有个疑问，用FlatList不能实现上拉加载更多？\r\n<pre>class main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            onEndStart: true,\r\n            totalList:[],\r\n            dataSource: null,\r\n            page:2,\r\n            refreshing:false,\r\n        };\r\n    }\r\n    fetchData(){\r\n      return fetch(\"http://api.dagoogle.cn/news/get-news?page=1\").then((response)=&gt;response.json())\r\n    }\r\n    _onRefresh(){\r\n      this.setState({\r\n        refreshing:true\r\n      })\r\n      this.fetchData().then((responseJson)=&gt;{\r\n        var tmp=parseInt(responseJson.data[0].news_id)-parseInt(this.state.totalList[0].news_id)\r\n        if(tmp!=0){\r\n          for(let i=tmp-1;i&gt;=0;i--){\r\n              this.state.totalList.unshift(responseJson.data[i])\r\n            }\r\n          }\r\n          let ds = new ListView.DataSource({\r\n                    rowHasChanged: (r1, r2) =&gt; r1 !== r2\r\n                });\r\n        this.setState({\r\n          refreshing:false,\r\n          dataSource:ds.cloneWithRows(this.state.totalList)\r\n        })\r\n      })\r\n    }\r\n    getnews(page){\r\n      return fetch(\"http://api.dagoogle.cn/news/get-news?page=\"+page)\r\n            .then((response) =&gt; response.json())\r\n            .then((responseJson) =&gt; {\r\n                let ds = new ListView.DataSource({\r\n                    rowHasChanged: (r1, r2) =&gt; r1 !== r2\r\n                });\r\n                for(let i in responseJson.data){\r\n                  this.state.totalList.push(responseJson.data[i])\r\n                }\r\n                this.setState({\r\n                    dataSource: ds.cloneWithRows(this.state.totalList),\r\n                    onEndStart: false\r\n                })\r\n            })\r\n    }\r\n    componentDidMount() {\r\n        return fetch(\"http://api.dagoogle.cn/news/get-news?page=1\")\r\n            .then((response) =&gt; response.json())\r\n            .then((responseJson) =&gt; {\r\n                let ds = new ListView.DataSource({\r\n                    rowHasChanged: (r1, r2) =&gt; r1 !== r2\r\n                });\r\n                this.setState({\r\n                    totalList: responseJson.data,\r\n                    dataSource: ds.cloneWithRows(responseJson.data),\r\n                    onEndStart: false\r\n                })\r\n            })\r\n    }\r\n    toend(){\r\n      if(!this.state.onEndStart){\r\n        this.getnews(this.state.page);\r\n        this.setState({\r\n          page:this.state.page+1\r\n        })\r\n      }\r\n    }\r\n    goTo(key){\r\n      this.props.navigator.push({\r\n          component: Detail,\r\n          title: '详情',\r\n          rightButtonTitle: '收藏',\r\n          passProps: { title: this.state.totalList[key].title,content:this.state.totalList[key].content,source:this.state.totalList[key].source},\r\n          onRightButtonPress: function() {alert(1)}\r\n      });\r\n    }\r\n    render() {\r\n        if (this.state.onEndStart) {\r\n            return (\r\n                &lt;ActivityIndicator style={{flex:1,alignItems:'center',height:80}} animating={true}/&gt;\r\n            )\r\n        }\r\n        return (\r\n            &lt;ListView\r\n            refreshControl={\r\n              &lt;RefreshControl\r\n                refreshing={this.state.refreshing}\r\n                onRefresh={this._onRefresh.bind(this)}\r\n              /&gt;\r\n            }\r\n            style={{marginTop:65}}\r\n            dataSource={this.state.dataSource}\r\n            renderRow={(item,sectionId,rowId) =&gt; \r\n              &lt;TouchableWithoutFeedback onPress={this.goTo.bind(this,rowId)}&gt;\r\n              &lt;View style={styles.list_item}&gt;\r\n                &lt;Text style={styles.list_item_font}&gt;\r\n                    {item.title}\r\n                &lt;/Text&gt;\r\n                &lt;Image source={{\r\n                    uri: item.top_image\r\n                }} style={styles.image}/&gt;\r\n              &lt;/View&gt;\r\n              &lt;/TouchableWithoutFeedback&gt;\r\n            }\r\n            onEndReachedThreshold={150}\r\n            onEndReached={this.toend.bind(this)}\r\n            /&gt;\r\n        )\r\n    }\r\n}</pre>\r\n之后点击新闻跳转到详情页。下面是详情页的组件\r\n<pre>class Detail extends Component{\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n  render(){\r\n    var html=\"&lt;h3 style='margin-bottom:0'&gt;\"+this.props.title+\"&lt;/h3&gt;\"+\"&lt;div style='color:gray;margin-bottom:-15;'&gt;\"+this.props.source+\"&lt;/div&gt;\"+this.props.content;\r\n    return(\r\n        &lt;View style={{flex:1}}&gt;\r\n          &lt;WebView source={{html:html}}/&gt;\r\n        &lt;/View&gt;\r\n      )\r\n  }\r\n}</pre>\r\n样式的话写在最后StyleSheet组件中，在上面的组件内可以直接用style={styles.xxx}调用样式。\r\n<pre>const styles = StyleSheet.create({\r\n    flex: {\r\n        flex: 1,\r\n    },\r\n    list_item1: {\r\n        marginLeft: 10,\r\n        marginRight: 10,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#ddd',\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    list_item: {\r\n        height:80,\r\n        marginLeft: 10,\r\n        marginRight: 10,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#ddd',\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    list_item_font: {\r\n        marginRight: 1,\r\n        flex: 3,\r\n        fontSize: 16,\r\n    },\r\n    image: {\r\n        flex: 1,\r\n        width: 60,\r\n        height: 60,\r\n    }\r\n});</pre>\r\n然后就可以\r\n<pre>npm start</pre>\r\n在手机expo里看到效果咯。\r\n\r\n效果展示：\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/07/879A2A927D3994102C60A656BDC2F1B1.png\"><img class=\"alignnone wp-image-329 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/07/879A2A927D3994102C60A656BDC2F1B1-169x300.png\" alt=\"\" width=\"169\" height=\"300\" /></a>",
            "post_title": "用ReactNative做一个简单新闻app",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "327-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-22 15:14:35",
            "post_modified_gmt": "2017-7-22 07:14:35",
            "post_content_filtered": "",
            "post_parent": "327",
            "guid": "http://ganjiacheng.cn/blog/?p=331",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "332",
            "post_author": "1",
            "post_date": "2017-7-22 16:04:02",
            "post_date_gmt": "2017-7-22 08:04:02",
            "post_content": "这里讲讲yolo在windows的配置，实际操作可行，这里使用时电脑为win8.1。\r\n\r\n开始前可以到nvidia官网先看看显卡是否支持gpu哦！<!--more-->\r\n\r\n首先下载vs2015，cuda，cudnn并配置好，这里不多叙述，标准就是：能在vs创建一个cuda项目并运行他的默认导入的代码并得到结果。在下载个opencv2.4.9，这里2.49是项目需求，改其他版本的话得改代码。\r\n\r\n之后使用了git下载github上某个大神改好后的代码\r\n<pre>git clone https://github.com/AlexeyAB/darknet.git</pre>\r\n在vs里打开项目，打开build下的darknet.sln\r\n\r\n然后在右边项目上右键-&gt;属性，\r\n\r\n在 vc++目录 中编辑包含目录，把opencv里的include文件夹路径添加到里面。\r\n\r\n在 c/c++   常规    附加包含目录 中把opencv的include路径加进去，如果没有cudaToolkitIncludeDir则把cuda和cudnn的include路径加进去。\r\n\r\n在c/c++   预处理器   预处理器定义中加上OPENCV和GPU。有报错的话也可以加上_CRT_SECURE_NO_DEPRECATE，_SCL_SECURE_NO_DEPRECATE这两个。\r\n\r\n在链接器   常规   添加库目录中加入opencv的lib路径，如果没有cuda_Path的话加上cuda，cudnn的lib路径。\r\n\r\n在链接器   输入   附加依赖项中加入pthreadVC2.lib（自行下载），cublas.lib，curand.lib，cudart.lib和opencv里的所有lib。\r\n\r\n然后就可以尝试运行啦。少库的话把库的路径加进去就行。\r\n\r\n之后就可以下载一个<a href=\"https://pjreddie.com/media/files/yolo.weights\">yolo.weights</a>，放在x64文件夹下。\r\n\r\n在x64文件夹下运行\r\n<pre>darknet.exe detector test data/coco.data yolo.cfg yolo.weights -i 0 -thresh 0.2</pre>\r\n输入图片文件路径\r\n\r\n配置好opencv的话就会直接展示，否则会保存成prediction.png文件。\r\n\r\n或者运行下面的代码就会调用摄像头并时时检测。\r\n<pre>darknet.exe detector demo data/coco.data yolo.cfg yolo.weights</pre>\r\n看data/coco.name就可以知道该模型可识别的80类。\r\n\r\ncpu上的平均8秒一张图左右，\r\n\r\n我的920m gpu可以达到5fps，也还达不到视频标准。\r\n\r\n下次再具体讲讲训练自己的数据。\r\n\r\n参考地址：<a href=\"https://github.com/AlexeyAB/darknet\">https://github.com/AlexeyAB/darknet</a>",
            "post_title": "yolo v2在windows的配置",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "300-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-22 16:04:02",
            "post_modified_gmt": "2017-7-22 08:04:02",
            "post_content_filtered": "",
            "post_parent": "300",
            "guid": "http://ganjiacheng.cn/blog/?p=332",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "333",
            "post_author": "1",
            "post_date": "2017-7-22 17:00:01",
            "post_date_gmt": "2017-7-22 09:00:01",
            "post_content": "上次讲了配置yolo，可以<a href=\"https://ganjiacheng.cn/blog/?p=300\">戳这里</a>看哦！\r\n\r\n这次讲讲yolo用于训练自己的数据集。<!--more-->\r\n\r\n首先还是数据准备，比如人脸检测，那就先准备很多包含人脸的图片。\r\n\r\n然后需要数据标注，也就是标出人脸在图片内的位置。这里用一个叫labelImg的工具。具体下载和使用看这里<a href=\"https://github.com/tzutalin/labelImg\">https://github.com/tzutalin/labelImg</a>。\r\n\r\n然后在图片文件夹里运行labelImg，会有个gui界面，之后就可以对每张图片进行标注，标注完后会有一大堆xml文件产生，之后运行一个python小脚本把xml转成所需的txt。\r\n\r\n具体操作：把xml都放到一个xml文件夹里，然后在外面新建一个obj文件夹，运行下面python代码，xml会转成txt并存入obj文件夹。\r\n<pre>#python3.5\r\nimport os\r\nimport shutil\r\nimport xml.etree.cElementTree as ET\r\nf=os.listdir(\"xml/\")\r\nfor i in f:\r\n    filename=i[0:8]\r\n    dirname=\"xml/\"+i\r\n    tree=ET.parse(dirname)\r\n    root = tree.getroot()\r\n    shutil.copy(filename+\".jpg\",\"obj/\"+filename+\".jpg\")\r\n    ft=open(\"obj/\"+filename+\".txt\",\"w\")\r\n    for obj in root.findall(\"object\"):\r\n        data=obj.find(\"bndbox\")\r\n        wh=root.find(\"size\")\r\n        width=int(wh.find(\"width\").text)\r\n        height=int(wh.find(\"height\").text)\r\n        xmin=int(data.find(\"xmin\").text)\r\n        ymin=int(data.find(\"ymin\").text)\r\n        xmax=int(data.find(\"xmax\").text)\r\n        ymax=int(data.find(\"ymax\").text)\r\n        xmid=(xmin+xmax)/2\r\n        ymid=(ymin+ymax)/2\r\n        ft.write(\"0 \"+str(xmid/width)+\" \"+str(ymid/height)+\" \"+str((xmax-xmin)/width)+\" \"+str((ymax-ymin)/height)+\"\\n\")</pre>\r\n然后把原图片也放在obj文件里，并把obj文件夹放到<a href=\"https://ganjiacheng.cn/blog/?p=300\">上次项目</a>的darknetx64/data文件下。\r\n\r\n然后在data下新建obj.names和obj.data。\r\n\r\nobj.names写类别名，obj.data如下\r\n<pre>classes= 类别数目\r\ntrain  = data/train.txt\r\nvalid  = data/test.txt\r\nnames = data/obj.names\r\nbackup = backup/</pre>\r\n然后再在data下新建train.txt和test.txt。\r\n\r\n运行下面的代码就能把所有训练图名放到train.txt，然后也可以分一部分到test.txt。\r\n<pre>#python3.5\r\nimport os\r\nf=os.listdir(\"obj/\")\r\nfile=open(\"train.txt\",\"w\")\r\nfor i in f:\r\n    if i[-3:]=='jpg':\r\n        file.write(\"data/obj/\"+i+\"\\n\")</pre>\r\n然后在x64下创建yolo-obj.cfg，内容其他同yolo-voc.2.0.cfg\r\n\r\n要改最后一个filter(224行左右)=(类别数+ 5)*5\r\n\r\n电脑训练不起来的话也可以把第三行的subdivisions按倍数改小(默认为64，可以改32,16)\r\n\r\n之后就可以开始训练模型咯，运行下面的代码可以开始训练\r\n<pre>darknet.exe detector train data/obj.data yolo-obj.cfg</pre>\r\n训练的时候可以看avg,一般是越低越好，趋于不变时就可以停止训练了。\r\n\r\n每一百次会保存一次模型文件在backup文件夹里。\r\n\r\n训练完后可以运行下面代码（xxx改为具体训练次数）来对新的图片进行检测。\r\n<pre>darknet.exe detector test data/obj.data yolo-obj.cfg backup/yolo-obj_xxx.weights</pre>\r\n这里在讲一个批量处理图片的方法。\r\n\r\nvs里打开项目，detector.c文件，改test_detector函数，删掉输入while1和后面的input，直接改成for循环，图片名都用拼接的方法得到，比如1.jpg之类。\r\n\r\n然后往函数里的draw_detections最后加个参数，把图片名传过去。\r\n\r\n改image.c中draw_detections函数的参数，在用crop_image截取检测部分，用save_image保存检测出来的图像。同时去掉draw_box_width。\r\n\r\n然后用ctrl+f搜索draw_detections，把所有用到这个函数的参数都改一下。\r\n\r\n运行便可以批量处理图片并截取出所需部分。",
            "post_title": "yolo在windows训练自己的数据集",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "yolo%e5%9c%a8windows%e8%ae%ad%e7%bb%83%e8%87%aa%e5%b7%b1%e7%9a%84%e6%95%b0%e6%8d%ae%e9%9b%86",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-22 17:00:01",
            "post_modified_gmt": "2017-7-22 09:00:01",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=333",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "335",
            "post_author": "1",
            "post_date": "2017-7-22 16:26:28",
            "post_date_gmt": "2017-7-22 08:26:28",
            "post_content": "上次讲了配置yolo，可以<a href=\"https://ganjiacheng.cn/blog/?p=300\">戳这里</a>看哦！\r\n\r\n这次讲讲yolo用于训练自己的数据集。\r\n\r\n首先还是数据准备，比如人脸检测，那就准备很多包含人脸的图片。\r\n\r\n然后需要数据标注，也就是标出人脸在图片内的位置。这里用一个叫labelImg的工具。具体下载和使用看这里<a href=\"https://github.com/tzutalin/labelImg\">https://github.com/tzutalin/labelImg</a>。\r\n\r\n然后在图片文件夹里运行labelImg，会有个gui界面，之后就可以对每张图片进行标注，标注完后会有一大堆xml文件产生，之后运行一个python小脚本把xml转成所需的txt。\r\n\r\n具体操作：\r\n<pre></pre>\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "yolo在windows训练自己的数据集",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "333-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-22 16:26:28",
            "post_modified_gmt": "2017-7-22 08:26:28",
            "post_content_filtered": "",
            "post_parent": "333",
            "guid": "http://ganjiacheng.cn/blog/?p=335",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "336",
            "post_author": "1",
            "post_date": "2017-7-22 17:00:01",
            "post_date_gmt": "2017-7-22 09:00:01",
            "post_content": "上次讲了配置yolo，可以<a href=\"https://ganjiacheng.cn/blog/?p=300\">戳这里</a>看哦！\r\n\r\n这次讲讲yolo用于训练自己的数据集。<!--more-->\r\n\r\n首先还是数据准备，比如人脸检测，那就先准备很多包含人脸的图片。\r\n\r\n然后需要数据标注，也就是标出人脸在图片内的位置。这里用一个叫labelImg的工具。具体下载和使用看这里<a href=\"https://github.com/tzutalin/labelImg\">https://github.com/tzutalin/labelImg</a>。\r\n\r\n然后在图片文件夹里运行labelImg，会有个gui界面，之后就可以对每张图片进行标注，标注完后会有一大堆xml文件产生，之后运行一个python小脚本把xml转成所需的txt。\r\n\r\n具体操作：把xml都放到一个xml文件夹里，然后在外面新建一个obj文件夹，运行下面python代码，xml会转成txt并存入obj文件夹。\r\n<pre>#python3.5\r\nimport os\r\nimport shutil\r\nimport xml.etree.cElementTree as ET\r\nf=os.listdir(\"xml/\")\r\nfor i in f:\r\n    filename=i[0:8]\r\n    dirname=\"xml/\"+i\r\n    tree=ET.parse(dirname)\r\n    root = tree.getroot()\r\n    shutil.copy(filename+\".jpg\",\"obj/\"+filename+\".jpg\")\r\n    ft=open(\"obj/\"+filename+\".txt\",\"w\")\r\n    for obj in root.findall(\"object\"):\r\n        data=obj.find(\"bndbox\")\r\n        wh=root.find(\"size\")\r\n        width=int(wh.find(\"width\").text)\r\n        height=int(wh.find(\"height\").text)\r\n        xmin=int(data.find(\"xmin\").text)\r\n        ymin=int(data.find(\"ymin\").text)\r\n        xmax=int(data.find(\"xmax\").text)\r\n        ymax=int(data.find(\"ymax\").text)\r\n        xmid=(xmin+xmax)/2\r\n        ymid=(ymin+ymax)/2\r\n        ft.write(\"0 \"+str(xmid/width)+\" \"+str(ymid/height)+\" \"+str((xmax-xmin)/width)+\" \"+str((ymax-ymin)/height)+\"\\n\")</pre>\r\n然后把原图片也放在obj文件里，并把obj文件夹放到<a href=\"https://ganjiacheng.cn/blog/?p=300\">上次项目</a>的darknetx64/data文件下。\r\n\r\n然后在data下新建obj.names和obj.data。\r\n\r\nobj.names写类别名，obj.data如下\r\n<pre>classes= 类别数目\r\ntrain  = data/train.txt\r\nvalid  = data/test.txt\r\nnames = data/obj.names\r\nbackup = backup/</pre>\r\n然后再在data下新建train.txt和test.txt。\r\n\r\n运行下面的代码就能把所有训练图名放到train.txt，然后也可以分一部分到test.txt。\r\n<pre>#python3.5\r\nimport os\r\nf=os.listdir(\"obj/\")\r\nfile=open(\"train.txt\",\"w\")\r\nfor i in f:\r\n    if i[-3:]=='jpg':\r\n        file.write(\"data/obj/\"+i+\"\\n\")</pre>\r\n然后在x64下创建yolo-obj.cfg，内容其他同yolo-voc.2.0.cfg\r\n\r\n要改最后一个filter(224行左右)=(类别数+ 5)*5\r\n\r\n电脑训练不起来的话也可以把第三行的subdivisions按倍数改小(默认为64，可以改32,16)\r\n\r\n之后就可以开始训练模型咯，运行下面的代码可以开始训练\r\n<pre>darknet.exe detector train data/obj.data yolo-obj.cfg</pre>\r\n训练的时候可以看avg,一般是越低越好，趋于不变时就可以停止训练了。\r\n\r\n每一百次会保存一次模型文件在backup文件夹里。\r\n\r\n训练完后可以运行下面代码（xxx改为具体训练次数）来对新的图片进行检测。\r\n<pre>darknet.exe detector test data/obj.data yolo-obj.cfg backup/yolo-obj_xxx.weights</pre>\r\n这里在讲一个批量处理图片的方法。\r\n\r\nvs里打开项目，detector.c文件，改test_detector函数，删掉输入while1和后面的input，直接改成for循环，图片名都用拼接的方法得到，比如1.jpg之类。\r\n\r\n然后往函数里的draw_detections最后加个参数，把图片名传过去。\r\n\r\n改image.c中draw_detections函数的参数，在用crop_image截取检测部分，用save_image保存检测出来的图像。同时去掉draw_box_width。\r\n\r\n然后用ctrl+f搜索draw_detections，把所有用到这个函数的参数都改一下。\r\n\r\n运行便可以批量处理图片并截取出所需部分。",
            "post_title": "yolo在windows训练自己的数据集",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "333-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-22 17:00:01",
            "post_modified_gmt": "2017-7-22 09:00:01",
            "post_content_filtered": "",
            "post_parent": "333",
            "guid": "http://ganjiacheng.cn/blog/?p=336",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "337",
            "post_author": "1",
            "post_date": "2017-7-24 19:18:45",
            "post_date_gmt": "2017-7-24 11:18:45",
            "post_content": "之前看过一点webgl编程指南，确实很难消化。所以过段时间再来朝花夕拾。\r\n\r\n这次直接使用webgl的一个库three.js，能更方便的实现功能。\r\n\r\n先可以<a href=\"https://ganjiacheng.cn/blogdemo/threejsdemo.html\">点击这里看最终效果</a>。<!--more-->\r\n\r\n基本的几步就是：定义舞台，定义透视摄像机，定义渲染器，定义灯光，画爱心，填充爱心，向舞台中心增加爱心，随机向外扩散。\r\n\r\n下面是html代码\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;test3d3&lt;/title&gt;\r\n    &lt;style type=\"text/css\"&gt;\r\n        body{\r\n            margin: 0;\r\n            overflow: hidden;\r\n        }\r\n    &lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;div id=\"webgl\"&gt;&lt;/div&gt;\r\n    &lt;script type=\"text/javascript\" src=\"https://threejs.org/build/three.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        function init(){\r\n            var scene=new THREE.Scene();\r\n            scene.fog=new THREE.Fog(0xffffff,15,300);\r\n\r\n            var camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,0.1,1000);\r\n            camera.position.set(100,100,100);\r\n            camera.lookAt(scene.position);\r\n            \r\n            var renderer=new THREE.WebGLRenderer();\r\n            renderer.setClearColor(0xEEEEEE);\r\n            renderer.setSize(window.innerWidth,window.innerHeight);\r\n\r\n            var spotLight=new THREE.DirectionalLight(0xffffff);\r\n            spotLight.position.set(200,40,200);\r\n            scene.add(spotLight);\r\n\r\n            function drawShape(){\r\n                var shape=new THREE.Shape();\r\n                shape.moveTo(0, 0);\r\n                shape.quadraticCurveTo(-3.8, 2, 4, 9);\r\n                shape.quadraticCurveTo(11, 2, 8, 0);\r\n                shape.quadraticCurveTo(5, -1.2, 4, 2);\r\n                shape.quadraticCurveTo(3, -1.2, 0, 0);\r\n                return shape;\r\n            }\r\n\r\n            function createMesh(goem){\r\n                var meshMaterial=new THREE.MeshPhongMaterial({color:0xffffff * Math.random()});\r\n                meshMaterial.side=THREE.DoubleSide;\r\n                var mesh=THREE.SceneUtils.createMultiMaterialObject(goem,[meshMaterial]);\r\n                mesh.position.set(0,0,0);\r\n                return mesh;\r\n            }\r\n            \r\n            var vx=[1],vy=[1],vpy=[1],vpx=[1], vpz=[1];\r\n\r\n            function addinitShape(){\r\n                vx.push(Math.random()*0.02);\r\n                vy.push(Math.random()*0.02);\r\n                vpy.push(-0.15+Math.random()*0.3);\r\n                vpx.push(-0.15+Math.random()*0.3);\r\n                vpz.push(-0.15+Math.random()*0.3);\r\n                var shape=createMesh(new THREE.ShapeGeometry(drawShape()));\r\n                shape.rotation.z=Math.PI;\r\n                shape.rotation.y=Math.random()*Math.PI;\r\n                scene.add(shape);\r\n            }\r\n\r\n            for(var i=0;i&lt;100;i++){\r\n                addinitShape();\r\n            }\r\n            \r\n            setInterval(function(){\r\n                if(scene.children.length&lt;1000){\r\n                    addinitShape();\r\n                }else{\r\n                    scene.children.splice(1,1);\r\n                    vx.shift();\r\n                    vy.shift();\r\n                    vpx.shift();\r\n                    vpy.shift();\r\n                    vpz.shift();\r\n                }\r\n            },80)\r\n            \r\n            document.getElementById(\"webgl\").appendChild(renderer.domElement);\r\n            \r\n            function rendererScene(){\r\n                for(let i=1;i&lt;scene.children.length;i++){\r\n                    scene.children[i].rotation.y += vy[i];\r\n                    scene.children[i].rotation.x += vx[i];\r\n                    scene.children[i].position.y -= vpy[i];\r\n                    scene.children[i].position.x += vpx[i];\r\n                    scene.children[i].position.z += vpz[i];\r\n                }\r\n                requestAnimationFrame(rendererScene);\r\n                renderer.render(scene,camera);\r\n            }\r\n            rendererScene();\r\n        }\r\n        window.onload=init;\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n这还是three.js最基础的一部分，之后会继续加特技啦！",
            "post_title": "初试three.js，一个小demo",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e5%88%9d%e8%af%95three-js%ef%bc%8c%e4%b8%80%e4%b8%aa%e5%b0%8fdemo",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-24 19:21:50",
            "post_modified_gmt": "2017-7-24 11:21:50",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=337",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "338",
            "post_author": "1",
            "post_date": "2017-7-24 18:35:07",
            "post_date_gmt": "2017-7-24 10:35:07",
            "post_content": "之前看过一点webgl编程指南，确实很难。所以过段时间再来朝花夕拾。\r\n\r\n这次直接使用webgl的一个库three.js，能更方便的实现功能。\r\n\r\n先<a href=\"https://ganjiacheng.cn/blogdemo/threejsdemo.html\">点击这里看效果</a>。\r\n<pre></pre>\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "初试three.js，一个小demo",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "337-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-24 18:35:07",
            "post_modified_gmt": "2017-7-24 10:35:07",
            "post_content_filtered": "",
            "post_parent": "337",
            "guid": "http://ganjiacheng.cn/blog/?p=338",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "339",
            "post_author": "1",
            "post_date": "2017-7-24 19:17:33",
            "post_date_gmt": "2017-7-24 11:17:33",
            "post_content": "之前看过一点webgl编程指南，确实很难消化。所以过段时间再来朝花夕拾。\r\n\r\n这次直接使用webgl的一个库three.js，能更方便的实现功能。\r\n\r\n先可以<a href=\"https://ganjiacheng.cn/blogdemo/threejsdemo.html\">点击这里看最终效果</a>。\r\n\r\n基本的几步就是：定义舞台，定义透视摄像机，定义渲染器，定义灯光，画爱心，填充爱心，向舞台中心增加爱心，随机向外扩散。\r\n\r\n下面是html代码\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;test3d3&lt;/title&gt;\r\n    &lt;style type=\"text/css\"&gt;\r\n        body{\r\n            margin: 0;\r\n            overflow: hidden;\r\n        }\r\n    &lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;div id=\"webgl\"&gt;&lt;/div&gt;\r\n    &lt;script type=\"text/javascript\" src=\"https://threejs.org/build/three.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        function init(){\r\n            var scene=new THREE.Scene();\r\n            scene.fog=new THREE.Fog(0xffffff,15,300);\r\n\r\n            var camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,0.1,1000);\r\n            camera.position.set(100,100,100);\r\n            camera.lookAt(scene.position);\r\n            \r\n            var renderer=new THREE.WebGLRenderer();\r\n            renderer.setClearColor(0xEEEEEE);\r\n            renderer.setSize(window.innerWidth,window.innerHeight);\r\n\r\n            var spotLight=new THREE.DirectionalLight(0xffffff);\r\n            spotLight.position.set(200,40,200);\r\n            scene.add(spotLight);\r\n\r\n            function drawShape(){\r\n                var shape=new THREE.Shape();\r\n                shape.moveTo(0, 0);\r\n                shape.quadraticCurveTo(-3.8, 2, 4, 9);\r\n                shape.quadraticCurveTo(11, 2, 8, 0);\r\n                shape.quadraticCurveTo(5, -1.2, 4, 2);\r\n                shape.quadraticCurveTo(3, -1.2, 0, 0);\r\n                return shape;\r\n            }\r\n\r\n            function createMesh(goem){\r\n                var meshMaterial=new THREE.MeshPhongMaterial({color:0xffffff * Math.random()});\r\n                meshMaterial.side=THREE.DoubleSide;\r\n                var mesh=THREE.SceneUtils.createMultiMaterialObject(goem,[meshMaterial]);\r\n                mesh.position.set(0,0,0);\r\n                return mesh;\r\n            }\r\n            \r\n            var vx=[1],vy=[1],vpy=[1],vpx=[1], vpz=[1];\r\n\r\n            function addinitShape(){\r\n                vx.push(Math.random()*0.02);\r\n                vy.push(Math.random()*0.02);\r\n                vpy.push(-0.15+Math.random()*0.3);\r\n                vpx.push(-0.15+Math.random()*0.3);\r\n                vpz.push(-0.15+Math.random()*0.3);\r\n                var shape=createMesh(new THREE.ShapeGeometry(drawShape()));\r\n                shape.rotation.z=Math.PI;\r\n                shape.rotation.y=Math.random()*Math.PI;\r\n                scene.add(shape);\r\n            }\r\n\r\n            for(var i=0;i&lt;100;i++){\r\n                addinitShape();\r\n            }\r\n            \r\n            setInterval(function(){\r\n                if(scene.children.length&lt;1000){\r\n                    addinitShape();\r\n                }else{\r\n                    scene.children.splice(1,1);\r\n                    vx.shift();\r\n                    vy.shift();\r\n                    vpx.shift();\r\n                    vpy.shift();\r\n                    vpz.shift();\r\n                }\r\n            },80)\r\n            \r\n            document.getElementById(\"webgl\").appendChild(renderer.domElement);\r\n            \r\n            function rendererScene(){\r\n                for(let i=1;i&lt;scene.children.length;i++){\r\n                    scene.children[i].rotation.y += vy[i];\r\n                    scene.children[i].rotation.x += vx[i];\r\n                    scene.children[i].position.y -= vpy[i];\r\n                    scene.children[i].position.x += vpx[i];\r\n                    scene.children[i].position.z += vpz[i];\r\n                }\r\n                requestAnimationFrame(rendererScene);\r\n                renderer.render(scene,camera);\r\n            }\r\n            rendererScene();\r\n        }\r\n        window.onload=init;\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n这还是three.js最基础的一部分，之后会继续加特技啦！",
            "post_title": "初试three.js，一个小demo",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "337-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-24 19:17:33",
            "post_modified_gmt": "2017-7-24 11:17:33",
            "post_content_filtered": "",
            "post_parent": "337",
            "guid": "http://ganjiacheng.cn/blog/?p=339",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "340",
            "post_author": "1",
            "post_date": "2017-7-24 19:21:50",
            "post_date_gmt": "2017-7-24 11:21:50",
            "post_content": "之前看过一点webgl编程指南，确实很难消化。所以过段时间再来朝花夕拾。\r\n\r\n这次直接使用webgl的一个库three.js，能更方便的实现功能。\r\n\r\n先可以<a href=\"https://ganjiacheng.cn/blogdemo/threejsdemo.html\">点击这里看最终效果</a>。<!--more-->\r\n\r\n基本的几步就是：定义舞台，定义透视摄像机，定义渲染器，定义灯光，画爱心，填充爱心，向舞台中心增加爱心，随机向外扩散。\r\n\r\n下面是html代码\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;test3d3&lt;/title&gt;\r\n    &lt;style type=\"text/css\"&gt;\r\n        body{\r\n            margin: 0;\r\n            overflow: hidden;\r\n        }\r\n    &lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;div id=\"webgl\"&gt;&lt;/div&gt;\r\n    &lt;script type=\"text/javascript\" src=\"https://threejs.org/build/three.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        function init(){\r\n            var scene=new THREE.Scene();\r\n            scene.fog=new THREE.Fog(0xffffff,15,300);\r\n\r\n            var camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,0.1,1000);\r\n            camera.position.set(100,100,100);\r\n            camera.lookAt(scene.position);\r\n            \r\n            var renderer=new THREE.WebGLRenderer();\r\n            renderer.setClearColor(0xEEEEEE);\r\n            renderer.setSize(window.innerWidth,window.innerHeight);\r\n\r\n            var spotLight=new THREE.DirectionalLight(0xffffff);\r\n            spotLight.position.set(200,40,200);\r\n            scene.add(spotLight);\r\n\r\n            function drawShape(){\r\n                var shape=new THREE.Shape();\r\n                shape.moveTo(0, 0);\r\n                shape.quadraticCurveTo(-3.8, 2, 4, 9);\r\n                shape.quadraticCurveTo(11, 2, 8, 0);\r\n                shape.quadraticCurveTo(5, -1.2, 4, 2);\r\n                shape.quadraticCurveTo(3, -1.2, 0, 0);\r\n                return shape;\r\n            }\r\n\r\n            function createMesh(goem){\r\n                var meshMaterial=new THREE.MeshPhongMaterial({color:0xffffff * Math.random()});\r\n                meshMaterial.side=THREE.DoubleSide;\r\n                var mesh=THREE.SceneUtils.createMultiMaterialObject(goem,[meshMaterial]);\r\n                mesh.position.set(0,0,0);\r\n                return mesh;\r\n            }\r\n            \r\n            var vx=[1],vy=[1],vpy=[1],vpx=[1], vpz=[1];\r\n\r\n            function addinitShape(){\r\n                vx.push(Math.random()*0.02);\r\n                vy.push(Math.random()*0.02);\r\n                vpy.push(-0.15+Math.random()*0.3);\r\n                vpx.push(-0.15+Math.random()*0.3);\r\n                vpz.push(-0.15+Math.random()*0.3);\r\n                var shape=createMesh(new THREE.ShapeGeometry(drawShape()));\r\n                shape.rotation.z=Math.PI;\r\n                shape.rotation.y=Math.random()*Math.PI;\r\n                scene.add(shape);\r\n            }\r\n\r\n            for(var i=0;i&lt;100;i++){\r\n                addinitShape();\r\n            }\r\n            \r\n            setInterval(function(){\r\n                if(scene.children.length&lt;1000){\r\n                    addinitShape();\r\n                }else{\r\n                    scene.children.splice(1,1);\r\n                    vx.shift();\r\n                    vy.shift();\r\n                    vpx.shift();\r\n                    vpy.shift();\r\n                    vpz.shift();\r\n                }\r\n            },80)\r\n            \r\n            document.getElementById(\"webgl\").appendChild(renderer.domElement);\r\n            \r\n            function rendererScene(){\r\n                for(let i=1;i&lt;scene.children.length;i++){\r\n                    scene.children[i].rotation.y += vy[i];\r\n                    scene.children[i].rotation.x += vx[i];\r\n                    scene.children[i].position.y -= vpy[i];\r\n                    scene.children[i].position.x += vpx[i];\r\n                    scene.children[i].position.z += vpz[i];\r\n                }\r\n                requestAnimationFrame(rendererScene);\r\n                renderer.render(scene,camera);\r\n            }\r\n            rendererScene();\r\n        }\r\n        window.onload=init;\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n这还是three.js最基础的一部分，之后会继续加特技啦！",
            "post_title": "初试three.js，一个小demo",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "337-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-24 19:21:50",
            "post_modified_gmt": "2017-7-24 11:21:50",
            "post_content_filtered": "",
            "post_parent": "337",
            "guid": "http://ganjiacheng.cn/blog/?p=340",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "347",
            "post_author": "1",
            "post_date": "2017-7-25 21:02:15",
            "post_date_gmt": "2017-7-25 13:02:15",
            "post_content": "在做3d的时候偶然发现其中用了web worker，因为要做大量的运算，如果放在js的主单线程里就会让页面卡的不行。\r\n\r\n不信可以运行下面的Fibonacci<!--more-->\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;web worker&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;button id=\"btn\"&gt;click me&lt;/button&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        btn.onclick=function(){\r\n            alert('you clicked');\r\n        }\r\n        function fb(n){\r\n            if(n==1||n==2){\r\n                return 1;\r\n            }else{\r\n                return fb(n-1)+fb(n-2);\r\n            }\r\n        }\r\n        alert(fb(45))\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n上面代码至少让浏览器卡上个10秒，也就是按钮事件没法触发。\r\n\r\n然后就用得到web worker咯，他创造了类似于后台运行的“多线程”，在保证主线程正常运行的情况下在后台运行计算代码。\r\n\r\n一些限制貌似是web worker有同源限制，也无法访问主线程的dom。\r\n\r\n下面是web worker的代码，因为要同源，要放在服务器上运行，否则会报错。\r\n\r\n主文件index.html\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;web worker&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;button id=\"btn\"&gt;click me&lt;/button&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        var worker=new Worker(\"worker.js\");\r\n        worker.postMessage(45);\r\n        worker.onmessage=function(e){\r\n            alert(e.data)\r\n        }\r\n        var btn=document.getElementById(\"btn\");\r\n        btn.onclick=function(){\r\n            alert('you clicked');\r\n        }\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n然后是worker.js，在同目录下\r\n<pre>onmessage=function(e){\r\n    function fb(n){\r\n        if(n==1||n==2){\r\n            return 1;\r\n        }else{\r\n            return fb(n-1)+fb(n-2);\r\n        }\r\n    }\r\n    postMessage(fb(e.data));\r\n}</pre>\r\n通过服务器运行index.html就可以啦。\r\n\r\n比对上面的情况，效果很明显。",
            "post_title": "初试web worker，感觉是神器",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e5%88%9d%e8%af%95web-worker%ef%bc%8c%e6%84%9f%e8%a7%89%e6%98%af%e7%a5%9e%e5%99%a8",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-25 21:02:37",
            "post_modified_gmt": "2017-7-25 13:02:37",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=347",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "348",
            "post_author": "1",
            "post_date": "2017-7-25 20:48:52",
            "post_date_gmt": "2017-7-25 12:48:52",
            "post_content": "在做3d的时候偶然发现了web worker，因为要做大量的运算，如果放在js的主单线程里就卡的不行。\r\n\r\n不信可以运行下面的Fibonacci\r\n<pre></pre>\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "初试web worker，感觉是神器",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "347-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-25 20:48:52",
            "post_modified_gmt": "2017-7-25 12:48:52",
            "post_content_filtered": "",
            "post_parent": "347",
            "guid": "http://ganjiacheng.cn/blog/?p=348",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "350",
            "post_author": "1",
            "post_date": "2017-7-25 21:02:15",
            "post_date_gmt": "2017-7-25 13:02:15",
            "post_content": "在做3d的时候偶然发现其中用了web worker，因为要做大量的运算，如果放在js的主单线程里就会让页面卡的不行。\r\n\r\n不信可以运行下面的Fibonacci\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;web worker&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;button id=\"btn\"&gt;click me&lt;/button&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        btn.onclick=function(){\r\n            alert('you clicked');\r\n        }\r\n        function fb(n){\r\n            if(n==1||n==2){\r\n                return 1;\r\n            }else{\r\n                return fb(n-1)+fb(n-2);\r\n            }\r\n        }\r\n        alert(fb(45))\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n上面代码至少让浏览器卡上个10秒，也就是按钮事件没法触发。\r\n\r\n然后就用得到web worker咯，他创造了类似于后台运行的“多线程”，在保证主线程正常运行的情况下在后台运行计算代码。\r\n\r\n一些限制貌似是web worker有同源限制，也无法访问主线程的dom。\r\n\r\n下面是web worker的代码，因为要同源，要放在服务器上运行，否则会报错。\r\n\r\n主文件index.html\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;web worker&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;button id=\"btn\"&gt;click me&lt;/button&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        var worker=new Worker(\"worker.js\");\r\n        worker.postMessage(45);\r\n        worker.onmessage=function(e){\r\n            alert(e.data)\r\n        }\r\n        var btn=document.getElementById(\"btn\");\r\n        btn.onclick=function(){\r\n            alert('you clicked');\r\n        }\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n然后是worker.js，在同目录下\r\n<pre>onmessage=function(e){\r\n    function fb(n){\r\n        if(n==1||n==2){\r\n            return 1;\r\n        }else{\r\n            return fb(n-1)+fb(n-2);\r\n        }\r\n    }\r\n    postMessage(fb(e.data));\r\n}</pre>\r\n通过服务器运行index.html就可以啦。\r\n\r\n比对上面的情况，效果很明显。",
            "post_title": "初试web worker，感觉是神器",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "347-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-25 21:02:15",
            "post_modified_gmt": "2017-7-25 13:02:15",
            "post_content_filtered": "",
            "post_parent": "347",
            "guid": "http://ganjiacheng.cn/blog/?p=350",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "351",
            "post_author": "1",
            "post_date": "2017-7-25 21:02:37",
            "post_date_gmt": "2017-7-25 13:02:37",
            "post_content": "在做3d的时候偶然发现其中用了web worker，因为要做大量的运算，如果放在js的主单线程里就会让页面卡的不行。\r\n\r\n不信可以运行下面的Fibonacci<!--more-->\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;web worker&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;button id=\"btn\"&gt;click me&lt;/button&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        btn.onclick=function(){\r\n            alert('you clicked');\r\n        }\r\n        function fb(n){\r\n            if(n==1||n==2){\r\n                return 1;\r\n            }else{\r\n                return fb(n-1)+fb(n-2);\r\n            }\r\n        }\r\n        alert(fb(45))\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n上面代码至少让浏览器卡上个10秒，也就是按钮事件没法触发。\r\n\r\n然后就用得到web worker咯，他创造了类似于后台运行的“多线程”，在保证主线程正常运行的情况下在后台运行计算代码。\r\n\r\n一些限制貌似是web worker有同源限制，也无法访问主线程的dom。\r\n\r\n下面是web worker的代码，因为要同源，要放在服务器上运行，否则会报错。\r\n\r\n主文件index.html\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;web worker&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;button id=\"btn\"&gt;click me&lt;/button&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        var worker=new Worker(\"worker.js\");\r\n        worker.postMessage(45);\r\n        worker.onmessage=function(e){\r\n            alert(e.data)\r\n        }\r\n        var btn=document.getElementById(\"btn\");\r\n        btn.onclick=function(){\r\n            alert('you clicked');\r\n        }\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n然后是worker.js，在同目录下\r\n<pre>onmessage=function(e){\r\n    function fb(n){\r\n        if(n==1||n==2){\r\n            return 1;\r\n        }else{\r\n            return fb(n-1)+fb(n-2);\r\n        }\r\n    }\r\n    postMessage(fb(e.data));\r\n}</pre>\r\n通过服务器运行index.html就可以啦。\r\n\r\n比对上面的情况，效果很明显。",
            "post_title": "初试web worker，感觉是神器",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "347-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-25 21:02:37",
            "post_modified_gmt": "2017-7-25 13:02:37",
            "post_content_filtered": "",
            "post_parent": "347",
            "guid": "http://ganjiacheng.cn/blog/?p=351",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "352",
            "post_author": "1",
            "post_date": "2017-7-25 21:26:57",
            "post_date_gmt": "2017-7-25 13:26:57",
            "post_content": "一开始还就迷茫呢碰撞检测比较难，后来发现了physi.js。\r\n\r\n也是在看three.js看到的一个库，用了web worker实现各种复杂的计算。\r\n\r\n先<a href=\"http://test.ganjiacheng.cn/3d/test3d6.html\">点击这里看效果</a>，手机电脑支持web worker(一般都支持)的都可以运行<!--more-->\r\n\r\n初次加载看起来快，实际一个用于计算的ammo.js也有1.2M，只是他在后台加载。所以可能得等一会儿。\r\n\r\n这个本应该有个onload的，不过目前还没有发现这个函数，之后有机会在探索。\r\n\r\n思路便是：创造一个物理舞台，摄像头和渲染器和之前一样，加一个物理平面（带摩擦和弹性），加一个普通cube并来回运动，监听click事件，click时获取普通cube的位置并创造一个物理cube，物理cube便会往下掉，加一个计分。\r\n\r\n下面是具体代码，js文件的话在下面的路径可以找到\r\n\r\nhttp://test.ganjiacheng.cn/3d/learning-threejs/libs/xxx.js\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;  \r\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\r\n    &lt;title&gt;test3d6&lt;/title&gt;\r\n    &lt;style type=\"text/css\"&gt;\r\n        body{\r\n            margin: 0;\r\n            overflow: hidden;\r\n        }\r\n        #stats{\r\n            position: absolute;\r\n            left: 0;\r\n            top: 0;\r\n        }\r\n        #grade{\r\n            position: absolute;\r\n            left: 50%;\r\n            margin-left: -28px;\r\n            top: 0;\r\n        }\r\n    &lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;div id=\"stats\"&gt;&lt;/div&gt;\r\n    &lt;div id=\"grade\"&gt;0&lt;/div&gt;\r\n    &lt;div id=\"webgl\"&gt;&lt;/div&gt;\r\n    &lt;script type=\"text/javascript\" src=\"learning-threejs/libs/three.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\" src=\"learning-threejs/libs/stats.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\" src=\"learning-threejs/libs/physi.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        var scene;\r\n        function init(){\r\n            var stats=initStats();\r\n\r\n            Physijs.scripts.worker='learning-threejs/libs/physijs_worker.js';\r\n\r\n            var scene=new Physijs.Scene();\r\n            scene.setGravity(new THREE.Vector3(0,-50,0));\r\n\r\n            var camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,0.1,1000);\r\n            camera.position.set(-30,40,40);\r\n            camera.lookAt(scene.position);\r\n            \r\n            var renderer=new THREE.WebGLRenderer();\r\n            renderer.setClearColor(0xEEEEEE);\r\n            renderer.setSize(window.innerWidth,window.innerHeight);\r\n            renderer.shadowMapEnable=true;\r\n            \r\n            var ground_material=Physijs.createMaterial(new THREE.MeshLambertMaterial({color:0xffffff}),0.9,0.3);\r\n            var planeGeometry=new Physijs.BoxMesh(new THREE.BoxGeometry(10,1,10),ground_material,0)            \r\n            scene.add(planeGeometry);\r\n            \r\n            function addPhyCube(x=0,y=0,z=0){\r\n                var cubeGeometry=new THREE.BoxGeometry(10,2,10);\r\n                var cube=new Physijs.BoxMesh(cubeGeometry,Physijs.createMaterial(new THREE.MeshLambertMaterial({color:0xffffff*Math.random()}),1,0));\r\n                cube.position.set(x,y,z);\r\n                scene.add(cube);\r\n            }\r\n\r\n            function addNormalCube(x=0,y=8,z=0){\r\n                var cubeGeometry=new THREE.BoxGeometry(10,2,10);\r\n                var cubeMaterial=new THREE.MeshLambertMaterial({color:0xff0000});\r\n                var cube=new THREE.Mesh(cubeGeometry,cubeMaterial);\r\n                cube.position.set(x,y,z);\r\n                scene.add(cube);\r\n            }\r\n            \r\n            var maxy=0;\r\n            var NorNum=2;\r\n            var time=0\r\n            function refreshGrade(){\r\n                if(time==0 &amp;&amp; stats.domElement.textContent[0]==6){\r\n                    document.getElementById(\"webgl\").onmousedown=function(){\r\n                        addPhyCube(scene.children[NorNum].position.x,scene.children[NorNum].position.y,scene.children[NorNum].position.z);\r\n                        time=2;\r\n                    }\r\n                    time=1;\r\n                }else if(time==1){\r\n                    document.getElementById(\"grade\").innerHTML=\"start\";\r\n                }else if(time==2){\r\n                    var len=scene.children.length;\r\n                    var maxy=0;\r\n                    for(var i=NorNum+1;i&lt;len;i++){\r\n                        maxy=scene.children[i].position.y&gt;-2&amp;&amp;Math.abs(scene.children[i].position.z)&lt;15?maxy+1:maxy;\r\n                    }                \r\n                    camera.position.y=maxy*2+40;\r\n                    scene.children[NorNum].position.y=maxy*2+5;\r\n                    document.getElementById(\"grade\").innerHTML=\"score:\"+maxy;\r\n                }else{\r\n                    document.getElementById(\"grade\").innerHTML=\"waiting......\";\r\n                }\r\n            }   \r\n\r\n            var spotLight=new THREE.SpotLight(0xffffff);\r\n            spotLight.position.set(-40,60,0);\r\n            scene.add(spotLight);\r\n            spotLight.castShadow=true;\r\n            \r\n            document.getElementById(\"webgl\").appendChild(renderer.domElement);\r\n            addNormalCube(0,8,-20);\r\n            renderer.render(scene,camera);\r\n\r\n            var step=0;\r\n\r\n            function rendererScene(){\r\n                stats.update();\r\n                refreshGrade();\r\n                last=scene.children.length-1;\r\n                step+=0.05;\r\n                scene.children[NorNum].position.z+=Math.sin(step);\r\n                requestAnimationFrame(rendererScene);\r\n                renderer.render(scene,camera);\r\n                scene.simulate();\r\n            }\r\n\r\n            function initStats(){\r\n                var stats=new Stats();\r\n                stats.setMode(0);\r\n                document.getElementById(\"stats\").appendChild(stats.domElement);\r\n                return stats;\r\n            }\r\n\r\n            rendererScene();\r\n        }\r\n        window.onload=init;\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n效果展示：\r\n\r\n<img class=\"alignnone size-medium wp-image-355\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/07/IMG_3419-169x300.png\" alt=\"\" width=\"169\" height=\"300\" />",
            "post_title": "three.js第二波，实现类似反应堆的游戏",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "three-js%e7%ac%ac%e4%ba%8c%e6%b3%a2%ef%bc%8c%e5%ae%9e%e7%8e%b0%e7%b1%bb%e4%bc%bc%e5%8f%8d%e5%ba%94%e5%a0%86%e7%9a%84%e6%b8%b8%e6%88%8f",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-25 21:26:57",
            "post_modified_gmt": "2017-7-25 13:26:57",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=352",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "353",
            "post_author": "1",
            "post_date": "2017-7-25 21:07:53",
            "post_date_gmt": "2017-7-25 13:07:53",
            "post_content": "一开始还就迷茫呢碰撞检测比较难，后来发现了physi.js。\r\n\r\n也是包含在three.js中的一个库，用了web worker实现各种复杂的计算。\r\n\r\n&nbsp;",
            "post_title": "three.js第二波，实现类似反应堆的游戏",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "352-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-25 21:07:53",
            "post_modified_gmt": "2017-7-25 13:07:53",
            "post_content_filtered": "",
            "post_parent": "352",
            "guid": "http://ganjiacheng.cn/blog/?p=353",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "355",
            "post_author": "1",
            "post_date": "2017-7-25 21:25:32",
            "post_date_gmt": "2017-7-25 13:25:32",
            "post_content": "",
            "post_title": "IMG_3419",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "img_3419",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-25 21:25:32",
            "post_modified_gmt": "2017-7-25 13:25:32",
            "post_content_filtered": "",
            "post_parent": "352",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2017/07/IMG_3419.png",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/png",
            "comment_count": "0"
        },
        {
            "ID": "356",
            "post_author": "1",
            "post_date": "2017-7-25 21:26:57",
            "post_date_gmt": "2017-7-25 13:26:57",
            "post_content": "一开始还就迷茫呢碰撞检测比较难，后来发现了physi.js。\r\n\r\n也是在看three.js看到的一个库，用了web worker实现各种复杂的计算。\r\n\r\n先<a href=\"http://test.ganjiacheng.cn/3d/test3d6.html\">点击这里看效果</a>，手机电脑支持web worker(一般都支持)的都可以运行<!--more-->\r\n\r\n初次加载看起来快，实际一个用于计算的ammo.js也有1.2M，只是他在后台加载。所以可能得等一会儿。\r\n\r\n这个本应该有个onload的，不过目前还没有发现这个函数，之后有机会在探索。\r\n\r\n思路便是：创造一个物理舞台，摄像头和渲染器和之前一样，加一个物理平面（带摩擦和弹性），加一个普通cube并来回运动，监听click事件，click时获取普通cube的位置并创造一个物理cube，物理cube便会往下掉，加一个计分。\r\n\r\n下面是具体代码，js文件的话在下面的路径可以找到\r\n\r\nhttp://test.ganjiacheng.cn/3d/learning-threejs/libs/xxx.js\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;  \r\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\r\n    &lt;title&gt;test3d6&lt;/title&gt;\r\n    &lt;style type=\"text/css\"&gt;\r\n        body{\r\n            margin: 0;\r\n            overflow: hidden;\r\n        }\r\n        #stats{\r\n            position: absolute;\r\n            left: 0;\r\n            top: 0;\r\n        }\r\n        #grade{\r\n            position: absolute;\r\n            left: 50%;\r\n            margin-left: -28px;\r\n            top: 0;\r\n        }\r\n    &lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;div id=\"stats\"&gt;&lt;/div&gt;\r\n    &lt;div id=\"grade\"&gt;0&lt;/div&gt;\r\n    &lt;div id=\"webgl\"&gt;&lt;/div&gt;\r\n    &lt;script type=\"text/javascript\" src=\"learning-threejs/libs/three.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\" src=\"learning-threejs/libs/stats.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\" src=\"learning-threejs/libs/physi.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        var scene;\r\n        function init(){\r\n            var stats=initStats();\r\n\r\n            Physijs.scripts.worker='learning-threejs/libs/physijs_worker.js';\r\n\r\n            var scene=new Physijs.Scene();\r\n            scene.setGravity(new THREE.Vector3(0,-50,0));\r\n\r\n            var camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,0.1,1000);\r\n            camera.position.set(-30,40,40);\r\n            camera.lookAt(scene.position);\r\n            \r\n            var renderer=new THREE.WebGLRenderer();\r\n            renderer.setClearColor(0xEEEEEE);\r\n            renderer.setSize(window.innerWidth,window.innerHeight);\r\n            renderer.shadowMapEnable=true;\r\n            \r\n            var ground_material=Physijs.createMaterial(new THREE.MeshLambertMaterial({color:0xffffff}),0.9,0.3);\r\n            var planeGeometry=new Physijs.BoxMesh(new THREE.BoxGeometry(10,1,10),ground_material,0)            \r\n            scene.add(planeGeometry);\r\n            \r\n            function addPhyCube(x=0,y=0,z=0){\r\n                var cubeGeometry=new THREE.BoxGeometry(10,2,10);\r\n                var cube=new Physijs.BoxMesh(cubeGeometry,Physijs.createMaterial(new THREE.MeshLambertMaterial({color:0xffffff*Math.random()}),1,0));\r\n                cube.position.set(x,y,z);\r\n                scene.add(cube);\r\n            }\r\n\r\n            function addNormalCube(x=0,y=8,z=0){\r\n                var cubeGeometry=new THREE.BoxGeometry(10,2,10);\r\n                var cubeMaterial=new THREE.MeshLambertMaterial({color:0xff0000});\r\n                var cube=new THREE.Mesh(cubeGeometry,cubeMaterial);\r\n                cube.position.set(x,y,z);\r\n                scene.add(cube);\r\n            }\r\n            \r\n            var maxy=0;\r\n            var NorNum=2;\r\n            var time=0\r\n            function refreshGrade(){\r\n                if(time==0 &amp;&amp; stats.domElement.textContent[0]==6){\r\n                    document.getElementById(\"webgl\").onmousedown=function(){\r\n                        addPhyCube(scene.children[NorNum].position.x,scene.children[NorNum].position.y,scene.children[NorNum].position.z);\r\n                        time=2;\r\n                    }\r\n                    time=1;\r\n                }else if(time==1){\r\n                    document.getElementById(\"grade\").innerHTML=\"start\";\r\n                }else if(time==2){\r\n                    var len=scene.children.length;\r\n                    var maxy=0;\r\n                    for(var i=NorNum+1;i&lt;len;i++){\r\n                        maxy=scene.children[i].position.y&gt;-2&amp;&amp;Math.abs(scene.children[i].position.z)&lt;15?maxy+1:maxy;\r\n                    }                \r\n                    camera.position.y=maxy*2+40;\r\n                    scene.children[NorNum].position.y=maxy*2+5;\r\n                    document.getElementById(\"grade\").innerHTML=\"score:\"+maxy;\r\n                }else{\r\n                    document.getElementById(\"grade\").innerHTML=\"waiting......\";\r\n                }\r\n            }   \r\n\r\n            var spotLight=new THREE.SpotLight(0xffffff);\r\n            spotLight.position.set(-40,60,0);\r\n            scene.add(spotLight);\r\n            spotLight.castShadow=true;\r\n            \r\n            document.getElementById(\"webgl\").appendChild(renderer.domElement);\r\n            addNormalCube(0,8,-20);\r\n            renderer.render(scene,camera);\r\n\r\n            var step=0;\r\n\r\n            function rendererScene(){\r\n                stats.update();\r\n                refreshGrade();\r\n                last=scene.children.length-1;\r\n                step+=0.05;\r\n                scene.children[NorNum].position.z+=Math.sin(step);\r\n                requestAnimationFrame(rendererScene);\r\n                renderer.render(scene,camera);\r\n                scene.simulate();\r\n            }\r\n\r\n            function initStats(){\r\n                var stats=new Stats();\r\n                stats.setMode(0);\r\n                document.getElementById(\"stats\").appendChild(stats.domElement);\r\n                return stats;\r\n            }\r\n\r\n            rendererScene();\r\n        }\r\n        window.onload=init;\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n效果展示：\r\n\r\n<img class=\"alignnone size-medium wp-image-355\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/07/IMG_3419-169x300.png\" alt=\"\" width=\"169\" height=\"300\" />",
            "post_title": "three.js第二波，实现类似反应堆的游戏",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "352-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-25 21:26:57",
            "post_modified_gmt": "2017-7-25 13:26:57",
            "post_content_filtered": "",
            "post_parent": "352",
            "guid": "http://ganjiacheng.cn/blog/?p=356",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "359",
            "post_author": "1",
            "post_date": "2017-7-27 21:42:09",
            "post_date_gmt": "2017-7-27 13:42:09",
            "post_content": "魔方对于大多数人都不陌生，也是个立方体的玩意儿。\r\n\r\n这里就简单用three.js实现一下，复杂的还是定位，毕竟是3d的还能乱转。\r\n\r\n<a href=\"http://test.ganjiacheng.cn/3d/test3d2.html\">点击这里先看效果哦！！</a><!--more-->\r\n\r\n看代码前还是先来说明：基本框架还是一样----舞台，摄像头和渲染器。\r\n\r\n之后用faceMaterial写一个6面颜色不一样的cube，并用27个这样的cube组成魔方的基本样子。\r\n\r\ntrackballControls是摄像头控制函数，加入可以用鼠标控制其中的摄像头。\r\n\r\n监听鼠标按下事件，按下时获取点击的三维坐标，获取在最前端的cube的name。\r\n\r\n通过坐标计算旋转方向（这里容易脑壳疼），通过name计算同一平面的其他cube。\r\n\r\n通过方向与平面以矩阵旋转平面内9个cube，并把旋转做成动画。\r\n\r\n听说好文章结尾都有彩蛋~\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\r\n    &lt;title&gt;test3d&lt;/title&gt;\r\n    &lt;style type=\"text/css\"&gt;\r\n        body{\r\n            margin: 0;\r\n            overflow: hidden;\r\n        }\r\n    &lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;div id=\"webgl\"&gt;&lt;/div&gt;\r\n    &lt;script type=\"text/javascript\" src=\"http://test.ganjiacheng.cn/3d/learning-threejs/libs/three.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\" src=\"http://test.ganjiacheng.cn/3d/learning-threejs/libs/TrackballControls.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        function init(){\r\n            var scene=new THREE.Scene();\r\n\r\n            var camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,0.1,1000);\r\n            camera.position.set(-20,20,20);\r\n            camera.lookAt(scene.position);\r\n\r\n            var renderer=new THREE.WebGLRenderer();\r\n            renderer.setClearColor(0xdadada);\r\n            renderer.setSize(window.innerWidth,window.innerHeight);\r\n            renderer.shadowMapEnabled=true;\r\n\r\n            var axes=new THREE.AxisHelper(2);\r\n            scene.add(axes);\r\n\r\n            var group=new THREE.Mesh();\r\n            var mats=[];\r\n            mats.push(new THREE.MeshBasicMaterial({color:0x009e60}));//g\r\n            mats.push(new THREE.MeshBasicMaterial({color:0x0051ba}));//b\r\n            mats.push(new THREE.MeshBasicMaterial({color:0xffd500}));//y\r\n            mats.push(new THREE.MeshBasicMaterial({color:0xff5800}));//j\r\n            mats.push(new THREE.MeshBasicMaterial({color:0xC41E3A}));//r\r\n            mats.push(new THREE.MeshBasicMaterial({color:0xffffff}));//w\r\n            var faceMaterial=new THREE.MeshFaceMaterial(mats);\r\n            for(var x=0;x&lt;3;x++){\r\n                for(var y=0;y&lt;3;y++){\r\n                    for(var z=0;z&lt;3;z++){\r\n                        var cubeGeom=new THREE.BoxGeometry(2.9,2.9,2.9);\r\n                        var cube=new THREE.Mesh(cubeGeom,faceMaterial);\r\n                        cube.position.set(x*3-3,y*3-3,z*3-3);\r\n                        cube.name=z+3*y+9*x;\r\n                        group.add(cube);\r\n                    }\r\n                }\r\n            }\r\n            scene.add(group);\r\n\r\n            var trackballControls=new THREE.TrackballControls(camera);\r\n            trackballControls.rotateSpeed=1.0;\r\n            trackballControls.zoomSpeed=1.0;\r\n            trackballControls.panSpeed=1.0;\r\n\r\n            document.addEventListener('mousedown',onMouseDown,false);\r\n\r\n            var clock=new THREE.Clock();\r\n\r\n            document.getElementById(\"webgl\").appendChild(renderer.domElement);\r\n            renderer.render(scene,camera);\r\n\r\n            var test=new THREE.MeshBasicMaterial({color:0x000000});\r\n            var startMove=-1;\r\n            var moveList=[];\r\n            var rotateDirection;\r\n            var DirectionLR=true;\r\n            var j=0;\r\n            function onMouseDown(event){\r\n                if(startMove!=-1){\r\n                    return;\r\n                }\r\n                var vector=new THREE.Vector3((event.clientX/window.innerWidth)*2-1,-(event.clientY/window.innerHeight)*2+1,0.5);\r\n                vector=vector.unproject(camera);\r\n                var raycaster=new THREE.Raycaster(camera.position,vector.sub(camera.position).normalize());\r\n                var intersects=raycaster.intersectObjects(group.children);\r\n                if(intersects.length&gt;0){\r\n                    j=0;\r\n                    moveList=[];\r\n                    startMove=intersects[0].object.name;\r\n                    var y=scene.children[1].children[startMove].position.y;\r\n                    getRotateDirection(intersects[0].point.x,intersects[0].point.y,intersects[0].point.z);\r\n                    if(rotateDirection==1){\r\n                        for(var i=0;i&lt;27;i++){\r\n                            if(xround(scene.children[1].children[i].position.y,2)==xround(y,2)){\r\n                                moveList.push(i);\r\n                            }\r\n                        }\r\n                    }else if(rotateDirection==2){\r\n                        for(var i=0;i&lt;27;i++){\r\n                            if(xround(scene.children[1].children[i].position.x,2)==xround(scene.children[1].children[startMove].position.x,2)){\r\n                                moveList.push(i);\r\n                            }\r\n                        }\r\n                    }else if(rotateDirection=3){\r\n                        for(var i=0;i&lt;27;i++){\r\n                            if(xround(scene.children[1].children[i].position.z,2)==xround(scene.children[1].children[startMove].position.z,2)){\r\n                                moveList.push(i);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            function reset(){\r\n                startMove=-1;\r\n            }\r\n\r\n            function rotationMF(moveList){\r\n                var rotationV=DirectionLR?Math.PI/100:-Math.PI/100;\r\n                if(rotateDirection==1){\r\n                    if(j&lt;50){\r\n                        for(var i in moveList){\r\n                            var rotation = new THREE.Matrix4().makeRotationY(rotationV);\r\n                            scene.children[1].children[moveList[i]].applyMatrix(rotation);\r\n                        }\r\n                        j++;\r\n                    }else{\r\n                        reset()\r\n                    }\r\n                }else if(rotateDirection==2){\r\n                    if(j&lt;50){\r\n                        for(var i in moveList){\r\n                            var rotation = new THREE.Matrix4().makeRotationX(rotationV);\r\n                            scene.children[1].children[moveList[i]].applyMatrix(rotation);\r\n                        }\r\n                        j++;\r\n                    }else{\r\n                        reset()\r\n                    }\r\n                }else if(rotateDirection==3){\r\n                    if(j&lt;50){\r\n                        for(var i in moveList){\r\n                            var rotation = new THREE.Matrix4().makeRotationZ(rotationV);\r\n                            scene.children[1].children[moveList[i]].applyMatrix(rotation);\r\n                        }\r\n                        j++;\r\n                    }else{\r\n                        reset()\r\n                    }\r\n                }\r\n            }\r\n            \r\n            function xround(x, num){\r\n                return Math.round(x * Math.pow(10, num)) / Math.pow(10, num);\r\n            }\r\n            function getRotateDirection(x,y,z){\r\n                function dealxyz(axis){\r\n                    for(var i=0;i&lt;3;i++){\r\n                        if(xround(axis[i],2)==-4.45 || xround(axis[i],2)==4.45){\r\n                            var fl=xround(axis.splice(i,1),2)==-4.45;\r\n                            axis[0]=axis[0]&gt;1.5?axis[0]-3:axis[0];\r\n                            axis[0]=axis[0]&lt;-1.5?axis[0]+3:axis[0];\r\n                            axis[1]=axis[1]&gt;1.5?axis[1]-3:axis[1];\r\n                            axis[1]=axis[1]&lt;-1.5?axis[1]+3:axis[1];\r\n                            var judge;\r\n                            if(i==0 &amp;&amp; Math.abs(axis[0])&lt;Math.abs(axis[1])){\r\n                                rotateDirection=1;\r\n                                judge=fl?(Math.abs(axis[0])&lt;Math.abs(axis[1]) &amp;&amp; axis[1]&lt;0):(Math.abs(axis[0])&lt;Math.abs(axis[1]) &amp;&amp; axis[1]&gt;0);\r\n                            }else if(i==0 &amp;&amp; Math.abs(axis[0])&gt;Math.abs(axis[1])){\r\n                                rotateDirection=3;\r\n                                judge=!fl?(Math.abs(axis[1])&lt;Math.abs(axis[0]) &amp;&amp; axis[0]&lt;0):(Math.abs(axis[1])&lt;Math.abs(axis[0]) &amp;&amp; axis[0]&gt;0);\r\n                            }else if(i==1 &amp;&amp; Math.abs(axis[0])&lt;Math.abs(axis[1])){\r\n                                rotateDirection=2;\r\n                                judge=!fl?(Math.abs(axis[0])&lt;Math.abs(axis[1]) &amp;&amp; axis[1]&lt;0):(Math.abs(axis[0])&lt;Math.abs(axis[1]) &amp;&amp; axis[1]&gt;0);\r\n                            }else if(i==1 &amp;&amp; Math.abs(axis[0])&gt;Math.abs(axis[1])){\r\n                                rotateDirection=3;\r\n                                judge=fl?(Math.abs(axis[1])&lt;Math.abs(axis[0]) &amp;&amp; axis[0]&lt;0):(Math.abs(axis[1])&lt;Math.abs(axis[0]) &amp;&amp; axis[0]&gt;0);\r\n                            }else if(i==2 &amp;&amp; Math.abs(axis[0])&gt;Math.abs(axis[1])){\r\n                                rotateDirection=1;\r\n                                judge=fl?(Math.abs(axis[1])&lt;Math.abs(axis[0]) &amp;&amp; axis[0]&gt;0):(Math.abs(axis[1])&lt;Math.abs(axis[0]) &amp;&amp; axis[0]&lt;0);\r\n                                console.log(judge);\r\n                            }else if(i==2 &amp;&amp; Math.abs(axis[0])&lt;Math.abs(axis[1])){\r\n                                rotateDirection=2;\r\n                                judge=!fl?(Math.abs(axis[0])&lt;Math.abs(axis[1]) &amp;&amp; axis[1]&gt;0):(Math.abs(axis[0])&lt;Math.abs(axis[1]) &amp;&amp; axis[1]&lt;0);\r\n                            }\r\n                            return judge;\r\n                        }\r\n                    }\r\n                }\r\n                DirectionLR=!dealxyz([x,y,z]);\r\n            }\r\n\r\n            function renderScene(){\r\n                var delta=clock.getDelta();\r\n                if(startMove!=-1){rotationMF(moveList);}\r\n                trackballControls.update(delta);\r\n                requestAnimationFrame(renderScene);\r\n                renderer.render(scene,camera);\r\n            }\r\n            renderScene();\r\n        }\r\n        window.onload=init;\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n这里不预览啦，主要注明的一点就是看起来比写起来真是两码事，\r\n\r\n一开始纠结在rotation的旋转会连带转自己的坐标轴。后来慢慢发现他转的是他的children子元素，并可以创造矩阵来旋转。\r\n\r\n本来想的很好做一个沿y轴转四个面，然后推广到x,z，只要写一套就行。现实还是安心的做完了6个面以及每个面里9个小块的分析。\r\n\r\n本来还想着怎么能写的系统一点，可以轻松调InOut，这样就可以做多元的魔方，说不定还能研究个魔方的随机打乱和复原，好吧继续想着吧。\r\n\r\n还有点感悟就是three.js文档虽然齐全不过问的问题确实不多，有点难搜到相似问题。搜到的时候讲的都是欧拉角，旋转矩阵，四元数这种画风。。。\r\n\r\nthree.js完结篇，，\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n才怪",
            "post_title": "three.js第三弹，一个可玩的魔方",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "three-js%e7%ac%ac%e4%b8%89%e5%bc%b9%ef%bc%8c%e4%b8%80%e4%b8%aa%e5%8f%af%e7%8e%a9%e7%9a%84%e9%ad%94%e6%96%b9",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-27 21:55:48",
            "post_modified_gmt": "2017-7-27 13:55:48",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=359",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "360",
            "post_author": "1",
            "post_date": "2017-7-27 20:58:19",
            "post_date_gmt": "2017-7-27 12:58:19",
            "post_content": "魔方对于大多数人都不陌生，也是个立方体的玩意儿。\r\n\r\n这里就简单用three.js实现一下，复杂的还是定位，毕竟是3d的还能乱转。\r\n\r\n<a href=\"http://test.ganjiacheng.cn/3d/test3d2.html\">点击这里先看效果哦！！</a>\r\n\r\n&nbsp;",
            "post_title": "three.js第三弹，一个可玩的魔方",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "359-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-27 20:58:19",
            "post_modified_gmt": "2017-7-27 12:58:19",
            "post_content_filtered": "",
            "post_parent": "359",
            "guid": "http://ganjiacheng.cn/blog/?p=360",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "361",
            "post_author": "1",
            "post_date": "2017-7-27 21:42:09",
            "post_date_gmt": "2017-7-27 13:42:09",
            "post_content": "魔方对于大多数人都不陌生，也是个立方体的玩意儿。\r\n\r\n这里就简单用three.js实现一下，复杂的还是定位，毕竟是3d的还能乱转。\r\n\r\n<a href=\"http://test.ganjiacheng.cn/3d/test3d2.html\">点击这里先看效果哦！！</a><!--more-->\r\n\r\n看代码前还是先来说明：基本框架还是一样----舞台，摄像头和渲染器。\r\n\r\n之后用faceMaterial写一个6面颜色不一样的cube，并用27个这样的cube组成魔方的基本样子。\r\n\r\ntrackballControls是摄像头控制函数，加入可以用鼠标控制其中的摄像头。\r\n\r\n监听鼠标按下事件，按下时获取点击的三维坐标，获取在最前端的cube的name。\r\n\r\n通过坐标计算旋转方向（这里容易脑壳疼），通过name计算同一平面的其他cube。\r\n\r\n通过方向与平面以矩阵旋转平面内9个cube，并把旋转做成动画。\r\n\r\n听说好文章结尾都有彩蛋~\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\r\n    &lt;title&gt;test3d&lt;/title&gt;\r\n    &lt;style type=\"text/css\"&gt;\r\n        body{\r\n            margin: 0;\r\n            overflow: hidden;\r\n        }\r\n    &lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;div id=\"webgl\"&gt;&lt;/div&gt;\r\n    &lt;script type=\"text/javascript\" src=\"http://test.ganjiacheng.cn/3d/learning-threejs/libs/three.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\" src=\"http://test.ganjiacheng.cn/3d/learning-threejs/libs/TrackballControls.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        function init(){\r\n            var scene=new THREE.Scene();\r\n\r\n            var camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,0.1,1000);\r\n            camera.position.set(-20,20,20);\r\n            camera.lookAt(scene.position);\r\n\r\n            var renderer=new THREE.WebGLRenderer();\r\n            renderer.setClearColor(0xdadada);\r\n            renderer.setSize(window.innerWidth,window.innerHeight);\r\n            renderer.shadowMapEnabled=true;\r\n\r\n            var axes=new THREE.AxisHelper(2);\r\n            scene.add(axes);\r\n\r\n            var group=new THREE.Mesh();\r\n            var mats=[];\r\n            mats.push(new THREE.MeshBasicMaterial({color:0x009e60}));//g\r\n            mats.push(new THREE.MeshBasicMaterial({color:0x0051ba}));//b\r\n            mats.push(new THREE.MeshBasicMaterial({color:0xffd500}));//y\r\n            mats.push(new THREE.MeshBasicMaterial({color:0xff5800}));//j\r\n            mats.push(new THREE.MeshBasicMaterial({color:0xC41E3A}));//r\r\n            mats.push(new THREE.MeshBasicMaterial({color:0xffffff}));//w\r\n            var faceMaterial=new THREE.MeshFaceMaterial(mats);\r\n            for(var x=0;x&lt;3;x++){\r\n                for(var y=0;y&lt;3;y++){\r\n                    for(var z=0;z&lt;3;z++){\r\n                        var cubeGeom=new THREE.BoxGeometry(2.9,2.9,2.9);\r\n                        var cube=new THREE.Mesh(cubeGeom,faceMaterial);\r\n                        cube.position.set(x*3-3,y*3-3,z*3-3);\r\n                        cube.name=z+3*y+9*x;\r\n                        group.add(cube);\r\n                    }\r\n                }\r\n            }\r\n            scene.add(group);\r\n\r\n            var trackballControls=new THREE.TrackballControls(camera);\r\n            trackballControls.rotateSpeed=1.0;\r\n            trackballControls.zoomSpeed=1.0;\r\n            trackballControls.panSpeed=1.0;\r\n\r\n            document.addEventListener('mousedown',onMouseDown,false);\r\n\r\n            var clock=new THREE.Clock();\r\n\r\n            document.getElementById(\"webgl\").appendChild(renderer.domElement);\r\n            renderer.render(scene,camera);\r\n\r\n            var test=new THREE.MeshBasicMaterial({color:0x000000});\r\n            var startMove=-1;\r\n            var moveList=[];\r\n            var rotateDirection;\r\n            var DirectionLR=true;\r\n            var j=0;\r\n            function onMouseDown(event){\r\n                if(startMove!=-1){\r\n                    return;\r\n                }\r\n                var vector=new THREE.Vector3((event.clientX/window.innerWidth)*2-1,-(event.clientY/window.innerHeight)*2+1,0.5);\r\n                vector=vector.unproject(camera);\r\n                var raycaster=new THREE.Raycaster(camera.position,vector.sub(camera.position).normalize());\r\n                var intersects=raycaster.intersectObjects(group.children);\r\n                if(intersects.length&gt;0){\r\n                    j=0;\r\n                    moveList=[];\r\n                    startMove=intersects[0].object.name;\r\n                    var y=scene.children[1].children[startMove].position.y;\r\n                    getRotateDirection(intersects[0].point.x,intersects[0].point.y,intersects[0].point.z);\r\n                    if(rotateDirection==1){\r\n                        for(var i=0;i&lt;27;i++){\r\n                            if(xround(scene.children[1].children[i].position.y,2)==xround(y,2)){\r\n                                moveList.push(i);\r\n                            }\r\n                        }\r\n                    }else if(rotateDirection==2){\r\n                        for(var i=0;i&lt;27;i++){\r\n                            if(xround(scene.children[1].children[i].position.x,2)==xround(scene.children[1].children[startMove].position.x,2)){\r\n                                moveList.push(i);\r\n                            }\r\n                        }\r\n                    }else if(rotateDirection=3){\r\n                        for(var i=0;i&lt;27;i++){\r\n                            if(xround(scene.children[1].children[i].position.z,2)==xround(scene.children[1].children[startMove].position.z,2)){\r\n                                moveList.push(i);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            function reset(){\r\n                startMove=-1;\r\n            }\r\n\r\n            function rotationMF(moveList){\r\n                var rotationV=DirectionLR?Math.PI/100:-Math.PI/100;\r\n                if(rotateDirection==1){\r\n                    if(j&lt;50){\r\n                        for(var i in moveList){\r\n                            var rotation = new THREE.Matrix4().makeRotationY(rotationV);\r\n                            scene.children[1].children[moveList[i]].applyMatrix(rotation);\r\n                        }\r\n                        j++;\r\n                    }else{\r\n                        reset()\r\n                    }\r\n                }else if(rotateDirection==2){\r\n                    if(j&lt;50){\r\n                        for(var i in moveList){\r\n                            var rotation = new THREE.Matrix4().makeRotationX(rotationV);\r\n                            scene.children[1].children[moveList[i]].applyMatrix(rotation);\r\n                        }\r\n                        j++;\r\n                    }else{\r\n                        reset()\r\n                    }\r\n                }else if(rotateDirection==3){\r\n                    if(j&lt;50){\r\n                        for(var i in moveList){\r\n                            var rotation = new THREE.Matrix4().makeRotationZ(rotationV);\r\n                            scene.children[1].children[moveList[i]].applyMatrix(rotation);\r\n                        }\r\n                        j++;\r\n                    }else{\r\n                        reset()\r\n                    }\r\n                }\r\n            }\r\n            \r\n            function xround(x, num){\r\n                return Math.round(x * Math.pow(10, num)) / Math.pow(10, num);\r\n            }\r\n            function getRotateDirection(x,y,z){\r\n                function dealxyz(axis){\r\n                    for(var i=0;i&lt;3;i++){\r\n                        if(xround(axis[i],2)==-4.45 || xround(axis[i],2)==4.45){\r\n                            var fl=xround(axis.splice(i,1),2)==-4.45;\r\n                            axis[0]=axis[0]&gt;1.5?axis[0]-3:axis[0];\r\n                            axis[0]=axis[0]&lt;-1.5?axis[0]+3:axis[0];\r\n                            axis[1]=axis[1]&gt;1.5?axis[1]-3:axis[1];\r\n                            axis[1]=axis[1]&lt;-1.5?axis[1]+3:axis[1];\r\n                            var judge;\r\n                            if(i==0 &amp;&amp; Math.abs(axis[0])&lt;Math.abs(axis[1])){\r\n                                rotateDirection=1;\r\n                                judge=fl?(Math.abs(axis[0])&lt;Math.abs(axis[1]) &amp;&amp; axis[1]&lt;0):(Math.abs(axis[0])&lt;Math.abs(axis[1]) &amp;&amp; axis[1]&gt;0);\r\n                            }else if(i==0 &amp;&amp; Math.abs(axis[0])&gt;Math.abs(axis[1])){\r\n                                rotateDirection=3;\r\n                                judge=!fl?(Math.abs(axis[1])&lt;Math.abs(axis[0]) &amp;&amp; axis[0]&lt;0):(Math.abs(axis[1])&lt;Math.abs(axis[0]) &amp;&amp; axis[0]&gt;0);\r\n                            }else if(i==1 &amp;&amp; Math.abs(axis[0])&lt;Math.abs(axis[1])){\r\n                                rotateDirection=2;\r\n                                judge=!fl?(Math.abs(axis[0])&lt;Math.abs(axis[1]) &amp;&amp; axis[1]&lt;0):(Math.abs(axis[0])&lt;Math.abs(axis[1]) &amp;&amp; axis[1]&gt;0);\r\n                            }else if(i==1 &amp;&amp; Math.abs(axis[0])&gt;Math.abs(axis[1])){\r\n                                rotateDirection=3;\r\n                                judge=fl?(Math.abs(axis[1])&lt;Math.abs(axis[0]) &amp;&amp; axis[0]&lt;0):(Math.abs(axis[1])&lt;Math.abs(axis[0]) &amp;&amp; axis[0]&gt;0);\r\n                            }else if(i==2 &amp;&amp; Math.abs(axis[0])&gt;Math.abs(axis[1])){\r\n                                rotateDirection=1;\r\n                                judge=fl?(Math.abs(axis[1])&lt;Math.abs(axis[0]) &amp;&amp; axis[0]&gt;0):(Math.abs(axis[1])&lt;Math.abs(axis[0]) &amp;&amp; axis[0]&lt;0);\r\n                                console.log(judge);\r\n                            }else if(i==2 &amp;&amp; Math.abs(axis[0])&lt;Math.abs(axis[1])){\r\n                                rotateDirection=2;\r\n                                judge=!fl?(Math.abs(axis[0])&lt;Math.abs(axis[1]) &amp;&amp; axis[1]&gt;0):(Math.abs(axis[0])&lt;Math.abs(axis[1]) &amp;&amp; axis[1]&lt;0);\r\n                            }\r\n                            return judge;\r\n                        }\r\n                    }\r\n                }\r\n                DirectionLR=!dealxyz([x,y,z]);\r\n            }\r\n\r\n            function renderScene(){\r\n                var delta=clock.getDelta();\r\n                if(startMove!=-1){rotationMF(moveList);}\r\n                trackballControls.update(delta);\r\n                requestAnimationFrame(renderScene);\r\n                renderer.render(scene,camera);\r\n            }\r\n            renderScene();\r\n        }\r\n        window.onload=init;\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n这里不预览啦，主要注明的一点就是看起来比写起来真是两码事，\r\n\r\n一开始纠结在rotation的旋转会连带转自己的坐标轴。后来慢慢发现他转的是他的children子元素，并可以创造矩阵来旋转。\r\n\r\n本来想的很好做一个沿y轴转四个面，然后推广到x,z，只要写一套就行。现实还是安心的做完了6个面以及每个面里9个小块的分析。\r\n\r\n还有点感悟就是three.js文档虽然齐全不过问的问题确实不多，有点难搜到相似问题。搜到的时候讲的都是欧拉角，旋转矩阵，四元数这种画风。。。\r\n\r\nthree.js完结篇，，\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n才怪",
            "post_title": "three.js第三弹，一个可玩的魔方",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "359-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-27 21:42:09",
            "post_modified_gmt": "2017-7-27 13:42:09",
            "post_content_filtered": "",
            "post_parent": "359",
            "guid": "http://ganjiacheng.cn/blog/?p=361",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "362",
            "post_author": "1",
            "post_date": "2017-7-27 21:54:01",
            "post_date_gmt": "2017-7-27 13:54:01",
            "post_content": "魔方对于大多数人都不陌生，也是个立方体的玩意儿。\n\n这里就简单用three.js实现一下，复杂的还是定位，毕竟是3d的还能乱转。\n\n<a href=\"http://test.ganjiacheng.cn/3d/test3d2.html\">点击这里先看效果哦！！</a><!--more-->\n\n看代码前还是先来说明：基本框架还是一样----舞台，摄像头和渲染器。\n\n之后用faceMaterial写一个6面颜色不一样的cube，并用27个这样的cube组成魔方的基本样子。\n\ntrackballControls是摄像头控制函数，加入可以用鼠标控制其中的摄像头。\n\n监听鼠标按下事件，按下时获取点击的三维坐标，获取在最前端的cube的name。\n\n通过坐标计算旋转方向（这里容易脑壳疼），通过name计算同一平面的其他cube。\n\n通过方向与平面以矩阵旋转平面内9个cube，并把旋转做成动画。\n\n听说好文章结尾都有彩蛋~\n<pre>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\n    &lt;title&gt;test3d&lt;/title&gt;\n    &lt;style type=\"text/css\"&gt;\n        body{\n            margin: 0;\n            overflow: hidden;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=\"webgl\"&gt;&lt;/div&gt;\n    &lt;script type=\"text/javascript\" src=\"http://test.ganjiacheng.cn/3d/learning-threejs/libs/three.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"http://test.ganjiacheng.cn/3d/learning-threejs/libs/TrackballControls.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        function init(){\n            var scene=new THREE.Scene();\n\n            var camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,0.1,1000);\n            camera.position.set(-20,20,20);\n            camera.lookAt(scene.position);\n\n            var renderer=new THREE.WebGLRenderer();\n            renderer.setClearColor(0xdadada);\n            renderer.setSize(window.innerWidth,window.innerHeight);\n            renderer.shadowMapEnabled=true;\n\n            var axes=new THREE.AxisHelper(2);\n            scene.add(axes);\n\n            var group=new THREE.Mesh();\n            var mats=[];\n            mats.push(new THREE.MeshBasicMaterial({color:0x009e60}));//g\n            mats.push(new THREE.MeshBasicMaterial({color:0x0051ba}));//b\n            mats.push(new THREE.MeshBasicMaterial({color:0xffd500}));//y\n            mats.push(new THREE.MeshBasicMaterial({color:0xff5800}));//j\n            mats.push(new THREE.MeshBasicMaterial({color:0xC41E3A}));//r\n            mats.push(new THREE.MeshBasicMaterial({color:0xffffff}));//w\n            var faceMaterial=new THREE.MeshFaceMaterial(mats);\n            for(var x=0;x&lt;3;x++){\n                for(var y=0;y&lt;3;y++){\n                    for(var z=0;z&lt;3;z++){\n                        var cubeGeom=new THREE.BoxGeometry(2.9,2.9,2.9);\n                        var cube=new THREE.Mesh(cubeGeom,faceMaterial);\n                        cube.position.set(x*3-3,y*3-3,z*3-3);\n                        cube.name=z+3*y+9*x;\n                        group.add(cube);\n                    }\n                }\n            }\n            scene.add(group);\n\n            var trackballControls=new THREE.TrackballControls(camera);\n            trackballControls.rotateSpeed=1.0;\n            trackballControls.zoomSpeed=1.0;\n            trackballControls.panSpeed=1.0;\n\n            document.addEventListener('mousedown',onMouseDown,false);\n\n            var clock=new THREE.Clock();\n\n            document.getElementById(\"webgl\").appendChild(renderer.domElement);\n            renderer.render(scene,camera);\n\n            var test=new THREE.MeshBasicMaterial({color:0x000000});\n            var startMove=-1;\n            var moveList=[];\n            var rotateDirection;\n            var DirectionLR=true;\n            var j=0;\n            function onMouseDown(event){\n                if(startMove!=-1){\n                    return;\n                }\n                var vector=new THREE.Vector3((event.clientX/window.innerWidth)*2-1,-(event.clientY/window.innerHeight)*2+1,0.5);\n                vector=vector.unproject(camera);\n                var raycaster=new THREE.Raycaster(camera.position,vector.sub(camera.position).normalize());\n                var intersects=raycaster.intersectObjects(group.children);\n                if(intersects.length&gt;0){\n                    j=0;\n                    moveList=[];\n                    startMove=intersects[0].object.name;\n                    var y=scene.children[1].children[startMove].position.y;\n                    getRotateDirection(intersects[0].point.x,intersects[0].point.y,intersects[0].point.z);\n                    if(rotateDirection==1){\n                        for(var i=0;i&lt;27;i++){\n                            if(xround(scene.children[1].children[i].position.y,2)==xround(y,2)){\n                                moveList.push(i);\n                            }\n                        }\n                    }else if(rotateDirection==2){\n                        for(var i=0;i&lt;27;i++){\n                            if(xround(scene.children[1].children[i].position.x,2)==xround(scene.children[1].children[startMove].position.x,2)){\n                                moveList.push(i);\n                            }\n                        }\n                    }else if(rotateDirection=3){\n                        for(var i=0;i&lt;27;i++){\n                            if(xround(scene.children[1].children[i].position.z,2)==xround(scene.children[1].children[startMove].position.z,2)){\n                                moveList.push(i);\n                            }\n                        }\n                    }\n                }\n            }\n\n            function reset(){\n                startMove=-1;\n            }\n\n            function rotationMF(moveList){\n                var rotationV=DirectionLR?Math.PI/100:-Math.PI/100;\n                if(rotateDirection==1){\n                    if(j&lt;50){\n                        for(var i in moveList){\n                            var rotation = new THREE.Matrix4().makeRotationY(rotationV);\n                            scene.children[1].children[moveList[i]].applyMatrix(rotation);\n                        }\n                        j++;\n                    }else{\n                        reset()\n                    }\n                }else if(rotateDirection==2){\n                    if(j&lt;50){\n                        for(var i in moveList){\n                            var rotation = new THREE.Matrix4().makeRotationX(rotationV);\n                            scene.children[1].children[moveList[i]].applyMatrix(rotation);\n                        }\n                        j++;\n                    }else{\n                        reset()\n                    }\n                }else if(rotateDirection==3){\n                    if(j&lt;50){\n                        for(var i in moveList){\n                            var rotation = new THREE.Matrix4().makeRotationZ(rotationV);\n                            scene.children[1].children[moveList[i]].applyMatrix(rotation);\n                        }\n                        j++;\n                    }else{\n                        reset()\n                    }\n                }\n            }\n            \n            function xround(x, num){\n                return Math.round(x * Math.pow(10, num)) / Math.pow(10, num);\n            }\n            function getRotateDirection(x,y,z){\n                function dealxyz(axis){\n                    for(var i=0;i&lt;3;i++){\n                        if(xround(axis[i],2)==-4.45 || xround(axis[i],2)==4.45){\n                            var fl=xround(axis.splice(i,1),2)==-4.45;\n                            axis[0]=axis[0]&gt;1.5?axis[0]-3:axis[0];\n                            axis[0]=axis[0]&lt;-1.5?axis[0]+3:axis[0];\n                            axis[1]=axis[1]&gt;1.5?axis[1]-3:axis[1];\n                            axis[1]=axis[1]&lt;-1.5?axis[1]+3:axis[1];\n                            var judge;\n                            if(i==0 &amp;&amp; Math.abs(axis[0])&lt;Math.abs(axis[1])){\n                                rotateDirection=1;\n                                judge=fl?(Math.abs(axis[0])&lt;Math.abs(axis[1]) &amp;&amp; axis[1]&lt;0):(Math.abs(axis[0])&lt;Math.abs(axis[1]) &amp;&amp; axis[1]&gt;0);\n                            }else if(i==0 &amp;&amp; Math.abs(axis[0])&gt;Math.abs(axis[1])){\n                                rotateDirection=3;\n                                judge=!fl?(Math.abs(axis[1])&lt;Math.abs(axis[0]) &amp;&amp; axis[0]&lt;0):(Math.abs(axis[1])&lt;Math.abs(axis[0]) &amp;&amp; axis[0]&gt;0);\n                            }else if(i==1 &amp;&amp; Math.abs(axis[0])&lt;Math.abs(axis[1])){\n                                rotateDirection=2;\n                                judge=!fl?(Math.abs(axis[0])&lt;Math.abs(axis[1]) &amp;&amp; axis[1]&lt;0):(Math.abs(axis[0])&lt;Math.abs(axis[1]) &amp;&amp; axis[1]&gt;0);\n                            }else if(i==1 &amp;&amp; Math.abs(axis[0])&gt;Math.abs(axis[1])){\n                                rotateDirection=3;\n                                judge=fl?(Math.abs(axis[1])&lt;Math.abs(axis[0]) &amp;&amp; axis[0]&lt;0):(Math.abs(axis[1])&lt;Math.abs(axis[0]) &amp;&amp; axis[0]&gt;0);\n                            }else if(i==2 &amp;&amp; Math.abs(axis[0])&gt;Math.abs(axis[1])){\n                                rotateDirection=1;\n                                judge=fl?(Math.abs(axis[1])&lt;Math.abs(axis[0]) &amp;&amp; axis[0]&gt;0):(Math.abs(axis[1])&lt;Math.abs(axis[0]) &amp;&amp; axis[0]&lt;0);\n                                console.log(judge);\n                            }else if(i==2 &amp;&amp; Math.abs(axis[0])&lt;Math.abs(axis[1])){\n                                rotateDirection=2;\n                                judge=!fl?(Math.abs(axis[0])&lt;Math.abs(axis[1]) &amp;&amp; axis[1]&gt;0):(Math.abs(axis[0])&lt;Math.abs(axis[1]) &amp;&amp; axis[1]&lt;0);\n                            }\n                            return judge;\n                        }\n                    }\n                }\n                DirectionLR=!dealxyz([x,y,z]);\n            }\n\n            function renderScene(){\n                var delta=clock.getDelta();\n                if(startMove!=-1){rotationMF(moveList);}\n                trackballControls.update(delta);\n                requestAnimationFrame(renderScene);\n                renderer.render(scene,camera);\n            }\n            renderScene();\n        }\n        window.onload=init;\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;</pre>\n这里不预览啦，主要注明的一点就是看起来比写起来真是两码事，\n\n一开始纠结在rotation的旋转会连带转自己的坐标轴。后来慢慢发现他转的是他的children子元素，并可以创造矩阵来旋转。\n\n本来想的很好做一个沿y轴转四个面，然后推广到x,z，只要写一套就行。现实还是安心的做完了6个面以及每个面里9个小块的分析。\n\n还有点感悟就是three.js文档虽然齐全不过问的问题确实不多，有点难搜到相似问题。搜到的时候讲的都是欧拉角，旋转矩阵，四元数这种画风。。。\n\n本来还想着怎么能写的系统一点，这样就可以做多元的魔方，说不定还\n\nthree.js完结篇，，\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n才怪",
            "post_title": "three.js第三弹，一个可玩的魔方",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "359-autosave-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-27 21:54:01",
            "post_modified_gmt": "2017-7-27 13:54:01",
            "post_content_filtered": "",
            "post_parent": "359",
            "guid": "http://ganjiacheng.cn/blog/?p=362",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "363",
            "post_author": "1",
            "post_date": "2017-7-27 21:55:11",
            "post_date_gmt": "2017-7-27 13:55:11",
            "post_content": "魔方对于大多数人都不陌生，也是个立方体的玩意儿。\r\n\r\n这里就简单用three.js实现一下，复杂的还是定位，毕竟是3d的还能乱转。\r\n\r\n<a href=\"http://test.ganjiacheng.cn/3d/test3d2.html\">点击这里先看效果哦！！</a><!--more-->\r\n\r\n看代码前还是先来说明：基本框架还是一样----舞台，摄像头和渲染器。\r\n\r\n之后用faceMaterial写一个6面颜色不一样的cube，并用27个这样的cube组成魔方的基本样子。\r\n\r\ntrackballControls是摄像头控制函数，加入可以用鼠标控制其中的摄像头。\r\n\r\n监听鼠标按下事件，按下时获取点击的三维坐标，获取在最前端的cube的name。\r\n\r\n通过坐标计算旋转方向（这里容易脑壳疼），通过name计算同一平面的其他cube。\r\n\r\n通过方向与平面以矩阵旋转平面内9个cube，并把旋转做成动画。\r\n\r\n听说好文章结尾都有彩蛋~\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\r\n    &lt;title&gt;test3d&lt;/title&gt;\r\n    &lt;style type=\"text/css\"&gt;\r\n        body{\r\n            margin: 0;\r\n            overflow: hidden;\r\n        }\r\n    &lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;div id=\"webgl\"&gt;&lt;/div&gt;\r\n    &lt;script type=\"text/javascript\" src=\"http://test.ganjiacheng.cn/3d/learning-threejs/libs/three.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\" src=\"http://test.ganjiacheng.cn/3d/learning-threejs/libs/TrackballControls.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        function init(){\r\n            var scene=new THREE.Scene();\r\n\r\n            var camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,0.1,1000);\r\n            camera.position.set(-20,20,20);\r\n            camera.lookAt(scene.position);\r\n\r\n            var renderer=new THREE.WebGLRenderer();\r\n            renderer.setClearColor(0xdadada);\r\n            renderer.setSize(window.innerWidth,window.innerHeight);\r\n            renderer.shadowMapEnabled=true;\r\n\r\n            var axes=new THREE.AxisHelper(2);\r\n            scene.add(axes);\r\n\r\n            var group=new THREE.Mesh();\r\n            var mats=[];\r\n            mats.push(new THREE.MeshBasicMaterial({color:0x009e60}));//g\r\n            mats.push(new THREE.MeshBasicMaterial({color:0x0051ba}));//b\r\n            mats.push(new THREE.MeshBasicMaterial({color:0xffd500}));//y\r\n            mats.push(new THREE.MeshBasicMaterial({color:0xff5800}));//j\r\n            mats.push(new THREE.MeshBasicMaterial({color:0xC41E3A}));//r\r\n            mats.push(new THREE.MeshBasicMaterial({color:0xffffff}));//w\r\n            var faceMaterial=new THREE.MeshFaceMaterial(mats);\r\n            for(var x=0;x&lt;3;x++){\r\n                for(var y=0;y&lt;3;y++){\r\n                    for(var z=0;z&lt;3;z++){\r\n                        var cubeGeom=new THREE.BoxGeometry(2.9,2.9,2.9);\r\n                        var cube=new THREE.Mesh(cubeGeom,faceMaterial);\r\n                        cube.position.set(x*3-3,y*3-3,z*3-3);\r\n                        cube.name=z+3*y+9*x;\r\n                        group.add(cube);\r\n                    }\r\n                }\r\n            }\r\n            scene.add(group);\r\n\r\n            var trackballControls=new THREE.TrackballControls(camera);\r\n            trackballControls.rotateSpeed=1.0;\r\n            trackballControls.zoomSpeed=1.0;\r\n            trackballControls.panSpeed=1.0;\r\n\r\n            document.addEventListener('mousedown',onMouseDown,false);\r\n\r\n            var clock=new THREE.Clock();\r\n\r\n            document.getElementById(\"webgl\").appendChild(renderer.domElement);\r\n            renderer.render(scene,camera);\r\n\r\n            var test=new THREE.MeshBasicMaterial({color:0x000000});\r\n            var startMove=-1;\r\n            var moveList=[];\r\n            var rotateDirection;\r\n            var DirectionLR=true;\r\n            var j=0;\r\n            function onMouseDown(event){\r\n                if(startMove!=-1){\r\n                    return;\r\n                }\r\n                var vector=new THREE.Vector3((event.clientX/window.innerWidth)*2-1,-(event.clientY/window.innerHeight)*2+1,0.5);\r\n                vector=vector.unproject(camera);\r\n                var raycaster=new THREE.Raycaster(camera.position,vector.sub(camera.position).normalize());\r\n                var intersects=raycaster.intersectObjects(group.children);\r\n                if(intersects.length&gt;0){\r\n                    j=0;\r\n                    moveList=[];\r\n                    startMove=intersects[0].object.name;\r\n                    var y=scene.children[1].children[startMove].position.y;\r\n                    getRotateDirection(intersects[0].point.x,intersects[0].point.y,intersects[0].point.z);\r\n                    if(rotateDirection==1){\r\n                        for(var i=0;i&lt;27;i++){\r\n                            if(xround(scene.children[1].children[i].position.y,2)==xround(y,2)){\r\n                                moveList.push(i);\r\n                            }\r\n                        }\r\n                    }else if(rotateDirection==2){\r\n                        for(var i=0;i&lt;27;i++){\r\n                            if(xround(scene.children[1].children[i].position.x,2)==xround(scene.children[1].children[startMove].position.x,2)){\r\n                                moveList.push(i);\r\n                            }\r\n                        }\r\n                    }else if(rotateDirection=3){\r\n                        for(var i=0;i&lt;27;i++){\r\n                            if(xround(scene.children[1].children[i].position.z,2)==xround(scene.children[1].children[startMove].position.z,2)){\r\n                                moveList.push(i);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            function reset(){\r\n                startMove=-1;\r\n            }\r\n\r\n            function rotationMF(moveList){\r\n                var rotationV=DirectionLR?Math.PI/100:-Math.PI/100;\r\n                if(rotateDirection==1){\r\n                    if(j&lt;50){\r\n                        for(var i in moveList){\r\n                            var rotation = new THREE.Matrix4().makeRotationY(rotationV);\r\n                            scene.children[1].children[moveList[i]].applyMatrix(rotation);\r\n                        }\r\n                        j++;\r\n                    }else{\r\n                        reset()\r\n                    }\r\n                }else if(rotateDirection==2){\r\n                    if(j&lt;50){\r\n                        for(var i in moveList){\r\n                            var rotation = new THREE.Matrix4().makeRotationX(rotationV);\r\n                            scene.children[1].children[moveList[i]].applyMatrix(rotation);\r\n                        }\r\n                        j++;\r\n                    }else{\r\n                        reset()\r\n                    }\r\n                }else if(rotateDirection==3){\r\n                    if(j&lt;50){\r\n                        for(var i in moveList){\r\n                            var rotation = new THREE.Matrix4().makeRotationZ(rotationV);\r\n                            scene.children[1].children[moveList[i]].applyMatrix(rotation);\r\n                        }\r\n                        j++;\r\n                    }else{\r\n                        reset()\r\n                    }\r\n                }\r\n            }\r\n            \r\n            function xround(x, num){\r\n                return Math.round(x * Math.pow(10, num)) / Math.pow(10, num);\r\n            }\r\n            function getRotateDirection(x,y,z){\r\n                function dealxyz(axis){\r\n                    for(var i=0;i&lt;3;i++){\r\n                        if(xround(axis[i],2)==-4.45 || xround(axis[i],2)==4.45){\r\n                            var fl=xround(axis.splice(i,1),2)==-4.45;\r\n                            axis[0]=axis[0]&gt;1.5?axis[0]-3:axis[0];\r\n                            axis[0]=axis[0]&lt;-1.5?axis[0]+3:axis[0];\r\n                            axis[1]=axis[1]&gt;1.5?axis[1]-3:axis[1];\r\n                            axis[1]=axis[1]&lt;-1.5?axis[1]+3:axis[1];\r\n                            var judge;\r\n                            if(i==0 &amp;&amp; Math.abs(axis[0])&lt;Math.abs(axis[1])){\r\n                                rotateDirection=1;\r\n                                judge=fl?(Math.abs(axis[0])&lt;Math.abs(axis[1]) &amp;&amp; axis[1]&lt;0):(Math.abs(axis[0])&lt;Math.abs(axis[1]) &amp;&amp; axis[1]&gt;0);\r\n                            }else if(i==0 &amp;&amp; Math.abs(axis[0])&gt;Math.abs(axis[1])){\r\n                                rotateDirection=3;\r\n                                judge=!fl?(Math.abs(axis[1])&lt;Math.abs(axis[0]) &amp;&amp; axis[0]&lt;0):(Math.abs(axis[1])&lt;Math.abs(axis[0]) &amp;&amp; axis[0]&gt;0);\r\n                            }else if(i==1 &amp;&amp; Math.abs(axis[0])&lt;Math.abs(axis[1])){\r\n                                rotateDirection=2;\r\n                                judge=!fl?(Math.abs(axis[0])&lt;Math.abs(axis[1]) &amp;&amp; axis[1]&lt;0):(Math.abs(axis[0])&lt;Math.abs(axis[1]) &amp;&amp; axis[1]&gt;0);\r\n                            }else if(i==1 &amp;&amp; Math.abs(axis[0])&gt;Math.abs(axis[1])){\r\n                                rotateDirection=3;\r\n                                judge=fl?(Math.abs(axis[1])&lt;Math.abs(axis[0]) &amp;&amp; axis[0]&lt;0):(Math.abs(axis[1])&lt;Math.abs(axis[0]) &amp;&amp; axis[0]&gt;0);\r\n                            }else if(i==2 &amp;&amp; Math.abs(axis[0])&gt;Math.abs(axis[1])){\r\n                                rotateDirection=1;\r\n                                judge=fl?(Math.abs(axis[1])&lt;Math.abs(axis[0]) &amp;&amp; axis[0]&gt;0):(Math.abs(axis[1])&lt;Math.abs(axis[0]) &amp;&amp; axis[0]&lt;0);\r\n                                console.log(judge);\r\n                            }else if(i==2 &amp;&amp; Math.abs(axis[0])&lt;Math.abs(axis[1])){\r\n                                rotateDirection=2;\r\n                                judge=!fl?(Math.abs(axis[0])&lt;Math.abs(axis[1]) &amp;&amp; axis[1]&gt;0):(Math.abs(axis[0])&lt;Math.abs(axis[1]) &amp;&amp; axis[1]&lt;0);\r\n                            }\r\n                            return judge;\r\n                        }\r\n                    }\r\n                }\r\n                DirectionLR=!dealxyz([x,y,z]);\r\n            }\r\n\r\n            function renderScene(){\r\n                var delta=clock.getDelta();\r\n                if(startMove!=-1){rotationMF(moveList);}\r\n                trackballControls.update(delta);\r\n                requestAnimationFrame(renderScene);\r\n                renderer.render(scene,camera);\r\n            }\r\n            renderScene();\r\n        }\r\n        window.onload=init;\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n这里不预览啦，主要注明的一点就是看起来比写起来真是两码事，\r\n\r\n一开始纠结在rotation的旋转会连带转自己的坐标轴。后来慢慢发现他转的是他的children子元素，并可以创造矩阵来旋转。\r\n\r\n本来想的很好做一个沿y轴转四个面，然后推广到x,z，只要写一套就行。现实还是安心的做完了6个面以及每个面里9个小块的分析。\r\n\r\n还有点感悟就是three.js文档虽然齐全不过问的问题确实不多，有点难搜到相似问题。搜到的时候讲的都是欧拉角，旋转矩阵，四元数这种画风。。。\r\n\r\n本来还想着怎么能写的系统一点，可以轻松调InOut，这样就可以做多元的魔方，说不定还能研究个魔方的随机打乱和复原，好吧继续想着吧。\r\n\r\nthree.js完结篇，，\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n才怪",
            "post_title": "three.js第三弹，一个可玩的魔方",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "359-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-27 21:55:11",
            "post_modified_gmt": "2017-7-27 13:55:11",
            "post_content_filtered": "",
            "post_parent": "359",
            "guid": "http://ganjiacheng.cn/blog/?p=363",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "364",
            "post_author": "1",
            "post_date": "2017-7-27 21:55:48",
            "post_date_gmt": "2017-7-27 13:55:48",
            "post_content": "魔方对于大多数人都不陌生，也是个立方体的玩意儿。\n\n这里就简单用three.js实现一下，复杂的还是定位，毕竟是3d的还能乱转。\n\n<a href=\"http://test.ganjiacheng.cn/3d/test3d2.html\">点击这里先看效果哦！！</a><!--more-->\n\n看代码前还是先来说明：基本框架还是一样----舞台，摄像头和渲染器。\n\n之后用faceMaterial写一个6面颜色不一样的cube，并用27个这样的cube组成魔方的基本样子。\n\ntrackballControls是摄像头控制函数，加入可以用鼠标控制其中的摄像头。\n\n监听鼠标按下事件，按下时获取点击的三维坐标，获取在最前端的cube的name。\n\n通过坐标计算旋转方向（这里容易脑壳疼），通过name计算同一平面的其他cube。\n\n通过方向与平面以矩阵旋转平面内9个cube，并把旋转做成动画。\n\n听说好文章结尾都有彩蛋~\n<pre>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\n    &lt;title&gt;test3d&lt;/title&gt;\n    &lt;style type=\"text/css\"&gt;\n        body{\n            margin: 0;\n            overflow: hidden;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=\"webgl\"&gt;&lt;/div&gt;\n    &lt;script type=\"text/javascript\" src=\"http://test.ganjiacheng.cn/3d/learning-threejs/libs/three.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"http://test.ganjiacheng.cn/3d/learning-threejs/libs/TrackballControls.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        function init(){\n            var scene=new THREE.Scene();\n\n            var camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,0.1,1000);\n            camera.position.set(-20,20,20);\n            camera.lookAt(scene.position);\n\n            var renderer=new THREE.WebGLRenderer();\n            renderer.setClearColor(0xdadada);\n            renderer.setSize(window.innerWidth,window.innerHeight);\n            renderer.shadowMapEnabled=true;\n\n            var axes=new THREE.AxisHelper(2);\n            scene.add(axes);\n\n            var group=new THREE.Mesh();\n            var mats=[];\n            mats.push(new THREE.MeshBasicMaterial({color:0x009e60}));//g\n            mats.push(new THREE.MeshBasicMaterial({color:0x0051ba}));//b\n            mats.push(new THREE.MeshBasicMaterial({color:0xffd500}));//y\n            mats.push(new THREE.MeshBasicMaterial({color:0xff5800}));//j\n            mats.push(new THREE.MeshBasicMaterial({color:0xC41E3A}));//r\n            mats.push(new THREE.MeshBasicMaterial({color:0xffffff}));//w\n            var faceMaterial=new THREE.MeshFaceMaterial(mats);\n            for(var x=0;x&lt;3;x++){\n                for(var y=0;y&lt;3;y++){\n                    for(var z=0;z&lt;3;z++){\n                        var cubeGeom=new THREE.BoxGeometry(2.9,2.9,2.9);\n                        var cube=new THREE.Mesh(cubeGeom,faceMaterial);\n                        cube.position.set(x*3-3,y*3-3,z*3-3);\n                        cube.name=z+3*y+9*x;\n                        group.add(cube);\n                    }\n                }\n            }\n            scene.add(group);\n\n            var trackballControls=new THREE.TrackballControls(camera);\n            trackballControls.rotateSpeed=1.0;\n            trackballControls.zoomSpeed=1.0;\n            trackballControls.panSpeed=1.0;\n\n            document.addEventListener('mousedown',onMouseDown,false);\n\n            var clock=new THREE.Clock();\n\n            document.getElementById(\"webgl\").appendChild(renderer.domElement);\n            renderer.render(scene,camera);\n\n            var test=new THREE.MeshBasicMaterial({color:0x000000});\n            var startMove=-1;\n            var moveList=[];\n            var rotateDirection;\n            var DirectionLR=true;\n            var j=0;\n            function onMouseDown(event){\n                if(startMove!=-1){\n                    return;\n                }\n                var vector=new THREE.Vector3((event.clientX/window.innerWidth)*2-1,-(event.clientY/window.innerHeight)*2+1,0.5);\n                vector=vector.unproject(camera);\n                var raycaster=new THREE.Raycaster(camera.position,vector.sub(camera.position).normalize());\n                var intersects=raycaster.intersectObjects(group.children);\n                if(intersects.length&gt;0){\n                    j=0;\n                    moveList=[];\n                    startMove=intersects[0].object.name;\n                    var y=scene.children[1].children[startMove].position.y;\n                    getRotateDirection(intersects[0].point.x,intersects[0].point.y,intersects[0].point.z);\n                    if(rotateDirection==1){\n                        for(var i=0;i&lt;27;i++){\n                            if(xround(scene.children[1].children[i].position.y,2)==xround(y,2)){\n                                moveList.push(i);\n                            }\n                        }\n                    }else if(rotateDirection==2){\n                        for(var i=0;i&lt;27;i++){\n                            if(xround(scene.children[1].children[i].position.x,2)==xround(scene.children[1].children[startMove].position.x,2)){\n                                moveList.push(i);\n                            }\n                        }\n                    }else if(rotateDirection=3){\n                        for(var i=0;i&lt;27;i++){\n                            if(xround(scene.children[1].children[i].position.z,2)==xround(scene.children[1].children[startMove].position.z,2)){\n                                moveList.push(i);\n                            }\n                        }\n                    }\n                }\n            }\n\n            function reset(){\n                startMove=-1;\n            }\n\n            function rotationMF(moveList){\n                var rotationV=DirectionLR?Math.PI/100:-Math.PI/100;\n                if(rotateDirection==1){\n                    if(j&lt;50){\n                        for(var i in moveList){\n                            var rotation = new THREE.Matrix4().makeRotationY(rotationV);\n                            scene.children[1].children[moveList[i]].applyMatrix(rotation);\n                        }\n                        j++;\n                    }else{\n                        reset()\n                    }\n                }else if(rotateDirection==2){\n                    if(j&lt;50){\n                        for(var i in moveList){\n                            var rotation = new THREE.Matrix4().makeRotationX(rotationV);\n                            scene.children[1].children[moveList[i]].applyMatrix(rotation);\n                        }\n                        j++;\n                    }else{\n                        reset()\n                    }\n                }else if(rotateDirection==3){\n                    if(j&lt;50){\n                        for(var i in moveList){\n                            var rotation = new THREE.Matrix4().makeRotationZ(rotationV);\n                            scene.children[1].children[moveList[i]].applyMatrix(rotation);\n                        }\n                        j++;\n                    }else{\n                        reset()\n                    }\n                }\n            }\n            \n            function xround(x, num){\n                return Math.round(x * Math.pow(10, num)) / Math.pow(10, num);\n            }\n            function getRotateDirection(x,y,z){\n                function dealxyz(axis){\n                    for(var i=0;i&lt;3;i++){\n                        if(xround(axis[i],2)==-4.45 || xround(axis[i],2)==4.45){\n                            var fl=xround(axis.splice(i,1),2)==-4.45;\n                            axis[0]=axis[0]&gt;1.5?axis[0]-3:axis[0];\n                            axis[0]=axis[0]&lt;-1.5?axis[0]+3:axis[0];\n                            axis[1]=axis[1]&gt;1.5?axis[1]-3:axis[1];\n                            axis[1]=axis[1]&lt;-1.5?axis[1]+3:axis[1];\n                            var judge;\n                            if(i==0 &amp;&amp; Math.abs(axis[0])&lt;Math.abs(axis[1])){\n                                rotateDirection=1;\n                                judge=fl?(Math.abs(axis[0])&lt;Math.abs(axis[1]) &amp;&amp; axis[1]&lt;0):(Math.abs(axis[0])&lt;Math.abs(axis[1]) &amp;&amp; axis[1]&gt;0);\n                            }else if(i==0 &amp;&amp; Math.abs(axis[0])&gt;Math.abs(axis[1])){\n                                rotateDirection=3;\n                                judge=!fl?(Math.abs(axis[1])&lt;Math.abs(axis[0]) &amp;&amp; axis[0]&lt;0):(Math.abs(axis[1])&lt;Math.abs(axis[0]) &amp;&amp; axis[0]&gt;0);\n                            }else if(i==1 &amp;&amp; Math.abs(axis[0])&lt;Math.abs(axis[1])){\n                                rotateDirection=2;\n                                judge=!fl?(Math.abs(axis[0])&lt;Math.abs(axis[1]) &amp;&amp; axis[1]&lt;0):(Math.abs(axis[0])&lt;Math.abs(axis[1]) &amp;&amp; axis[1]&gt;0);\n                            }else if(i==1 &amp;&amp; Math.abs(axis[0])&gt;Math.abs(axis[1])){\n                                rotateDirection=3;\n                                judge=fl?(Math.abs(axis[1])&lt;Math.abs(axis[0]) &amp;&amp; axis[0]&lt;0):(Math.abs(axis[1])&lt;Math.abs(axis[0]) &amp;&amp; axis[0]&gt;0);\n                            }else if(i==2 &amp;&amp; Math.abs(axis[0])&gt;Math.abs(axis[1])){\n                                rotateDirection=1;\n                                judge=fl?(Math.abs(axis[1])&lt;Math.abs(axis[0]) &amp;&amp; axis[0]&gt;0):(Math.abs(axis[1])&lt;Math.abs(axis[0]) &amp;&amp; axis[0]&lt;0);\n                                console.log(judge);\n                            }else if(i==2 &amp;&amp; Math.abs(axis[0])&lt;Math.abs(axis[1])){\n                                rotateDirection=2;\n                                judge=!fl?(Math.abs(axis[0])&lt;Math.abs(axis[1]) &amp;&amp; axis[1]&gt;0):(Math.abs(axis[0])&lt;Math.abs(axis[1]) &amp;&amp; axis[1]&lt;0);\n                            }\n                            return judge;\n                        }\n                    }\n                }\n                DirectionLR=!dealxyz([x,y,z]);\n            }\n\n            function renderScene(){\n                var delta=clock.getDelta();\n                if(startMove!=-1){rotationMF(moveList);}\n                trackballControls.update(delta);\n                requestAnimationFrame(renderScene);\n                renderer.render(scene,camera);\n            }\n            renderScene();\n        }\n        window.onload=init;\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;</pre>\n这里不预览啦，主要注明的一点就是看起来比写起来真是两码事，\n\n一开始纠结在rotation的旋转会连带转自己的坐标轴。后来慢慢发现他转的是他的children子元素，并可以创造矩阵来旋转。\n\n本来想的很好做一个沿y轴转四个面，然后推广到x,z，只要写一套就行。现实还是安心的做完了6个面以及每个面里9个小块的分析。\n\n本来还想着怎么能写的系统一点，可以轻松调InOut，这样就可以做多元的魔方，说不定还能研究个魔方的随机打乱和复原，好吧继续想着吧。\n\n还有点感悟就是three.js文档虽然齐全不过问的问题确实不多，有点难搜到相似问题。搜到的时候讲的都是欧拉角，旋转矩阵，四元数这种画风。。。\n\nthree.js完结篇，，\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n才怪",
            "post_title": "three.js第三弹，一个可玩的魔方",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "359-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-27 21:55:48",
            "post_modified_gmt": "2017-7-27 13:55:48",
            "post_content_filtered": "",
            "post_parent": "359",
            "guid": "http://ganjiacheng.cn/blog/?p=364",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "366",
            "post_author": "1",
            "post_date": "2017-7-31 20:12:28",
            "post_date_gmt": "2017-7-31 12:12:28",
            "post_content": "作为pythoner爬虫还是必备技能之一，说上手就上手。\r\n\r\n入门选了个拉勾网（莫名躺枪，下手轻点）。<!--more-->\r\n\r\n这次具体来讲一下爬网页走过的流程。\r\n\r\n先在chrome打开拉勾网主页，打开开发者工具network项，点每个资源就知道他的request和reponse。主页他是直接返回的内容，所以直接去爬主页，三行搞定。\r\n<pre>import requests\r\nreq=requests.get(\"https://www.lagou.com/\")\r\nprint(req.text)</pre>\r\n然后继续看具体的内容页，这里以杭州为例，网址是https://www.lagou.com/jobs/list_?px=new&amp;city=%E6%9D%AD%E5%B7%9E#filterBox\r\n\r\n以同样的方式爬内容页，会发现内容页只有外标签而没有内容。\r\n\r\n看console便会发现有ajax的痕迹，仔细看network便会发现几个json文件，通过看他的request和reponse便会知道数据是在某个json的链接里拿到的。链接为https://www.lagou.com/jobs/positionAjax.json?px=new&amp;city=%E6%9D%AD%E5%B7%9E&amp;needAddtionalResult=false\r\n\r\n直接爬这个链接，会发现返回错误信息，应该还有点防护措施。\r\n\r\n所以我们把自己伪装的和浏览器更像。构造一个request头\r\n<pre>import requests\r\nheader={\r\n    'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36',\r\n    'Referer': 'https://www.lagou.com/jobs/list_?px=new&amp;city=%\\E6%\\9D%\\AD%\\E5%\\B7%\\9E',\r\n    'Accept-Encoding': 'gzip, deflate, br',\r\n}\r\nreq=requests.post(\"https://www.lagou.com/jobs/positionAjax.json?px=new&amp;needAddtionalResult=false\",params={\"city\":\"杭州\"},headers=header)\r\nprint(req.content)</pre>\r\n然后能爬取到一页的数据，在进一步直接爬30页，就会发现有每分钟的每个IP5次的次数限制。ip限制就用代理呗，只要在requests里面加一个proxies的参数即可，不过好的代理确实难找，<a href=\"http://www.gatherproxy.com/zh/\">这里的还算可以</a>。\r\n\r\n代理要加进去的话，得先爬代理网站，然后才能时时获取最新的代理并处理。\r\n<pre>req=requests.post(url,proxies={\"https\":\"000.000.000.000:00\",\"http\":\"000.000.000.000:00\"},headers=headers,params={'city':'杭州','pn':str(page)})</pre>\r\n因为上面那个代理网站要翻墙，这里用另一个代理网站做测试。爬到网页后用beautifulSoup4来处理html代码。\r\n<pre>#coding:utf-8\r\nimport requests\r\nfrom bs4 import BeautifulSoup\r\n\r\ndef getProxyList():\r\n    res=[]\r\n    header={\r\n        'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36',\r\n    }\r\n    response=requests.get(\"http://www.xicidaili.com/nn/\",headers=header)\r\n    soup=BeautifulSoup(response.text,'html.parser')\r\n    li=soup.find_all('tr',{'class':'odd'})\r\n    for item in li:\r\n        res.append(item.contents[3].string+\":\"+item.contents[5].string)\r\n        itemNext=item.next_sibling.next_sibling\r\n        res.append(itemNext.contents[3].string+\":\"+itemNext.contents[5].string)\r\n    return res</pre>\r\n爬到拉勾网的内容后得处理丫。因为是json格式，直接用json处理，下面是处理的代码：\r\n<pre>import requests\r\nimport json\r\nheader={\r\n    'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36',\r\n    'Referer': 'https://www.lagou.com/jobs/list_?px=new&amp;city=%\\E6%\\9D%\\AD%\\E5%\\B7%\\9E',\r\n    'Accept-Encoding': 'gzip, deflate, br',\r\n}\r\nreq=requests.get(\"https://www.lagou.com/jobs/positionAjax.json?px=new&amp;needAddtionalResult=false\",params={\"city\":\"杭州\"},headers=header)\r\ndata=json.loads(req.text)\r\nfor i in data['content']['positionResult']['result']:\r\n    print(i['positionName'],i['salary'],i['workYear'],i['jobNature'],i['companyFullName'],i['companySize'],i['district'],i['createTime'])</pre>\r\n总结：一般的套路也就是看chrome控制台，把request和reponse弄清楚，有时候还得看他的js代码，有时候html里也会隐藏一些信息，反正无所不用。\r\n\r\n爬网页与反爬虫总是矛和盾，作为一个写网页又爬网页的，应该能更加清楚一些套路，而在写网页的时候阻挡一些简单的爬虫入侵。",
            "post_title": "python爬虫初入门实战 [aim->拉勾网]",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "python%e7%88%ac%e8%99%ab%e5%88%9d%e5%85%a5%e9%97%a8%e5%ae%9e%e6%88%98-aim-%e6%8b%89%e5%8b%be%e7%bd%91",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-31 20:13:47",
            "post_modified_gmt": "2017-7-31 12:13:47",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=366",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "367",
            "post_author": "1",
            "post_date": "2017-7-30 19:52:33",
            "post_date_gmt": "2017-7-30 11:52:33",
            "post_content": "",
            "post_title": "python爬虫初入门实战 [aim->拉勾网]",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "366-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-30 19:52:33",
            "post_modified_gmt": "2017-7-30 11:52:33",
            "post_content_filtered": "",
            "post_parent": "366",
            "guid": "http://ganjiacheng.cn/blog/?p=367",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "368",
            "post_author": "1",
            "post_date": "2017-7-31 21:26:27",
            "post_date_gmt": "2017-7-31 13:26:27",
            "post_content": "有个多个字符识别的需求，想是要切割还是字符连接整个一起识别，所以就找了一个验证码来做对比尝试。这个验证码很简单，<a href=\"http://jxgl.hdu.edu.cn/CheckCode.aspx\">验证码链接</a>，<!--more-->就中规中矩<img class=\"alignnone size-full wp-image-379\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/07/00126-1.png\" alt=\"\" width=\"60\" height=\"22\" />，\r\n\r\n简单贴一下验证码爬下来的代码\r\n<pre>import requests\r\nfrom PIL import Image\r\nfrom io import BytesIO\r\nfrom threading import Thread\r\nheaders = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36'}\r\nclass Mythread(Thread):\r\n    def __init__(self,num):\r\n        Thread.__init__(self)\r\n        self.num=num\r\n    def run(self):\r\n        while True:  \r\n            req = requests.get(\"http://jxgl.hdu.edu.cn/CheckCode.aspx\",headers=headers)\r\n            im=Image.open(BytesIO(req.content))\r\n            im.save(\"croptest/\"+str(self.num)+\".png\")\r\nthreads=[]\r\nfor j in range(10):\r\n    for i in range(10):\r\n        t=Mythread(i+10*j)\r\n        t.start()\r\n        print(i+10*j)</pre>\r\n之后做了去重，标记，测试正式开始\r\n\r\n首先用不切割整体识别的方法，像素转换成黑白二值整个作为输入，输出为5个数，每个数10类的拼接，总共50类，每十个数中的1值为图中所对应的数。\r\n\r\n先用tensorflow构建了cnn，对于cnn模型，中间并没有做很多改动，只进行了输入输出的调整。写了个输入函数把图像转换成输入数据，写了个训练函数对模型进行训练，由于样本较少，也只进行了不多的训练次数。又写了个测试函数用来爬取新图片对模型进行测试\r\n<pre>import tensorflow as tf\r\nimport os\r\nimport numpy as np\r\nimport cv2\r\n\r\nnumber = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']\r\nchar_Len=5*len(number)\r\ndirname=os.listdir('dealyzm/')\r\ndirname.remove('Thumbs.db')\r\n\r\ndef weight_varible(shape):\r\n    initial = tf.truncated_normal(shape, stddev=0.1)\r\n    return tf.Variable(initial)\r\n\r\ndef bias_variable(shape):\r\n    initial = tf.constant(0.1, shape=shape)\r\n    return tf.Variable(initial)\r\n\r\ndef conv2d(x, W):\r\n    return tf.nn.conv2d(x, W, strides=[1, 1, 1, 1], padding='SAME')\r\n\r\ndef max_pool_2x2(x):\r\n    return tf.nn.max_pool(x, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')\r\n# paras\r\nW_conv1 = weight_varible([5, 5, 1, 32])\r\nb_conv1 = bias_variable([32])\r\n\r\n# conv layer-1\r\nx = tf.placeholder(tf.float32, [None, 1320])\r\nx_image = tf.reshape(x, [-1, 22, 60, 1])\r\n\r\nh_conv1 = tf.nn.relu(conv2d(x_image, W_conv1) + b_conv1)\r\nh_pool1 = max_pool_2x2(h_conv1)\r\n\r\n# conv layer-2\r\nW_conv2 = weight_varible([5, 5, 32, 64])\r\nb_conv2 = bias_variable([64])\r\n\r\nh_conv2 = tf.nn.relu(conv2d(h_pool1, W_conv2) + b_conv2)\r\nh_pool2 = max_pool_2x2(h_conv2)\r\n\r\n# full connection\r\nshape = h_pool2.get_shape().as_list()\r\ndim = 1\r\nfor d in shape[1:]:\r\n    dim *= d\r\nW_fc1 = weight_varible([dim, 1024])\r\nb_fc1 = bias_variable([1024])\r\n\r\nh_pool2_flat = tf.reshape(h_pool2, [-1, dim])\r\nh_fc1 = tf.nn.relu(tf.matmul(h_pool2_flat, W_fc1) + b_fc1)\r\n\r\n# dropout\r\nkeep_prob = tf.placeholder(tf.float32)\r\nh_fc1_drop = tf.nn.dropout(h_fc1, keep_prob)\r\n\r\n# output layer: softmax\r\nW_fc2 = weight_varible([1024, char_Len])\r\nb_fc2 = bias_variable([char_Len])\r\n\r\ny_conv = tf.nn.softmax(tf.matmul(h_fc1_drop, W_fc2) + b_fc2)\r\ny_ = tf.placeholder(tf.float32, [None, char_Len])\r\n\r\n# model training\r\ncross_entropy = -tf.reduce_sum(y_ * tf.log(y_conv+ 1e-10))\r\ntrain_step = tf.train.AdamOptimizer(1e-4).minimize(cross_entropy)\r\nsess=tf.InteractiveSession()\r\ntf.global_variables_initializer().run()\r\n\r\ndef getRanPic(num):\r\n    image=[]\r\n    name=[]\r\n    for i in range(num):\r\n        tmpname=[0]*char_Len\r\n        filename=dirname[int(np.random.random()*len(dirname))]\r\n        im=cv2.imread(\"dealyzm/\"+filename,0)/255.0\r\n        im=im.reshape(-1)\r\n        for i in range(5):\r\n            tmpname[number.index(filename[i])+len(number)*i]=1\r\n        image.append(im)\r\n        name.append(tmpname)\r\n    return image,name\r\ndef trainFirst():\r\n    saver = tf.train.Saver()\r\n    for _ in range(400):\r\n        batch_xs,batch_ys=getRanPic(20)\r\n        tmp,loss=sess.run([train_step,cross_entropy],feed_dict={x:batch_xs,y_:batch_ys,keep_prob: 1.0})\r\n        if _%20==0:\r\n            batch_xs,batch_ys=getRanPic(20)\r\n            correct_prediction=tf.equal(tf.argmax(tf.reshape(y_conv, [-1, 5, 10]),2),tf.argmax(tf.reshape(y_, [-1, 5, 10]),2))\r\n            accuracy=tf.reduce_mean(tf.cast(correct_prediction,tf.float32))\r\n            acc_test=sess.run(accuracy,feed_dict={x:batch_xs,y_:batch_ys,keep_prob: 1.0})\r\n            print(\"loss:\"+str(loss)+\" acc_train:\"+str(acc_test))\r\n    saver.save(sess, 'model/testyzm-cnn.model', global_step=_)\r\ndef test():\r\n    headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36'}\r\n    req = requests.get(\"http://jxgl.hdu.edu.cn/CheckCode.aspx\",headers=headers)\r\n    im=np.array(Image.open(BytesIO(req.content)))\r\n    ret,im_hb=cv2.threshold(im,127,255,cv2.THRESH_BINARY)\r\n    img=[im_hb.reshape(-1)/255]\r\n    name=[[0]*50]\r\n    saver = tf.train.Saver()\r\n    with tf.Session() as sess:\r\n        batch_xs,batch_ys=img,name\r\n        path = 'model/testyzm-cnn.model-' + str(399)\r\n        saver.restore(sess, path)\r\n        predict = tf.argmax(tf.reshape(y_conv, [-1, 5, 10]), 2)\r\n        pre = sess.run(predict, feed_dict={x:batch_xs,y_:batch_ys,keep_prob: 1.0})\r\n        res=''.join(map(str,pre[0]))\r\n        print(res)\r\n    cv2.imshow(\"image\",im)\r\n    cv2.waitKey(0)\r\ntrain=0\r\nif train==0:\r\n    trainFirst()\r\nelse:\r\n    test()</pre>\r\n测试结果便是整个对于自身的拟合效果还算可以，能达到90%以上，而对于test时的外来数据的表现不是很好，只有30%左右。\r\n\r\n第二个模型，首先对样本进行了分割，把每张图的5个数分开来。\r\n<pre>from PIL import Image\r\nimport os\r\nd=os.listdir(\"dealyzm/\")\r\nk=0\r\nfor i in d:\r\n    file=Image.open(\"dealyzm/\"+i)\r\n    for j in range(5):\r\n        crop=file.crop((9*j+5,4,9*j+14,18))\r\n        crop.save(\"crop/\"+i[j]+str(k)+\".png\")\r\n    k+=1</pre>\r\n然后继续构建模型，只是调整了输入输出基本原理和上面一样\r\n<pre>import tensorflow as tf\r\nimport numpy as np\r\nimport os\r\nimport cv2\r\nimport requests\r\nfrom PIL import Image\r\nfrom io import BytesIO\r\n\r\ndef weight_varible(shape):\r\n    initial = tf.truncated_normal(shape, stddev=0.1)\r\n    return tf.Variable(initial)\r\n\r\ndef bias_variable(shape):\r\n    initial = tf.constant(0.1, shape=shape)\r\n    return tf.Variable(initial)\r\n\r\ndef conv2d(x, W):\r\n    return tf.nn.conv2d(x, W, strides=[1, 1, 1, 1], padding='SAME')\r\n\r\ndef max_pool_2x2(x):\r\n    return tf.nn.max_pool(x, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')\r\n# paras\r\nW_conv1 = weight_varible([5, 5, 1, 32])\r\nb_conv1 = bias_variable([32])\r\n\r\n# conv layer-1\r\nx = tf.placeholder(tf.float32, [None, 126])\r\nx_image = tf.reshape(x, [-1, 9, 14, 1])\r\n\r\nh_conv1 = tf.nn.relu(conv2d(x_image, W_conv1) + b_conv1)\r\nh_pool1 = max_pool_2x2(h_conv1)\r\n\r\n# conv layer-2\r\nW_conv2 = weight_varible([5, 5, 32, 64])\r\nb_conv2 = bias_variable([64])\r\n\r\nh_conv2 = tf.nn.relu(conv2d(h_pool1, W_conv2) + b_conv2)\r\nh_pool2 = max_pool_2x2(h_conv2)\r\n\r\n# full connection\r\nshape = h_pool2.get_shape().as_list()\r\ndim = 1\r\nfor d in shape[1:]:\r\n    dim *= d\r\nW_fc1 = weight_varible([dim, 1024])\r\nb_fc1 = bias_variable([1024])\r\n\r\nh_pool2_flat = tf.reshape(h_pool2, [-1, dim])\r\nh_fc1 = tf.nn.relu(tf.matmul(h_pool2_flat, W_fc1) + b_fc1)\r\n\r\n# dropout\r\nkeep_prob = tf.placeholder(tf.float32)\r\nh_fc1_drop = tf.nn.dropout(h_fc1, keep_prob)\r\n\r\n# output layer: softmax\r\nW_fc2 = weight_varible([1024, 10])\r\nb_fc2 = bias_variable([10])\r\n\r\ny_conv = tf.nn.softmax(tf.matmul(h_fc1_drop, W_fc2) + b_fc2)\r\ny_ = tf.placeholder(tf.float32, [None, 10])\r\n\r\n# model training\r\ncross_entropy = -tf.reduce_sum(y_ * tf.log(y_conv+ 1e-10))\r\ntrain_step = tf.train.AdamOptimizer(1e-4).minimize(cross_entropy)\r\n\r\ncorrect_prediction = tf.equal(tf.arg_max(y_conv, 1), tf.arg_max(y_, 1))\r\naccuracy = tf.reduce_mean(tf.cast(correct_prediction, tf.float32))\r\n\r\nsess=tf.InteractiveSession()\r\ntf.global_variables_initializer().run()\r\n\r\ndirname=os.listdir(\"crop/\")\r\ndirname.remove(\"Thumbs.db\")\r\n\r\ndef getRanPic(num):\r\n    image=[]\r\n    name=[]\r\n    for i in range(num):\r\n        tmpname=[0]*10\r\n        filename=dirname[int(np.random.random()*len(dirname))]\r\n        im=cv2.imread(\"crop/\"+filename,0)/255.0\r\n        im=im.reshape(-1)\r\n        tmpname[int(filename[0])]=1\r\n        image.append(im)\r\n        name.append(tmpname)\r\n    return image,name\r\n\r\ndef trainFirst():\r\n    saver = tf.train.Saver()\r\n    for _ in range(1000):\r\n        batch_xs,batch_ys=getRanPic(50)\r\n        train_step.run(feed_dict={x:batch_xs,y_:batch_ys,keep_prob: 1.0})\r\n        if _%50==0:\r\n            batch_xs,batch_ys=getRanPic(50)\r\n            loss,acc=sess.run([cross_entropy,accuracy],feed_dict={x:batch_xs,y_:batch_ys,keep_prob: 1.0})\r\n            print(\"loss:\"+str(loss)+\" acc_train:\"+str(acc))\r\n    saver.save(sess, 'model/next-crop-yzm-cnn.model', global_step=_)\r\n\r\ndef test(file):\r\n    headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36'}\r\n    req = requests.get(\"http://jxgl.hdu.edu.cn/CheckCode.aspx\",headers=headers)\r\n    im=Image.open(BytesIO(req.content))\r\n    img=[]\r\n    name=[]\r\n    for i in range(5):\r\n        crop=np.array(im.crop((9*i+5,4,9*i+14,18)))\r\n        ret,im_hb=cv2.threshold(crop,127,255,cv2.THRESH_BINARY)\r\n        img.append(im_hb.reshape(-1)/255)\r\n        name.append([0]*10)\r\n    saver = tf.train.Saver()\r\n    with tf.Session() as sess:\r\n        batch_xs,batch_ys=img,name\r\n        path = 'model/testcropyzm-cnn.model-' + str(999)\r\n        saver.restore(sess, path)\r\n        predict = tf.arg_max(y_conv, 1)\r\n        pre = sess.run(predict, feed_dict={x:batch_xs,y_:batch_ys,keep_prob: 1.0})\r\n    im.save(\"croptest/\"+\"\".join(map(str,pre))+\".png\")\r\n\r\ntrain=1\r\nif train==0:\r\n    trainFirst()\r\nelse:\r\n    test()</pre>\r\n结果：第二次测试的正确率能达到99%以上，对于测试数据，也能有较高的正确率（测试了100个，没错）。\r\n\r\n对比：\r\n\r\n元数据一样是小样本，两种方法只做了输入输出的改变，但效果对比差别很明显。后者好很多。\r\n\r\n猜测是多元连接的参数比分割后数字的参数多得多，所以训练所需的样本也会成倍增加，其中可能会有一定的关系。\r\n\r\n猜测由于多个连接后反向传播的时候会对所有参数进行调整，所以很难训练起来。\r\n\r\n对于小样本的模型训练还可以继续探究。可以尝试学习到一定特征然后用生成器创造大样本从而训练多个输出模型。",
            "post_title": "hack个验证码验证多字符连接识别与切割识别的优劣",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "hack%e4%b8%aa%e9%aa%8c%e8%af%81%e7%a0%81%e9%aa%8c%e8%af%81%e5%a4%9a%e5%ad%97%e7%ac%a6%e8%bf%9e%e6%8e%a5%e8%af%86%e5%88%ab%e4%b8%8e%e5%88%87%e5%89%b2%e8%af%86%e5%88%ab%e7%9a%84%e4%bc%98%e5%8a%a3",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-8-1 15:57:18",
            "post_modified_gmt": "2017-8-1 07:57:18",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=368",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "369",
            "post_author": "1",
            "post_date": "2017-7-30 19:54:18",
            "post_date_gmt": "2017-7-30 11:54:18",
            "post_content": "",
            "post_title": "hack个验证码试试连起来识别与切割识别的利弊",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "368-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-30 19:54:18",
            "post_modified_gmt": "2017-7-30 11:54:18",
            "post_content_filtered": "",
            "post_parent": "368",
            "guid": "http://ganjiacheng.cn/blog/?p=369",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "374",
            "post_author": "1",
            "post_date": "2017-7-31 18:24:09",
            "post_date_gmt": "2017-7-31 10:24:09",
            "post_content": "",
            "post_title": "hack个验证码验证多字符连接识别与切割识别的优劣",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "368-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-31 18:24:09",
            "post_modified_gmt": "2017-7-31 10:24:09",
            "post_content_filtered": "",
            "post_parent": "368",
            "guid": "http://ganjiacheng.cn/blog/?p=374",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "375",
            "post_author": "1",
            "post_date": "2017-7-31 19:50:12",
            "post_date_gmt": "2017-7-31 11:50:12",
            "post_content": "作为pythoner爬虫还是必备技能之一，说上手就上手。\r\n\r\n入门选了个拉勾网（莫名躺枪，下手轻点）。\r\n\r\n这次具体来讲一下爬网页走过的流程。\r\n\r\n先在chrome打开拉勾网主页，打开开发者工具network项，点每个资源就知道他的request和reponse。主页他是直接返回的内容，所以直接去爬主页，三行搞定。\r\n<pre>import requests\r\nreq=requests.get(\"https://www.lagou.com/\")\r\nprint(req.text)</pre>\r\n然后继续看具体的内容页，这里以杭州为例，网址是https://www.lagou.com/jobs/list_?px=new&amp;city=%E6%9D%AD%E5%B7%9E#filterBox\r\n\r\n以同样的方式爬内容页，会发现内容页只有外标签而没有内容。\r\n\r\n看console便会发现有ajax的痕迹，仔细看network便会发现几个json文件，通过看他的request和reponse便会知道数据是在某个json的链接里拿到的。链接为https://www.lagou.com/jobs/positionAjax.json?px=new&amp;city=%E6%9D%AD%E5%B7%9E&amp;needAddtionalResult=false\r\n\r\n直接爬这个链接，会发现返回错误信息，应该还有点防护措施。\r\n\r\n所以我们把自己伪装的和浏览器更像。构造一个reponse头\r\n<pre>import requests\r\nheader={\r\n    'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36',\r\n    'Referer': 'https://www.lagou.com/jobs/list_?px=new&amp;city=%\\E6%\\9D%\\AD%\\E5%\\B7%\\9E',\r\n    'Accept-Encoding': 'gzip, deflate, br',\r\n}\r\nreq=requests.get(\"https://www.lagou.com/jobs/positionAjax.json?px=new&amp;needAddtionalResult=false\",params={\"city\":\"杭州\"},headers=header)\r\nprint(req.content)</pre>\r\n然后能爬取到一页的数据，在进一步直接爬30页，就会发现有每分钟的每个IP5次的次数限制。ip限制就用代理呗，不过好的代理确实难找，<a href=\"http://这里的还算可以\">这里的还算可以</a>\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "python爬虫初入门实战 [aim->拉勾网]",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "366-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-31 19:50:12",
            "post_modified_gmt": "2017-7-31 11:50:12",
            "post_content_filtered": "",
            "post_parent": "366",
            "guid": "http://ganjiacheng.cn/blog/?p=375",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "376",
            "post_author": "1",
            "post_date": "2017-7-31 20:12:28",
            "post_date_gmt": "2017-7-31 12:12:28",
            "post_content": "作为pythoner爬虫还是必备技能之一，说上手就上手。\r\n\r\n入门选了个拉勾网（莫名躺枪，下手轻点）。<!--more-->\r\n\r\n这次具体来讲一下爬网页走过的流程。\r\n\r\n先在chrome打开拉勾网主页，打开开发者工具network项，点每个资源就知道他的request和reponse。主页他是直接返回的内容，所以直接去爬主页，三行搞定。\r\n<pre>import requests\r\nreq=requests.get(\"https://www.lagou.com/\")\r\nprint(req.text)</pre>\r\n然后继续看具体的内容页，这里以杭州为例，网址是https://www.lagou.com/jobs/list_?px=new&amp;city=%E6%9D%AD%E5%B7%9E#filterBox\r\n\r\n以同样的方式爬内容页，会发现内容页只有外标签而没有内容。\r\n\r\n看console便会发现有ajax的痕迹，仔细看network便会发现几个json文件，通过看他的request和reponse便会知道数据是在某个json的链接里拿到的。链接为https://www.lagou.com/jobs/positionAjax.json?px=new&amp;city=%E6%9D%AD%E5%B7%9E&amp;needAddtionalResult=false\r\n\r\n直接爬这个链接，会发现返回错误信息，应该还有点防护措施。\r\n\r\n所以我们把自己伪装的和浏览器更像。构造一个reponse头\r\n<pre>import requests\r\nheader={\r\n    'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36',\r\n    'Referer': 'https://www.lagou.com/jobs/list_?px=new&amp;city=%\\E6%\\9D%\\AD%\\E5%\\B7%\\9E',\r\n    'Accept-Encoding': 'gzip, deflate, br',\r\n}\r\nreq=requests.post(\"https://www.lagou.com/jobs/positionAjax.json?px=new&amp;needAddtionalResult=false\",params={\"city\":\"杭州\"},headers=header)\r\nprint(req.content)</pre>\r\n然后能爬取到一页的数据，在进一步直接爬30页，就会发现有每分钟的每个IP5次的次数限制。ip限制就用代理呗，只要在requests里面加一个proxies的参数即可，不过好的代理确实难找，<a href=\"http://www.gatherproxy.com/zh/\">这里的还算可以</a>。\r\n\r\n代理要加进去的话，得先爬代理网站，然后才能时时获取最新的代理并处理。\r\n<pre>req=requests.post(url,proxies={\"https\":\"000.000.000.000:00\",\"http\":\"000.000.000.000:00\"},headers=headers,params={'city':'杭州','pn':str(page)})</pre>\r\n因为上面那个代理网站要翻墙，这里用另一个代理网站做测试。爬到网页后用beautifulSoup4来处理html代码。\r\n<pre>#coding:utf-8\r\nimport requests\r\nfrom bs4 import BeautifulSoup\r\n\r\ndef getProxyList():\r\n    res=[]\r\n    header={\r\n        'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36',\r\n    }\r\n    response=requests.get(\"http://www.xicidaili.com/nn/\",headers=header)\r\n    soup=BeautifulSoup(response.text,'html.parser')\r\n    li=soup.find_all('tr',{'class':'odd'})\r\n    for item in li:\r\n        res.append(item.contents[3].string+\":\"+item.contents[5].string)\r\n        itemNext=item.next_sibling.next_sibling\r\n        res.append(itemNext.contents[3].string+\":\"+itemNext.contents[5].string)\r\n    return res</pre>\r\n爬到拉勾网的内容后得处理丫。因为是json格式，直接用json处理，下面是处理的代码：\r\n<pre>import requests\r\nimport json\r\nheader={\r\n    'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36',\r\n    'Referer': 'https://www.lagou.com/jobs/list_?px=new&amp;city=%\\E6%\\9D%\\AD%\\E5%\\B7%\\9E',\r\n    'Accept-Encoding': 'gzip, deflate, br',\r\n}\r\nreq=requests.get(\"https://www.lagou.com/jobs/positionAjax.json?px=new&amp;needAddtionalResult=false\",params={\"city\":\"杭州\"},headers=header)\r\ndata=json.loads(req.text)\r\nfor i in data['content']['positionResult']['result']:\r\n    print(i['positionName'],i['salary'],i['workYear'],i['jobNature'],i['companyFullName'],i['companySize'],i['district'],i['createTime'])</pre>\r\n总结：一般的套路也就是看chrome控制台，把request和reponse弄清楚，有时候还得看他的js代码，有时候html里也会隐藏一些信息，反正无所不用。\r\n\r\n爬网页与反爬虫总是矛和盾，作为一个写网页又爬网页的，应该能更加清楚一些套路，而在写网页的时候阻挡一些简单的爬虫入侵。",
            "post_title": "python爬虫初入门实战 [aim->拉勾网]",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "366-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-31 20:12:28",
            "post_modified_gmt": "2017-7-31 12:12:28",
            "post_content_filtered": "",
            "post_parent": "366",
            "guid": "http://ganjiacheng.cn/blog/?p=376",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "377",
            "post_author": "1",
            "post_date": "2017-7-31 20:13:47",
            "post_date_gmt": "2017-7-31 12:13:47",
            "post_content": "作为pythoner爬虫还是必备技能之一，说上手就上手。\r\n\r\n入门选了个拉勾网（莫名躺枪，下手轻点）。<!--more-->\r\n\r\n这次具体来讲一下爬网页走过的流程。\r\n\r\n先在chrome打开拉勾网主页，打开开发者工具network项，点每个资源就知道他的request和reponse。主页他是直接返回的内容，所以直接去爬主页，三行搞定。\r\n<pre>import requests\r\nreq=requests.get(\"https://www.lagou.com/\")\r\nprint(req.text)</pre>\r\n然后继续看具体的内容页，这里以杭州为例，网址是https://www.lagou.com/jobs/list_?px=new&amp;city=%E6%9D%AD%E5%B7%9E#filterBox\r\n\r\n以同样的方式爬内容页，会发现内容页只有外标签而没有内容。\r\n\r\n看console便会发现有ajax的痕迹，仔细看network便会发现几个json文件，通过看他的request和reponse便会知道数据是在某个json的链接里拿到的。链接为https://www.lagou.com/jobs/positionAjax.json?px=new&amp;city=%E6%9D%AD%E5%B7%9E&amp;needAddtionalResult=false\r\n\r\n直接爬这个链接，会发现返回错误信息，应该还有点防护措施。\r\n\r\n所以我们把自己伪装的和浏览器更像。构造一个request头\r\n<pre>import requests\r\nheader={\r\n    'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36',\r\n    'Referer': 'https://www.lagou.com/jobs/list_?px=new&amp;city=%\\E6%\\9D%\\AD%\\E5%\\B7%\\9E',\r\n    'Accept-Encoding': 'gzip, deflate, br',\r\n}\r\nreq=requests.post(\"https://www.lagou.com/jobs/positionAjax.json?px=new&amp;needAddtionalResult=false\",params={\"city\":\"杭州\"},headers=header)\r\nprint(req.content)</pre>\r\n然后能爬取到一页的数据，在进一步直接爬30页，就会发现有每分钟的每个IP5次的次数限制。ip限制就用代理呗，只要在requests里面加一个proxies的参数即可，不过好的代理确实难找，<a href=\"http://www.gatherproxy.com/zh/\">这里的还算可以</a>。\r\n\r\n代理要加进去的话，得先爬代理网站，然后才能时时获取最新的代理并处理。\r\n<pre>req=requests.post(url,proxies={\"https\":\"000.000.000.000:00\",\"http\":\"000.000.000.000:00\"},headers=headers,params={'city':'杭州','pn':str(page)})</pre>\r\n因为上面那个代理网站要翻墙，这里用另一个代理网站做测试。爬到网页后用beautifulSoup4来处理html代码。\r\n<pre>#coding:utf-8\r\nimport requests\r\nfrom bs4 import BeautifulSoup\r\n\r\ndef getProxyList():\r\n    res=[]\r\n    header={\r\n        'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36',\r\n    }\r\n    response=requests.get(\"http://www.xicidaili.com/nn/\",headers=header)\r\n    soup=BeautifulSoup(response.text,'html.parser')\r\n    li=soup.find_all('tr',{'class':'odd'})\r\n    for item in li:\r\n        res.append(item.contents[3].string+\":\"+item.contents[5].string)\r\n        itemNext=item.next_sibling.next_sibling\r\n        res.append(itemNext.contents[3].string+\":\"+itemNext.contents[5].string)\r\n    return res</pre>\r\n爬到拉勾网的内容后得处理丫。因为是json格式，直接用json处理，下面是处理的代码：\r\n<pre>import requests\r\nimport json\r\nheader={\r\n    'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36',\r\n    'Referer': 'https://www.lagou.com/jobs/list_?px=new&amp;city=%\\E6%\\9D%\\AD%\\E5%\\B7%\\9E',\r\n    'Accept-Encoding': 'gzip, deflate, br',\r\n}\r\nreq=requests.get(\"https://www.lagou.com/jobs/positionAjax.json?px=new&amp;needAddtionalResult=false\",params={\"city\":\"杭州\"},headers=header)\r\ndata=json.loads(req.text)\r\nfor i in data['content']['positionResult']['result']:\r\n    print(i['positionName'],i['salary'],i['workYear'],i['jobNature'],i['companyFullName'],i['companySize'],i['district'],i['createTime'])</pre>\r\n总结：一般的套路也就是看chrome控制台，把request和reponse弄清楚，有时候还得看他的js代码，有时候html里也会隐藏一些信息，反正无所不用。\r\n\r\n爬网页与反爬虫总是矛和盾，作为一个写网页又爬网页的，应该能更加清楚一些套路，而在写网页的时候阻挡一些简单的爬虫入侵。",
            "post_title": "python爬虫初入门实战 [aim->拉勾网]",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "366-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-31 20:13:47",
            "post_modified_gmt": "2017-7-31 12:13:47",
            "post_content_filtered": "",
            "post_parent": "366",
            "guid": "http://ganjiacheng.cn/blog/?p=377",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "379",
            "post_author": "1",
            "post_date": "2017-7-31 20:18:14",
            "post_date_gmt": "2017-7-31 12:18:14",
            "post_content": "",
            "post_title": "00126",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "00126-2",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-31 20:18:14",
            "post_modified_gmt": "2017-7-31 12:18:14",
            "post_content_filtered": "",
            "post_parent": "368",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2017/07/00126-1.png",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/png",
            "comment_count": "0"
        },
        {
            "ID": "380",
            "post_author": "1",
            "post_date": "2017-7-31 21:26:27",
            "post_date_gmt": "2017-7-31 13:26:27",
            "post_content": "有个多个字符识别的需求，想是要切割还是字符连接整个一起识别，所以就找了一个验证码来做对比尝试。这个验证码很简单，就中规中矩<img class=\"alignnone size-full wp-image-379\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/07/00126-1.png\" alt=\"\" width=\"60\" height=\"22\" />，<a href=\"http://jxgl.hdu.edu.cn/CheckCode.aspx\">验证码链接</a><!--more-->\r\n\r\n简单贴一下验证码爬下来的代码\r\n<pre>import requests\r\nfrom PIL import Image\r\nfrom io import BytesIO\r\nfrom threading import Thread\r\nheaders = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36'}\r\nclass Mythread(Thread):\r\n    def __init__(self,num):\r\n        Thread.__init__(self)\r\n        self.num=num\r\n    def run(self):\r\n        while True:  \r\n            req = requests.get(\"http://jxgl.hdu.edu.cn/CheckCode.aspx\",headers=headers)\r\n            im=Image.open(BytesIO(req.content))\r\n            im.save(\"croptest/\"+str(self.num)+\".png\")\r\nthreads=[]\r\nfor j in range(10):\r\n    for i in range(10):\r\n        t=Mythread(i+10*j)\r\n        t.start()\r\n        print(i+10*j)</pre>\r\n之后做了去重，标记，测试正式开始\r\n\r\n首先用不切割整体识别的方法，像素转换成黑白二值整个作为输入，输出为5个数，每个数10类的拼接，总共50类，每十个数中的1值为图中所对应的数。\r\n\r\n先用tensorflow构建了cnn，对于cnn模型，中间并没有做很多改动，只进行了输入输出的调整。写了个输入函数把图像转换成输入数据，写了个训练函数对模型进行训练，由于样本较少，也只进行了不多的训练次数。又写了个测试函数用来爬取新图片对模型进行测试\r\n<pre>import tensorflow as tf\r\nimport os\r\nimport numpy as np\r\nimport cv2\r\n\r\nnumber = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']\r\nchar_Len=5*len(number)\r\ndirname=os.listdir('dealyzm/')\r\ndirname.remove('Thumbs.db')\r\n\r\ndef weight_varible(shape):\r\n    initial = tf.truncated_normal(shape, stddev=0.1)\r\n    return tf.Variable(initial)\r\n\r\ndef bias_variable(shape):\r\n    initial = tf.constant(0.1, shape=shape)\r\n    return tf.Variable(initial)\r\n\r\ndef conv2d(x, W):\r\n    return tf.nn.conv2d(x, W, strides=[1, 1, 1, 1], padding='SAME')\r\n\r\ndef max_pool_2x2(x):\r\n    return tf.nn.max_pool(x, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')\r\n# paras\r\nW_conv1 = weight_varible([5, 5, 1, 32])\r\nb_conv1 = bias_variable([32])\r\n\r\n# conv layer-1\r\nx = tf.placeholder(tf.float32, [None, 1320])\r\nx_image = tf.reshape(x, [-1, 22, 60, 1])\r\n\r\nh_conv1 = tf.nn.relu(conv2d(x_image, W_conv1) + b_conv1)\r\nh_pool1 = max_pool_2x2(h_conv1)\r\n\r\n# conv layer-2\r\nW_conv2 = weight_varible([5, 5, 32, 64])\r\nb_conv2 = bias_variable([64])\r\n\r\nh_conv2 = tf.nn.relu(conv2d(h_pool1, W_conv2) + b_conv2)\r\nh_pool2 = max_pool_2x2(h_conv2)\r\n\r\n# full connection\r\nshape = h_pool2.get_shape().as_list()\r\ndim = 1\r\nfor d in shape[1:]:\r\n    dim *= d\r\nW_fc1 = weight_varible([dim, 1024])\r\nb_fc1 = bias_variable([1024])\r\n\r\nh_pool2_flat = tf.reshape(h_pool2, [-1, dim])\r\nh_fc1 = tf.nn.relu(tf.matmul(h_pool2_flat, W_fc1) + b_fc1)\r\n\r\n# dropout\r\nkeep_prob = tf.placeholder(tf.float32)\r\nh_fc1_drop = tf.nn.dropout(h_fc1, keep_prob)\r\n\r\n# output layer: softmax\r\nW_fc2 = weight_varible([1024, char_Len])\r\nb_fc2 = bias_variable([char_Len])\r\n\r\ny_conv = tf.nn.softmax(tf.matmul(h_fc1_drop, W_fc2) + b_fc2)\r\ny_ = tf.placeholder(tf.float32, [None, char_Len])\r\n\r\n# model training\r\ncross_entropy = -tf.reduce_sum(y_ * tf.log(y_conv+ 1e-10))\r\ntrain_step = tf.train.AdamOptimizer(1e-4).minimize(cross_entropy)\r\nsess=tf.InteractiveSession()\r\ntf.global_variables_initializer().run()\r\n\r\ndef getRanPic(num):\r\n    image=[]\r\n    name=[]\r\n    for i in range(num):\r\n        tmpname=[0]*char_Len\r\n        filename=dirname[int(np.random.random()*len(dirname))]\r\n        im=cv2.imread(\"dealyzm/\"+filename,0)/255.0\r\n        im=im.reshape(-1)\r\n        for i in range(5):\r\n            tmpname[number.index(filename[i])+len(number)*i]=1\r\n        image.append(im)\r\n        name.append(tmpname)\r\n    return image,name\r\ndef trainFirst():\r\n    saver = tf.train.Saver()\r\n    for _ in range(400):\r\n        batch_xs,batch_ys=getRanPic(20)\r\n        tmp,loss=sess.run([train_step,cross_entropy],feed_dict={x:batch_xs,y_:batch_ys,keep_prob: 1.0})\r\n        if _%20==0:\r\n            batch_xs,batch_ys=getRanPic(20)\r\n            correct_prediction=tf.equal(tf.argmax(tf.reshape(y_conv, [-1, 5, 10]),2),tf.argmax(tf.reshape(y_, [-1, 5, 10]),2))\r\n            accuracy=tf.reduce_mean(tf.cast(correct_prediction,tf.float32))\r\n            acc_test=sess.run(accuracy,feed_dict={x:batch_xs,y_:batch_ys,keep_prob: 1.0})\r\n            print(\"loss:\"+str(loss)+\" acc_train:\"+str(acc_test))\r\n    saver.save(sess, 'model/testyzm-cnn.model', global_step=_)\r\ndef test():\r\n    headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36'}\r\n    req = requests.get(\"http://jxgl.hdu.edu.cn/CheckCode.aspx\",headers=headers)\r\n    im=np.array(Image.open(BytesIO(req.content)))\r\n    ret,im_hb=cv2.threshold(im,127,255,cv2.THRESH_BINARY)\r\n    img=[im_hb.reshape(-1)/255]\r\n    name=[[0]*50]\r\n    saver = tf.train.Saver()\r\n    with tf.Session() as sess:\r\n        batch_xs,batch_ys=img,name\r\n        path = 'model/testyzm-cnn.model-' + str(399)\r\n        saver.restore(sess, path)\r\n        predict = tf.argmax(tf.reshape(y_conv, [-1, 5, 10]), 2)\r\n        pre = sess.run(predict, feed_dict={x:batch_xs,y_:batch_ys,keep_prob: 1.0})\r\n        res=''.join(map(str,pre[0]))\r\n        print(res)\r\n    cv2.imshow(\"image\",im)\r\n    cv2.waitKey(0)\r\ntrain=0\r\nif train==0:\r\n    trainFirst()\r\nelse:\r\n    test()</pre>\r\n测试结果便是整个对于自身的拟合效果还算可以，能达到90%以上，而对于test时的外来数据的表现不是很好，只有30%左右。\r\n\r\n第二个模型，首先对样本进行了分割，把每张图的5个数分开来。\r\n<pre>from PIL import Image\r\nimport os\r\nd=os.listdir(\"dealyzm/\")\r\nk=0\r\nfor i in d:\r\n    file=Image.open(\"dealyzm/\"+i)\r\n    for j in range(5):\r\n        crop=file.crop((9*j+5,4,9*j+14,18))\r\n        crop.save(\"crop/\"+i[j]+str(k)+\".png\")\r\n    k+=1</pre>\r\n然后继续构建模型，只是调整了输入输出基本原理和上面一样\r\n<pre>import tensorflow as tf\r\nimport numpy as np\r\nimport os\r\nimport cv2\r\nimport requests\r\nfrom PIL import Image\r\nfrom io import BytesIO\r\n\r\ndef weight_varible(shape):\r\n    initial = tf.truncated_normal(shape, stddev=0.1)\r\n    return tf.Variable(initial)\r\n\r\ndef bias_variable(shape):\r\n    initial = tf.constant(0.1, shape=shape)\r\n    return tf.Variable(initial)\r\n\r\ndef conv2d(x, W):\r\n    return tf.nn.conv2d(x, W, strides=[1, 1, 1, 1], padding='SAME')\r\n\r\ndef max_pool_2x2(x):\r\n    return tf.nn.max_pool(x, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')\r\n# paras\r\nW_conv1 = weight_varible([5, 5, 1, 32])\r\nb_conv1 = bias_variable([32])\r\n\r\n# conv layer-1\r\nx = tf.placeholder(tf.float32, [None, 126])\r\nx_image = tf.reshape(x, [-1, 9, 14, 1])\r\n\r\nh_conv1 = tf.nn.relu(conv2d(x_image, W_conv1) + b_conv1)\r\nh_pool1 = max_pool_2x2(h_conv1)\r\n\r\n# conv layer-2\r\nW_conv2 = weight_varible([5, 5, 32, 64])\r\nb_conv2 = bias_variable([64])\r\n\r\nh_conv2 = tf.nn.relu(conv2d(h_pool1, W_conv2) + b_conv2)\r\nh_pool2 = max_pool_2x2(h_conv2)\r\n\r\n# full connection\r\nshape = h_pool2.get_shape().as_list()\r\ndim = 1\r\nfor d in shape[1:]:\r\n    dim *= d\r\nW_fc1 = weight_varible([dim, 1024])\r\nb_fc1 = bias_variable([1024])\r\n\r\nh_pool2_flat = tf.reshape(h_pool2, [-1, dim])\r\nh_fc1 = tf.nn.relu(tf.matmul(h_pool2_flat, W_fc1) + b_fc1)\r\n\r\n# dropout\r\nkeep_prob = tf.placeholder(tf.float32)\r\nh_fc1_drop = tf.nn.dropout(h_fc1, keep_prob)\r\n\r\n# output layer: softmax\r\nW_fc2 = weight_varible([1024, 10])\r\nb_fc2 = bias_variable([10])\r\n\r\ny_conv = tf.nn.softmax(tf.matmul(h_fc1_drop, W_fc2) + b_fc2)\r\ny_ = tf.placeholder(tf.float32, [None, 10])\r\n\r\n# model training\r\ncross_entropy = -tf.reduce_sum(y_ * tf.log(y_conv+ 1e-10))\r\ntrain_step = tf.train.AdamOptimizer(1e-4).minimize(cross_entropy)\r\n\r\ncorrect_prediction = tf.equal(tf.arg_max(y_conv, 1), tf.arg_max(y_, 1))\r\naccuracy = tf.reduce_mean(tf.cast(correct_prediction, tf.float32))\r\n\r\nsess=tf.InteractiveSession()\r\ntf.global_variables_initializer().run()\r\n\r\ndirname=os.listdir(\"crop/\")\r\ndirname.remove(\"Thumbs.db\")\r\n\r\ndef getRanPic(num):\r\n    image=[]\r\n    name=[]\r\n    for i in range(num):\r\n        tmpname=[0]*10\r\n        filename=dirname[int(np.random.random()*len(dirname))]\r\n        im=cv2.imread(\"crop/\"+filename,0)/255.0\r\n        im=im.reshape(-1)\r\n        tmpname[int(filename[0])]=1\r\n        image.append(im)\r\n        name.append(tmpname)\r\n    return image,name\r\n\r\ndef trainFirst():\r\n    saver = tf.train.Saver()\r\n    for _ in range(1000):\r\n        batch_xs,batch_ys=getRanPic(50)\r\n        train_step.run(feed_dict={x:batch_xs,y_:batch_ys,keep_prob: 1.0})\r\n        if _%50==0:\r\n            batch_xs,batch_ys=getRanPic(50)\r\n            loss,acc=sess.run([cross_entropy,accuracy],feed_dict={x:batch_xs,y_:batch_ys,keep_prob: 1.0})\r\n            print(\"loss:\"+str(loss)+\" acc_train:\"+str(acc))\r\n    saver.save(sess, 'model/next-crop-yzm-cnn.model', global_step=_)\r\n\r\ndef test(file):\r\n    headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36'}\r\n    req = requests.get(\"http://jxgl.hdu.edu.cn/CheckCode.aspx\",headers=headers)\r\n    im=Image.open(BytesIO(req.content))\r\n    img=[]\r\n    name=[]\r\n    for i in range(5):\r\n        crop=np.array(im.crop((9*i+5,4,9*i+14,18)))\r\n        ret,im_hb=cv2.threshold(crop,127,255,cv2.THRESH_BINARY)\r\n        img.append(im_hb.reshape(-1)/255)\r\n        name.append([0]*10)\r\n    saver = tf.train.Saver()\r\n    with tf.Session() as sess:\r\n        batch_xs,batch_ys=img,name\r\n        path = 'model/testcropyzm-cnn.model-' + str(999)\r\n        saver.restore(sess, path)\r\n        predict = tf.arg_max(y_conv, 1)\r\n        pre = sess.run(predict, feed_dict={x:batch_xs,y_:batch_ys,keep_prob: 1.0})\r\n    im.save(\"croptest/\"+\"\".join(map(str,pre))+\".png\")\r\n\r\ntrain=1\r\nif train==0:\r\n    trainFirst()\r\nelse:\r\n    test()</pre>\r\n结果：第二次测试的正确率能达到99%以上，对于测试数据，也能有较高的正确率（测试了100个，没错）。\r\n\r\n对比：\r\n\r\n元数据一样是小样本，两种方法只做了输入输出的改变，但效果对比差别很明显。后者好很多。\r\n\r\n猜测是多元连接的参数比分割后数字的参数多得多，所以训练所需的样本也会成倍增加，其中可能会有一定的关系。\r\n\r\n猜测由于多个连接后反向传播的时候会对所有参数进行调整，所以很难训练起来。\r\n\r\n对于小样本的模型训练还可以继续探究。可以尝试学习到一定特征然后用生成器创造大样本从而训练多个输出模型。",
            "post_title": "hack个验证码验证多字符连接识别与切割识别的优劣",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "368-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-7-31 21:26:27",
            "post_modified_gmt": "2017-7-31 13:26:27",
            "post_content_filtered": "",
            "post_parent": "368",
            "guid": "http://ganjiacheng.cn/blog/?p=380",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "382",
            "post_author": "1",
            "post_date": "2017-8-1 15:52:15",
            "post_date_gmt": "2017-8-1 07:52:15",
            "post_content": "<a href=\"http://test.ganjiacheng.cn/3d/test3d5.html\">点这里先看效果</a>，会有点晕，毕竟第一视角。\r\n\r\n其中的大致思路：首先是舞台， 摄像机，渲染器。然后有一个clock，用于更新摄像机位置时候。<!--more-->FirstPersonControls用于制作第一视角的，后面也设置了许多参数。createSprites函数中先是创造了点云的几何和材料，然后把向量点加进去，最后在把点云加到舞台。通过渲染持续创造点云，为所有点云改变位置。\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;test3d3&lt;/title&gt;\r\n    &lt;style type=\"text/css\"&gt;\r\n        body{\r\n            margin: 0;\r\n            overflow: hidden;\r\n        }\r\n        #stats{\r\n            position: absolute;\r\n            left: 0;\r\n            top: 0;\r\n        }\r\n    &lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;div id=\"stats\"&gt;&lt;/div&gt;\r\n    &lt;div id=\"webgl\"&gt;&lt;/div&gt;\r\n    &lt;script type=\"text/javascript\" src=\"learning-threejs/libs/three.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\" src=\"learning-threejs/libs/stats.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\" src=\"learning-threejs/libs/FirstPersonControls.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        function init(){\r\n            var clock = new THREE.Clock();\r\n            var stats=initStats();\r\n\r\n            var scene=new THREE.Scene();\r\n\r\n            var camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,0.1,1000);\r\n            camera.position.set(0,0,0);\r\n            camera.lookAt(scene.position);\r\n            \r\n            var renderer=new THREE.WebGLRenderer();\r\n            renderer.setClearColor(0x000000);\r\n            renderer.setSize(window.innerWidth,window.innerHeight);\r\n            renderer.shadowMapEnable=true;\r\n\r\n            var camControls = new THREE.FirstPersonControls(camera);\r\n            camControls.lookSpeed = 0.4;\r\n            camControls.movementSpeed = 20;\r\n            camControls.noFly = true;\r\n            camControls.lookVertical = true;\r\n            camControls.constrainVertical = true;\r\n            camControls.verticalMin = 1.0;\r\n            camControls.verticalMax = 2.0;\r\n            camControls.lon = -180;\r\n            camControls.lat = 180;\r\n\r\n            function createSprites(){\r\n                pic=\"image/Sam\"+Math.floor(Math.random()*10)+\".jpg\";\r\n                var texture=THREE.ImageUtils.loadTexture(pic);\r\n                var geom=new THREE.Geometry();\r\n                var material=new THREE.PointCloudMaterial({\r\n                    size:4,\r\n                    transparent:true,\r\n                    map: texture,\r\n                    blending: THREE.AdditiveBlending,\r\n                    color:0x5fe0ff,\r\n                });\r\n                var range=500;\r\n                for(var i=0;i&lt;500;i++){\r\n                    var particle=new THREE.Vector3(Math.random() * range - range / 2, Math.random() * range + range / 5, Math.random() * range - range / 2);\r\n                    geom.vertices.push(particle);\r\n                    var color=new THREE.Color(0x00ff00);\r\n                    color.setHSL(color.getHSL().h,color.getHSL().s,Math.random()*color.getHSL().l);\r\n                    geom.colors.push(color);\r\n                }\r\n                cloud=new THREE.PointCloud(geom,material);\r\n                cloud.sortParticles=true;\r\n                scene.add(cloud);\r\n            }\r\n\r\n            function fulldown(){\r\n                scene.children.pop();\r\n            }\r\n\r\n            createSprites();\r\n            \r\n            document.getElementById(\"webgl\").appendChild(renderer.domElement);\r\n            renderer.render(scene,camera);\r\n            \r\n            var step=0;\r\n            var v=0;\r\n            function rendererScene(){\r\n                stats.update();\r\n                var delta = clock.getDelta();\r\n                camControls.update(delta);\r\n                step+=2;\r\n                if(step%100==0){\r\n                    createSprites();\r\n                }\r\n                for(var i=0;i&lt;scene.children.length;i++){\r\n                    scene.children[i].position.y-=2;\r\n                }\r\n                requestAnimationFrame(rendererScene);\r\n                renderer.render(scene,camera);\r\n            }\r\n\r\n            function initStats(){\r\n                var stats=new Stats();\r\n                stats.setMode(0);\r\n                document.getElementById(\"stats\").appendChild(stats.domElement);\r\n                return stats;\r\n            }\r\n\r\n            rendererScene();\r\n        }\r\n        window.onload=init;\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n效果是不断有数字掉落，这种还可以模拟下雨下雪之类。",
            "post_title": "three.js第四发，粒子与第一视角的尝试",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "three-js%e7%ac%ac%e5%9b%9b%e5%8f%91%ef%bc%8c%e7%b2%92%e5%ad%90%e4%b8%8e%e7%ac%ac%e4%b8%80%e8%a7%86%e8%a7%92%e7%9a%84%e5%b0%9d%e8%af%95",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-8-1 15:52:15",
            "post_modified_gmt": "2017-8-1 07:52:15",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=382",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "383",
            "post_author": "1",
            "post_date": "2017-8-1 15:39:35",
            "post_date_gmt": "2017-8-1 07:39:35",
            "post_content": "<a href=\"http://test.ganjiacheng.cn/3d/test3d5.html\">点这里先看效果</a>，会有点晕，毕竟第一视角。\r\n\r\n其中的大致思路：",
            "post_title": "three.js第四发，粒子与第一视角的尝试",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "382-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-8-1 15:39:35",
            "post_modified_gmt": "2017-8-1 07:39:35",
            "post_content_filtered": "",
            "post_parent": "382",
            "guid": "http://ganjiacheng.cn/blog/?p=383",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "384",
            "post_author": "1",
            "post_date": "2017-8-1 15:48:46",
            "post_date_gmt": "2017-8-1 07:48:46",
            "post_content": "<a href=\"http://test.ganjiacheng.cn/3d/test3d5.html\">点这里先看效果</a>，会有点晕，毕竟第一视角。\r\n\r\n其中的大致思路：首先是舞台， 摄像机，渲染器。然后有一个clock，用于更新摄像机位置时候。<!--more-->FirstPersonControls用于制作第一视角的，后面也设置了许多参数。createSprites函数中先是创造了点云的几何和材料，然后把向量点加进去，最后在把点云加到舞台。通过渲染持续创造点云，为所有点云改变位置。\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;test3d3&lt;/title&gt;\r\n    &lt;style type=\"text/css\"&gt;\r\n        body{\r\n            margin: 0;\r\n            overflow: hidden;\r\n        }\r\n        #stats{\r\n            position: absolute;\r\n            left: 0;\r\n            top: 0;\r\n        }\r\n    &lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;div id=\"stats\"&gt;&lt;/div&gt;\r\n    &lt;div id=\"webgl\"&gt;&lt;/div&gt;\r\n    &lt;script type=\"text/javascript\" src=\"learning-threejs/libs/three.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\" src=\"learning-threejs/libs/stats.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\" src=\"learning-threejs/libs/FirstPersonControls.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        function init(){\r\n            var clock = new THREE.Clock();\r\n            var stats=initStats();\r\n\r\n            var scene=new THREE.Scene();\r\n\r\n            var camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,0.1,1000);\r\n            camera.position.set(0,0,0);\r\n            camera.lookAt(scene.position);\r\n            \r\n            var renderer=new THREE.WebGLRenderer();\r\n            renderer.setClearColor(0x000000);\r\n            renderer.setSize(window.innerWidth,window.innerHeight);\r\n            renderer.shadowMapEnable=true;\r\n\r\n            var camControls = new THREE.FirstPersonControls(camera);\r\n            camControls.lookSpeed = 0.4;\r\n            camControls.movementSpeed = 20;\r\n            camControls.noFly = true;\r\n            camControls.lookVertical = true;\r\n            camControls.constrainVertical = true;\r\n            camControls.verticalMin = 1.0;\r\n            camControls.verticalMax = 2.0;\r\n            camControls.lon = -180;\r\n            camControls.lat = 180;\r\n\r\n            function createSprites(){\r\n                pic=\"image/Sam\"+Math.floor(Math.random()*10)+\".jpg\";\r\n                var texture=THREE.ImageUtils.loadTexture(pic);\r\n                var geom=new THREE.Geometry();\r\n                var material=new THREE.PointCloudMaterial({\r\n                    size:4,\r\n                    transparent:true,\r\n                    map: texture,\r\n                    blending: THREE.AdditiveBlending,\r\n                    color:0x5fe0ff,\r\n                });\r\n                var range=500;\r\n                for(var i=0;i&lt;500;i++){\r\n                    var particle=new THREE.Vector3(Math.random() * range - range / 2, Math.random() * range + range / 5, Math.random() * range - range / 2);\r\n                    geom.vertices.push(particle);\r\n                    var color=new THREE.Color(0x00ff00);\r\n                    color.setHSL(color.getHSL().h,color.getHSL().s,Math.random()*color.getHSL().l);\r\n                    geom.colors.push(color);\r\n                }\r\n                cloud=new THREE.PointCloud(geom,material);\r\n                cloud.sortParticles=true;\r\n                scene.add(cloud);\r\n            }\r\n\r\n            function fulldown(){\r\n                scene.children.pop();\r\n            }\r\n\r\n            createSprites();\r\n            \r\n            document.getElementById(\"webgl\").appendChild(renderer.domElement);\r\n            renderer.render(scene,camera);\r\n            \r\n            var step=0;\r\n            var v=0;\r\n            function rendererScene(){\r\n                stats.update();\r\n                var delta = clock.getDelta();\r\n                camControls.update(delta);\r\n                step+=2;\r\n                if(step%100==0){\r\n                    createSprites();\r\n                }\r\n                for(var i=0;i&lt;scene.children.length;i++){\r\n                    scene.children[i].position.y-=2;\r\n                }\r\n                requestAnimationFrame(rendererScene);\r\n                renderer.render(scene,camera);\r\n            }\r\n\r\n            function initStats(){\r\n                var stats=new Stats();\r\n                stats.setMode(0);\r\n                document.getElementById(\"stats\").appendChild(stats.domElement);\r\n                return stats;\r\n            }\r\n\r\n            rendererScene();\r\n        }\r\n        window.onload=init;\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "three.js第四发，粒子与第一视角的尝试",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "382-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-8-1 15:48:46",
            "post_modified_gmt": "2017-8-1 07:48:46",
            "post_content_filtered": "",
            "post_parent": "382",
            "guid": "http://ganjiacheng.cn/blog/?p=384",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "385",
            "post_author": "1",
            "post_date": "2017-8-1 15:51:44",
            "post_date_gmt": "2017-8-1 07:51:44",
            "post_content": "<a href=\"http://test.ganjiacheng.cn/3d/test3d5.html\">点这里先看效果</a>，会有点晕，毕竟第一视角。\r\n\r\n其中的大致思路：首先是舞台， 摄像机，渲染器。然后有一个clock，用于更新摄像机位置时候。<!--more-->FirstPersonControls用于制作第一视角的，后面也设置了许多参数。createSprites函数中先是创造了点云的几何和材料，然后把向量点加进去，最后在把点云加到舞台。通过渲染持续创造点云，为所有点云改变位置。\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;test3d3&lt;/title&gt;\r\n    &lt;style type=\"text/css\"&gt;\r\n        body{\r\n            margin: 0;\r\n            overflow: hidden;\r\n        }\r\n        #stats{\r\n            position: absolute;\r\n            left: 0;\r\n            top: 0;\r\n        }\r\n    &lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;div id=\"stats\"&gt;&lt;/div&gt;\r\n    &lt;div id=\"webgl\"&gt;&lt;/div&gt;\r\n    &lt;script type=\"text/javascript\" src=\"learning-threejs/libs/three.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\" src=\"learning-threejs/libs/stats.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\" src=\"learning-threejs/libs/FirstPersonControls.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        function init(){\r\n            var clock = new THREE.Clock();\r\n            var stats=initStats();\r\n\r\n            var scene=new THREE.Scene();\r\n\r\n            var camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,0.1,1000);\r\n            camera.position.set(0,0,0);\r\n            camera.lookAt(scene.position);\r\n            \r\n            var renderer=new THREE.WebGLRenderer();\r\n            renderer.setClearColor(0x000000);\r\n            renderer.setSize(window.innerWidth,window.innerHeight);\r\n            renderer.shadowMapEnable=true;\r\n\r\n            var camControls = new THREE.FirstPersonControls(camera);\r\n            camControls.lookSpeed = 0.4;\r\n            camControls.movementSpeed = 20;\r\n            camControls.noFly = true;\r\n            camControls.lookVertical = true;\r\n            camControls.constrainVertical = true;\r\n            camControls.verticalMin = 1.0;\r\n            camControls.verticalMax = 2.0;\r\n            camControls.lon = -180;\r\n            camControls.lat = 180;\r\n\r\n            function createSprites(){\r\n                pic=\"image/Sam\"+Math.floor(Math.random()*10)+\".jpg\";\r\n                var texture=THREE.ImageUtils.loadTexture(pic);\r\n                var geom=new THREE.Geometry();\r\n                var material=new THREE.PointCloudMaterial({\r\n                    size:4,\r\n                    transparent:true,\r\n                    map: texture,\r\n                    blending: THREE.AdditiveBlending,\r\n                    color:0x5fe0ff,\r\n                });\r\n                var range=500;\r\n                for(var i=0;i&lt;500;i++){\r\n                    var particle=new THREE.Vector3(Math.random() * range - range / 2, Math.random() * range + range / 5, Math.random() * range - range / 2);\r\n                    geom.vertices.push(particle);\r\n                    var color=new THREE.Color(0x00ff00);\r\n                    color.setHSL(color.getHSL().h,color.getHSL().s,Math.random()*color.getHSL().l);\r\n                    geom.colors.push(color);\r\n                }\r\n                cloud=new THREE.PointCloud(geom,material);\r\n                cloud.sortParticles=true;\r\n                scene.add(cloud);\r\n            }\r\n\r\n            function fulldown(){\r\n                scene.children.pop();\r\n            }\r\n\r\n            createSprites();\r\n            \r\n            document.getElementById(\"webgl\").appendChild(renderer.domElement);\r\n            renderer.render(scene,camera);\r\n            \r\n            var step=0;\r\n            var v=0;\r\n            function rendererScene(){\r\n                stats.update();\r\n                var delta = clock.getDelta();\r\n                camControls.update(delta);\r\n                step+=2;\r\n                if(step%100==0){\r\n                    createSprites();\r\n                }\r\n                for(var i=0;i&lt;scene.children.length;i++){\r\n                    scene.children[i].position.y-=2;\r\n                }\r\n                requestAnimationFrame(rendererScene);\r\n                renderer.render(scene,camera);\r\n            }\r\n\r\n            function initStats(){\r\n                var stats=new Stats();\r\n                stats.setMode(0);\r\n                document.getElementById(\"stats\").appendChild(stats.domElement);\r\n                return stats;\r\n            }\r\n\r\n            rendererScene();\r\n        }\r\n        window.onload=init;\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n效果是不断有数字掉落，这种还可以模拟下雨下雪之类。",
            "post_title": "three.js第四发，粒子与第一视角的尝试",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "382-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-8-1 15:51:44",
            "post_modified_gmt": "2017-8-1 07:51:44",
            "post_content_filtered": "",
            "post_parent": "382",
            "guid": "http://ganjiacheng.cn/blog/?p=385",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "386",
            "post_author": "1",
            "post_date": "2017-8-1 15:57:03",
            "post_date_gmt": "2017-8-1 07:57:03",
            "post_content": "有个多个字符识别的需求，想是要切割还是字符连接整个一起识别，所以就找了一个验证码来做对比尝试。这个验证码很简单，<a href=\"http://jxgl.hdu.edu.cn/CheckCode.aspx\">验证码链接</a>，<!--more-->就中规中矩<img class=\"alignnone size-full wp-image-379\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/07/00126-1.png\" alt=\"\" width=\"60\" height=\"22\" />，\r\n\r\n简单贴一下验证码爬下来的代码\r\n<pre>import requests\r\nfrom PIL import Image\r\nfrom io import BytesIO\r\nfrom threading import Thread\r\nheaders = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36'}\r\nclass Mythread(Thread):\r\n    def __init__(self,num):\r\n        Thread.__init__(self)\r\n        self.num=num\r\n    def run(self):\r\n        while True:  \r\n            req = requests.get(\"http://jxgl.hdu.edu.cn/CheckCode.aspx\",headers=headers)\r\n            im=Image.open(BytesIO(req.content))\r\n            im.save(\"croptest/\"+str(self.num)+\".png\")\r\nthreads=[]\r\nfor j in range(10):\r\n    for i in range(10):\r\n        t=Mythread(i+10*j)\r\n        t.start()\r\n        print(i+10*j)</pre>\r\n之后做了去重，标记，测试正式开始\r\n\r\n首先用不切割整体识别的方法，像素转换成黑白二值整个作为输入，输出为5个数，每个数10类的拼接，总共50类，每十个数中的1值为图中所对应的数。\r\n\r\n先用tensorflow构建了cnn，对于cnn模型，中间并没有做很多改动，只进行了输入输出的调整。写了个输入函数把图像转换成输入数据，写了个训练函数对模型进行训练，由于样本较少，也只进行了不多的训练次数。又写了个测试函数用来爬取新图片对模型进行测试\r\n<pre>import tensorflow as tf\r\nimport os\r\nimport numpy as np\r\nimport cv2\r\n\r\nnumber = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']\r\nchar_Len=5*len(number)\r\ndirname=os.listdir('dealyzm/')\r\ndirname.remove('Thumbs.db')\r\n\r\ndef weight_varible(shape):\r\n    initial = tf.truncated_normal(shape, stddev=0.1)\r\n    return tf.Variable(initial)\r\n\r\ndef bias_variable(shape):\r\n    initial = tf.constant(0.1, shape=shape)\r\n    return tf.Variable(initial)\r\n\r\ndef conv2d(x, W):\r\n    return tf.nn.conv2d(x, W, strides=[1, 1, 1, 1], padding='SAME')\r\n\r\ndef max_pool_2x2(x):\r\n    return tf.nn.max_pool(x, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')\r\n# paras\r\nW_conv1 = weight_varible([5, 5, 1, 32])\r\nb_conv1 = bias_variable([32])\r\n\r\n# conv layer-1\r\nx = tf.placeholder(tf.float32, [None, 1320])\r\nx_image = tf.reshape(x, [-1, 22, 60, 1])\r\n\r\nh_conv1 = tf.nn.relu(conv2d(x_image, W_conv1) + b_conv1)\r\nh_pool1 = max_pool_2x2(h_conv1)\r\n\r\n# conv layer-2\r\nW_conv2 = weight_varible([5, 5, 32, 64])\r\nb_conv2 = bias_variable([64])\r\n\r\nh_conv2 = tf.nn.relu(conv2d(h_pool1, W_conv2) + b_conv2)\r\nh_pool2 = max_pool_2x2(h_conv2)\r\n\r\n# full connection\r\nshape = h_pool2.get_shape().as_list()\r\ndim = 1\r\nfor d in shape[1:]:\r\n    dim *= d\r\nW_fc1 = weight_varible([dim, 1024])\r\nb_fc1 = bias_variable([1024])\r\n\r\nh_pool2_flat = tf.reshape(h_pool2, [-1, dim])\r\nh_fc1 = tf.nn.relu(tf.matmul(h_pool2_flat, W_fc1) + b_fc1)\r\n\r\n# dropout\r\nkeep_prob = tf.placeholder(tf.float32)\r\nh_fc1_drop = tf.nn.dropout(h_fc1, keep_prob)\r\n\r\n# output layer: softmax\r\nW_fc2 = weight_varible([1024, char_Len])\r\nb_fc2 = bias_variable([char_Len])\r\n\r\ny_conv = tf.nn.softmax(tf.matmul(h_fc1_drop, W_fc2) + b_fc2)\r\ny_ = tf.placeholder(tf.float32, [None, char_Len])\r\n\r\n# model training\r\ncross_entropy = -tf.reduce_sum(y_ * tf.log(y_conv+ 1e-10))\r\ntrain_step = tf.train.AdamOptimizer(1e-4).minimize(cross_entropy)\r\nsess=tf.InteractiveSession()\r\ntf.global_variables_initializer().run()\r\n\r\ndef getRanPic(num):\r\n    image=[]\r\n    name=[]\r\n    for i in range(num):\r\n        tmpname=[0]*char_Len\r\n        filename=dirname[int(np.random.random()*len(dirname))]\r\n        im=cv2.imread(\"dealyzm/\"+filename,0)/255.0\r\n        im=im.reshape(-1)\r\n        for i in range(5):\r\n            tmpname[number.index(filename[i])+len(number)*i]=1\r\n        image.append(im)\r\n        name.append(tmpname)\r\n    return image,name\r\ndef trainFirst():\r\n    saver = tf.train.Saver()\r\n    for _ in range(400):\r\n        batch_xs,batch_ys=getRanPic(20)\r\n        tmp,loss=sess.run([train_step,cross_entropy],feed_dict={x:batch_xs,y_:batch_ys,keep_prob: 1.0})\r\n        if _%20==0:\r\n            batch_xs,batch_ys=getRanPic(20)\r\n            correct_prediction=tf.equal(tf.argmax(tf.reshape(y_conv, [-1, 5, 10]),2),tf.argmax(tf.reshape(y_, [-1, 5, 10]),2))\r\n            accuracy=tf.reduce_mean(tf.cast(correct_prediction,tf.float32))\r\n            acc_test=sess.run(accuracy,feed_dict={x:batch_xs,y_:batch_ys,keep_prob: 1.0})\r\n            print(\"loss:\"+str(loss)+\" acc_train:\"+str(acc_test))\r\n    saver.save(sess, 'model/testyzm-cnn.model', global_step=_)\r\ndef test():\r\n    headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36'}\r\n    req = requests.get(\"http://jxgl.hdu.edu.cn/CheckCode.aspx\",headers=headers)\r\n    im=np.array(Image.open(BytesIO(req.content)))\r\n    ret,im_hb=cv2.threshold(im,127,255,cv2.THRESH_BINARY)\r\n    img=[im_hb.reshape(-1)/255]\r\n    name=[[0]*50]\r\n    saver = tf.train.Saver()\r\n    with tf.Session() as sess:\r\n        batch_xs,batch_ys=img,name\r\n        path = 'model/testyzm-cnn.model-' + str(399)\r\n        saver.restore(sess, path)\r\n        predict = tf.argmax(tf.reshape(y_conv, [-1, 5, 10]), 2)\r\n        pre = sess.run(predict, feed_dict={x:batch_xs,y_:batch_ys,keep_prob: 1.0})\r\n        res=''.join(map(str,pre[0]))\r\n        print(res)\r\n    cv2.imshow(\"image\",im)\r\n    cv2.waitKey(0)\r\ntrain=0\r\nif train==0:\r\n    trainFirst()\r\nelse:\r\n    test()</pre>\r\n测试结果便是整个对于自身的拟合效果还算可以，能达到90%以上，而对于test时的外来数据的表现不是很好，只有30%左右。\r\n\r\n第二个模型，首先对样本进行了分割，把每张图的5个数分开来。\r\n<pre>from PIL import Image\r\nimport os\r\nd=os.listdir(\"dealyzm/\")\r\nk=0\r\nfor i in d:\r\n    file=Image.open(\"dealyzm/\"+i)\r\n    for j in range(5):\r\n        crop=file.crop((9*j+5,4,9*j+14,18))\r\n        crop.save(\"crop/\"+i[j]+str(k)+\".png\")\r\n    k+=1</pre>\r\n然后继续构建模型，只是调整了输入输出基本原理和上面一样\r\n<pre>import tensorflow as tf\r\nimport numpy as np\r\nimport os\r\nimport cv2\r\nimport requests\r\nfrom PIL import Image\r\nfrom io import BytesIO\r\n\r\ndef weight_varible(shape):\r\n    initial = tf.truncated_normal(shape, stddev=0.1)\r\n    return tf.Variable(initial)\r\n\r\ndef bias_variable(shape):\r\n    initial = tf.constant(0.1, shape=shape)\r\n    return tf.Variable(initial)\r\n\r\ndef conv2d(x, W):\r\n    return tf.nn.conv2d(x, W, strides=[1, 1, 1, 1], padding='SAME')\r\n\r\ndef max_pool_2x2(x):\r\n    return tf.nn.max_pool(x, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')\r\n# paras\r\nW_conv1 = weight_varible([5, 5, 1, 32])\r\nb_conv1 = bias_variable([32])\r\n\r\n# conv layer-1\r\nx = tf.placeholder(tf.float32, [None, 126])\r\nx_image = tf.reshape(x, [-1, 9, 14, 1])\r\n\r\nh_conv1 = tf.nn.relu(conv2d(x_image, W_conv1) + b_conv1)\r\nh_pool1 = max_pool_2x2(h_conv1)\r\n\r\n# conv layer-2\r\nW_conv2 = weight_varible([5, 5, 32, 64])\r\nb_conv2 = bias_variable([64])\r\n\r\nh_conv2 = tf.nn.relu(conv2d(h_pool1, W_conv2) + b_conv2)\r\nh_pool2 = max_pool_2x2(h_conv2)\r\n\r\n# full connection\r\nshape = h_pool2.get_shape().as_list()\r\ndim = 1\r\nfor d in shape[1:]:\r\n    dim *= d\r\nW_fc1 = weight_varible([dim, 1024])\r\nb_fc1 = bias_variable([1024])\r\n\r\nh_pool2_flat = tf.reshape(h_pool2, [-1, dim])\r\nh_fc1 = tf.nn.relu(tf.matmul(h_pool2_flat, W_fc1) + b_fc1)\r\n\r\n# dropout\r\nkeep_prob = tf.placeholder(tf.float32)\r\nh_fc1_drop = tf.nn.dropout(h_fc1, keep_prob)\r\n\r\n# output layer: softmax\r\nW_fc2 = weight_varible([1024, 10])\r\nb_fc2 = bias_variable([10])\r\n\r\ny_conv = tf.nn.softmax(tf.matmul(h_fc1_drop, W_fc2) + b_fc2)\r\ny_ = tf.placeholder(tf.float32, [None, 10])\r\n\r\n# model training\r\ncross_entropy = -tf.reduce_sum(y_ * tf.log(y_conv+ 1e-10))\r\ntrain_step = tf.train.AdamOptimizer(1e-4).minimize(cross_entropy)\r\n\r\ncorrect_prediction = tf.equal(tf.arg_max(y_conv, 1), tf.arg_max(y_, 1))\r\naccuracy = tf.reduce_mean(tf.cast(correct_prediction, tf.float32))\r\n\r\nsess=tf.InteractiveSession()\r\ntf.global_variables_initializer().run()\r\n\r\ndirname=os.listdir(\"crop/\")\r\ndirname.remove(\"Thumbs.db\")\r\n\r\ndef getRanPic(num):\r\n    image=[]\r\n    name=[]\r\n    for i in range(num):\r\n        tmpname=[0]*10\r\n        filename=dirname[int(np.random.random()*len(dirname))]\r\n        im=cv2.imread(\"crop/\"+filename,0)/255.0\r\n        im=im.reshape(-1)\r\n        tmpname[int(filename[0])]=1\r\n        image.append(im)\r\n        name.append(tmpname)\r\n    return image,name\r\n\r\ndef trainFirst():\r\n    saver = tf.train.Saver()\r\n    for _ in range(1000):\r\n        batch_xs,batch_ys=getRanPic(50)\r\n        train_step.run(feed_dict={x:batch_xs,y_:batch_ys,keep_prob: 1.0})\r\n        if _%50==0:\r\n            batch_xs,batch_ys=getRanPic(50)\r\n            loss,acc=sess.run([cross_entropy,accuracy],feed_dict={x:batch_xs,y_:batch_ys,keep_prob: 1.0})\r\n            print(\"loss:\"+str(loss)+\" acc_train:\"+str(acc))\r\n    saver.save(sess, 'model/next-crop-yzm-cnn.model', global_step=_)\r\n\r\ndef test(file):\r\n    headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36'}\r\n    req = requests.get(\"http://jxgl.hdu.edu.cn/CheckCode.aspx\",headers=headers)\r\n    im=Image.open(BytesIO(req.content))\r\n    img=[]\r\n    name=[]\r\n    for i in range(5):\r\n        crop=np.array(im.crop((9*i+5,4,9*i+14,18)))\r\n        ret,im_hb=cv2.threshold(crop,127,255,cv2.THRESH_BINARY)\r\n        img.append(im_hb.reshape(-1)/255)\r\n        name.append([0]*10)\r\n    saver = tf.train.Saver()\r\n    with tf.Session() as sess:\r\n        batch_xs,batch_ys=img,name\r\n        path = 'model/testcropyzm-cnn.model-' + str(999)\r\n        saver.restore(sess, path)\r\n        predict = tf.arg_max(y_conv, 1)\r\n        pre = sess.run(predict, feed_dict={x:batch_xs,y_:batch_ys,keep_prob: 1.0})\r\n    im.save(\"croptest/\"+\"\".join(map(str,pre))+\".png\")\r\n\r\ntrain=1\r\nif train==0:\r\n    trainFirst()\r\nelse:\r\n    test()</pre>\r\n结果：第二次测试的正确率能达到99%以上，对于测试数据，也能有较高的正确率（测试了100个，没错）。\r\n\r\n对比：\r\n\r\n元数据一样是小样本，两种方法只做了输入输出的改变，但效果对比差别很明显。后者好很多。\r\n\r\n猜测是多元连接的参数比分割后数字的参数多得多，所以训练所需的样本也会成倍增加，其中可能会有一定的关系。\r\n\r\n猜测由于多个连接后反向传播的时候会对所有参数进行调整，所以很难训练起来。\r\n\r\n对于小样本的模型训练还可以继续探究。可以尝试学习到一定特征然后用生成器创造大样本从而训练多个输出模型。",
            "post_title": "hack个验证码验证多字符连接识别与切割识别的优劣",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "368-autosave-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-8-1 15:57:03",
            "post_modified_gmt": "2017-8-1 07:57:03",
            "post_content_filtered": "",
            "post_parent": "368",
            "guid": "http://ganjiacheng.cn/blog/?p=386",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "387",
            "post_author": "1",
            "post_date": "2017-8-1 15:57:18",
            "post_date_gmt": "2017-8-1 07:57:18",
            "post_content": "有个多个字符识别的需求，想是要切割还是字符连接整个一起识别，所以就找了一个验证码来做对比尝试。这个验证码很简单，<a href=\"http://jxgl.hdu.edu.cn/CheckCode.aspx\">验证码链接</a>，<!--more-->就中规中矩<img class=\"alignnone size-full wp-image-379\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/07/00126-1.png\" alt=\"\" width=\"60\" height=\"22\" />，\r\n\r\n简单贴一下验证码爬下来的代码\r\n<pre>import requests\r\nfrom PIL import Image\r\nfrom io import BytesIO\r\nfrom threading import Thread\r\nheaders = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36'}\r\nclass Mythread(Thread):\r\n    def __init__(self,num):\r\n        Thread.__init__(self)\r\n        self.num=num\r\n    def run(self):\r\n        while True:  \r\n            req = requests.get(\"http://jxgl.hdu.edu.cn/CheckCode.aspx\",headers=headers)\r\n            im=Image.open(BytesIO(req.content))\r\n            im.save(\"croptest/\"+str(self.num)+\".png\")\r\nthreads=[]\r\nfor j in range(10):\r\n    for i in range(10):\r\n        t=Mythread(i+10*j)\r\n        t.start()\r\n        print(i+10*j)</pre>\r\n之后做了去重，标记，测试正式开始\r\n\r\n首先用不切割整体识别的方法，像素转换成黑白二值整个作为输入，输出为5个数，每个数10类的拼接，总共50类，每十个数中的1值为图中所对应的数。\r\n\r\n先用tensorflow构建了cnn，对于cnn模型，中间并没有做很多改动，只进行了输入输出的调整。写了个输入函数把图像转换成输入数据，写了个训练函数对模型进行训练，由于样本较少，也只进行了不多的训练次数。又写了个测试函数用来爬取新图片对模型进行测试\r\n<pre>import tensorflow as tf\r\nimport os\r\nimport numpy as np\r\nimport cv2\r\n\r\nnumber = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']\r\nchar_Len=5*len(number)\r\ndirname=os.listdir('dealyzm/')\r\ndirname.remove('Thumbs.db')\r\n\r\ndef weight_varible(shape):\r\n    initial = tf.truncated_normal(shape, stddev=0.1)\r\n    return tf.Variable(initial)\r\n\r\ndef bias_variable(shape):\r\n    initial = tf.constant(0.1, shape=shape)\r\n    return tf.Variable(initial)\r\n\r\ndef conv2d(x, W):\r\n    return tf.nn.conv2d(x, W, strides=[1, 1, 1, 1], padding='SAME')\r\n\r\ndef max_pool_2x2(x):\r\n    return tf.nn.max_pool(x, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')\r\n# paras\r\nW_conv1 = weight_varible([5, 5, 1, 32])\r\nb_conv1 = bias_variable([32])\r\n\r\n# conv layer-1\r\nx = tf.placeholder(tf.float32, [None, 1320])\r\nx_image = tf.reshape(x, [-1, 22, 60, 1])\r\n\r\nh_conv1 = tf.nn.relu(conv2d(x_image, W_conv1) + b_conv1)\r\nh_pool1 = max_pool_2x2(h_conv1)\r\n\r\n# conv layer-2\r\nW_conv2 = weight_varible([5, 5, 32, 64])\r\nb_conv2 = bias_variable([64])\r\n\r\nh_conv2 = tf.nn.relu(conv2d(h_pool1, W_conv2) + b_conv2)\r\nh_pool2 = max_pool_2x2(h_conv2)\r\n\r\n# full connection\r\nshape = h_pool2.get_shape().as_list()\r\ndim = 1\r\nfor d in shape[1:]:\r\n    dim *= d\r\nW_fc1 = weight_varible([dim, 1024])\r\nb_fc1 = bias_variable([1024])\r\n\r\nh_pool2_flat = tf.reshape(h_pool2, [-1, dim])\r\nh_fc1 = tf.nn.relu(tf.matmul(h_pool2_flat, W_fc1) + b_fc1)\r\n\r\n# dropout\r\nkeep_prob = tf.placeholder(tf.float32)\r\nh_fc1_drop = tf.nn.dropout(h_fc1, keep_prob)\r\n\r\n# output layer: softmax\r\nW_fc2 = weight_varible([1024, char_Len])\r\nb_fc2 = bias_variable([char_Len])\r\n\r\ny_conv = tf.nn.softmax(tf.matmul(h_fc1_drop, W_fc2) + b_fc2)\r\ny_ = tf.placeholder(tf.float32, [None, char_Len])\r\n\r\n# model training\r\ncross_entropy = -tf.reduce_sum(y_ * tf.log(y_conv+ 1e-10))\r\ntrain_step = tf.train.AdamOptimizer(1e-4).minimize(cross_entropy)\r\nsess=tf.InteractiveSession()\r\ntf.global_variables_initializer().run()\r\n\r\ndef getRanPic(num):\r\n    image=[]\r\n    name=[]\r\n    for i in range(num):\r\n        tmpname=[0]*char_Len\r\n        filename=dirname[int(np.random.random()*len(dirname))]\r\n        im=cv2.imread(\"dealyzm/\"+filename,0)/255.0\r\n        im=im.reshape(-1)\r\n        for i in range(5):\r\n            tmpname[number.index(filename[i])+len(number)*i]=1\r\n        image.append(im)\r\n        name.append(tmpname)\r\n    return image,name\r\ndef trainFirst():\r\n    saver = tf.train.Saver()\r\n    for _ in range(400):\r\n        batch_xs,batch_ys=getRanPic(20)\r\n        tmp,loss=sess.run([train_step,cross_entropy],feed_dict={x:batch_xs,y_:batch_ys,keep_prob: 1.0})\r\n        if _%20==0:\r\n            batch_xs,batch_ys=getRanPic(20)\r\n            correct_prediction=tf.equal(tf.argmax(tf.reshape(y_conv, [-1, 5, 10]),2),tf.argmax(tf.reshape(y_, [-1, 5, 10]),2))\r\n            accuracy=tf.reduce_mean(tf.cast(correct_prediction,tf.float32))\r\n            acc_test=sess.run(accuracy,feed_dict={x:batch_xs,y_:batch_ys,keep_prob: 1.0})\r\n            print(\"loss:\"+str(loss)+\" acc_train:\"+str(acc_test))\r\n    saver.save(sess, 'model/testyzm-cnn.model', global_step=_)\r\ndef test():\r\n    headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36'}\r\n    req = requests.get(\"http://jxgl.hdu.edu.cn/CheckCode.aspx\",headers=headers)\r\n    im=np.array(Image.open(BytesIO(req.content)))\r\n    ret,im_hb=cv2.threshold(im,127,255,cv2.THRESH_BINARY)\r\n    img=[im_hb.reshape(-1)/255]\r\n    name=[[0]*50]\r\n    saver = tf.train.Saver()\r\n    with tf.Session() as sess:\r\n        batch_xs,batch_ys=img,name\r\n        path = 'model/testyzm-cnn.model-' + str(399)\r\n        saver.restore(sess, path)\r\n        predict = tf.argmax(tf.reshape(y_conv, [-1, 5, 10]), 2)\r\n        pre = sess.run(predict, feed_dict={x:batch_xs,y_:batch_ys,keep_prob: 1.0})\r\n        res=''.join(map(str,pre[0]))\r\n        print(res)\r\n    cv2.imshow(\"image\",im)\r\n    cv2.waitKey(0)\r\ntrain=0\r\nif train==0:\r\n    trainFirst()\r\nelse:\r\n    test()</pre>\r\n测试结果便是整个对于自身的拟合效果还算可以，能达到90%以上，而对于test时的外来数据的表现不是很好，只有30%左右。\r\n\r\n第二个模型，首先对样本进行了分割，把每张图的5个数分开来。\r\n<pre>from PIL import Image\r\nimport os\r\nd=os.listdir(\"dealyzm/\")\r\nk=0\r\nfor i in d:\r\n    file=Image.open(\"dealyzm/\"+i)\r\n    for j in range(5):\r\n        crop=file.crop((9*j+5,4,9*j+14,18))\r\n        crop.save(\"crop/\"+i[j]+str(k)+\".png\")\r\n    k+=1</pre>\r\n然后继续构建模型，只是调整了输入输出基本原理和上面一样\r\n<pre>import tensorflow as tf\r\nimport numpy as np\r\nimport os\r\nimport cv2\r\nimport requests\r\nfrom PIL import Image\r\nfrom io import BytesIO\r\n\r\ndef weight_varible(shape):\r\n    initial = tf.truncated_normal(shape, stddev=0.1)\r\n    return tf.Variable(initial)\r\n\r\ndef bias_variable(shape):\r\n    initial = tf.constant(0.1, shape=shape)\r\n    return tf.Variable(initial)\r\n\r\ndef conv2d(x, W):\r\n    return tf.nn.conv2d(x, W, strides=[1, 1, 1, 1], padding='SAME')\r\n\r\ndef max_pool_2x2(x):\r\n    return tf.nn.max_pool(x, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')\r\n# paras\r\nW_conv1 = weight_varible([5, 5, 1, 32])\r\nb_conv1 = bias_variable([32])\r\n\r\n# conv layer-1\r\nx = tf.placeholder(tf.float32, [None, 126])\r\nx_image = tf.reshape(x, [-1, 9, 14, 1])\r\n\r\nh_conv1 = tf.nn.relu(conv2d(x_image, W_conv1) + b_conv1)\r\nh_pool1 = max_pool_2x2(h_conv1)\r\n\r\n# conv layer-2\r\nW_conv2 = weight_varible([5, 5, 32, 64])\r\nb_conv2 = bias_variable([64])\r\n\r\nh_conv2 = tf.nn.relu(conv2d(h_pool1, W_conv2) + b_conv2)\r\nh_pool2 = max_pool_2x2(h_conv2)\r\n\r\n# full connection\r\nshape = h_pool2.get_shape().as_list()\r\ndim = 1\r\nfor d in shape[1:]:\r\n    dim *= d\r\nW_fc1 = weight_varible([dim, 1024])\r\nb_fc1 = bias_variable([1024])\r\n\r\nh_pool2_flat = tf.reshape(h_pool2, [-1, dim])\r\nh_fc1 = tf.nn.relu(tf.matmul(h_pool2_flat, W_fc1) + b_fc1)\r\n\r\n# dropout\r\nkeep_prob = tf.placeholder(tf.float32)\r\nh_fc1_drop = tf.nn.dropout(h_fc1, keep_prob)\r\n\r\n# output layer: softmax\r\nW_fc2 = weight_varible([1024, 10])\r\nb_fc2 = bias_variable([10])\r\n\r\ny_conv = tf.nn.softmax(tf.matmul(h_fc1_drop, W_fc2) + b_fc2)\r\ny_ = tf.placeholder(tf.float32, [None, 10])\r\n\r\n# model training\r\ncross_entropy = -tf.reduce_sum(y_ * tf.log(y_conv+ 1e-10))\r\ntrain_step = tf.train.AdamOptimizer(1e-4).minimize(cross_entropy)\r\n\r\ncorrect_prediction = tf.equal(tf.arg_max(y_conv, 1), tf.arg_max(y_, 1))\r\naccuracy = tf.reduce_mean(tf.cast(correct_prediction, tf.float32))\r\n\r\nsess=tf.InteractiveSession()\r\ntf.global_variables_initializer().run()\r\n\r\ndirname=os.listdir(\"crop/\")\r\ndirname.remove(\"Thumbs.db\")\r\n\r\ndef getRanPic(num):\r\n    image=[]\r\n    name=[]\r\n    for i in range(num):\r\n        tmpname=[0]*10\r\n        filename=dirname[int(np.random.random()*len(dirname))]\r\n        im=cv2.imread(\"crop/\"+filename,0)/255.0\r\n        im=im.reshape(-1)\r\n        tmpname[int(filename[0])]=1\r\n        image.append(im)\r\n        name.append(tmpname)\r\n    return image,name\r\n\r\ndef trainFirst():\r\n    saver = tf.train.Saver()\r\n    for _ in range(1000):\r\n        batch_xs,batch_ys=getRanPic(50)\r\n        train_step.run(feed_dict={x:batch_xs,y_:batch_ys,keep_prob: 1.0})\r\n        if _%50==0:\r\n            batch_xs,batch_ys=getRanPic(50)\r\n            loss,acc=sess.run([cross_entropy,accuracy],feed_dict={x:batch_xs,y_:batch_ys,keep_prob: 1.0})\r\n            print(\"loss:\"+str(loss)+\" acc_train:\"+str(acc))\r\n    saver.save(sess, 'model/next-crop-yzm-cnn.model', global_step=_)\r\n\r\ndef test(file):\r\n    headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36'}\r\n    req = requests.get(\"http://jxgl.hdu.edu.cn/CheckCode.aspx\",headers=headers)\r\n    im=Image.open(BytesIO(req.content))\r\n    img=[]\r\n    name=[]\r\n    for i in range(5):\r\n        crop=np.array(im.crop((9*i+5,4,9*i+14,18)))\r\n        ret,im_hb=cv2.threshold(crop,127,255,cv2.THRESH_BINARY)\r\n        img.append(im_hb.reshape(-1)/255)\r\n        name.append([0]*10)\r\n    saver = tf.train.Saver()\r\n    with tf.Session() as sess:\r\n        batch_xs,batch_ys=img,name\r\n        path = 'model/testcropyzm-cnn.model-' + str(999)\r\n        saver.restore(sess, path)\r\n        predict = tf.arg_max(y_conv, 1)\r\n        pre = sess.run(predict, feed_dict={x:batch_xs,y_:batch_ys,keep_prob: 1.0})\r\n    im.save(\"croptest/\"+\"\".join(map(str,pre))+\".png\")\r\n\r\ntrain=1\r\nif train==0:\r\n    trainFirst()\r\nelse:\r\n    test()</pre>\r\n结果：第二次测试的正确率能达到99%以上，对于测试数据，也能有较高的正确率（测试了100个，没错）。\r\n\r\n对比：\r\n\r\n元数据一样是小样本，两种方法只做了输入输出的改变，但效果对比差别很明显。后者好很多。\r\n\r\n猜测是多元连接的参数比分割后数字的参数多得多，所以训练所需的样本也会成倍增加，其中可能会有一定的关系。\r\n\r\n猜测由于多个连接后反向传播的时候会对所有参数进行调整，所以很难训练起来。\r\n\r\n对于小样本的模型训练还可以继续探究。可以尝试学习到一定特征然后用生成器创造大样本从而训练多个输出模型。",
            "post_title": "hack个验证码验证多字符连接识别与切割识别的优劣",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "368-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-8-1 15:57:18",
            "post_modified_gmt": "2017-8-1 07:57:18",
            "post_content_filtered": "",
            "post_parent": "368",
            "guid": "http://ganjiacheng.cn/blog/?p=387",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "390",
            "post_author": "1",
            "post_date": "2017-8-6 11:22:43",
            "post_date_gmt": "2017-8-6 03:22:43",
            "post_content": "这里做图像处理初学的一个阶段性小结。从简单的读写到复杂点的开闭运算。还有一些用到过的边缘提取，垂直水平投影等方法。<!--more-->\r\n\r\n首先是读写和展示\r\n<pre>import cv2\r\n#imread第二个参数不写默认是rgb彩色，有0读取到的就是黑白二值图\r\nim = cv2.imread(\"image.jpg\",0)\r\n#写入文件\r\ncv2.imwrite(\"img.jpg\",im)\r\n#展示\r\ncv2.imshow(\"imageName\",im)\r\ncv2.waitKey(0)</pre>\r\n一般复制粘贴的话可以用numpy，因为cv2本身图像保存的就是一个np矩阵。\r\n\r\n这里的注意点就是先是y再是x。\r\n<pre>crop = im[y:y+height,x:x+width]</pre>\r\n改尺寸\r\n<pre>res = cv2.resize(im,(width, height), interpolation = cv2.INTER_CUBIC)</pre>\r\n灰度，二值（手动阀值和自动阀值）\r\n<pre>im_gray = cv2.cvtColor(im, cv2.COLOR_BGR2GRAY)\r\n#第二个参数为手动阀值\r\nretval,im_hb = cv2.threshold(im_gray, 120, 255, cv2.THRESH_BINARY) \r\n#自动阀值\r\n#这里255是二值中的高值，cv2.ADAPTIVE_THRESH_MEAN_C可以用cv2.ADAPTIVE_THRESH_GAUSSIAN_C\r\n#cv2.THRESH_BINARY和cv2.THRESH_BINARY_INV是黑白相反的\r\n#最后两个参数可以调整来改变黑白区域\r\nim_hb = cv2.adaptiveThreshold(im_gray, 255, cv2.ADAPTIVE_THRESH_MEAN_C, cv2.THRESH_BINARY, 7, 1)</pre>\r\n膨胀，腐蚀，开闭运算，待尝试（形态学梯度、顶帽、黑帽）\r\n<pre>#首先定义一个核，一般矩形用的多\r\nkernel = cv2.getStructuringElement(cv2.MORPH_RECT,(3,3))\r\n#膨胀腐蚀是对图中白色部分而言，膨胀便是白色变多，腐蚀是白色变少\r\n#腐蚀\r\neroded = cv2.erode(img,kernel)\r\n#膨胀\r\ndilated = cv2.dilate(img,kernel) \r\n#闭运算=先膨胀后腐蚀\r\nclosed = cv2.morphologyEx(im, cv2.MORPH_CLOSE, kernel) \r\n#开运算=先腐蚀后膨胀\r\nopen = cv2.morphologyEx(im, cv2.MORPH_OPEN, kernel)</pre>\r\nmser连通域检测，原理貌似是把图像看做高低起伏的地形，然后往下灌水。\r\n<pre>#图片如果底色比较单一就能用来截出内容，这里需要自己控制_min_area\r\nmser = cv2.MSER_create(_min_area=1800)\r\nregions, boxes = mser.detectRegions(im_hb)\r\nfor box in boxes:\r\n    x, y, w, h = box\r\n    cv2.rectangle(im, (x,y),(x+w, y+h), (255, 0, 0), 2)</pre>\r\n垂直，水平投影做分割，这里没找到直接可用的接口，就自己实现\r\n<pre>#首先需要的是一张二值图im，以白底黑字为例\r\ndivision=np.array([[255.0]*width]*height)\r\n#水平投影，可以用来确定字的上下边缘\r\nfor i in range(im.shape[0]):\r\n     n=0\r\n     for j in range(im.shape[1]):\r\n         if closed[i][j]==0:\r\n             division[i][n]=0\r\n             n+=1\r\n#垂直投影，可以用来确定字的左右边缘已经字符中间的空隙\r\nfor i in range(im.shape[1]):\r\n    n=0\r\n    for j in range(im.shape[0]):\r\n        if division[j][i]==0:\r\n            division[height-1-n][i]=0\r\n            n+=1\r\n</pre>\r\n边缘检测，尝试了findContours和sobel算子和canny算子\r\n<pre>#这里也需要二值图im\r\ncontours, hierarchy = cv2.findContours(im,cv2.RETR_TREE,cv2.CHAIN_APPROX_SIMPLE)\r\ncv2.drawContours(img,contours,-1,(0,0,255),3)</pre>\r\n<pre>x = cv2.Sobel(im,cv2.CV_16S,1,0)  \r\ny = cv2.Sobel(im,cv2.CV_16S,0,1)  \r\nabsX = cv2.convertScaleAbs(x)\r\nabsY = cv2.convertScaleAbs(y)  \r\ndst = cv2.addWeighted(absX,0.5,absY,0.5,0)</pre>\r\n<pre>#最大最小阀值\r\ncanny = cv2.Canny(im, 50, 150)</pre>\r\n入门至此把，python写起来还比较方便，至于最后还得上c++。\r\n\r\n真实中图像各异，总的还得实践出真知！",
            "post_title": "python cv2图像处理小结",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "python-cv2%e5%9b%be%e5%83%8f%e5%a4%84%e7%90%86%e5%b0%8f%e7%bb%93",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-8-6 11:22:43",
            "post_modified_gmt": "2017-8-6 03:22:43",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=390",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "391",
            "post_author": "1",
            "post_date": "2017-8-6 10:53:05",
            "post_date_gmt": "2017-8-6 02:53:05",
            "post_content": "这里做图像处理初学的一个阶段性小结。从简单的读写到复杂点的开闭运算。还有一些用到过的边缘提取，垂直水平投影等方法。\r\n\r\n首先是读写和展示\r\n<pre>import cv2\r\n#imread第二个参数不写默认是rgb彩色，有0读取到的就是黑白二值图\r\nim = cv2.imread(\"image.jpg\",0)\r\n#写入文件\r\ncv2.imwrite(\"img.jpg\",im)\r\n#展示\r\ncv2.imshow(\"imageName\",im)\r\ncv2.waitKey(0)</pre>\r\n一般复制粘贴的话可以用numpy，因为cv2本身图像保存的就是一个np矩阵。\r\n\r\n这里的注意点就是先是y再是x。\r\n<pre>crop = im[y:y+height,x:x+width]</pre>\r\n灰度，二值（手动阀值和自动阀值）\r\n<pre>im_gray = cv2.cvtColor(im, cv2.COLOR_BGR2GRAY)\r\n#第二个参数为手动阀值\r\nretval,im_hb = cv2.threshold(im_gray, 120, 255, cv2.THRESH_BINARY) \r\n#自动阀值\r\n#这里255是二值中的高值，cv2.ADAPTIVE_THRESH_MEAN_C可以用cv2.ADAPTIVE_THRESH_GAUSSIAN_C\r\n#cv2.THRESH_BINARY和cv2.THRESH_BINARY_INV是黑白相反的\r\n#最后两个参数可以调整来改变黑白区域\r\nim_hb = cv2.adaptiveThreshold(im_gray, 255, cv2.ADAPTIVE_THRESH_MEAN_C, cv2.THRESH_BINARY, 7, 1)</pre>\r\n膨胀，腐蚀，开闭运算，待尝试（形态学梯度、顶帽、黑帽）\r\n<pre>#首先定义一个核，一般矩形用的多\r\nkernel = cv2.getStructuringElement(cv2.MORPH_RECT,(3,3))\r\n#膨胀腐蚀是对图中白色部分而言，膨胀便是白色变多，腐蚀是白色变少\r\n#腐蚀\r\neroded = cv2.erode(img,kernel)\r\n#膨胀\r\ndilated = cv2.dilate(img,kernel) \r\n#闭运算=先膨胀后腐蚀\r\nclosed = cv2.morphologyEx(im, cv2.MORPH_CLOSE, kernel) \r\n#开运算=先腐蚀后膨胀\r\nopen = cv2.morphologyEx(im, cv2.MORPH_OPEN, kernel)</pre>\r\nmser连通域检测，原理貌似是把图像看做高低起伏的地形，然后往下灌水。\r\n<pre>#图片如果底色比较单一就能用来截出内容，这里需要自己控制_min_area\r\nmser = cv2.MSER_create(_min_area=1800)\r\nregions, boxes = mser.detectRegions(im_hb)\r\nfor box in boxes:\r\n    x, y, w, h = box\r\n    cv2.rectangle(im, (x,y),(x+w, y+h), (255, 0, 0), 2)</pre>\r\n垂直，水平投影做分割，这里没找到直接可用的接口，就自己实现\r\n<pre>#首先需要的是一张二值图im，以白底黑字为例\r\ndivision=np.array([[255.0]*width]*height)\r\n#水平投影，可以用来确定字的上下边缘\r\nfor i in range(closed.shape[0]):\r\n     n=0\r\n     for j in range(closed.shape[1]):\r\n         if closed[i][j]==0:\r\n             division[i][n]=0\r\n             n+=1\r\n#垂直投影，可以用来确定字的左右边缘已经字符中间的空隙\r\n\r\n</pre>\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "python cv2图像处理小结",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "390-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-8-6 10:53:05",
            "post_modified_gmt": "2017-8-6 02:53:05",
            "post_content_filtered": "",
            "post_parent": "390",
            "guid": "http://ganjiacheng.cn/blog/?p=391",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "392",
            "post_author": "1",
            "post_date": "2017-8-6 11:00:59",
            "post_date_gmt": "2017-8-6 03:00:59",
            "post_content": "这里做图像处理初学的一个阶段性小结。从简单的读写到复杂点的开闭运算。还有一些用到过的边缘提取，垂直水平投影等方法。\r\n\r\n首先是读写和展示\r\n<pre>import cv2\r\n#imread第二个参数不写默认是rgb彩色，有0读取到的就是黑白二值图\r\nim = cv2.imread(\"image.jpg\",0)\r\n#写入文件\r\ncv2.imwrite(\"img.jpg\",im)\r\n#展示\r\ncv2.imshow(\"imageName\",im)\r\ncv2.waitKey(0)</pre>\r\n一般复制粘贴的话可以用numpy，因为cv2本身图像保存的就是一个np矩阵。\r\n\r\n这里的注意点就是先是y再是x。\r\n<pre>crop = im[y:y+height,x:x+width]</pre>\r\n灰度，二值（手动阀值和自动阀值）\r\n<pre>im_gray = cv2.cvtColor(im, cv2.COLOR_BGR2GRAY)\r\n#第二个参数为手动阀值\r\nretval,im_hb = cv2.threshold(im_gray, 120, 255, cv2.THRESH_BINARY) \r\n#自动阀值\r\n#这里255是二值中的高值，cv2.ADAPTIVE_THRESH_MEAN_C可以用cv2.ADAPTIVE_THRESH_GAUSSIAN_C\r\n#cv2.THRESH_BINARY和cv2.THRESH_BINARY_INV是黑白相反的\r\n#最后两个参数可以调整来改变黑白区域\r\nim_hb = cv2.adaptiveThreshold(im_gray, 255, cv2.ADAPTIVE_THRESH_MEAN_C, cv2.THRESH_BINARY, 7, 1)</pre>\r\n膨胀，腐蚀，开闭运算，待尝试（形态学梯度、顶帽、黑帽）\r\n<pre>#首先定义一个核，一般矩形用的多\r\nkernel = cv2.getStructuringElement(cv2.MORPH_RECT,(3,3))\r\n#膨胀腐蚀是对图中白色部分而言，膨胀便是白色变多，腐蚀是白色变少\r\n#腐蚀\r\neroded = cv2.erode(img,kernel)\r\n#膨胀\r\ndilated = cv2.dilate(img,kernel) \r\n#闭运算=先膨胀后腐蚀\r\nclosed = cv2.morphologyEx(im, cv2.MORPH_CLOSE, kernel) \r\n#开运算=先腐蚀后膨胀\r\nopen = cv2.morphologyEx(im, cv2.MORPH_OPEN, kernel)</pre>\r\nmser连通域检测，原理貌似是把图像看做高低起伏的地形，然后往下灌水。\r\n<pre>#图片如果底色比较单一就能用来截出内容，这里需要自己控制_min_area\r\nmser = cv2.MSER_create(_min_area=1800)\r\nregions, boxes = mser.detectRegions(im_hb)\r\nfor box in boxes:\r\n    x, y, w, h = box\r\n    cv2.rectangle(im, (x,y),(x+w, y+h), (255, 0, 0), 2)</pre>\r\n垂直，水平投影做分割，这里没找到直接可用的接口，就自己实现\r\n<pre>#首先需要的是一张二值图im，以白底黑字为例\r\ndivision=np.array([[255.0]*width]*height)\r\n#水平投影，可以用来确定字的上下边缘\r\nfor i in range(im.shape[0]):\r\n     n=0\r\n     for j in range(im.shape[1]):\r\n         if closed[i][j]==0:\r\n             division[i][n]=0\r\n             n+=1\r\n#垂直投影，可以用来确定字的左右边缘已经字符中间的空隙\r\nfor i in range(im.shape[1]):\r\n    n=0\r\n    for j in range(im.shape[0]):\r\n        if division[j][i]==0:\r\n            division[height-1-n][i]=0\r\n            n+=1\r\n</pre>\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "python cv2图像处理小结",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "390-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-8-6 11:00:59",
            "post_modified_gmt": "2017-8-6 03:00:59",
            "post_content_filtered": "",
            "post_parent": "390",
            "guid": "http://ganjiacheng.cn/blog/?p=392",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "393",
            "post_author": "1",
            "post_date": "2017-8-6 11:20:00",
            "post_date_gmt": "2017-8-6 03:20:00",
            "post_content": "这里做图像处理初学的一个阶段性小结。从简单的读写到复杂点的开闭运算。还有一些用到过的边缘提取，垂直水平投影等方法。\r\n\r\n首先是读写和展示\r\n<pre>import cv2\r\n#imread第二个参数不写默认是rgb彩色，有0读取到的就是黑白二值图\r\nim = cv2.imread(\"image.jpg\",0)\r\n#写入文件\r\ncv2.imwrite(\"img.jpg\",im)\r\n#展示\r\ncv2.imshow(\"imageName\",im)\r\ncv2.waitKey(0)</pre>\r\n一般复制粘贴的话可以用numpy，因为cv2本身图像保存的就是一个np矩阵。\r\n\r\n这里的注意点就是先是y再是x。\r\n<pre>crop = im[y:y+height,x:x+width]</pre>\r\n改尺寸\r\n<pre>res = cv2.resize(im,(width, height), interpolation = cv2.INTER_CUBIC)</pre>\r\n灰度，二值（手动阀值和自动阀值）\r\n<pre>im_gray = cv2.cvtColor(im, cv2.COLOR_BGR2GRAY)\r\n#第二个参数为手动阀值\r\nretval,im_hb = cv2.threshold(im_gray, 120, 255, cv2.THRESH_BINARY) \r\n#自动阀值\r\n#这里255是二值中的高值，cv2.ADAPTIVE_THRESH_MEAN_C可以用cv2.ADAPTIVE_THRESH_GAUSSIAN_C\r\n#cv2.THRESH_BINARY和cv2.THRESH_BINARY_INV是黑白相反的\r\n#最后两个参数可以调整来改变黑白区域\r\nim_hb = cv2.adaptiveThreshold(im_gray, 255, cv2.ADAPTIVE_THRESH_MEAN_C, cv2.THRESH_BINARY, 7, 1)</pre>\r\n膨胀，腐蚀，开闭运算，待尝试（形态学梯度、顶帽、黑帽）\r\n<pre>#首先定义一个核，一般矩形用的多\r\nkernel = cv2.getStructuringElement(cv2.MORPH_RECT,(3,3))\r\n#膨胀腐蚀是对图中白色部分而言，膨胀便是白色变多，腐蚀是白色变少\r\n#腐蚀\r\neroded = cv2.erode(img,kernel)\r\n#膨胀\r\ndilated = cv2.dilate(img,kernel) \r\n#闭运算=先膨胀后腐蚀\r\nclosed = cv2.morphologyEx(im, cv2.MORPH_CLOSE, kernel) \r\n#开运算=先腐蚀后膨胀\r\nopen = cv2.morphologyEx(im, cv2.MORPH_OPEN, kernel)</pre>\r\nmser连通域检测，原理貌似是把图像看做高低起伏的地形，然后往下灌水。\r\n<pre>#图片如果底色比较单一就能用来截出内容，这里需要自己控制_min_area\r\nmser = cv2.MSER_create(_min_area=1800)\r\nregions, boxes = mser.detectRegions(im_hb)\r\nfor box in boxes:\r\n    x, y, w, h = box\r\n    cv2.rectangle(im, (x,y),(x+w, y+h), (255, 0, 0), 2)</pre>\r\n垂直，水平投影做分割，这里没找到直接可用的接口，就自己实现\r\n<pre>#首先需要的是一张二值图im，以白底黑字为例\r\ndivision=np.array([[255.0]*width]*height)\r\n#水平投影，可以用来确定字的上下边缘\r\nfor i in range(im.shape[0]):\r\n     n=0\r\n     for j in range(im.shape[1]):\r\n         if closed[i][j]==0:\r\n             division[i][n]=0\r\n             n+=1\r\n#垂直投影，可以用来确定字的左右边缘已经字符中间的空隙\r\nfor i in range(im.shape[1]):\r\n    n=0\r\n    for j in range(im.shape[0]):\r\n        if division[j][i]==0:\r\n            division[height-1-n][i]=0\r\n            n+=1\r\n</pre>\r\n边缘检测，尝试了findContours和sobel算子和canny算子\r\n<pre>#这里也需要二值图im\r\ncontours, hierarchy = cv2.findContours(im,cv2.RETR_TREE,cv2.CHAIN_APPROX_SIMPLE)\r\ncv2.drawContours(img,contours,-1,(0,0,255),3)</pre>\r\n<pre>x = cv2.Sobel(im,cv2.CV_16S,1,0)  \r\ny = cv2.Sobel(im,cv2.CV_16S,0,1)  \r\nabsX = cv2.convertScaleAbs(x)\r\nabsY = cv2.convertScaleAbs(y)  \r\ndst = cv2.addWeighted(absX,0.5,absY,0.5,0)</pre>\r\n<pre>#最大最小阀值\r\ncanny = cv2.Canny(im, 50, 150)</pre>\r\n入门至此把，python写起来还比较方便，至于最后还得上c++。\r\n\r\n真实中图像各异，总的还得实践出真知！",
            "post_title": "python cv2图像处理小结",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "390-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-8-6 11:20:00",
            "post_modified_gmt": "2017-8-6 03:20:00",
            "post_content_filtered": "",
            "post_parent": "390",
            "guid": "http://ganjiacheng.cn/blog/?p=393",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "394",
            "post_author": "1",
            "post_date": "2017-8-6 11:22:43",
            "post_date_gmt": "2017-8-6 03:22:43",
            "post_content": "这里做图像处理初学的一个阶段性小结。从简单的读写到复杂点的开闭运算。还有一些用到过的边缘提取，垂直水平投影等方法。<!--more-->\r\n\r\n首先是读写和展示\r\n<pre>import cv2\r\n#imread第二个参数不写默认是rgb彩色，有0读取到的就是黑白二值图\r\nim = cv2.imread(\"image.jpg\",0)\r\n#写入文件\r\ncv2.imwrite(\"img.jpg\",im)\r\n#展示\r\ncv2.imshow(\"imageName\",im)\r\ncv2.waitKey(0)</pre>\r\n一般复制粘贴的话可以用numpy，因为cv2本身图像保存的就是一个np矩阵。\r\n\r\n这里的注意点就是先是y再是x。\r\n<pre>crop = im[y:y+height,x:x+width]</pre>\r\n改尺寸\r\n<pre>res = cv2.resize(im,(width, height), interpolation = cv2.INTER_CUBIC)</pre>\r\n灰度，二值（手动阀值和自动阀值）\r\n<pre>im_gray = cv2.cvtColor(im, cv2.COLOR_BGR2GRAY)\r\n#第二个参数为手动阀值\r\nretval,im_hb = cv2.threshold(im_gray, 120, 255, cv2.THRESH_BINARY) \r\n#自动阀值\r\n#这里255是二值中的高值，cv2.ADAPTIVE_THRESH_MEAN_C可以用cv2.ADAPTIVE_THRESH_GAUSSIAN_C\r\n#cv2.THRESH_BINARY和cv2.THRESH_BINARY_INV是黑白相反的\r\n#最后两个参数可以调整来改变黑白区域\r\nim_hb = cv2.adaptiveThreshold(im_gray, 255, cv2.ADAPTIVE_THRESH_MEAN_C, cv2.THRESH_BINARY, 7, 1)</pre>\r\n膨胀，腐蚀，开闭运算，待尝试（形态学梯度、顶帽、黑帽）\r\n<pre>#首先定义一个核，一般矩形用的多\r\nkernel = cv2.getStructuringElement(cv2.MORPH_RECT,(3,3))\r\n#膨胀腐蚀是对图中白色部分而言，膨胀便是白色变多，腐蚀是白色变少\r\n#腐蚀\r\neroded = cv2.erode(img,kernel)\r\n#膨胀\r\ndilated = cv2.dilate(img,kernel) \r\n#闭运算=先膨胀后腐蚀\r\nclosed = cv2.morphologyEx(im, cv2.MORPH_CLOSE, kernel) \r\n#开运算=先腐蚀后膨胀\r\nopen = cv2.morphologyEx(im, cv2.MORPH_OPEN, kernel)</pre>\r\nmser连通域检测，原理貌似是把图像看做高低起伏的地形，然后往下灌水。\r\n<pre>#图片如果底色比较单一就能用来截出内容，这里需要自己控制_min_area\r\nmser = cv2.MSER_create(_min_area=1800)\r\nregions, boxes = mser.detectRegions(im_hb)\r\nfor box in boxes:\r\n    x, y, w, h = box\r\n    cv2.rectangle(im, (x,y),(x+w, y+h), (255, 0, 0), 2)</pre>\r\n垂直，水平投影做分割，这里没找到直接可用的接口，就自己实现\r\n<pre>#首先需要的是一张二值图im，以白底黑字为例\r\ndivision=np.array([[255.0]*width]*height)\r\n#水平投影，可以用来确定字的上下边缘\r\nfor i in range(im.shape[0]):\r\n     n=0\r\n     for j in range(im.shape[1]):\r\n         if closed[i][j]==0:\r\n             division[i][n]=0\r\n             n+=1\r\n#垂直投影，可以用来确定字的左右边缘已经字符中间的空隙\r\nfor i in range(im.shape[1]):\r\n    n=0\r\n    for j in range(im.shape[0]):\r\n        if division[j][i]==0:\r\n            division[height-1-n][i]=0\r\n            n+=1\r\n</pre>\r\n边缘检测，尝试了findContours和sobel算子和canny算子\r\n<pre>#这里也需要二值图im\r\ncontours, hierarchy = cv2.findContours(im,cv2.RETR_TREE,cv2.CHAIN_APPROX_SIMPLE)\r\ncv2.drawContours(img,contours,-1,(0,0,255),3)</pre>\r\n<pre>x = cv2.Sobel(im,cv2.CV_16S,1,0)  \r\ny = cv2.Sobel(im,cv2.CV_16S,0,1)  \r\nabsX = cv2.convertScaleAbs(x)\r\nabsY = cv2.convertScaleAbs(y)  \r\ndst = cv2.addWeighted(absX,0.5,absY,0.5,0)</pre>\r\n<pre>#最大最小阀值\r\ncanny = cv2.Canny(im, 50, 150)</pre>\r\n入门至此把，python写起来还比较方便，至于最后还得上c++。\r\n\r\n真实中图像各异，总的还得实践出真知！",
            "post_title": "python cv2图像处理小结",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "390-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-8-6 11:22:43",
            "post_modified_gmt": "2017-8-6 03:22:43",
            "post_content_filtered": "",
            "post_parent": "390",
            "guid": "http://ganjiacheng.cn/blog/?p=394",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "400",
            "post_author": "1",
            "post_date": "2017-8-24 10:26:23",
            "post_date_gmt": "2017-8-24 02:26:23",
            "post_content": "python篇：\r\n\r\n1.windows上，在pip install xxx失败的时候怎么办？\r\n\r\n答：<a href=\"http://www.lfd.uci.edu/~gohlke/pythonlibs/\">http://www.lfd.uci.edu/~gohlke/pythonlibs/</a>到这里面寻找whl，下载之后用 pip install xxx.whl 来安装。\r\n\r\n<!--more-->\r\n\r\n2.解决pip3报错Fatal error in launcher: Unable to create process using '\"'。\r\n\r\n一种：\r\n<pre>import pip\r\npip.main(['install','ModuleName'])</pre>\r\n另一种：\r\n<pre class=\"lang-py prettyprint prettyprinted\"><code><span class=\"pln\">python3 </span><span class=\"pun\">-</span><span class=\"pln\">m pip install whlName\r\n</span></code></pre>\r\n3.linux上python3中文会显示UnicodeEncodeError: 'ascii' codec can't encode character。\r\n<pre>import io \r\nimport sys \r\nsys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding='utf-8')</pre>\r\n4.requests爬到的中文网页输出在windows cmd会出错\r\n<pre>res=requests.get(url)\r\nres.encoding='gbk'\r\nprint(res.text)</pre>\r\n&nbsp;",
            "post_title": "python日常问答篇--更新中",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "87-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-8-24 10:26:23",
            "post_modified_gmt": "2017-8-24 02:26:23",
            "post_content_filtered": "",
            "post_parent": "87",
            "guid": "http://ganjiacheng.cn/blog/?p=400",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "402",
            "post_author": "1",
            "post_date": "2017-9-6 10:43:27",
            "post_date_gmt": "2017-9-6 02:43:27",
            "post_content": "上次有的<a href=\"https://ganjiacheng.cn/blog/?p=63\">php篇数字杭电模拟登陆</a>，不过由于如今没有了验证码，可能会出点小错误，因此用python再来进进出出一遍。\r\n\r\n此次主要还是熟悉一下python requests的使用以及对网站cookie变化的准确捕捉。post的参数以及header也是这里的重点部分，其他还能加点简单的正则。<!--more-->\r\n\r\n具体细节在代码注释里：\r\n<pre>import requests\r\nimport re\r\n\r\n#先访问一次登录网站得到lt（lt后面必须，且一次性使用）\r\ndef getHduCookie():\r\n    resp=requests.get('http://cas.hdu.edu.cn/cas/login')\r\n    m = re.search(r'name=\\\"lt\\\" value=(.*?) /&gt;', resp.text)\r\n    lt=m.group()[17:-4]\r\n    return lt\r\n\r\n#模拟登陆用户名为学号，密码为md5加密后的密码，返回跳转链接\r\ndef simLogin(lt):\r\n    password=hashlib.md5(psd.encode('utf-8')).hexdigest()\r\n    params={\r\n        'encodedService':'http%3a%2f%2fi.hdu.edu.cn%2fdcp%2findex.jsp',\r\n        'service':'http://i.hdu.edu.cn/dcp/index.jsp',\r\n        'username':xh,\r\n        'password':password,\r\n        'lt':lt\r\n    }\r\n    resp=requests.post('http://cas.hdu.edu.cn/cas/login?service=http://jxgl.hdu.edu.cn/index.aspx',params=params)\r\n    m=re.search(r'href=\"(.*?)\"',resp.text)\r\n    return m.group()[6:-1]\r\n\r\n#去临时链接获取一次cookie并保存请求\r\ndef jxglPage(url):\r\n    req=requests.Session()\r\n    resp0=req.get(url)\r\n    req.headers={\r\n        'User-Agent':'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36',\r\n        'Referer':'http://jxgl.hdu.edu.cn/xf_xsqxxxk.aspx?xh='+xh+'&amp;xm=%25%5cB8%25%5cCA%25%5cBC%25%5cD2%25%5cB3%25%5cC7&amp;gnmkdm=N121113',\r\n        'Accept-Encoding': 'gzip, deflate',\r\n        'Content-Type':'application/x-www-form-urlencoded',\r\n    }\r\n    return req\r\n\r\n#这里的例子是获取选课列表\r\ndef classList(req):\r\n    data=''#这里是post的一大串字符，可从浏览器获取\r\n    url='http://jxgl.hdu.edu.cn/xf_xsqxxxk.aspx?xh='+xh+'&amp;xm=%25%5cB8%25%5cCA%25%5cBC%25%5cD2%25%5cB3%25%5cC7&amp;gnmkdm=N121113'\r\n    resp=req.post(url,data=data)\r\n    resp.encoding='gbk'\r\n    print(resp.text)\r\n\r\n#主程序，设置学号密码并运行\r\nif __name__=='__main__':\r\n    xh='学号'\r\n    psd='密码'\r\n    lt=getHduCookie()\r\n    tmpurl=simLogin(lt)\r\n    req=jxglPage(tmpurl)\r\n    classList(req)</pre>\r\n学习为主，连我都不信。\r\n\r\n温馨提醒：此片不要与<a href=\"https://ganjiacheng.cn/blog/?p=368\">hack验证二维码篇</a>结合搞事情啦！",
            "post_title": "爬进数字杭电python篇",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e7%88%ac%e8%bf%9b%e6%95%b0%e5%ad%97%e6%9d%ad%e7%94%b5python%e7%af%87",
            "to_ping": "",
            "pinged": "\nhttps://ganjiacheng.cn/blog/?p=63",
            "post_modified": "2017-9-9 09:12:49",
            "post_modified_gmt": "2017-9-9 01:12:49",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=402",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "403",
            "post_author": "1",
            "post_date": "2017-9-6 10:18:04",
            "post_date_gmt": "2017-9-6 02:18:04",
            "post_content": "上次有的<a href=\"https://ganjiacheng.cn/blog/?p=63\">php篇数字杭电模拟登陆</a>，不过由于如今没有了验证码，可能会出点小错误，因此用python再来进进出出一遍。\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "爬进数字杭电python篇",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "402-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-9-6 10:18:04",
            "post_modified_gmt": "2017-9-6 02:18:04",
            "post_content_filtered": "",
            "post_parent": "402",
            "guid": "http://ganjiacheng.cn/blog/?p=403",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "404",
            "post_author": "1",
            "post_date": "2017-9-6 10:42:13",
            "post_date_gmt": "2017-9-6 02:42:13",
            "post_content": "上次有的<a href=\"https://ganjiacheng.cn/blog/?p=63\">php篇数字杭电模拟登陆</a>，不过由于如今没有了验证码，可能会出点小错误，因此用python再来进进出出一遍。\r\n\r\n此次主要还是熟悉一下python requests的使用以及对网站cookie变化的准确捕捉。post的参数以及header也是这里的重点部分，其他还能加点简单的正则。\r\n\r\n具体细节在代码注释里：\r\n<pre>import requests\r\nimport re\r\n\r\n#先访问一次登录网站得到lt（lt后面必须，且一次性使用）\r\ndef getHduCookie():\r\n    resp=requests.get('http://cas.hdu.edu.cn/cas/login')\r\n    m = re.search(r'name=\\\"lt\\\" value=(.*?) /&gt;', resp.text)\r\n    lt=m.group()[17:-4]\r\n    return lt\r\n\r\n#模拟登陆用户名为学号，密码为md5加密后的密码，返回跳转链接\r\ndef simLogin(lt):\r\n    password=hashlib.md5(psd.encode('utf-8')).hexdigest()\r\n    params={\r\n        'encodedService':'http%3a%2f%2fi.hdu.edu.cn%2fdcp%2findex.jsp',\r\n        'service':'http://i.hdu.edu.cn/dcp/index.jsp',\r\n        'username':xh,\r\n        'password':password,\r\n        'lt':lt\r\n    }\r\n    resp=requests.post('http://cas.hdu.edu.cn/cas/login?service=http://jxgl.hdu.edu.cn/index.aspx',params=params)\r\n    m=re.search(r'href=\"(.*?)\"',resp.text)\r\n    return m.group()[6:-1]\r\n\r\n#去临时链接获取一次cookie并保存请求\r\ndef jxglPage(url):\r\n    req=requests.Session()\r\n    resp0=req.get(url)\r\n    req.headers={\r\n        'User-Agent':'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36',\r\n        'Referer':'http://jxgl.hdu.edu.cn/xf_xsqxxxk.aspx?xh='+xh+'&amp;xm=%25%5cB8%25%5cCA%25%5cBC%25%5cD2%25%5cB3%25%5cC7&amp;gnmkdm=N121113',\r\n        'Accept-Encoding': 'gzip, deflate',\r\n        'Content-Type':'application/x-www-form-urlencoded',\r\n    }\r\n    return req\r\n\r\n#这里的例子是获取选课列表\r\ndef classList(req):\r\n    data='__EVENTTARGET=ddl_kcgs&amp;__EVENTARGUMENT=&amp;__LASTFOCUS=&amp;__VIEWSTATE=%2FwEPDwUKLTcxMzExNjMwMw8WBh4FZHFzemoFBDIwMTUeBHp5ZG0FBDA0MjAeCXNvcnRPcmRlcgUFIGFzYyAWAgIBD2QWFAIBDw8WAh4EVGV4dAV75aeT5ZCN77ya55SY5a625Z%2BOJm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A75a2m6Zmi77ya55S15a2Q5L%2Bh5oGv5a2m6ZmiJm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A75LiT5Lia77ya55S15a2Q56eR5a2m5LiO5oqA5pyvZGQCAw8QDxYGHg1EYXRhVGV4dEZpZWxkBQRrY3h6Hg5EYXRhVmFsdWVGaWVsZAUEa2N4eh4LXyFEYXRhQm91bmRnZBAVDgzliJvmlrDku7vpgIkM5Yib5Lia5pWZ6IKyDOWFrOWFsemAieS%2Frgznu4%2FnrqHku7vpgIkM56eR5oqA5Lu76YCJDOivvuWkluW%2FheS%2FrgzlhbblroPku7vpgIkM5Lq65paH5Lu76YCJBuS7u%2BmAiQblrp7ot7UM5aSW6K%2Bt5qih5Z2XEuW%2Fg%2BeQhuWBpeW6t%2BmAieS%2FrgzoibrmnK%2Fku7vpgIkAFQ4M5Yib5paw5Lu76YCJDOWIm%2BS4muaVmeiCsgzlhazlhbHpgInkv64M57uP566h5Lu76YCJDOenkeaKgOS7u%2BmAiQzor77lpJblv4Xkv64M5YW25a6D5Lu76YCJDOS6uuaWh%2BS7u%2BmAiQbku7vpgIkG5a6e6Le1DOWkluivreaooeWdlxLlv4PnkIblgaXlurfpgInkv64M6Im65pyv5Lu76YCJABQrAw5nZ2dnZ2dnZ2dnZ2dnZ2RkAgUPEGQPFgNmAgECAhYDEAUD5pyJBQPmnIlnEAUD5pegBQPml6BnEGVlZxYBZmQCBw8QDxYGHwQFBGtjZ3MfBQUEa2Nncx8GZ2QQFQYM5Yib5paw5Yib5LiaDOWFrOWFseW%2FheS%2Frgzor77lpJbmlZnogrIM5qCh5YWs6YCJ6K%2B%2BD%2BagoemZhemAieS%2FruivvgAVBgzliJvmlrDliJvkuJoM5YWs5YWx5b%2BF5L%2BuDOivvuWkluaVmeiCsgzmoKHlhazpgInor74P5qCh6ZmF6YCJ5L%2Bu6K%2B%2BABQrAwZnZ2dnZ2cWAWZkAgkPEA8WBh8EBQR4cW1jHwUFBHhxZG0fBmdkEBUGBuS4i%2BaymQbkuJzlsrMG5paH5LiABuS4jeWumgnkuJzmoKHljLoJ6Z2S5bGx5rmWFQYBMQEyATMBNAE1ATYUKwMGZ2dnZ2dnFgFmZAILDxAPFgYfBAUEc2tzah8FBQRza3NqHwZnZBAVFx3lkajkuoznrKwxMCwxMeiKgnvnrKwxLTE35ZGofRzlkajkuoznrKwxMCwxMeiKgnvnrKwxLTnlkah9HuWRqOS6jOesrDEwLDEx6IqCe%2BesrDEwLTE35ZGofRvlkajkuoznrKw2LDfoioJ756ysMS0xN%2BWRqH0i5ZGo5LqM56ysOCw56IqCe%2BesrDEtMTflkah85Y2V5ZGofRvlkajkuoznrKw4LDnoioJ756ysMS0xN%2BWRqH0c5ZGo5LqM56ysOCw56IqCe%2BesrDEwLTE35ZGofRrlkajkuInnrKwxLDLoioJ756ysMS055ZGofR3lkajkuInnrKwxMCwxMeiKgnvnrKwxLTE35ZGofRrlkajkuInnrKwzLDToioJ756ysMS055ZGofR3lkajlm5vnrKwxMCwxMeiKgnvnrKwxLTE35ZGofR7lkajlm5vnrKwxMCwxMeiKgnvnrKwxMC0xN%2BWRqH0i5ZGo5Zub56ysOCw56IqCe%2BesrDEtMTflkah85Y2V5ZGofRvlkajlm5vnrKw4LDnoioJ756ysMS0xN%2BWRqH0c5ZGo5Zub56ysOCw56IqCe%2BesrDEwLTE35ZGofRrlkajkupTnrKw2LDfoioJ756ysMS055ZGofRvlkajkupTnrKw4LDnoioJ756ysNC0xMeWRqH0d5ZGo5LiA56ysMTAsMTHoioJ756ysMS0xN%2BWRqH0e5ZGo5LiA56ysMTAsMTHoioJ756ysMTAtMTflkah9GuWRqOS4gOesrDMsNOiKgnvnrKwxLTnlkah9G%2BWRqOS4gOesrDgsOeiKgnvnrKwxLTE35ZGofRzlkajkuIDnrKw4LDnoioJ756ysMTAtMTflkah9ABUXHeWRqOS6jOesrDEwLDEx6IqCe%2BesrDEtMTflkah9HOWRqOS6jOesrDEwLDEx6IqCe%2BesrDEtOeWRqH0e5ZGo5LqM56ysMTAsMTHoioJ756ysMTAtMTflkah9G%2BWRqOS6jOesrDYsN%2BiKgnvnrKwxLTE35ZGofSLlkajkuoznrKw4LDnoioJ756ysMS0xN%2BWRqHzljZXlkah9G%2BWRqOS6jOesrDgsOeiKgnvnrKwxLTE35ZGofRzlkajkuoznrKw4LDnoioJ756ysMTAtMTflkah9GuWRqOS4ieesrDEsMuiKgnvnrKwxLTnlkah9HeWRqOS4ieesrDEwLDEx6IqCe%2BesrDEtMTflkah9GuWRqOS4ieesrDMsNOiKgnvnrKwxLTnlkah9HeWRqOWbm%2BesrDEwLDEx6IqCe%2BesrDEtMTflkah9HuWRqOWbm%2BesrDEwLDEx6IqCe%2BesrDEwLTE35ZGofSLlkajlm5vnrKw4LDnoioJ756ysMS0xN%2BWRqHzljZXlkah9G%2BWRqOWbm%2BesrDgsOeiKgnvnrKwxLTE35ZGofRzlkajlm5vnrKw4LDnoioJ756ysMTAtMTflkah9GuWRqOS6lOesrDYsN%2BiKgnvnrKwxLTnlkah9G%2BWRqOS6lOesrDgsOeiKgnvnrKw0LTEx5ZGofR3lkajkuIDnrKwxMCwxMeiKgnvnrKwxLTE35ZGofR7lkajkuIDnrKwxMCwxMeiKgnvnrKwxMC0xN%2BWRqH0a5ZGo5LiA56ysMyw06IqCe%2BesrDEtOeWRqH0b5ZGo5LiA56ysOCw56IqCe%2BesrDEtMTflkah9HOWRqOS4gOesrDgsOeiKgnvnrKwxMC0xN%2BWRqH0AFCsDF2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnFgECFmQCEQ8PFgIeB1Zpc2libGVoZGQCFg88KwALAQAPFggeCERhdGFLZXlzFgAeC18hSXRlbUNvdW50AggeCVBhZ2VDb3VudAIBHhVfIURhdGFTb3VyY2VJdGVtQ291bnQCCGQWAmYPZBYQAgEPZBYuAgIPDxYCHwMFSTxhIGhyZWY9J2h0bWwva2N4eC9DMTI5OTA0Ni5odG1sJyAgdGFyZ2V0PSdfYmxhbmsnPuWIm%2BS4muazleW%2Bi%2BWunuWKoTwvYT5kZAIDDw8WAh8DBQhDMTI5OTA0NmRkAgQPDxYCHwMFPTxhIGhyZWY9J2h0bWwvanN4eC8wNDA5Ni5odG1sJyAgdGFyZ2V0PSdfYmxhbmsnPuadjuW6huWzsDwvYT5kZAIFDw8WAh8DBR3lkajkuoznrKwxMCwxMeiKgnvnrKwxLTE35ZGofWRkAgYPDxYCHwMFEeesrDEx5pWZ56CU5qW8MjAxZGQCBw8PFgIfAwUDMS4wZGQCCA8PFgIfAwUHMi4wLTAuMGRkAgkPDxYCHwMFBTAxLTE3ZGQCCg8PFgIfAwUCNDBkZAILDw8WAh8DBQIzN2RkAgwPDxYCHwMFATNkZAINDw8WAh8DBR4oMjAxNy0yMDE4LTEpLUMxMjk5MDQ2LTA0MDk2LTFkZAIODw8WAh8DBQYmbmJzcDtkZAIPDw8WAh8DBQhDMTI5OTA0NmRkAhAPDxYCHwMFBTA0MDk2ZGQCEQ8PFgIfAwUM5Yib5paw5Yib5LiaZGQCEg8PFgIfAwUM5Yib5Lia5pWZ6IKyZGQCEw8PFgIfAwUG5LiL5rKZZGQCFA8PFgIfAwUGJm5ic3A7ZGQCFQ8PFgIfAwUS5Lq65paH5LiO5rOV5a2m6ZmiZGQCFg8PFgIfAwUGJm5ic3A7ZGQCFw9kFgICAQ8QDxYCHwZnZGRkZAIYDw8WAh8DBQYmbmJzcDtkZAICD2QWLgICDw8WAh8DBUM8YSBocmVmPSdodG1sL2tjeHgvQzAzOTkwMDYuaHRtbCcgIHRhcmdldD0nX2JsYW5rJz7liJvkuJrnrqHnkIY8L2E%2BZGQCAw8PFgIfAwUIQzAzOTkwMDZkZAIEDw8WAh8DBT08YSBocmVmPSdodG1sL2pzeHgvMDgwNDUuaHRtbCcgIHRhcmdldD0nX2JsYW5rJz7liJjmraPliJo8L2E%2BZGQCBQ8PFgIfAwUd5ZGo5LiJ56ysMTAsMTHoioJ756ysMS0xN%2BWRqH1kZAIGDw8WAh8DBRHnrKwxMeaVmeeglOalvDIwNmRkAgcPDxYCHwMFAzIuMGRkAggPDxYCHwMFBzIuMC0wLjBkZAIJDw8WAh8DBQUwMS0xN2RkAgoPDxYCHwMFAjMwZGQCCw8PFgIfAwUCMjlkZAIMDw8WAh8DBQExZGQCDQ8PFgIfAwUeKDIwMTctMjAxOC0xKS1DMDM5OTAwNi0wODA0NS0xZGQCDg8PFgIfAwUGJm5ic3A7ZGQCDw8PFgIfAwUIQzAzOTkwMDZkZAIQDw8WAh8DBQUwODA0NWRkAhEPDxYCHwMFDOWIm%2BaWsOWIm%2BS4mmRkAhIPDxYCHwMFDOWIm%2BS4muaVmeiCsmRkAhMPDxYCHwMFBuS4i%2BaymWRkAhQPDxYCHwMFBiZuYnNwO2RkAhUPDxYCHwMFDOeuoeeQhuWtpumZomRkAhYPDxYCHwMFBiZuYnNwO2RkAhcPZBYCAgEPEA8WAh8GZ2RkZGQCGA8PFgIfAwUGJm5ic3A7ZGQCAw9kFi4CAg8PFgIfAwVVPGEgaHJlZj0naHRtbC9rY3h4L0MwMzk5MDE4Lmh0bWwnICB0YXJnZXQ9J19ibGFuayc%2B5Yib5Lia5LyB5Lia5ZWG5Lia5qih5byP566h55CGPC9hPmRkAgMPDxYCHwMFCEMwMzk5MDE4ZGQCBA8PFgIfAwU9PGEgaHJlZj0naHRtbC9qc3h4LzQwNzE0Lmh0bWwnICB0YXJnZXQ9J19ibGFuayc%2B6IOh5L%2Bd5LquPC9hPmRkAgUPDxYCHwMFIuWRqOS6jOesrDgsOeiKgnvnrKwxLTE35ZGofOWNleWRqH1kZAIGDw8WAh8DBRPnrKw35pWZ56CU5qW85Y2XNDA5ZGQCBw8PFgIfAwUDMS4wZGQCCA8PFgIfAwUHMS4wLTAuMGRkAgkPDxYCHwMFBTAxLTE3ZGQCCg8PFgIfAwUCMzBkZAILDw8WAh8DBQIyOWRkAgwPDxYCHwMFATFkZAINDw8WAh8DBR4oMjAxNy0yMDE4LTEpLUMwMzk5MDE4LTQwNzE0LTFkZAIODw8WAh8DBQYmbmJzcDtkZAIPDw8WAh8DBQhDMDM5OTAxOGRkAhAPDxYCHwMFBTQwNzE0ZGQCEQ8PFgIfAwUM5Yib5paw5Yib5LiaZGQCEg8PFgIfAwUM5Yib5Lia5pWZ6IKyZGQCEw8PFgIfAwUG5LiL5rKZZGQCFA8PFgIfAwUGJm5ic3A7ZGQCFQ8PFgIfAwUM566h55CG5a2m6ZmiZGQCFg8PFgIfAwUGJm5ic3A7ZGQCFw9kFgICAQ8QDxYCHwZnZGRkZAIYDw8WAh8DBQYmbmJzcDtkZAIED2QWLgICDw8WAh8DBUk8YSBocmVmPSdodG1sL2tjeHgvQzAzOTkwMjIuaHRtbCcgIHRhcmdldD0nX2JsYW5rJz7liJvkuJrov5DokKXku7%2FnnJ88L2E%2BZGQCAw8PFgIfAwUIQzAzOTkwMjJkZAIEDw8WAh8DBUc8YSBocmVmPSdodG1sL2pzeHgvMDgwNDYuaHRtbCcgIHRhcmdldD0nX2JsYW5rJz7lrZnnh5Xlhpsv5rGd6YaS5ZCbPC9hPmRkAgUPDxYCHwMFHOWRqOS4gOesrDgsOeiKgnvnrKwxMC0xN%2BWRqH1kZAIGDw8WAh8DBRDnrKwz5pWZ56CU5qW8MTExZGQCBw8PFgIfAwUDMS4wZGQCCA8PFgIfAwUHMi4wLTAuMGRkAgkPDxYCHwMFBTEwLTE3ZGQCCg8PFgIfAwUCNjBkZAILDw8WAh8DBQI1M2RkAgwPDxYCHwMFATdkZAINDw8WAh8DBR4oMjAxNy0yMDE4LTEpLUMwMzk5MDIyLTA4MDQ2LTJkZAIODw8WAh8DBQYmbmJzcDtkZAIPDw8WAh8DBQhDMDM5OTAyMmRkAhAPDxYCHwMFBTA4MDQ2ZGQCEQ8PFgIfAwUM5Yib5paw5Yib5LiaZGQCEg8PFgIfAwUM5Yib5Lia5pWZ6IKyZGQCEw8PFgIfAwUG5LiL5rKZZGQCFA8PFgIfAwUGJm5ic3A7ZGQCFQ8PFgIfAwUM566h55CG5a2m6ZmiZGQCFg8PFgIfAwUGJm5ic3A7ZGQCFw9kFgICAQ8QDxYCHwZnZGRkZAIYDw8WAh8DBQYmbmJzcDtkZAIFD2QWLgICDw8WAh8DBUk8YSBocmVmPSdodG1sL2tjeHgvQzAzOTkwMjIuaHRtbCcgIHRhcmdldD0nX2JsYW5rJz7liJvkuJrov5DokKXku7%2FnnJ88L2E%2BZGQCAw8PFgIfAwUIQzAzOTkwMjJkZAIEDw8WAh8DBTo8YSBocmVmPSdodG1sL2pzeHgvMjkwMTIuaHRtbCcgIHRhcmdldD0nX2JsYW5rJz7mnY7mmZM8L2E%2BZGQCBQ8PFgIfAwUc5ZGo5LqM56ysOCw56IqCe%2BesrDEwLTE35ZGofWRkAgYPDxYCHwMFEOesrDPmlZnnoJTmpbwxMTVkZAIHDw8WAh8DBQMxLjBkZAIIDw8WAh8DBQcyLjAtMC4wZGQCCQ8PFgIfAwUFMTAtMTdkZAIKDw8WAh8DBQI2MGRkAgsPDxYCHwMFAjQ5ZGQCDA8PFgIfAwUCMTFkZAINDw8WAh8DBR4oMjAxNy0yMDE4LTEpLUMwMzk5MDIyLTI5MDEyLTJkZAIODw8WAh8DBQYmbmJzcDtkZAIPDw8WAh8DBQhDMDM5OTAyMmRkAhAPDxYCHwMFBTI5MDEyZGQCEQ8PFgIfAwUM5Yib5paw5Yib5LiaZGQCEg8PFgIfAwUM5Yib5Lia5pWZ6IKyZGQCEw8PFgIfAwUG5LiL5rKZZGQCFA8PFgIfAwUGJm5ic3A7ZGQCFQ8PFgIfAwUM566h55CG5a2m6ZmiZGQCFg8PFgIfAwUGJm5ic3A7ZGQCFw9kFgICAQ8QDxYCHwZnZGRkZAIYDw8WAh8DBQYmbmJzcDtkZAIGD2QWLgICDw8WAh8DBU88YSBocmVmPSdodG1sL2tjeHgvQzAzOTkwMTcuaHRtbCcgIHRhcmdldD0nX2JsYW5rJz7kupLogZTnvZHliJvmlrDkuI7liJvkuJo8L2E%2BZGQCAw8PFgIfAwUIQzAzOTkwMTdkZAIEDw8WAh8DBT08YSBocmVmPSdodG1sL2pzeHgvMDgwNDYuaHRtbCcgIHRhcmdldD0nX2JsYW5rJz7lrZnnh5Xlhps8L2E%2BZGQCBQ8PFgIfAwUc5ZGo5LqM56ysMTAsMTHoioJ756ysMS055ZGofWRkAgYPDxYCHwMFE%2BesrDfmlZnnoJTmpbzljZcxMTlkZAIHDw8WAh8DBQMxLjBkZAIIDw8WAh8DBQcyLjAtMC4wZGQCCQ8PFgIfAwUFMDEtMDlkZAIKDw8WAh8DBQIzMGRkAgsPDxYCHwMFAjI5ZGQCDA8PFgIfAwUBMWRkAg0PDxYCHwMFHigyMDE3LTIwMTgtMSktQzAzOTkwMTctMDgwNDYtMWRkAg4PDxYCHwMFBiZuYnNwO2RkAg8PDxYCHwMFCEMwMzk5MDE3ZGQCEA8PFgIfAwUFMDgwNDZkZAIRDw8WAh8DBQzliJvmlrDliJvkuJpkZAISDw8WAh8DBQzliJvkuJrmlZnogrJkZAITDw8WAh8DBQbkuIvmsplkZAIUDw8WAh8DBQYmbmJzcDtkZAIVDw8WAh8DBQznrqHnkIblrabpmaJkZAIWDw8WAh8DBQYmbmJzcDtkZAIXD2QWAgIBDxAPFgIfBmdkZGRkAhgPDxYCHwMFBiZuYnNwO2RkAgcPZBYuAgIPDxYCHwMFTDxhIGhyZWY9J2h0bWwva2N4eC9DMDM5OTAxNS5odG1sJyAgdGFyZ2V0PSdfYmxhbmsnPuaKgOacr%2BWIm%2BaWsOS4juWIm%2BS4mjwvYT5kZAIDDw8WAh8DBQhDMDM5OTAxNWRkAgQPDxYCHwMFOjxhIGhyZWY9J2h0bWwvanN4eC80MTQwMy5odG1sJyAgdGFyZ2V0PSdfYmxhbmsnPuatpuWBpTwvYT5kZAIFDw8WAh8DBR3lkajkuoznrKwxMCwxMeiKgnvnrKwxLTE35ZGofWRkAgYPDxYCHwMFEeesrDEy5pWZ56CU5qW8MzAxZGQCBw8PFgIfAwUDMS4wZGQCCA8PFgIfAwUHMS4wLTAuMGRkAgkPDxYCHwMFBTAxLTE3ZGQCCg8PFgIfAwUCOTBkZAILDw8WAh8DBQIzNWRkAgwPDxYCHwMFAjU1ZGQCDQ8PFgIfAwUeKDIwMTctMjAxOC0xKS1DMDM5OTAxNS00MTQwMy0xZGQCDg8PFgIfAwUGJm5ic3A7ZGQCDw8PFgIfAwUIQzAzOTkwMTVkZAIQDw8WAh8DBQU0MTQwM2RkAhEPDxYCHwMFDOWIm%2BaWsOWIm%2BS4mmRkAhIPDxYCHwMFDOWIm%2BS4muaVmeiCsmRkAhMPDxYCHwMFBuS4i%2BaymWRkAhQPDxYCHwMFBiZuYnNwO2RkAhUPDxYCHwMFDOeuoeeQhuWtpumZomRkAhYPDxYCHwMFBiZuYnNwO2RkAhcPZBYCAgEPEA8WAh8GZ2RkZGQCGA8PFgIfAwUGJm5ic3A7ZGQCCA9kFi4CAg8PFgIfAwVhPGEgaHJlZj0naHRtbC9rY3h4L0MyMjk5MDE3Lmh0bWwnICB0YXJnZXQ9J19ibGFuayc%2B6Leo5aKD55S15ZWG572R57uc5bqX6ZO655qE5Yib5bu65LiO6L%2BQ6JClPC9hPmRkAgMPDxYCHwMFCEMyMjk5MDE3ZGQCBA8PFgIfAwU9PGEgaHJlZj0naHRtbC9qc3h4LzQxNjMzLmh0bWwnICB0YXJnZXQ9J19ibGFuayc%2B6YOt54ix576OPC9hPmRkAgUPDxYCHwMFGuWRqOS4ieesrDEsMuiKgnvnrKwxLTnlkah9ZGQCBg8PFgIfAwUQ56ysOeaVmeeglOalvDMwNWRkAgcPDxYCHwMFAzEuMGRkAggPDxYCHwMFBzEuMC0wLjBkZAIJDw8WAh8DBQUwMS0wOWRkAgoPDxYCHwMFAjM4ZGQCCw8PFgIfAwUCMzdkZAIMDw8WAh8DBQExZGQCDQ8PFgIfAwUeKDIwMTctMjAxOC0xKS1DMjI5OTAxNy00MTYzMy0xZGQCDg8PFgIfAwUGJm5ic3A7ZGQCDw8PFgIfAwUIQzIyOTkwMTdkZAIQDw8WAh8DBQU0MTYzM2RkAhEPDxYCHwMFDOWIm%2BaWsOWIm%2BS4mmRkAhIPDxYCHwMFDOWIm%2BS4muaVmeiCsmRkAhMPDxYCHwMFBuS4i%2BaymWRkAhQPDxYCHwMFBiZuYnNwO2RkAhUPDxYCHwMFDOe7j%2Ba1juWtpumZomRkAhYPDxYCHwMFBiZuYnNwO2RkAhcPZBYCAgEPEA8WAh8GZ2RkZGQCGA8PFgIfAwUGJm5ic3A7ZGQCGA88KwALAQAPFggfCBYAHwkCBB8KAgEfCwIEZBYCZg9kFggCAQ9kFiBmDw8WAh8DBR4oMjAxNy0yMDE4LTEpLUMwMTk5MDE1LTQwNTM3LTFkZAIBDw8WAh8DBSflpKflrabnlJ%2For77lpJbnp5HmioDkvZzlk4HkuI7liJvmlrDlraZkZAICDw8WAh8DBQblgKrmlaxkZAIDDw8WAh8DBQMxLjBkZAIEDw8WAh8DBQcyLjAtMC4wZGQCBQ8PFgIfAwUFMDEtMDlkZAIGDw8WAh8DBQbkuIvmsplkZAIHDw8WAh8DBRrlkajkuInnrKwzLDToioJ756ysMS055ZGofWRkAggPDxYCHwMFEeesrDEx5pWZ56CU5qW8MzAxZGQCCQ8PFgIfAwUGJm5ic3A7ZGQCCg8PFgIfAwUBMGRkAgsPDxYCHwMFDOWIm%2BaWsOWIm%2BS4mmRkAgwPDxYCHwMFDOWIm%2BaWsOS7u%2BmAiWRkAg0PDxYCHwMFBuS4i%2BaymWRkAg4PDxYCHwMFBiZuYnNwO2RkAg8PDxYCHwMFBiZuYnNwO2RkAgIPZBYgZg8PFgIfAwUeKDIwMTctMjAxOC0xKS1DMDM5OTAwMi00MDk1OS0xZGQCAQ8PFgIfAwUP5biC5Zy66JCl6ZSA5a2mZGQCAg8PFgIfAwUJ6K645pmT5YawZGQCAw8PFgIfAwUDMi4wZGQCBA8PFgIfAwUHMi4wLTAuMGRkAgUPDxYCHwMFBTAxLTE3ZGQCBg8PFgIfAwUG5LiL5rKZZGQCBw8PFgIfAwUd5ZGo5LiJ56ysMTAsMTHoioJ756ysMS0xN%2BWRqH1kZAIIDw8WAh8DBRHnrKwxMeaVmeeglOalvDQwM2RkAgkPDxYCHwMFBiZuYnNwO2RkAgoPDxYCHwMFATBkZAILDw8WAh8DBQzmoKHlhazpgInor75kZAIMDw8WAh8DBQznu4%2FnrqHku7vpgIlkZAINDw8WAh8DBQbkuIvmsplkZAIODw8WAh8DBQYmbmJzcDtkZAIPDw8WAh8DBQYmbmJzcDtkZAIDD2QWIGYPDxYCHwMFHigyMDE3LTIwMTgtMSktQzE1OTkwMDktMTYwMTMtM2RkAgEPDxYCHwMFD%2BWkp%2BWtpueUn%2BS4juazlWRkAgIPDxYCHwMFCeiSi%2BWwj%2BiKsWRkAgMPDxYCHwMFAzIuMGRkAgQPDxYCHwMFBzIuMC0wLjBkZAIFDw8WAh8DBQUwMS0xN2RkAgYPDxYCHwMFBuS4i%2BaymWRkAgcPDxYCHwMFG%2BWRqOS4gOesrDgsOeiKgnvnrKwxLTE35ZGofWRkAggPDxYCHwMFEeesrDEy5pWZ56CU5qW8NDAzZGQCCQ8PFgIfAwUGJm5ic3A7ZGQCCg8PFgIfAwUBMGRkAgsPDxYCHwMFDOagoeWFrOmAieivvmRkAgwPDxYCHwMFDOS6uuaWh%2BS7u%2BmAiWRkAg0PDxYCHwMFBuS4i%2BaymWRkAg4PDxYCHwMFBiZuYnNwO2RkAg8PDxYCHwMFBiZuYnNwO2RkAgQPZBYgZg8PFgIfAwUeKDIwMTctMjAxOC0xKS1DMjIwOTAyMC00MDYyMS0xZGQCAQ8PFgIfAwUb5qyn5rSy57uP5rWO5LiO5a6X5pWZ5paH5YyWZGQCAg8PFgIfAwUG5pyx5ZaGZGQCAw8PFgIfAwUDMi4wZGQCBA8PFgIfAwUHMi4wLTAuMGRkAgUPDxYCHwMFBTAxLTE3ZGQCBg8PFgIfAwUG5LiL5rKZZGQCBw8PFgIfAwUd5ZGo5LiA56ysMTAsMTHoioJ756ysMS0xN%2BWRqH1kZAIIDw8WAh8DBRHnrKwxMuaVmeeglOalvDMxNmRkAgkPDxYCHwMFBiZuYnNwO2RkAgoPDxYCHwMFATBkZAILDw8WAh8DBQzmoKHlhazpgInor75kZAIMDw8WAh8DBQznu4%2FnrqHku7vpgIlkZAINDw8WAh8DBQbkuIvmsplkZAIODw8WAh8DBQYmbmJzcDtkZAIPDw8WAh8DBQYmbmJzcDtkZAIdDzwrAAsBAA8WAh8HaGRkGAEFHl9fQ29udHJvbHNSZXF1aXJlUG9zdEJhY2tLZXlfXxYQBRFrY21jR3JpZCRjdGwwMiR4awURa2NtY0dyaWQkY3RsMDIkamMFEWtjbWNHcmlkJGN0bDAzJHhrBRFrY21jR3JpZCRjdGwwMyRqYwURa2NtY0dyaWQkY3RsMDQkeGsFEWtjbWNHcmlkJGN0bDA0JGpjBRFrY21jR3JpZCRjdGwwNSR4awURa2NtY0dyaWQkY3RsMDUkamMFEWtjbWNHcmlkJGN0bDA2JHhrBRFrY21jR3JpZCRjdGwwNiRqYwURa2NtY0dyaWQkY3RsMDckeGsFEWtjbWNHcmlkJGN0bDA3JGpjBRFrY21jR3JpZCRjdGwwOCR4awURa2NtY0dyaWQkY3RsMDgkamMFEWtjbWNHcmlkJGN0bDA5JHhrBRFrY21jR3JpZCRjdGwwOSRqYw%3D%3D&amp;__EVENTVALIDATION=%2FwEWVQLQ2oDLDgKP3%2B6lAgKH0Z6ECgL91OO8DAL%2Bp46CCgK7isW0CgLNiMH%2FCgKMhdnrDQKS18q3CALm6%2FqHCgLapanLAQK9v7mmBwKA4u2DAwLQm9zvAwKm8d%2BQCgKP3%2B6lAgKYyPTRDwK%2F4d%2B%2FAwLY7N%2B%2FAwKYyPTRDwKQrrE3Avj%2F7KwDAuWI%2F7gPAp%2BX65cNArzExU4CypTMtQQCkK6xNwLQ6dL2DgLfhviYAgLehviYAgLdhviYAgLchviYAgLbhviYAgLahviYAgLEv9%2BHDgLememCAgKKgPyIBwL875PVAwLTyojXBgL2mYG6AQLnibvFBgLp%2F%2BKXBQKumL7PCwKu7M34DAKumP6bBQKxzYzeBQKtrb2RAwKSrpdfAqTexPUFAqrU07gGAuLUhYIEAoWJ758EAvvh2fYFAvezxNEDApGYivMEArODy8cNAs340o4OAsS%2F34cOAuzRsusGArursYYIAoXZ9dsDAqDCk%2FENAvCq0aUGAviquakMAvCq1aYGAviqvaoMAvCqyaMGAviqsacMAvCqzaQGAviqtagMAvCqwaEGAviqqaUMAvCqxaIGAviqraYMAvCquZ8GAviqoaMMAvCqvaAGAviqpaQMAtmIhacPAryB%2BuoCAvfD3dgHArKGwcYMApL71pwLAoznisYGAtOU4MYN&amp;ddl_kcxz=&amp;ddl_ywyl=%D3%D0&amp;ddl_kcgs=%D0%A3%B9%AB%D1%A1%BF%CE&amp;ddl_xqbs=1&amp;ddl_sksj=&amp;TextBox1=&amp;txtYz=&amp;hidXNXQ=2017-20181'\r\n    url='http://jxgl.hdu.edu.cn/xf_xsqxxxk.aspx?xh='+xh+'&amp;xm=%25%5cB8%25%5cCA%25%5cBC%25%5cD2%25%5cB3%25%5cC7&amp;gnmkdm=N121113'\r\n    resp=req.post(url,data=data)\r\n    resp.encoding='gbk'\r\n    print(resp.text)\r\n\r\n#主程序，设置学号密码并运行\r\nif __name__=='__main__':\r\n    xh='学号'\r\n    psd='密码'\r\n    lt=getHduCookie()\r\n    tmpurl=simLogin(lt)\r\n    req=jxglPage(tmpurl)\r\n    classList(req)</pre>\r\n学习为主，连我都不信。\r\n\r\n温馨提醒：此片不要与<a href=\"https://ganjiacheng.cn/blog/?p=368\">hack验证二维码篇</a>结合搞事情啦！",
            "post_title": "爬进数字杭电python篇",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "402-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-9-6 10:42:13",
            "post_modified_gmt": "2017-9-6 02:42:13",
            "post_content_filtered": "",
            "post_parent": "402",
            "guid": "http://ganjiacheng.cn/blog/?p=404",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "405",
            "post_author": "1",
            "post_date": "2017-9-6 10:43:27",
            "post_date_gmt": "2017-9-6 02:43:27",
            "post_content": "上次有的<a href=\"https://ganjiacheng.cn/blog/?p=63\">php篇数字杭电模拟登陆</a>，不过由于如今没有了验证码，可能会出点小错误，因此用python再来进进出出一遍。\r\n\r\n此次主要还是熟悉一下python requests的使用以及对网站cookie变化的准确捕捉。post的参数以及header也是这里的重点部分，其他还能加点简单的正则。<!--more-->\r\n\r\n具体细节在代码注释里：\r\n<pre>import requests\r\nimport re\r\n\r\n#先访问一次登录网站得到lt（lt后面必须，且一次性使用）\r\ndef getHduCookie():\r\n    resp=requests.get('http://cas.hdu.edu.cn/cas/login')\r\n    m = re.search(r'name=\\\"lt\\\" value=(.*?) /&gt;', resp.text)\r\n    lt=m.group()[17:-4]\r\n    return lt\r\n\r\n#模拟登陆用户名为学号，密码为md5加密后的密码，返回跳转链接\r\ndef simLogin(lt):\r\n    password=hashlib.md5(psd.encode('utf-8')).hexdigest()\r\n    params={\r\n        'encodedService':'http%3a%2f%2fi.hdu.edu.cn%2fdcp%2findex.jsp',\r\n        'service':'http://i.hdu.edu.cn/dcp/index.jsp',\r\n        'username':xh,\r\n        'password':password,\r\n        'lt':lt\r\n    }\r\n    resp=requests.post('http://cas.hdu.edu.cn/cas/login?service=http://jxgl.hdu.edu.cn/index.aspx',params=params)\r\n    m=re.search(r'href=\"(.*?)\"',resp.text)\r\n    return m.group()[6:-1]\r\n\r\n#去临时链接获取一次cookie并保存请求\r\ndef jxglPage(url):\r\n    req=requests.Session()\r\n    resp0=req.get(url)\r\n    req.headers={\r\n        'User-Agent':'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36',\r\n        'Referer':'http://jxgl.hdu.edu.cn/xf_xsqxxxk.aspx?xh='+xh+'&amp;xm=%25%5cB8%25%5cCA%25%5cBC%25%5cD2%25%5cB3%25%5cC7&amp;gnmkdm=N121113',\r\n        'Accept-Encoding': 'gzip, deflate',\r\n        'Content-Type':'application/x-www-form-urlencoded',\r\n    }\r\n    return req\r\n\r\n#这里的例子是获取选课列表\r\ndef classList(req):\r\n    data='__EVENTTARGET=ddl_kcgs&amp;__EVENTARGUMENT=&amp;__LASTFOCUS=&amp;__VIEWSTATE=%2FwEPDwUKLTcxMzExNjMwMw8WBh4FZHFzemoFBDIwMTUeBHp5ZG0FBDA0MjAeCXNvcnRPcmRlcgUFIGFzYyAWAgIBD2QWFAIBDw8WAh4EVGV4dAV75aeT5ZCN77ya55SY5a625Z%2BOJm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A75a2m6Zmi77ya55S15a2Q5L%2Bh5oGv5a2m6ZmiJm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A75LiT5Lia77ya55S15a2Q56eR5a2m5LiO5oqA5pyvZGQCAw8QDxYGHg1EYXRhVGV4dEZpZWxkBQRrY3h6Hg5EYXRhVmFsdWVGaWVsZAUEa2N4eh4LXyFEYXRhQm91bmRnZBAVDgzliJvmlrDku7vpgIkM5Yib5Lia5pWZ6IKyDOWFrOWFsemAieS%2Frgznu4%2FnrqHku7vpgIkM56eR5oqA5Lu76YCJDOivvuWkluW%2FheS%2FrgzlhbblroPku7vpgIkM5Lq65paH5Lu76YCJBuS7u%2BmAiQblrp7ot7UM5aSW6K%2Bt5qih5Z2XEuW%2Fg%2BeQhuWBpeW6t%2BmAieS%2FrgzoibrmnK%2Fku7vpgIkAFQ4M5Yib5paw5Lu76YCJDOWIm%2BS4muaVmeiCsgzlhazlhbHpgInkv64M57uP566h5Lu76YCJDOenkeaKgOS7u%2BmAiQzor77lpJblv4Xkv64M5YW25a6D5Lu76YCJDOS6uuaWh%2BS7u%2BmAiQbku7vpgIkG5a6e6Le1DOWkluivreaooeWdlxLlv4PnkIblgaXlurfpgInkv64M6Im65pyv5Lu76YCJABQrAw5nZ2dnZ2dnZ2dnZ2dnZ2RkAgUPEGQPFgNmAgECAhYDEAUD5pyJBQPmnIlnEAUD5pegBQPml6BnEGVlZxYBZmQCBw8QDxYGHwQFBGtjZ3MfBQUEa2Nncx8GZ2QQFQYM5Yib5paw5Yib5LiaDOWFrOWFseW%2FheS%2Frgzor77lpJbmlZnogrIM5qCh5YWs6YCJ6K%2B%2BD%2BagoemZhemAieS%2FruivvgAVBgzliJvmlrDliJvkuJoM5YWs5YWx5b%2BF5L%2BuDOivvuWkluaVmeiCsgzmoKHlhazpgInor74P5qCh6ZmF6YCJ5L%2Bu6K%2B%2BABQrAwZnZ2dnZ2cWAWZkAgkPEA8WBh8EBQR4cW1jHwUFBHhxZG0fBmdkEBUGBuS4i%2BaymQbkuJzlsrMG5paH5LiABuS4jeWumgnkuJzmoKHljLoJ6Z2S5bGx5rmWFQYBMQEyATMBNAE1ATYUKwMGZ2dnZ2dnFgFmZAILDxAPFgYfBAUEc2tzah8FBQRza3NqHwZnZBAVFx3lkajkuoznrKwxMCwxMeiKgnvnrKwxLTE35ZGofRzlkajkuoznrKwxMCwxMeiKgnvnrKwxLTnlkah9HuWRqOS6jOesrDEwLDEx6IqCe%2BesrDEwLTE35ZGofRvlkajkuoznrKw2LDfoioJ756ysMS0xN%2BWRqH0i5ZGo5LqM56ysOCw56IqCe%2BesrDEtMTflkah85Y2V5ZGofRvlkajkuoznrKw4LDnoioJ756ysMS0xN%2BWRqH0c5ZGo5LqM56ysOCw56IqCe%2BesrDEwLTE35ZGofRrlkajkuInnrKwxLDLoioJ756ysMS055ZGofR3lkajkuInnrKwxMCwxMeiKgnvnrKwxLTE35ZGofRrlkajkuInnrKwzLDToioJ756ysMS055ZGofR3lkajlm5vnrKwxMCwxMeiKgnvnrKwxLTE35ZGofR7lkajlm5vnrKwxMCwxMeiKgnvnrKwxMC0xN%2BWRqH0i5ZGo5Zub56ysOCw56IqCe%2BesrDEtMTflkah85Y2V5ZGofRvlkajlm5vnrKw4LDnoioJ756ysMS0xN%2BWRqH0c5ZGo5Zub56ysOCw56IqCe%2BesrDEwLTE35ZGofRrlkajkupTnrKw2LDfoioJ756ysMS055ZGofRvlkajkupTnrKw4LDnoioJ756ysNC0xMeWRqH0d5ZGo5LiA56ysMTAsMTHoioJ756ysMS0xN%2BWRqH0e5ZGo5LiA56ysMTAsMTHoioJ756ysMTAtMTflkah9GuWRqOS4gOesrDMsNOiKgnvnrKwxLTnlkah9G%2BWRqOS4gOesrDgsOeiKgnvnrKwxLTE35ZGofRzlkajkuIDnrKw4LDnoioJ756ysMTAtMTflkah9ABUXHeWRqOS6jOesrDEwLDEx6IqCe%2BesrDEtMTflkah9HOWRqOS6jOesrDEwLDEx6IqCe%2BesrDEtOeWRqH0e5ZGo5LqM56ysMTAsMTHoioJ756ysMTAtMTflkah9G%2BWRqOS6jOesrDYsN%2BiKgnvnrKwxLTE35ZGofSLlkajkuoznrKw4LDnoioJ756ysMS0xN%2BWRqHzljZXlkah9G%2BWRqOS6jOesrDgsOeiKgnvnrKwxLTE35ZGofRzlkajkuoznrKw4LDnoioJ756ysMTAtMTflkah9GuWRqOS4ieesrDEsMuiKgnvnrKwxLTnlkah9HeWRqOS4ieesrDEwLDEx6IqCe%2BesrDEtMTflkah9GuWRqOS4ieesrDMsNOiKgnvnrKwxLTnlkah9HeWRqOWbm%2BesrDEwLDEx6IqCe%2BesrDEtMTflkah9HuWRqOWbm%2BesrDEwLDEx6IqCe%2BesrDEwLTE35ZGofSLlkajlm5vnrKw4LDnoioJ756ysMS0xN%2BWRqHzljZXlkah9G%2BWRqOWbm%2BesrDgsOeiKgnvnrKwxLTE35ZGofRzlkajlm5vnrKw4LDnoioJ756ysMTAtMTflkah9GuWRqOS6lOesrDYsN%2BiKgnvnrKwxLTnlkah9G%2BWRqOS6lOesrDgsOeiKgnvnrKw0LTEx5ZGofR3lkajkuIDnrKwxMCwxMeiKgnvnrKwxLTE35ZGofR7lkajkuIDnrKwxMCwxMeiKgnvnrKwxMC0xN%2BWRqH0a5ZGo5LiA56ysMyw06IqCe%2BesrDEtOeWRqH0b5ZGo5LiA56ysOCw56IqCe%2BesrDEtMTflkah9HOWRqOS4gOesrDgsOeiKgnvnrKwxMC0xN%2BWRqH0AFCsDF2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnFgECFmQCEQ8PFgIeB1Zpc2libGVoZGQCFg88KwALAQAPFggeCERhdGFLZXlzFgAeC18hSXRlbUNvdW50AggeCVBhZ2VDb3VudAIBHhVfIURhdGFTb3VyY2VJdGVtQ291bnQCCGQWAmYPZBYQAgEPZBYuAgIPDxYCHwMFSTxhIGhyZWY9J2h0bWwva2N4eC9DMTI5OTA0Ni5odG1sJyAgdGFyZ2V0PSdfYmxhbmsnPuWIm%2BS4muazleW%2Bi%2BWunuWKoTwvYT5kZAIDDw8WAh8DBQhDMTI5OTA0NmRkAgQPDxYCHwMFPTxhIGhyZWY9J2h0bWwvanN4eC8wNDA5Ni5odG1sJyAgdGFyZ2V0PSdfYmxhbmsnPuadjuW6huWzsDwvYT5kZAIFDw8WAh8DBR3lkajkuoznrKwxMCwxMeiKgnvnrKwxLTE35ZGofWRkAgYPDxYCHwMFEeesrDEx5pWZ56CU5qW8MjAxZGQCBw8PFgIfAwUDMS4wZGQCCA8PFgIfAwUHMi4wLTAuMGRkAgkPDxYCHwMFBTAxLTE3ZGQCCg8PFgIfAwUCNDBkZAILDw8WAh8DBQIzN2RkAgwPDxYCHwMFATNkZAINDw8WAh8DBR4oMjAxNy0yMDE4LTEpLUMxMjk5MDQ2LTA0MDk2LTFkZAIODw8WAh8DBQYmbmJzcDtkZAIPDw8WAh8DBQhDMTI5OTA0NmRkAhAPDxYCHwMFBTA0MDk2ZGQCEQ8PFgIfAwUM5Yib5paw5Yib5LiaZGQCEg8PFgIfAwUM5Yib5Lia5pWZ6IKyZGQCEw8PFgIfAwUG5LiL5rKZZGQCFA8PFgIfAwUGJm5ic3A7ZGQCFQ8PFgIfAwUS5Lq65paH5LiO5rOV5a2m6ZmiZGQCFg8PFgIfAwUGJm5ic3A7ZGQCFw9kFgICAQ8QDxYCHwZnZGRkZAIYDw8WAh8DBQYmbmJzcDtkZAICD2QWLgICDw8WAh8DBUM8YSBocmVmPSdodG1sL2tjeHgvQzAzOTkwMDYuaHRtbCcgIHRhcmdldD0nX2JsYW5rJz7liJvkuJrnrqHnkIY8L2E%2BZGQCAw8PFgIfAwUIQzAzOTkwMDZkZAIEDw8WAh8DBT08YSBocmVmPSdodG1sL2pzeHgvMDgwNDUuaHRtbCcgIHRhcmdldD0nX2JsYW5rJz7liJjmraPliJo8L2E%2BZGQCBQ8PFgIfAwUd5ZGo5LiJ56ysMTAsMTHoioJ756ysMS0xN%2BWRqH1kZAIGDw8WAh8DBRHnrKwxMeaVmeeglOalvDIwNmRkAgcPDxYCHwMFAzIuMGRkAggPDxYCHwMFBzIuMC0wLjBkZAIJDw8WAh8DBQUwMS0xN2RkAgoPDxYCHwMFAjMwZGQCCw8PFgIfAwUCMjlkZAIMDw8WAh8DBQExZGQCDQ8PFgIfAwUeKDIwMTctMjAxOC0xKS1DMDM5OTAwNi0wODA0NS0xZGQCDg8PFgIfAwUGJm5ic3A7ZGQCDw8PFgIfAwUIQzAzOTkwMDZkZAIQDw8WAh8DBQUwODA0NWRkAhEPDxYCHwMFDOWIm%2BaWsOWIm%2BS4mmRkAhIPDxYCHwMFDOWIm%2BS4muaVmeiCsmRkAhMPDxYCHwMFBuS4i%2BaymWRkAhQPDxYCHwMFBiZuYnNwO2RkAhUPDxYCHwMFDOeuoeeQhuWtpumZomRkAhYPDxYCHwMFBiZuYnNwO2RkAhcPZBYCAgEPEA8WAh8GZ2RkZGQCGA8PFgIfAwUGJm5ic3A7ZGQCAw9kFi4CAg8PFgIfAwVVPGEgaHJlZj0naHRtbC9rY3h4L0MwMzk5MDE4Lmh0bWwnICB0YXJnZXQ9J19ibGFuayc%2B5Yib5Lia5LyB5Lia5ZWG5Lia5qih5byP566h55CGPC9hPmRkAgMPDxYCHwMFCEMwMzk5MDE4ZGQCBA8PFgIfAwU9PGEgaHJlZj0naHRtbC9qc3h4LzQwNzE0Lmh0bWwnICB0YXJnZXQ9J19ibGFuayc%2B6IOh5L%2Bd5LquPC9hPmRkAgUPDxYCHwMFIuWRqOS6jOesrDgsOeiKgnvnrKwxLTE35ZGofOWNleWRqH1kZAIGDw8WAh8DBRPnrKw35pWZ56CU5qW85Y2XNDA5ZGQCBw8PFgIfAwUDMS4wZGQCCA8PFgIfAwUHMS4wLTAuMGRkAgkPDxYCHwMFBTAxLTE3ZGQCCg8PFgIfAwUCMzBkZAILDw8WAh8DBQIyOWRkAgwPDxYCHwMFATFkZAINDw8WAh8DBR4oMjAxNy0yMDE4LTEpLUMwMzk5MDE4LTQwNzE0LTFkZAIODw8WAh8DBQYmbmJzcDtkZAIPDw8WAh8DBQhDMDM5OTAxOGRkAhAPDxYCHwMFBTQwNzE0ZGQCEQ8PFgIfAwUM5Yib5paw5Yib5LiaZGQCEg8PFgIfAwUM5Yib5Lia5pWZ6IKyZGQCEw8PFgIfAwUG5LiL5rKZZGQCFA8PFgIfAwUGJm5ic3A7ZGQCFQ8PFgIfAwUM566h55CG5a2m6ZmiZGQCFg8PFgIfAwUGJm5ic3A7ZGQCFw9kFgICAQ8QDxYCHwZnZGRkZAIYDw8WAh8DBQYmbmJzcDtkZAIED2QWLgICDw8WAh8DBUk8YSBocmVmPSdodG1sL2tjeHgvQzAzOTkwMjIuaHRtbCcgIHRhcmdldD0nX2JsYW5rJz7liJvkuJrov5DokKXku7%2FnnJ88L2E%2BZGQCAw8PFgIfAwUIQzAzOTkwMjJkZAIEDw8WAh8DBUc8YSBocmVmPSdodG1sL2pzeHgvMDgwNDYuaHRtbCcgIHRhcmdldD0nX2JsYW5rJz7lrZnnh5Xlhpsv5rGd6YaS5ZCbPC9hPmRkAgUPDxYCHwMFHOWRqOS4gOesrDgsOeiKgnvnrKwxMC0xN%2BWRqH1kZAIGDw8WAh8DBRDnrKwz5pWZ56CU5qW8MTExZGQCBw8PFgIfAwUDMS4wZGQCCA8PFgIfAwUHMi4wLTAuMGRkAgkPDxYCHwMFBTEwLTE3ZGQCCg8PFgIfAwUCNjBkZAILDw8WAh8DBQI1M2RkAgwPDxYCHwMFATdkZAINDw8WAh8DBR4oMjAxNy0yMDE4LTEpLUMwMzk5MDIyLTA4MDQ2LTJkZAIODw8WAh8DBQYmbmJzcDtkZAIPDw8WAh8DBQhDMDM5OTAyMmRkAhAPDxYCHwMFBTA4MDQ2ZGQCEQ8PFgIfAwUM5Yib5paw5Yib5LiaZGQCEg8PFgIfAwUM5Yib5Lia5pWZ6IKyZGQCEw8PFgIfAwUG5LiL5rKZZGQCFA8PFgIfAwUGJm5ic3A7ZGQCFQ8PFgIfAwUM566h55CG5a2m6ZmiZGQCFg8PFgIfAwUGJm5ic3A7ZGQCFw9kFgICAQ8QDxYCHwZnZGRkZAIYDw8WAh8DBQYmbmJzcDtkZAIFD2QWLgICDw8WAh8DBUk8YSBocmVmPSdodG1sL2tjeHgvQzAzOTkwMjIuaHRtbCcgIHRhcmdldD0nX2JsYW5rJz7liJvkuJrov5DokKXku7%2FnnJ88L2E%2BZGQCAw8PFgIfAwUIQzAzOTkwMjJkZAIEDw8WAh8DBTo8YSBocmVmPSdodG1sL2pzeHgvMjkwMTIuaHRtbCcgIHRhcmdldD0nX2JsYW5rJz7mnY7mmZM8L2E%2BZGQCBQ8PFgIfAwUc5ZGo5LqM56ysOCw56IqCe%2BesrDEwLTE35ZGofWRkAgYPDxYCHwMFEOesrDPmlZnnoJTmpbwxMTVkZAIHDw8WAh8DBQMxLjBkZAIIDw8WAh8DBQcyLjAtMC4wZGQCCQ8PFgIfAwUFMTAtMTdkZAIKDw8WAh8DBQI2MGRkAgsPDxYCHwMFAjQ5ZGQCDA8PFgIfAwUCMTFkZAINDw8WAh8DBR4oMjAxNy0yMDE4LTEpLUMwMzk5MDIyLTI5MDEyLTJkZAIODw8WAh8DBQYmbmJzcDtkZAIPDw8WAh8DBQhDMDM5OTAyMmRkAhAPDxYCHwMFBTI5MDEyZGQCEQ8PFgIfAwUM5Yib5paw5Yib5LiaZGQCEg8PFgIfAwUM5Yib5Lia5pWZ6IKyZGQCEw8PFgIfAwUG5LiL5rKZZGQCFA8PFgIfAwUGJm5ic3A7ZGQCFQ8PFgIfAwUM566h55CG5a2m6ZmiZGQCFg8PFgIfAwUGJm5ic3A7ZGQCFw9kFgICAQ8QDxYCHwZnZGRkZAIYDw8WAh8DBQYmbmJzcDtkZAIGD2QWLgICDw8WAh8DBU88YSBocmVmPSdodG1sL2tjeHgvQzAzOTkwMTcuaHRtbCcgIHRhcmdldD0nX2JsYW5rJz7kupLogZTnvZHliJvmlrDkuI7liJvkuJo8L2E%2BZGQCAw8PFgIfAwUIQzAzOTkwMTdkZAIEDw8WAh8DBT08YSBocmVmPSdodG1sL2pzeHgvMDgwNDYuaHRtbCcgIHRhcmdldD0nX2JsYW5rJz7lrZnnh5Xlhps8L2E%2BZGQCBQ8PFgIfAwUc5ZGo5LqM56ysMTAsMTHoioJ756ysMS055ZGofWRkAgYPDxYCHwMFE%2BesrDfmlZnnoJTmpbzljZcxMTlkZAIHDw8WAh8DBQMxLjBkZAIIDw8WAh8DBQcyLjAtMC4wZGQCCQ8PFgIfAwUFMDEtMDlkZAIKDw8WAh8DBQIzMGRkAgsPDxYCHwMFAjI5ZGQCDA8PFgIfAwUBMWRkAg0PDxYCHwMFHigyMDE3LTIwMTgtMSktQzAzOTkwMTctMDgwNDYtMWRkAg4PDxYCHwMFBiZuYnNwO2RkAg8PDxYCHwMFCEMwMzk5MDE3ZGQCEA8PFgIfAwUFMDgwNDZkZAIRDw8WAh8DBQzliJvmlrDliJvkuJpkZAISDw8WAh8DBQzliJvkuJrmlZnogrJkZAITDw8WAh8DBQbkuIvmsplkZAIUDw8WAh8DBQYmbmJzcDtkZAIVDw8WAh8DBQznrqHnkIblrabpmaJkZAIWDw8WAh8DBQYmbmJzcDtkZAIXD2QWAgIBDxAPFgIfBmdkZGRkAhgPDxYCHwMFBiZuYnNwO2RkAgcPZBYuAgIPDxYCHwMFTDxhIGhyZWY9J2h0bWwva2N4eC9DMDM5OTAxNS5odG1sJyAgdGFyZ2V0PSdfYmxhbmsnPuaKgOacr%2BWIm%2BaWsOS4juWIm%2BS4mjwvYT5kZAIDDw8WAh8DBQhDMDM5OTAxNWRkAgQPDxYCHwMFOjxhIGhyZWY9J2h0bWwvanN4eC80MTQwMy5odG1sJyAgdGFyZ2V0PSdfYmxhbmsnPuatpuWBpTwvYT5kZAIFDw8WAh8DBR3lkajkuoznrKwxMCwxMeiKgnvnrKwxLTE35ZGofWRkAgYPDxYCHwMFEeesrDEy5pWZ56CU5qW8MzAxZGQCBw8PFgIfAwUDMS4wZGQCCA8PFgIfAwUHMS4wLTAuMGRkAgkPDxYCHwMFBTAxLTE3ZGQCCg8PFgIfAwUCOTBkZAILDw8WAh8DBQIzNWRkAgwPDxYCHwMFAjU1ZGQCDQ8PFgIfAwUeKDIwMTctMjAxOC0xKS1DMDM5OTAxNS00MTQwMy0xZGQCDg8PFgIfAwUGJm5ic3A7ZGQCDw8PFgIfAwUIQzAzOTkwMTVkZAIQDw8WAh8DBQU0MTQwM2RkAhEPDxYCHwMFDOWIm%2BaWsOWIm%2BS4mmRkAhIPDxYCHwMFDOWIm%2BS4muaVmeiCsmRkAhMPDxYCHwMFBuS4i%2BaymWRkAhQPDxYCHwMFBiZuYnNwO2RkAhUPDxYCHwMFDOeuoeeQhuWtpumZomRkAhYPDxYCHwMFBiZuYnNwO2RkAhcPZBYCAgEPEA8WAh8GZ2RkZGQCGA8PFgIfAwUGJm5ic3A7ZGQCCA9kFi4CAg8PFgIfAwVhPGEgaHJlZj0naHRtbC9rY3h4L0MyMjk5MDE3Lmh0bWwnICB0YXJnZXQ9J19ibGFuayc%2B6Leo5aKD55S15ZWG572R57uc5bqX6ZO655qE5Yib5bu65LiO6L%2BQ6JClPC9hPmRkAgMPDxYCHwMFCEMyMjk5MDE3ZGQCBA8PFgIfAwU9PGEgaHJlZj0naHRtbC9qc3h4LzQxNjMzLmh0bWwnICB0YXJnZXQ9J19ibGFuayc%2B6YOt54ix576OPC9hPmRkAgUPDxYCHwMFGuWRqOS4ieesrDEsMuiKgnvnrKwxLTnlkah9ZGQCBg8PFgIfAwUQ56ysOeaVmeeglOalvDMwNWRkAgcPDxYCHwMFAzEuMGRkAggPDxYCHwMFBzEuMC0wLjBkZAIJDw8WAh8DBQUwMS0wOWRkAgoPDxYCHwMFAjM4ZGQCCw8PFgIfAwUCMzdkZAIMDw8WAh8DBQExZGQCDQ8PFgIfAwUeKDIwMTctMjAxOC0xKS1DMjI5OTAxNy00MTYzMy0xZGQCDg8PFgIfAwUGJm5ic3A7ZGQCDw8PFgIfAwUIQzIyOTkwMTdkZAIQDw8WAh8DBQU0MTYzM2RkAhEPDxYCHwMFDOWIm%2BaWsOWIm%2BS4mmRkAhIPDxYCHwMFDOWIm%2BS4muaVmeiCsmRkAhMPDxYCHwMFBuS4i%2BaymWRkAhQPDxYCHwMFBiZuYnNwO2RkAhUPDxYCHwMFDOe7j%2Ba1juWtpumZomRkAhYPDxYCHwMFBiZuYnNwO2RkAhcPZBYCAgEPEA8WAh8GZ2RkZGQCGA8PFgIfAwUGJm5ic3A7ZGQCGA88KwALAQAPFggfCBYAHwkCBB8KAgEfCwIEZBYCZg9kFggCAQ9kFiBmDw8WAh8DBR4oMjAxNy0yMDE4LTEpLUMwMTk5MDE1LTQwNTM3LTFkZAIBDw8WAh8DBSflpKflrabnlJ%2For77lpJbnp5HmioDkvZzlk4HkuI7liJvmlrDlraZkZAICDw8WAh8DBQblgKrmlaxkZAIDDw8WAh8DBQMxLjBkZAIEDw8WAh8DBQcyLjAtMC4wZGQCBQ8PFgIfAwUFMDEtMDlkZAIGDw8WAh8DBQbkuIvmsplkZAIHDw8WAh8DBRrlkajkuInnrKwzLDToioJ756ysMS055ZGofWRkAggPDxYCHwMFEeesrDEx5pWZ56CU5qW8MzAxZGQCCQ8PFgIfAwUGJm5ic3A7ZGQCCg8PFgIfAwUBMGRkAgsPDxYCHwMFDOWIm%2BaWsOWIm%2BS4mmRkAgwPDxYCHwMFDOWIm%2BaWsOS7u%2BmAiWRkAg0PDxYCHwMFBuS4i%2BaymWRkAg4PDxYCHwMFBiZuYnNwO2RkAg8PDxYCHwMFBiZuYnNwO2RkAgIPZBYgZg8PFgIfAwUeKDIwMTctMjAxOC0xKS1DMDM5OTAwMi00MDk1OS0xZGQCAQ8PFgIfAwUP5biC5Zy66JCl6ZSA5a2mZGQCAg8PFgIfAwUJ6K645pmT5YawZGQCAw8PFgIfAwUDMi4wZGQCBA8PFgIfAwUHMi4wLTAuMGRkAgUPDxYCHwMFBTAxLTE3ZGQCBg8PFgIfAwUG5LiL5rKZZGQCBw8PFgIfAwUd5ZGo5LiJ56ysMTAsMTHoioJ756ysMS0xN%2BWRqH1kZAIIDw8WAh8DBRHnrKwxMeaVmeeglOalvDQwM2RkAgkPDxYCHwMFBiZuYnNwO2RkAgoPDxYCHwMFATBkZAILDw8WAh8DBQzmoKHlhazpgInor75kZAIMDw8WAh8DBQznu4%2FnrqHku7vpgIlkZAINDw8WAh8DBQbkuIvmsplkZAIODw8WAh8DBQYmbmJzcDtkZAIPDw8WAh8DBQYmbmJzcDtkZAIDD2QWIGYPDxYCHwMFHigyMDE3LTIwMTgtMSktQzE1OTkwMDktMTYwMTMtM2RkAgEPDxYCHwMFD%2BWkp%2BWtpueUn%2BS4juazlWRkAgIPDxYCHwMFCeiSi%2BWwj%2BiKsWRkAgMPDxYCHwMFAzIuMGRkAgQPDxYCHwMFBzIuMC0wLjBkZAIFDw8WAh8DBQUwMS0xN2RkAgYPDxYCHwMFBuS4i%2BaymWRkAgcPDxYCHwMFG%2BWRqOS4gOesrDgsOeiKgnvnrKwxLTE35ZGofWRkAggPDxYCHwMFEeesrDEy5pWZ56CU5qW8NDAzZGQCCQ8PFgIfAwUGJm5ic3A7ZGQCCg8PFgIfAwUBMGRkAgsPDxYCHwMFDOagoeWFrOmAieivvmRkAgwPDxYCHwMFDOS6uuaWh%2BS7u%2BmAiWRkAg0PDxYCHwMFBuS4i%2BaymWRkAg4PDxYCHwMFBiZuYnNwO2RkAg8PDxYCHwMFBiZuYnNwO2RkAgQPZBYgZg8PFgIfAwUeKDIwMTctMjAxOC0xKS1DMjIwOTAyMC00MDYyMS0xZGQCAQ8PFgIfAwUb5qyn5rSy57uP5rWO5LiO5a6X5pWZ5paH5YyWZGQCAg8PFgIfAwUG5pyx5ZaGZGQCAw8PFgIfAwUDMi4wZGQCBA8PFgIfAwUHMi4wLTAuMGRkAgUPDxYCHwMFBTAxLTE3ZGQCBg8PFgIfAwUG5LiL5rKZZGQCBw8PFgIfAwUd5ZGo5LiA56ysMTAsMTHoioJ756ysMS0xN%2BWRqH1kZAIIDw8WAh8DBRHnrKwxMuaVmeeglOalvDMxNmRkAgkPDxYCHwMFBiZuYnNwO2RkAgoPDxYCHwMFATBkZAILDw8WAh8DBQzmoKHlhazpgInor75kZAIMDw8WAh8DBQznu4%2FnrqHku7vpgIlkZAINDw8WAh8DBQbkuIvmsplkZAIODw8WAh8DBQYmbmJzcDtkZAIPDw8WAh8DBQYmbmJzcDtkZAIdDzwrAAsBAA8WAh8HaGRkGAEFHl9fQ29udHJvbHNSZXF1aXJlUG9zdEJhY2tLZXlfXxYQBRFrY21jR3JpZCRjdGwwMiR4awURa2NtY0dyaWQkY3RsMDIkamMFEWtjbWNHcmlkJGN0bDAzJHhrBRFrY21jR3JpZCRjdGwwMyRqYwURa2NtY0dyaWQkY3RsMDQkeGsFEWtjbWNHcmlkJGN0bDA0JGpjBRFrY21jR3JpZCRjdGwwNSR4awURa2NtY0dyaWQkY3RsMDUkamMFEWtjbWNHcmlkJGN0bDA2JHhrBRFrY21jR3JpZCRjdGwwNiRqYwURa2NtY0dyaWQkY3RsMDckeGsFEWtjbWNHcmlkJGN0bDA3JGpjBRFrY21jR3JpZCRjdGwwOCR4awURa2NtY0dyaWQkY3RsMDgkamMFEWtjbWNHcmlkJGN0bDA5JHhrBRFrY21jR3JpZCRjdGwwOSRqYw%3D%3D&amp;__EVENTVALIDATION=%2FwEWVQLQ2oDLDgKP3%2B6lAgKH0Z6ECgL91OO8DAL%2Bp46CCgK7isW0CgLNiMH%2FCgKMhdnrDQKS18q3CALm6%2FqHCgLapanLAQK9v7mmBwKA4u2DAwLQm9zvAwKm8d%2BQCgKP3%2B6lAgKYyPTRDwK%2F4d%2B%2FAwLY7N%2B%2FAwKYyPTRDwKQrrE3Avj%2F7KwDAuWI%2F7gPAp%2BX65cNArzExU4CypTMtQQCkK6xNwLQ6dL2DgLfhviYAgLehviYAgLdhviYAgLchviYAgLbhviYAgLahviYAgLEv9%2BHDgLememCAgKKgPyIBwL875PVAwLTyojXBgL2mYG6AQLnibvFBgLp%2F%2BKXBQKumL7PCwKu7M34DAKumP6bBQKxzYzeBQKtrb2RAwKSrpdfAqTexPUFAqrU07gGAuLUhYIEAoWJ758EAvvh2fYFAvezxNEDApGYivMEArODy8cNAs340o4OAsS%2F34cOAuzRsusGArursYYIAoXZ9dsDAqDCk%2FENAvCq0aUGAviquakMAvCq1aYGAviqvaoMAvCqyaMGAviqsacMAvCqzaQGAviqtagMAvCqwaEGAviqqaUMAvCqxaIGAviqraYMAvCquZ8GAviqoaMMAvCqvaAGAviqpaQMAtmIhacPAryB%2BuoCAvfD3dgHArKGwcYMApL71pwLAoznisYGAtOU4MYN&amp;ddl_kcxz=&amp;ddl_ywyl=%D3%D0&amp;ddl_kcgs=%D0%A3%B9%AB%D1%A1%BF%CE&amp;ddl_xqbs=1&amp;ddl_sksj=&amp;TextBox1=&amp;txtYz=&amp;hidXNXQ=2017-20181'\r\n    url='http://jxgl.hdu.edu.cn/xf_xsqxxxk.aspx?xh='+xh+'&amp;xm=%25%5cB8%25%5cCA%25%5cBC%25%5cD2%25%5cB3%25%5cC7&amp;gnmkdm=N121113'\r\n    resp=req.post(url,data=data)\r\n    resp.encoding='gbk'\r\n    print(resp.text)\r\n\r\n#主程序，设置学号密码并运行\r\nif __name__=='__main__':\r\n    xh='学号'\r\n    psd='密码'\r\n    lt=getHduCookie()\r\n    tmpurl=simLogin(lt)\r\n    req=jxglPage(tmpurl)\r\n    classList(req)</pre>\r\n学习为主，连我都不信。\r\n\r\n温馨提醒：此片不要与<a href=\"https://ganjiacheng.cn/blog/?p=368\">hack验证二维码篇</a>结合搞事情啦！",
            "post_title": "爬进数字杭电python篇",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "402-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-9-6 10:43:27",
            "post_modified_gmt": "2017-9-6 02:43:27",
            "post_content_filtered": "",
            "post_parent": "402",
            "guid": "http://ganjiacheng.cn/blog/?p=405",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "406",
            "post_author": "1",
            "post_date": "2017-9-9 09:12:15",
            "post_date_gmt": "2017-9-9 01:12:15",
            "post_content": "上次有的<a href=\"https://ganjiacheng.cn/blog/?p=63\">php篇数字杭电模拟登陆</a>，不过由于如今没有了验证码，可能会出点小错误，因此用python再来进进出出一遍。\n\n此次主要还是熟悉一下python requests的使用以及对网站cookie变化的准确捕捉。post的参数以及header也是这里的重点部分，其他还能加点简单的正则。<!--more-->\n\n具体细节在代码注释里：\n<pre>import requests\nimport re\n\n#先访问一次登录网站得到lt（lt后面必须，且一次性使用）\ndef getHduCookie():\n    resp=requests.get('http://cas.hdu.edu.cn/cas/login')\n    m = re.search(r'name=\\\"lt\\\" value=(.*?) /&gt;', resp.text)\n    lt=m.group()[17:-4]\n    return lt\n\n#模拟登陆用户名为学号，密码为md5加密后的密码，返回跳转链接\ndef simLogin(lt):\n    password=hashlib.md5(psd.encode('utf-8')).hexdigest()\n    params={\n        'encodedService':'http%3a%2f%2fi.hdu.edu.cn%2fdcp%2findex.jsp',\n        'service':'http://i.hdu.edu.cn/dcp/index.jsp',\n        'username':xh,\n        'password':password,\n        'lt':lt\n    }\n    resp=requests.post('http://cas.hdu.edu.cn/cas/login?service=http://jxgl.hdu.edu.cn/index.aspx',params=params)\n    m=re.search(r'href=\"(.*?)\"',resp.text)\n    return m.group()[6:-1]\n\n#去临时链接获取一次cookie并保存请求\ndef jxglPage(url):\n    req=requests.Session()\n    resp0=req.get(url)\n    req.headers={\n        'User-Agent':'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36',\n        'Referer':'http://jxgl.hdu.edu.cn/xf_xsqxxxk.aspx?xh='+xh+'&amp;xm=%25%5cB8%25%5cCA%25%5cBC%25%5cD2%25%5cB3%25%5cC7&amp;gnmkdm=N121113',\n        'Accept-Encoding': 'gzip, deflate',\n        'Content-Type':'application/x-www-form-urlencoded',\n    }\n    return req\n\n#这里的例子是获取选课列表\ndef classList(req):\n    data=''\n    url='http://jxgl.hdu.edu.cn/xf_xsqxxxk.aspx?xh='+xh+'&amp;xm=%25%5cB8%25%5cCA%25%5cBC%25%5cD2%25%5cB3%25%5cC7&amp;gnmkdm=N121113'\n    resp=req.post(url,data=data)\n    resp.encoding='gbk'\n    print(resp.text)\n\n#主程序，设置学号密码并运行\nif __name__=='__main__':\n    xh='学号'\n    psd='密码'\n    lt=getHduCookie()\n    tmpurl=simLogin(lt)\n    req=jxglPage(tmpurl)\n    classList(req)</pre>\n学习为主，连我都不信。\n\n温馨提醒：此片不要与<a href=\"https://ganjiacheng.cn/blog/?p=368\">hack验证二维码篇</a>结合搞事情啦！",
            "post_title": "爬进数字杭电python篇",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "402-autosave-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-9-9 09:12:15",
            "post_modified_gmt": "2017-9-9 01:12:15",
            "post_content_filtered": "",
            "post_parent": "402",
            "guid": "http://ganjiacheng.cn/blog/?p=406",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "407",
            "post_author": "1",
            "post_date": "2017-9-9 09:12:49",
            "post_date_gmt": "2017-9-9 01:12:49",
            "post_content": "上次有的<a href=\"https://ganjiacheng.cn/blog/?p=63\">php篇数字杭电模拟登陆</a>，不过由于如今没有了验证码，可能会出点小错误，因此用python再来进进出出一遍。\r\n\r\n此次主要还是熟悉一下python requests的使用以及对网站cookie变化的准确捕捉。post的参数以及header也是这里的重点部分，其他还能加点简单的正则。<!--more-->\r\n\r\n具体细节在代码注释里：\r\n<pre>import requests\r\nimport re\r\n\r\n#先访问一次登录网站得到lt（lt后面必须，且一次性使用）\r\ndef getHduCookie():\r\n    resp=requests.get('http://cas.hdu.edu.cn/cas/login')\r\n    m = re.search(r'name=\\\"lt\\\" value=(.*?) /&gt;', resp.text)\r\n    lt=m.group()[17:-4]\r\n    return lt\r\n\r\n#模拟登陆用户名为学号，密码为md5加密后的密码，返回跳转链接\r\ndef simLogin(lt):\r\n    password=hashlib.md5(psd.encode('utf-8')).hexdigest()\r\n    params={\r\n        'encodedService':'http%3a%2f%2fi.hdu.edu.cn%2fdcp%2findex.jsp',\r\n        'service':'http://i.hdu.edu.cn/dcp/index.jsp',\r\n        'username':xh,\r\n        'password':password,\r\n        'lt':lt\r\n    }\r\n    resp=requests.post('http://cas.hdu.edu.cn/cas/login?service=http://jxgl.hdu.edu.cn/index.aspx',params=params)\r\n    m=re.search(r'href=\"(.*?)\"',resp.text)\r\n    return m.group()[6:-1]\r\n\r\n#去临时链接获取一次cookie并保存请求\r\ndef jxglPage(url):\r\n    req=requests.Session()\r\n    resp0=req.get(url)\r\n    req.headers={\r\n        'User-Agent':'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36',\r\n        'Referer':'http://jxgl.hdu.edu.cn/xf_xsqxxxk.aspx?xh='+xh+'&amp;xm=%25%5cB8%25%5cCA%25%5cBC%25%5cD2%25%5cB3%25%5cC7&amp;gnmkdm=N121113',\r\n        'Accept-Encoding': 'gzip, deflate',\r\n        'Content-Type':'application/x-www-form-urlencoded',\r\n    }\r\n    return req\r\n\r\n#这里的例子是获取选课列表\r\ndef classList(req):\r\n    data=''#这里是post的一大串字符，可从浏览器获取\r\n    url='http://jxgl.hdu.edu.cn/xf_xsqxxxk.aspx?xh='+xh+'&amp;xm=%25%5cB8%25%5cCA%25%5cBC%25%5cD2%25%5cB3%25%5cC7&amp;gnmkdm=N121113'\r\n    resp=req.post(url,data=data)\r\n    resp.encoding='gbk'\r\n    print(resp.text)\r\n\r\n#主程序，设置学号密码并运行\r\nif __name__=='__main__':\r\n    xh='学号'\r\n    psd='密码'\r\n    lt=getHduCookie()\r\n    tmpurl=simLogin(lt)\r\n    req=jxglPage(tmpurl)\r\n    classList(req)</pre>\r\n学习为主，连我都不信。\r\n\r\n温馨提醒：此片不要与<a href=\"https://ganjiacheng.cn/blog/?p=368\">hack验证二维码篇</a>结合搞事情啦！",
            "post_title": "爬进数字杭电python篇",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "402-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-9-9 09:12:49",
            "post_modified_gmt": "2017-9-9 01:12:49",
            "post_content_filtered": "",
            "post_parent": "402",
            "guid": "http://ganjiacheng.cn/blog/?p=407",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "413",
            "post_author": "1",
            "post_date": "2017-10-8 09:24:01",
            "post_date_gmt": "2017-10-8 01:24:01",
            "post_content": "偶然在github看到一个<a href=\"https://github.com/cdhigh/kindleear/\">kindleear</a>，发现可以在google的gea配置推送到kindle，便来试试，这里记下最简单的几步操作。<!--more-->\r\n\r\n具体可以参考网页---<a href=\"https://bookfere.com/post/19.html\">https://bookfere.com/post/19.html</a>\r\n\r\n首先，到google的<a href=\"https://console.developers.google.com/project?hl=zh-cn\">https://console.developers.google.com/project?hl=zh-cn</a>创建一个新项目。\r\n\r\n之后在<a href=\"https://console.cloud.google.com/\">https://console.cloud.google.com/</a>这里便可以看到已创建的项目（或者选择到已创建的项目）。\r\n\r\n在点击右上角 &gt;_ 这个按钮打开云端shell命令行。运行下面命令\r\n<pre class=\" language-bash\"><code class=\" language-bash\">gcloud beta app create</code></pre>\r\n完成后，在运行下面命令\r\n<pre class=\" language-bash\"><code class=\" language-bash\"><span class=\"token function\">rm</span> -f uploader.sh* <span class=\"token operator\">&amp;&amp;</span> \\\r\n<span class=\"token function\">wget</span> https://raw.githubusercontent.com/kindlefere/KindleEar-Uploader/master/uploader.sh <span class=\"token operator\">&amp;&amp;</span> \\\r\n<span class=\"token function\">chmod</span> +x uploader.sh <span class=\"token operator\">&amp;&amp;</span> \\\r\n./uploader.sh</code></pre>\r\n输入你的 Gmail 地址和已有的项目ID，就完成了创建。\r\n\r\n完成后打开https://项目ID.appspot.com/ 就可以访问到配置界面\r\n\r\n用admin，admin登录，里面进行kindle以及订阅的一些设置。（可以选择每日自动推送）\r\n\r\n<strong>注：</strong>登录不了或者订阅打不开的话喝杯咖啡等一会儿就会好。\r\n\r\n<strong>以下两步必做</strong>\r\n\r\n<strong>注：要在亚马逊设备---kindle---设置---已认可的发件人电子邮箱列表，把刚刚的gmail加进去</strong>\r\n\r\n<strong>注：发送出现wrong SRC_EMAIL错误，点项目主页的左上角菜单---App引擎---设置---Email API 已获授权的发件人，添加自己的gmail即可</strong>\r\n\r\n具体效果：\r\n\r\n<img class=\"alignnone size-medium wp-image-415\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/10/IMG_3516-225x300.jpg\" alt=\"\" width=\"225\" height=\"300\" /><img class=\"alignnone size-medium wp-image-414\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/10/IMG_3517-225x300.jpg\" alt=\"\" width=\"225\" height=\"300\" />",
            "post_title": "用google的GAE部署kindle的自动推送",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e7%94%a8google%e7%9a%84gae%e9%83%a8%e7%bd%b2kindle%e7%9a%84%e8%87%aa%e5%8a%a8%e6%8e%a8%e9%80%81",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-10-8 09:40:52",
            "post_modified_gmt": "2017-10-8 01:40:52",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=413",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "414",
            "post_author": "1",
            "post_date": "2017-10-8 09:21:24",
            "post_date_gmt": "2017-10-8 01:21:24",
            "post_content": "",
            "post_title": "IMG_3517",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "img_3517",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-10-8 09:21:24",
            "post_modified_gmt": "2017-10-8 01:21:24",
            "post_content_filtered": "",
            "post_parent": "413",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2017/10/IMG_3517.jpg",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/jpeg",
            "comment_count": "0"
        },
        {
            "ID": "415",
            "post_author": "1",
            "post_date": "2017-10-8 09:21:33",
            "post_date_gmt": "2017-10-8 01:21:33",
            "post_content": "",
            "post_title": "IMG_3516",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "img_3516",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-10-8 09:21:33",
            "post_modified_gmt": "2017-10-8 01:21:33",
            "post_content_filtered": "",
            "post_parent": "413",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2017/10/IMG_3516.jpg",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/jpeg",
            "comment_count": "0"
        },
        {
            "ID": "416",
            "post_author": "1",
            "post_date": "2017-10-8 09:23:42",
            "post_date_gmt": "2017-10-8 01:23:42",
            "post_content": "偶然在github看到一个<a href=\"https://github.com/cdhigh/kindleear/\">kindleear</a>，发现可以在google的gea配置推送到kindle，便来试试，这里记下最简单的几步操作。<!--more-->\r\n\r\n具体可以参考网页---<a href=\"https://bookfere.com/post/19.html\">https://bookfere.com/post/19.html</a>\r\n\r\n首先，到google的<a href=\"https://console.developers.google.com/project?hl=zh-cn\">https://console.developers.google.com/project?hl=zh-cn</a>创建一个新项目。\r\n\r\n之后在<a href=\"https://console.cloud.google.com/\">https://console.cloud.google.com/</a>这里便可以看到已创建的项目（或者选择到已创建的项目）。\r\n\r\n在点击右上角 &gt;_ 这个按钮打开云端shell命令行。运行下面命令\r\n<pre class=\" language-bash\"><code class=\" language-bash\">gcloud beta app create</code></pre>\r\n完成后，在运行下面命令\r\n<pre class=\" language-bash\"><code class=\" language-bash\"><span class=\"token function\">rm</span> -f uploader.sh* <span class=\"token operator\">&amp;&amp;</span> \\\r\n<span class=\"token function\">wget</span> https://raw.githubusercontent.com/kindlefere/KindleEar-Uploader/master/uploader.sh <span class=\"token operator\">&amp;&amp;</span> \\\r\n<span class=\"token function\">chmod</span> +x uploader.sh <span class=\"token operator\">&amp;&amp;</span> \\\r\n./uploader.sh</code></pre>\r\n输入你的 Gmail 地址和已有的项目ID，就完成了创建。\r\n\r\n完成后打开https://项目ID.appspot.com/ 就可以访问到配置界面\r\n\r\n用admin，admin登录，里面进行kindle以及订阅的一些设置。（可以选择每日自动推送）\r\n\r\n<strong>注：</strong>登录不了或者订阅打不开的话喝杯咖啡等一会儿就会好。\r\n\r\n具体效果：\r\n\r\n<img class=\"alignnone size-medium wp-image-415\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/10/IMG_3516-225x300.jpg\" alt=\"\" width=\"225\" height=\"300\" /><img class=\"alignnone size-medium wp-image-414\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/10/IMG_3517-225x300.jpg\" alt=\"\" width=\"225\" height=\"300\" />",
            "post_title": "用google的GAE部署kindle的自动推送",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "413-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-10-8 09:23:42",
            "post_modified_gmt": "2017-10-8 01:23:42",
            "post_content_filtered": "",
            "post_parent": "413",
            "guid": "http://ganjiacheng.cn/blog/?p=416",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "417",
            "post_author": "1",
            "post_date": "2017-10-8 09:39:28",
            "post_date_gmt": "2017-10-8 01:39:28",
            "post_content": "偶然在github看到一个<a href=\"https://github.com/cdhigh/kindleear/\">kindleear</a>，发现可以在google的gea配置推送到kindle，便来试试，这里记下最简单的几步操作。<!--more-->\n\n具体可以参考网页---<a href=\"https://bookfere.com/post/19.html\">https://bookfere.com/post/19.html</a>\n\n首先，到google的<a href=\"https://console.developers.google.com/project?hl=zh-cn\">https://console.developers.google.com/project?hl=zh-cn</a>创建一个新项目。\n\n之后在<a href=\"https://console.cloud.google.com/\">https://console.cloud.google.com/</a>这里便可以看到已创建的项目（或者选择到已创建的项目）。\n\n在点击右上角 &gt;_ 这个按钮打开云端shell命令行。运行下面命令\n<pre class=\" language-bash\"><code class=\" language-bash\">gcloud beta app create</code></pre>\n完成后，在运行下面命令\n<pre class=\" language-bash\"><code class=\" language-bash\"><span class=\"token function\">rm</span> -f uploader.sh* <span class=\"token operator\">&amp;&amp;</span> \\\n<span class=\"token function\">wget</span> https://raw.githubusercontent.com/kindlefere/KindleEar-Uploader/master/uploader.sh <span class=\"token operator\">&amp;&amp;</span> \\\n<span class=\"token function\">chmod</span> +x uploader.sh <span class=\"token operator\">&amp;&amp;</span> \\\n./uploader.sh</code></pre>\n输入你的 Gmail 地址和已有的项目ID，就完成了创建。\n\n完成后打开https://项目ID.appspot.com/ 就可以访问到配置界面\n\n用admin，admin登录，里面进行kindle以及订阅的一些设置。（可以选择每日自动推送）\n\n<strong>注：</strong>登录不了或者订阅打不开的话喝杯咖啡等一会儿就会好。\n\n注：发送出现wrong SRC_EMAIL错误，点应用设置页的左上角菜单---App引擎---设置---Email API 已获授权的发件人，改成自己的gmail即可\n\n注：要在亚马逊设备---kindle---设置---已认可的发件人电子邮箱列表，把gmail\n\n具体效果：\n\n<img class=\"alignnone size-medium wp-image-415\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/10/IMG_3516-225x300.jpg\" alt=\"\" width=\"225\" height=\"300\" /><img class=\"alignnone size-medium wp-image-414\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/10/IMG_3517-225x300.jpg\" alt=\"\" width=\"225\" height=\"300\" />",
            "post_title": "用google的GAE部署kindle的自动推送",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "413-autosave-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-10-8 09:39:28",
            "post_modified_gmt": "2017-10-8 01:39:28",
            "post_content_filtered": "",
            "post_parent": "413",
            "guid": "http://ganjiacheng.cn/blog/?p=417",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "418",
            "post_author": "1",
            "post_date": "2017-10-8 09:40:52",
            "post_date_gmt": "2017-10-8 01:40:52",
            "post_content": "偶然在github看到一个<a href=\"https://github.com/cdhigh/kindleear/\">kindleear</a>，发现可以在google的gea配置推送到kindle，便来试试，这里记下最简单的几步操作。<!--more-->\r\n\r\n具体可以参考网页---<a href=\"https://bookfere.com/post/19.html\">https://bookfere.com/post/19.html</a>\r\n\r\n首先，到google的<a href=\"https://console.developers.google.com/project?hl=zh-cn\">https://console.developers.google.com/project?hl=zh-cn</a>创建一个新项目。\r\n\r\n之后在<a href=\"https://console.cloud.google.com/\">https://console.cloud.google.com/</a>这里便可以看到已创建的项目（或者选择到已创建的项目）。\r\n\r\n在点击右上角 &gt;_ 这个按钮打开云端shell命令行。运行下面命令\r\n<pre class=\" language-bash\"><code class=\" language-bash\">gcloud beta app create</code></pre>\r\n完成后，在运行下面命令\r\n<pre class=\" language-bash\"><code class=\" language-bash\"><span class=\"token function\">rm</span> -f uploader.sh* <span class=\"token operator\">&amp;&amp;</span> \\\r\n<span class=\"token function\">wget</span> https://raw.githubusercontent.com/kindlefere/KindleEar-Uploader/master/uploader.sh <span class=\"token operator\">&amp;&amp;</span> \\\r\n<span class=\"token function\">chmod</span> +x uploader.sh <span class=\"token operator\">&amp;&amp;</span> \\\r\n./uploader.sh</code></pre>\r\n输入你的 Gmail 地址和已有的项目ID，就完成了创建。\r\n\r\n完成后打开https://项目ID.appspot.com/ 就可以访问到配置界面\r\n\r\n用admin，admin登录，里面进行kindle以及订阅的一些设置。（可以选择每日自动推送）\r\n\r\n<strong>注：</strong>登录不了或者订阅打不开的话喝杯咖啡等一会儿就会好。\r\n\r\n<strong>以下两步必做</strong>\r\n\r\n<strong>注：要在亚马逊设备---kindle---设置---已认可的发件人电子邮箱列表，把刚刚的gmail加进去</strong>\r\n\r\n<strong>注：发送出现wrong SRC_EMAIL错误，点项目主页的左上角菜单---App引擎---设置---Email API 已获授权的发件人，添加自己的gmail即可</strong>\r\n\r\n具体效果：\r\n\r\n<img class=\"alignnone size-medium wp-image-415\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/10/IMG_3516-225x300.jpg\" alt=\"\" width=\"225\" height=\"300\" /><img class=\"alignnone size-medium wp-image-414\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/10/IMG_3517-225x300.jpg\" alt=\"\" width=\"225\" height=\"300\" />",
            "post_title": "用google的GAE部署kindle的自动推送",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "413-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-10-8 09:40:52",
            "post_modified_gmt": "2017-10-8 01:40:52",
            "post_content_filtered": "",
            "post_parent": "413",
            "guid": "http://ganjiacheng.cn/blog/?p=418",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "419",
            "post_author": "1",
            "post_date": "2017-10-10 17:04:25",
            "post_date_gmt": "2017-10-10 09:04:25",
            "post_content": "python篇：\r\n\r\n1.windows上，在pip install xxx失败的时候怎么办？\r\n\r\n答：<a href=\"http://www.lfd.uci.edu/~gohlke/pythonlibs/\">http://www.lfd.uci.edu/~gohlke/pythonlibs/</a>到这里面寻找whl，下载之后用 pip install xxx.whl 来安装。\r\n\r\n<!--more-->\r\n\r\n2.解决pip3报错Fatal error in launcher: Unable to create process using '\"'。\r\n\r\n一种：\r\n<pre>import pip\r\npip.main(['install','ModuleName'])</pre>\r\n另一种：\r\n<pre class=\"lang-py prettyprint prettyprinted\"><code><span class=\"pln\">python3 </span><span class=\"pun\">-</span><span class=\"pln\">m pip install whlName\r\n</span></code></pre>\r\n3.linux上python3中文会显示UnicodeEncodeError: 'ascii' codec can't encode character。\r\n<pre>import io \r\nimport sys \r\nsys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding='utf-8')</pre>\r\n4.requests爬到的中文网页输出在windows cmd会出错\r\n<pre>res=requests.get(url)\r\nres.encoding='gbk'\r\nprint(res.text)</pre>\r\n5.cv2.imread读取中文路径出错\r\n<pre>#读取\r\nim = cv2.imdecode(np.fromfile(file,dtype=np.uint8),-1)\r\n#写入\r\ncv2.imencode('.jpg',res)[1].tofile(file)</pre>\r\n&nbsp;",
            "post_title": "python日常问答篇--更新中",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "87-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-10-10 17:04:25",
            "post_modified_gmt": "2017-10-10 09:04:25",
            "post_content_filtered": "",
            "post_parent": "87",
            "guid": "http://ganjiacheng.cn/blog/?p=419",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "423",
            "post_author": "1",
            "post_date": "2017-11-5 16:41:51",
            "post_date_gmt": "2017-11-5 08:41:51",
            "post_content": "做了接近一个月爬虫，中间爬到数据多的爬过唯品会，dpchallenge，frilly。百度图片和1688也是取了一部分数据来。这里做一些爬虫技术总结记录，包括基本的requests使用，json，bs4，OrderedDict，下载图片，多进程以及post一个数组。<!--more-->\r\n\r\n首先，基本的爬虫以唯品会（这里以女装做示范），主要用以接口获取json数据，json解析，json格式化。\r\n\r\n首先获取一下他的分类列表，由于返回的是callback里的函数，便去掉前后一些字符然后json格式化。\r\n<pre>req=requests.Session()\r\ncateurl='https://category.vip.com/ajax/getCategory.php?callback=getCategory&amp;tree_id=117'\r\npplist=req.get(cateurl).text\r\nppjson=json.loads(pplist[12:-1])\r\npparr=ppjson['data'][0]['children'][0]['children']</pre>\r\n之后访问分类的具体页面，用一点正则到他的js里解析出productIds，解析json，然后再通过里面的每个productid的拼接构成一个url，获取到商品服装信息（这里可得缩略图）。再进入服装详情页，得到商品大图。\r\n<pre>for item in pparr:\r\n    searchurl='https://category.vip.com/'+item['url']\r\n        sec1=req.get(searchurl\r\n        jsonpic=re.findall(r'\"productIds\":(.*?),\"',sec1.text)\r\n        piclist=json.loads(jsonpic[0])\r\n        for n in range(2):\r\n            productIds='%2C'.join(map(str,piclist[50*n:(n+1)*50]))\r\n            resp=req.get('https://category.vip.com/ajax/mapi.php?service=product_info&amp;productIds='+productIds+'&amp;warehouse=VIP_SH')\r\n            projson=json.loads(resp.text)\r\n            if cate &gt; -5:\r\n                for j in projson['data']['products']:\r\n                    detail=req.get('https://detail.vip.com/detail-'+str(j['brandId'])+'-'+str(j['productId'])+'.html?f=ad')\r\n                    match=re.findall(r'&lt;a href=\"(.*?)\" class=\"J-mer-bigImgZoom\"&gt;',detail.text)\r\n                    for url in match:\r\n                        print(url)</pre>\r\n插一个从网页下载图片到本地的小技巧\r\n<pre>img=req.get(imageurl).content\r\nwith open('test.jpg','wb') as f:\r\n    f.write(img)\r\n    f.close()</pre>\r\ndpchallenge.com，这是个摄影网站，除了爬图片还得爬摄影信息及评论，主要靠beautifulsoup和正则解析html文本。\r\n\r\n这里先爬了信息，其中也包括图片地址。之后在把所有图下载下来。\r\n\r\n这里做一部分beautifulsoup的记录\r\n<pre>soup=BeautifulSoup(response.text,\"lxml\")\r\nsource_url=soup.find_all('标签',{'属性':'值(写True则代表有这个属性)'</pre>\r\n另一个这里要注意的便是OrderedDict，由于python的object读取显示出来时会乱序或者并不是按写入的顺序显示的。所以需要用OrderedDict作代替\r\n<pre>from collections import OrderedDict\r\ntest=OrderedDict()\r\ntest[\"c\"]=\"1\"\r\ntest[\"b\"]=\"2\"\r\ntest[\"a\"]=\"3\"\r\nprint(test)</pre>\r\n最后这里在做一下爬虫期间所用的多进程的简单使用，这里用到了进程池以及进程锁：\r\n<pre>from multiprocessing import Pool,Manager\r\ndef func(n,lock):\r\n    with lock:\r\n        print(n)\r\nif __name__==\"__main__\":\r\n    pool=Pool()\r\n    lock=Manager().Lock()\r\n    for i in range(10):\r\n        pool.apply_async(func, (i,lock))#这边也可以加回调\r\n    pool.close()\r\n    pool.join()</pre>\r\n最后考虑一个post时发现的问题，也是平常可能会忽略而出错的。\r\n\r\nhttp://test.ganjiacheng.cn/testspider/test.php是一个返回post数据的接口\r\n\r\n在js的jquery的ajax里，\r\n<pre>$.post(\"./test.php\",{du:\"0\",data:[\"1\",\"2\",\"3\"]},function(data){\r\n    console.log(data)\r\n})\r\n//结果：{\"du\":\"0\",\"data\":[\"1\",\"2\",\"3\"]}</pre>\r\n而在python里\r\n<pre>import requests\r\nimport json\r\npost_data={\r\n    \"du\":\"0\",\r\n    \"data\":[\"1\",\"2\",\"3\"],\r\n}\r\nres=requests.post('http://test.ganjiacheng.cn/testspider/test.php',data=post_data)\r\nprint(res.json())\r\n#结果：{'du': '0', 'data': '3'}</pre>\r\n也便是数组形式如[]在post传输过程是不能保持的，上面的post_data传输的信息形式应该如du=0&amp;data%5B%5D=1&amp;data%5B%5D=2&amp;data%5B%5D=3。\r\n\r\n后来用了拼接的方法来解决这个问题。\r\n\r\n有待提升的地方，在有较多js操作及判断的网页中，要爬到对应信息需进行复刻同样的js操作，首先要读懂js，再来要自己实现一遍，对于综合能力要求还是比较高的。对于1688这种检测到爬虫的一些行为后会需要你登录后进行操作，虽然登录后通过chrome拿到cookie是可以使用的，但可能会有时限等限制。还有待探索！",
            "post_title": "爬虫技术栈小结",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e7%88%ac%e8%99%ab%e6%8a%80%e6%9c%af%e6%a0%88%e5%b0%8f%e7%bb%93",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-11-5 16:43:52",
            "post_modified_gmt": "2017-11-5 08:43:52",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=423",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "424",
            "post_author": "1",
            "post_date": "2017-11-5 15:45:57",
            "post_date_gmt": "2017-11-5 07:45:57",
            "post_content": "做了接近一个月爬虫，中间爬到数据多的爬过唯品会，dpchallenge.com，frilly.com。百度图片和1688也是取了一部分数据来。这里做一些爬虫总结记录。\r\n\r\n首先，唯品会（这里以女装做示范），获取一下他的分类列表，由于返回的是callback里的函数，便去掉前后一些字符然后json格式化。\r\n<pre>cateurl='https://category.vip.com/ajax/getCategory.php?callback=getCategory&amp;tree_id=117'\r\npplist=req.get(cateurl).text\r\nppjson=json.loads(pplist[12:-1])\r\npparr=ppjson['data'][0]['children'][0]['children']</pre>\r\n之后访问分类的具体页面，用一点正则到他的js里解析出productIds，解析json，然后再通过里面的每个productid的拼接构成一个url，获取到商品服装信息（这里可得缩略图）。再进入服装详情页，得到商品大图。\r\n<pre>for item in pparr:</pre>\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "好几个python爬虫",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "423-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-11-5 15:45:57",
            "post_modified_gmt": "2017-11-5 07:45:57",
            "post_content_filtered": "",
            "post_parent": "423",
            "guid": "http://ganjiacheng.cn/blog/?p=424",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "425",
            "post_author": "1",
            "post_date": "2017-11-5 16:41:51",
            "post_date_gmt": "2017-11-5 08:41:51",
            "post_content": "做了接近一个月爬虫，中间爬到数据多的爬过唯品会，dpchallenge，frilly。百度图片和1688也是取了一部分数据来。这里做一些爬虫技术总结记录，包括基本的requests使用，json，OrderedDict，下载图片，多进程以及post一个数组。<!--more-->\r\n\r\n首先，基本的爬虫以唯品会（这里以女装做示范），主要用以接口获取json数据，json解析，json格式化。\r\n\r\n首先获取一下他的分类列表，由于返回的是callback里的函数，便去掉前后一些字符然后json格式化。\r\n<pre>req=requests.Session()\r\ncateurl='https://category.vip.com/ajax/getCategory.php?callback=getCategory&amp;tree_id=117'\r\npplist=req.get(cateurl).text\r\nppjson=json.loads(pplist[12:-1])\r\npparr=ppjson['data'][0]['children'][0]['children']</pre>\r\n之后访问分类的具体页面，用一点正则到他的js里解析出productIds，解析json，然后再通过里面的每个productid的拼接构成一个url，获取到商品服装信息（这里可得缩略图）。再进入服装详情页，得到商品大图。\r\n<pre>for item in pparr:\r\n    searchurl='https://category.vip.com/'+item['url']\r\n        sec1=req.get(searchurl\r\n        jsonpic=re.findall(r'\"productIds\":(.*?),\"',sec1.text)\r\n        piclist=json.loads(jsonpic[0])\r\n        for n in range(2):\r\n            productIds='%2C'.join(map(str,piclist[50*n:(n+1)*50]))\r\n            resp=req.get('https://category.vip.com/ajax/mapi.php?service=product_info&amp;productIds='+productIds+'&amp;warehouse=VIP_SH')\r\n            projson=json.loads(resp.text)\r\n            if cate &gt; -5:\r\n                for j in projson['data']['products']:\r\n                    detail=req.get('https://detail.vip.com/detail-'+str(j['brandId'])+'-'+str(j['productId'])+'.html?f=ad')\r\n                    match=re.findall(r'&lt;a href=\"(.*?)\" class=\"J-mer-bigImgZoom\"&gt;',detail.text)\r\n                    for url in match:\r\n                        print(url)</pre>\r\n插一个从网页下载图片到本地的小技巧\r\n<pre>img=req.get(imageurl).content\r\nwith open('test.jpg','wb') as f:\r\n    f.write(img)\r\n    f.close()</pre>\r\ndpchallenge.com，这是个摄影网站，除了爬图片还得爬摄影信息及评论，主要靠beautifulsoup和正则解析html文本。\r\n\r\n这里先爬了信息，其中也包括图片地址。之后在把所有图下载下来。\r\n\r\n这里做一部分beautifulsoup的记录\r\n<pre>soup=BeautifulSoup(response.text,\"lxml\")\r\nsource_url=soup.find_all('标签',{'属性':'值(写True则代表有这个属性)'</pre>\r\n另一个这里要注意的便是OrderedDict，由于python的object读取显示出来时会乱序或者并不是按写入的顺序显示的。所以需要用OrderedDict作代替\r\n<pre>from collections import OrderedDict\r\ntest=OrderedDict()\r\ntest[\"c\"]=\"1\"\r\ntest[\"b\"]=\"2\"\r\ntest[\"a\"]=\"3\"\r\nprint(test)</pre>\r\n最后这里在做一下爬虫期间所用的多进程的简单使用，这里用到了进程池以及进程锁：\r\n<pre>from multiprocessing import Pool,Manager\r\ndef func(n,lock):\r\n    with lock:\r\n        print(n)\r\nif __name__==\"__main__\":\r\n    pool=Pool()\r\n    lock=Manager().Lock()\r\n    for i in range(10):\r\n        pool.apply_async(func, (i,lock))#这边也可以加回调\r\n    pool.close()\r\n    pool.join()</pre>\r\n最后考虑一个post时发现的问题，也是平常可能会忽略而出错的。\r\n\r\nhttp://test.ganjiacheng.cn/testspider/test.php是一个返回post数据的接口\r\n\r\n在js的jquery的ajax里，\r\n<pre>$.post(\"./test.php\",{du:\"0\",data:[\"1\",\"2\",\"3\"]},function(data){\r\n    console.log(data)\r\n})\r\n//结果：{\"du\":\"0\",\"data\":[\"1\",\"2\",\"3\"]}</pre>\r\n而在python里\r\n<pre>import requests\r\nimport json\r\npost_data={\r\n    \"du\":\"0\",\r\n    \"data\":[\"1\",\"2\",\"3\"],\r\n}\r\nres=requests.post('http://test.ganjiacheng.cn/testspider/test.php',data=post_data)\r\nprint(res.json())\r\n#结果：{'du': '0', 'data': '3'}</pre>\r\n也便是数组形式如[]在post传输过程是不能保持的，上面的post_data传输的信息形式应该如du=0&amp;data%5B%5D=1&amp;data%5B%5D=2&amp;data%5B%5D=3。\r\n\r\n后来用了拼接的方法来解决这个问题。\r\n\r\n有待提升的地方，在有较多js操作及判断的网页中，要爬到对应信息需进行复刻同样的js操作，首先要读懂js，再来要自己实现一遍，对于综合能力要求还是比较高的。对于1688这种检测到爬虫的一些行为后会需要你登录后进行操作，虽然登录后通过chrome拿到cookie是可以使用的，但可能会有时限等限制。还有待探索！",
            "post_title": "爬虫技术栈小结",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "423-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-11-5 16:41:51",
            "post_modified_gmt": "2017-11-5 08:41:51",
            "post_content_filtered": "",
            "post_parent": "423",
            "guid": "http://ganjiacheng.cn/blog/?p=425",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "426",
            "post_author": "1",
            "post_date": "2017-11-5 16:43:52",
            "post_date_gmt": "2017-11-5 08:43:52",
            "post_content": "做了接近一个月爬虫，中间爬到数据多的爬过唯品会，dpchallenge，frilly。百度图片和1688也是取了一部分数据来。这里做一些爬虫技术总结记录，包括基本的requests使用，json，bs4，OrderedDict，下载图片，多进程以及post一个数组。<!--more-->\r\n\r\n首先，基本的爬虫以唯品会（这里以女装做示范），主要用以接口获取json数据，json解析，json格式化。\r\n\r\n首先获取一下他的分类列表，由于返回的是callback里的函数，便去掉前后一些字符然后json格式化。\r\n<pre>req=requests.Session()\r\ncateurl='https://category.vip.com/ajax/getCategory.php?callback=getCategory&amp;tree_id=117'\r\npplist=req.get(cateurl).text\r\nppjson=json.loads(pplist[12:-1])\r\npparr=ppjson['data'][0]['children'][0]['children']</pre>\r\n之后访问分类的具体页面，用一点正则到他的js里解析出productIds，解析json，然后再通过里面的每个productid的拼接构成一个url，获取到商品服装信息（这里可得缩略图）。再进入服装详情页，得到商品大图。\r\n<pre>for item in pparr:\r\n    searchurl='https://category.vip.com/'+item['url']\r\n        sec1=req.get(searchurl\r\n        jsonpic=re.findall(r'\"productIds\":(.*?),\"',sec1.text)\r\n        piclist=json.loads(jsonpic[0])\r\n        for n in range(2):\r\n            productIds='%2C'.join(map(str,piclist[50*n:(n+1)*50]))\r\n            resp=req.get('https://category.vip.com/ajax/mapi.php?service=product_info&amp;productIds='+productIds+'&amp;warehouse=VIP_SH')\r\n            projson=json.loads(resp.text)\r\n            if cate &gt; -5:\r\n                for j in projson['data']['products']:\r\n                    detail=req.get('https://detail.vip.com/detail-'+str(j['brandId'])+'-'+str(j['productId'])+'.html?f=ad')\r\n                    match=re.findall(r'&lt;a href=\"(.*?)\" class=\"J-mer-bigImgZoom\"&gt;',detail.text)\r\n                    for url in match:\r\n                        print(url)</pre>\r\n插一个从网页下载图片到本地的小技巧\r\n<pre>img=req.get(imageurl).content\r\nwith open('test.jpg','wb') as f:\r\n    f.write(img)\r\n    f.close()</pre>\r\ndpchallenge.com，这是个摄影网站，除了爬图片还得爬摄影信息及评论，主要靠beautifulsoup和正则解析html文本。\r\n\r\n这里先爬了信息，其中也包括图片地址。之后在把所有图下载下来。\r\n\r\n这里做一部分beautifulsoup的记录\r\n<pre>soup=BeautifulSoup(response.text,\"lxml\")\r\nsource_url=soup.find_all('标签',{'属性':'值(写True则代表有这个属性)'</pre>\r\n另一个这里要注意的便是OrderedDict，由于python的object读取显示出来时会乱序或者并不是按写入的顺序显示的。所以需要用OrderedDict作代替\r\n<pre>from collections import OrderedDict\r\ntest=OrderedDict()\r\ntest[\"c\"]=\"1\"\r\ntest[\"b\"]=\"2\"\r\ntest[\"a\"]=\"3\"\r\nprint(test)</pre>\r\n最后这里在做一下爬虫期间所用的多进程的简单使用，这里用到了进程池以及进程锁：\r\n<pre>from multiprocessing import Pool,Manager\r\ndef func(n,lock):\r\n    with lock:\r\n        print(n)\r\nif __name__==\"__main__\":\r\n    pool=Pool()\r\n    lock=Manager().Lock()\r\n    for i in range(10):\r\n        pool.apply_async(func, (i,lock))#这边也可以加回调\r\n    pool.close()\r\n    pool.join()</pre>\r\n最后考虑一个post时发现的问题，也是平常可能会忽略而出错的。\r\n\r\nhttp://test.ganjiacheng.cn/testspider/test.php是一个返回post数据的接口\r\n\r\n在js的jquery的ajax里，\r\n<pre>$.post(\"./test.php\",{du:\"0\",data:[\"1\",\"2\",\"3\"]},function(data){\r\n    console.log(data)\r\n})\r\n//结果：{\"du\":\"0\",\"data\":[\"1\",\"2\",\"3\"]}</pre>\r\n而在python里\r\n<pre>import requests\r\nimport json\r\npost_data={\r\n    \"du\":\"0\",\r\n    \"data\":[\"1\",\"2\",\"3\"],\r\n}\r\nres=requests.post('http://test.ganjiacheng.cn/testspider/test.php',data=post_data)\r\nprint(res.json())\r\n#结果：{'du': '0', 'data': '3'}</pre>\r\n也便是数组形式如[]在post传输过程是不能保持的，上面的post_data传输的信息形式应该如du=0&amp;data%5B%5D=1&amp;data%5B%5D=2&amp;data%5B%5D=3。\r\n\r\n后来用了拼接的方法来解决这个问题。\r\n\r\n有待提升的地方，在有较多js操作及判断的网页中，要爬到对应信息需进行复刻同样的js操作，首先要读懂js，再来要自己实现一遍，对于综合能力要求还是比较高的。对于1688这种检测到爬虫的一些行为后会需要你登录后进行操作，虽然登录后通过chrome拿到cookie是可以使用的，但可能会有时限等限制。还有待探索！",
            "post_title": "爬虫技术栈小结",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "423-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-11-5 16:43:52",
            "post_modified_gmt": "2017-11-5 08:43:52",
            "post_content_filtered": "",
            "post_parent": "423",
            "guid": "http://ganjiacheng.cn/blog/?p=426",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "427",
            "post_author": "1",
            "post_date": "2017-11-10 18:11:31",
            "post_date_gmt": "2017-11-10 10:11:31",
            "post_content": "忍无可忍桌面壁纸软件的广告了，终于决定自己写个，总体逻辑上也并不复杂。\r\n\r\n先是随机爬取某bing站的壁纸图片，调用win32接口改桌面壁纸，之后用tk的桌面程序来获取用户输入时间间隔，最后封装成exe使得更通用，在后台运行以及加个图标。<!--more-->不说了，直接上代码。\r\n\r\n由于是python3.x，库win32api库可能下载会有问题。建议直接去<a href=\"https://sourceforge.net/projects/pywin32/\">这里</a>手动下载安装。\r\n<pre>#coding:utf-8\r\n#python3.5\r\n#windows\r\nfrom PIL import Image\r\nimport win32api,win32con,win32gui  \r\nimport re,os  \r\nimport requests\r\nfrom io import BytesIO\r\nfrom bs4 import BeautifulSoup\r\nimport tkinter\r\nimport random\r\nimport math\r\nimport time\r\nimport re\r\n\r\ndef set_wallpaper_from_bmp(bmp_path):  \r\n    #打开指定注册表路径  \r\n    reg_key = win32api.RegOpenKeyEx(win32con.HKEY_CURRENT_USER,\"Control Panel\\\\Desktop\",0,win32con.KEY_SET_VALUE)  \r\n    #最后的参数:2拉伸,0居中,6适应,10填充,0平铺  \r\n    win32api.RegSetValueEx(reg_key, \"WallpaperStyle\", 0, win32con.REG_SZ, \"2\")  \r\n    #最后的参数:1表示平铺,拉伸居中等都是0  \r\n    win32api.RegSetValueEx(reg_key, \"TileWallpaper\", 0, win32con.REG_SZ, \"0\")  \r\n    #刷新桌面  \r\n    win32gui.SystemParametersInfo(win32con.SPI_SETDESKWALLPAPER,bmp_path, win32con.SPIF_SENDWININICHANGE)  \r\n  \r\ndef set_wallpaper(bgimg):  \r\n    #把图片格式统一转换成bmp格式,并放在源图片的同一目录  \r\n    #注意地址必须是绝对地址\r\n    new_bmp_path=\"C:/backgroundPicture/wallpaper.bmp\"\r\n    bmpImage = Image.open(BytesIO(bgimg))\r\n    bmpImage.save(new_bmp_path, \"BMP\")  \r\n    set_wallpaper_from_bmp(new_bmp_path)  \r\n\r\ndef getPicurl():\r\n    #爬虫部分，主要从这个网站随机取页随机取壁纸，返回图片二进制。\r\n    req=requests.Session()\r\n    resp=req.get(\"https://bing.ioliu.cn/?p=1\")\r\n    soup=BeautifulSoup(resp.text,\"lxml\")\r\n    pageall=soup.find_all(\"span\")[-1].get_text()\r\n    maxpage=int(pageall.split(\"/\")[1].strip())\r\n    ran=math.floor(random.random()*maxpage)+1\r\n    resp1=req.get(\"https://bing.ioliu.cn?p=\"+str(ran))\r\n    soup1=BeautifulSoup(resp1.text,\"lxml\")\r\n    allimg=soup1.find_all(\"img\")\r\n    ran1=math.floor(random.random()*len(allimg))\r\n    resp2=req.get(\"https://bing.ioliu.cn\"+allimg[ran1].next_sibling['href'])\r\n    url=re.findall(r'src=\"http(.*?)\"',resp2.text)[0]\r\n    image=req.get(\"http\"+url)\r\n    return image.content\r\n\r\ndef inputint():\r\n    #获取用户输入的时间\r\n    global t\r\n    try:\r\n        t = int(var.get().strip())\r\n    except:\r\n        t = 30\r\n    root.destroy()\r\n\r\nif __name__ == '__main__':  \r\n    t=0\r\n    if not os.path.exists('C:/backgroundPicture/'):\r\n        os.mkdir(\"C:/backgroundPicture/\")\r\n    root = tkinter.Tk(className='请输入间隔时间(按分钟计)')  # 弹出框框名\r\n    root.geometry('350x60')     # 设置弹出框的大小 w x h\r\n    var = tkinter.StringVar()   # 这即是输入框中的内容\r\n    var.set(30) # 通过var.get()/var.set() 来 获取/设置var的值\r\n    entry1 = tkinter.Entry(root, textvariable=var)  # 设置\"文本变量\"为var\r\n    entry1.pack()   # 将entry\"打上去\"\r\n    btn1 = tkinter.Button(root, text='确认', command=inputint)     # 按下此按钮(Input), 触发inputint函数\r\n    btn1.pack(side='bottom')\r\n    root.mainloop()\r\n    #一直运行并用sleep间隔\r\n    while True:\r\n        bgimg=getPicurl()\r\n        set_wallpaper(bgimg)\r\n        time.sleep(int(t*60))</pre>\r\n关于打包成exe，在python3有个pyinstaller，直接用pip安装就行。\r\n\r\n使用方式是以下，-F打包单个文件，-w不显示命令窗口，-i图标\r\n<pre>pyinstaller -F -w -i bitbug_favicon.ico filename.py</pre>\r\n以上便是自动换桌面壁纸，另附这里添加一个功能，就是在程序运行时用按键触发换壁纸。要做的便是另写一个线程做按键监听。这里用pyHook做按键监听，关于pyhook的安装，不能简单用pip，不然用按键监听的时候会有一个bug。\r\n\r\n参考：<a href=\"https://blog.csdn.net/dongfuguo/article/details/70226384#reply\">https://blog.csdn.net/dongfuguo/article/details/70226384#reply</a>\r\n<pre>from ctypes import *\r\nimport pyHook\r\nimport pythoncom\r\nimport threading\r\ndef onKeyboardEvent(event):\r\n    global lt\r\n    #96为1左边那个按键，这里写法是双击\r\n    if event.Ascii==96:\r\n        if time.time()-lt&lt;2:\r\n            bgimg=getPicurl()\r\n            set_wallpaper(bgimg)\r\n        else:\r\n            lt=time.time()\r\n    return True\r\ndef task0():\r\n    hm = pyHook.HookManager()\r\n    hm.KeyDown = onKeyboardEvent\r\n    hm.HookKeyboard()\r\n    pythoncom.PumpMessages()\r\ndef task1():\r\n    global t\r\n    while True:\r\n        bgimg=getPicurl()\r\n        set_wallpaper(bgimg)\r\n        time.sleep(int(t*60))\r\nthreads = []\r\n    t1 = threading.Thread(target=task0)\r\n    threads.append(t1)\r\n    t0 = threading.Thread(target=task1)\r\n    threads.append(t0)\r\n    for i in range(2):\r\n        threads[i].start()\r\n    for i in range(2):\r\n        threads[i].join()</pre>\r\n这段代码结合上面部分便可以完成一个自动换桌面且可按键手动换桌面的程序。\r\n\r\n最后贴一下应用程序<a href=\"http://pan.baidu.com/s/1c1YXoje\">下载地址。</a>",
            "post_title": "用python写个自动改壁纸的桌面程序",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e7%94%a8python%e5%86%99%e4%b8%aa%e8%87%aa%e5%8a%a8%e6%94%b9%e5%a3%81%e7%ba%b8%e6%a1%8c%e9%9d%a2%e7%a8%8b%e5%ba%8f",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-7-5 19:46:09",
            "post_modified_gmt": "2018-7-5 11:46:09",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=427",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "428",
            "post_author": "1",
            "post_date": "2017-11-10 18:11:31",
            "post_date_gmt": "2017-11-10 10:11:31",
            "post_content": "忍无可忍桌面壁纸软件的广告了，终于决定自己写个，总体逻辑上也并不复杂。\r\n\r\n先是随机爬取某bing站的壁纸图片，调用win32接口改桌面壁纸，之后用tk的桌面程序来获取用户输入时间间隔，最后封装成exe使得更通用，在后台运行以及加个图标。<!--more-->不说了，直接上代码。\r\n\r\n由于是python3.x，库win32api库可能下载会有问题。建议直接去<a href=\"https://sourceforge.net/projects/pywin32/\">这里</a>手动下载安装。\r\n<pre>#coding:utf-8\r\n#python3.5\r\n#windows\r\nfrom PIL import Image\r\nimport win32api,win32con,win32gui  \r\nimport re,os  \r\nimport requests\r\nfrom io import BytesIO\r\nfrom bs4 import BeautifulSoup\r\nimport tkinter\r\nimport random\r\nimport math\r\nimport time\r\nimport re\r\n\r\ndef set_wallpaper_from_bmp(bmp_path):  \r\n    #打开指定注册表路径  \r\n    reg_key = win32api.RegOpenKeyEx(win32con.HKEY_CURRENT_USER,\"Control Panel\\\\Desktop\",0,win32con.KEY_SET_VALUE)  \r\n    #最后的参数:2拉伸,0居中,6适应,10填充,0平铺  \r\n    win32api.RegSetValueEx(reg_key, \"WallpaperStyle\", 0, win32con.REG_SZ, \"2\")  \r\n    #最后的参数:1表示平铺,拉伸居中等都是0  \r\n    win32api.RegSetValueEx(reg_key, \"TileWallpaper\", 0, win32con.REG_SZ, \"0\")  \r\n    #刷新桌面  \r\n    win32gui.SystemParametersInfo(win32con.SPI_SETDESKWALLPAPER,bmp_path, win32con.SPIF_SENDWININICHANGE)  \r\n  \r\ndef set_wallpaper(bgimg):  \r\n    #把图片格式统一转换成bmp格式,并放在源图片的同一目录  \r\n    #注意地址必须是绝对地址\r\n    new_bmp_path=\"C:/backgroundPicture/wallpaper.bmp\"\r\n    bmpImage = Image.open(BytesIO(bgimg))\r\n    bmpImage.save(new_bmp_path, \"BMP\")  \r\n    set_wallpaper_from_bmp(new_bmp_path)  \r\n\r\ndef getPicurl():\r\n    #爬虫部分，主要从这个网站随机取页随机取壁纸，返回图片二进制。\r\n    req=requests.Session()\r\n    resp=req.get(\"https://bing.ioliu.cn/?p=1\")\r\n    soup=BeautifulSoup(resp.text,\"lxml\")\r\n    pageall=soup.find_all(\"span\")[-1].get_text()\r\n    maxpage=int(pageall.split(\"/\")[1].strip())\r\n    ran=math.floor(random.random()*maxpage)+1\r\n    resp1=req.get(\"https://bing.ioliu.cn?p=\"+str(ran))\r\n    soup1=BeautifulSoup(resp1.text,\"lxml\")\r\n    allimg=soup1.find_all(\"img\")\r\n    ran1=math.floor(random.random()*len(allimg))\r\n    resp2=req.get(\"https://bing.ioliu.cn\"+allimg[ran1].next_sibling['href'])\r\n    url=re.findall(r'src=\"http(.*?)\"',resp2.text)[0]\r\n    image=req.get(\"http\"+url)\r\n    return image.content\r\n\r\ndef inputint():\r\n    #获取用户输入的时间\r\n    global t\r\n    try:\r\n        t = int(var.get().strip())\r\n    except:\r\n        t = 30\r\n    root.destroy()\r\n\r\nif __name__ == '__main__':  \r\n    t=0\r\n    if not os.path.exists('C:/backgroundPicture/'):\r\n        os.mkdir(\"C:/backgroundPicture/\")\r\n    root = tkinter.Tk(className='请输入间隔时间(按分钟计)')  # 弹出框框名\r\n    root.geometry('350x60')     # 设置弹出框的大小 w x h\r\n    var = tkinter.StringVar()   # 这即是输入框中的内容\r\n    var.set(30) # 通过var.get()/var.set() 来 获取/设置var的值\r\n    entry1 = tkinter.Entry(root, textvariable=var)  # 设置\"文本变量\"为var\r\n    entry1.pack()   # 将entry\"打上去\"\r\n    btn1 = tkinter.Button(root, text='确认', command=inputint)     # 按下此按钮(Input), 触发inputint函数\r\n    btn1.pack(side='bottom')\r\n    root.mainloop()\r\n    #一直运行并用sleep间隔\r\n    while True:\r\n        bgimg=getPicurl()\r\n        set_wallpaper(bgimg)\r\n        time.sleep(int(t*60))</pre>\r\n关于打包成exe，在python3有个pyinstaller，直接用pip安装就行。\r\n\r\n使用方式是以下，-F打包单个文件，-w不显示命令窗口，-i图标\r\n<pre>pyinstaller -F -w -i bitbug_favicon.ico filename.py</pre>",
            "post_title": "用python写个自动改壁纸桌面程序",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "427-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-11-10 18:11:31",
            "post_modified_gmt": "2017-11-10 10:11:31",
            "post_content_filtered": "",
            "post_parent": "427",
            "guid": "http://ganjiacheng.cn/blog/?p=428",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "429",
            "post_author": "1",
            "post_date": "2017-11-10 18:11:56",
            "post_date_gmt": "2017-11-10 10:11:56",
            "post_content": "忍无可忍桌面壁纸软件的广告了，终于决定自己写个，总体逻辑上也并不复杂。\r\n\r\n先是随机爬取某bing站的壁纸图片，调用win32接口改桌面壁纸，之后用tk的桌面程序来获取用户输入时间间隔，最后封装成exe使得更通用，在后台运行以及加个图标。<!--more-->不说了，直接上代码。\r\n\r\n由于是python3.x，库win32api库可能下载会有问题。建议直接去<a href=\"https://sourceforge.net/projects/pywin32/\">这里</a>手动下载安装。\r\n<pre>#coding:utf-8\r\n#python3.5\r\n#windows\r\nfrom PIL import Image\r\nimport win32api,win32con,win32gui  \r\nimport re,os  \r\nimport requests\r\nfrom io import BytesIO\r\nfrom bs4 import BeautifulSoup\r\nimport tkinter\r\nimport random\r\nimport math\r\nimport time\r\nimport re\r\n\r\ndef set_wallpaper_from_bmp(bmp_path):  \r\n    #打开指定注册表路径  \r\n    reg_key = win32api.RegOpenKeyEx(win32con.HKEY_CURRENT_USER,\"Control Panel\\\\Desktop\",0,win32con.KEY_SET_VALUE)  \r\n    #最后的参数:2拉伸,0居中,6适应,10填充,0平铺  \r\n    win32api.RegSetValueEx(reg_key, \"WallpaperStyle\", 0, win32con.REG_SZ, \"2\")  \r\n    #最后的参数:1表示平铺,拉伸居中等都是0  \r\n    win32api.RegSetValueEx(reg_key, \"TileWallpaper\", 0, win32con.REG_SZ, \"0\")  \r\n    #刷新桌面  \r\n    win32gui.SystemParametersInfo(win32con.SPI_SETDESKWALLPAPER,bmp_path, win32con.SPIF_SENDWININICHANGE)  \r\n  \r\ndef set_wallpaper(bgimg):  \r\n    #把图片格式统一转换成bmp格式,并放在源图片的同一目录  \r\n    #注意地址必须是绝对地址\r\n    new_bmp_path=\"C:/backgroundPicture/wallpaper.bmp\"\r\n    bmpImage = Image.open(BytesIO(bgimg))\r\n    bmpImage.save(new_bmp_path, \"BMP\")  \r\n    set_wallpaper_from_bmp(new_bmp_path)  \r\n\r\ndef getPicurl():\r\n    #爬虫部分，主要从这个网站随机取页随机取壁纸，返回图片二进制。\r\n    req=requests.Session()\r\n    resp=req.get(\"https://bing.ioliu.cn/?p=1\")\r\n    soup=BeautifulSoup(resp.text,\"lxml\")\r\n    pageall=soup.find_all(\"span\")[-1].get_text()\r\n    maxpage=int(pageall.split(\"/\")[1].strip())\r\n    ran=math.floor(random.random()*maxpage)+1\r\n    resp1=req.get(\"https://bing.ioliu.cn?p=\"+str(ran))\r\n    soup1=BeautifulSoup(resp1.text,\"lxml\")\r\n    allimg=soup1.find_all(\"img\")\r\n    ran1=math.floor(random.random()*len(allimg))\r\n    resp2=req.get(\"https://bing.ioliu.cn\"+allimg[ran1].next_sibling['href'])\r\n    url=re.findall(r'src=\"http(.*?)\"',resp2.text)[0]\r\n    image=req.get(\"http\"+url)\r\n    return image.content\r\n\r\ndef inputint():\r\n    #获取用户输入的时间\r\n    global t\r\n    try:\r\n        t = int(var.get().strip())\r\n    except:\r\n        t = 30\r\n    root.destroy()\r\n\r\nif __name__ == '__main__':  \r\n    t=0\r\n    if not os.path.exists('C:/backgroundPicture/'):\r\n        os.mkdir(\"C:/backgroundPicture/\")\r\n    root = tkinter.Tk(className='请输入间隔时间(按分钟计)')  # 弹出框框名\r\n    root.geometry('350x60')     # 设置弹出框的大小 w x h\r\n    var = tkinter.StringVar()   # 这即是输入框中的内容\r\n    var.set(30) # 通过var.get()/var.set() 来 获取/设置var的值\r\n    entry1 = tkinter.Entry(root, textvariable=var)  # 设置\"文本变量\"为var\r\n    entry1.pack()   # 将entry\"打上去\"\r\n    btn1 = tkinter.Button(root, text='确认', command=inputint)     # 按下此按钮(Input), 触发inputint函数\r\n    btn1.pack(side='bottom')\r\n    root.mainloop()\r\n    #一直运行并用sleep间隔\r\n    while True:\r\n        bgimg=getPicurl()\r\n        set_wallpaper(bgimg)\r\n        time.sleep(int(t*60))</pre>\r\n关于打包成exe，在python3有个pyinstaller，直接用pip安装就行。\r\n\r\n使用方式是以下，-F打包单个文件，-w不显示命令窗口，-i图标\r\n<pre>pyinstaller -F -w -i bitbug_favicon.ico filename.py</pre>",
            "post_title": "用python写个自动改壁纸的桌面程序",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "427-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-11-10 18:11:56",
            "post_modified_gmt": "2017-11-10 10:11:56",
            "post_content_filtered": "",
            "post_parent": "427",
            "guid": "http://ganjiacheng.cn/blog/?p=429",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "431",
            "post_author": "1",
            "post_date": "2017-11-12 13:30:34",
            "post_date_gmt": "2017-11-12 05:30:34",
            "post_content": "忍无可忍桌面壁纸软件的广告了，终于决定自己写个，总体逻辑上也并不复杂。\n\n先是随机爬取某bing站的壁纸图片，调用win32接口改桌面壁纸，之后用tk的桌面程序来获取用户输入时间间隔，最后封装成exe使得更通用，在后台运行以及加个图标。<!--more-->不说了，直接上代码。\n\n由于是python3.x，库win32api库可能下载会有问题。建议直接去<a href=\"https://sourceforge.net/projects/pywin32/\">这里</a>手动下载安装。\n<pre>#coding:utf-8\n#python3.5\n#windows\nfrom PIL import Image\nimport win32api,win32con,win32gui  \nimport re,os  \nimport requests\nfrom io import BytesIO\nfrom bs4 import BeautifulSoup\nimport tkinter\nimport random\nimport math\nimport time\nimport re\n\ndef set_wallpaper_from_bmp(bmp_path):  \n    #打开指定注册表路径  \n    reg_key = win32api.RegOpenKeyEx(win32con.HKEY_CURRENT_USER,\"Control Panel\\\\Desktop\",0,win32con.KEY_SET_VALUE)  \n    #最后的参数:2拉伸,0居中,6适应,10填充,0平铺  \n    win32api.RegSetValueEx(reg_key, \"WallpaperStyle\", 0, win32con.REG_SZ, \"2\")  \n    #最后的参数:1表示平铺,拉伸居中等都是0  \n    win32api.RegSetValueEx(reg_key, \"TileWallpaper\", 0, win32con.REG_SZ, \"0\")  \n    #刷新桌面  \n    win32gui.SystemParametersInfo(win32con.SPI_SETDESKWALLPAPER,bmp_path, win32con.SPIF_SENDWININICHANGE)  \n  \ndef set_wallpaper(bgimg):  \n    #把图片格式统一转换成bmp格式,并放在源图片的同一目录  \n    #注意地址必须是绝对地址\n    new_bmp_path=\"C:/backgroundPicture/wallpaper.bmp\"\n    bmpImage = Image.open(BytesIO(bgimg))\n    bmpImage.save(new_bmp_path, \"BMP\")  \n    set_wallpaper_from_bmp(new_bmp_path)  \n\ndef getPicurl():\n    #爬虫部分，主要从这个网站随机取页随机取壁纸，返回图片二进制。\n    req=requests.Session()\n    resp=req.get(\"https://bing.ioliu.cn/?p=1\")\n    soup=BeautifulSoup(resp.text,\"lxml\")\n    pageall=soup.find_all(\"span\")[-1].get_text()\n    maxpage=int(pageall.split(\"/\")[1].strip())\n    ran=math.floor(random.random()*maxpage)+1\n    resp1=req.get(\"https://bing.ioliu.cn?p=\"+str(ran))\n    soup1=BeautifulSoup(resp1.text,\"lxml\")\n    allimg=soup1.find_all(\"img\")\n    ran1=math.floor(random.random()*len(allimg))\n    resp2=req.get(\"https://bing.ioliu.cn\"+allimg[ran1].next_sibling['href'])\n    url=re.findall(r'src=\"http(.*?)\"',resp2.text)[0]\n    image=req.get(\"http\"+url)\n    return image.content\n\ndef inputint():\n    #获取用户输入的时间\n    global t\n    try:\n        t = int(var.get().strip())\n    except:\n        t = 30\n    root.destroy()\n\nif __name__ == '__main__':  \n    t=0\n    if not os.path.exists('C:/backgroundPicture/'):\n        os.mkdir(\"C:/backgroundPicture/\")\n    root = tkinter.Tk(className='请输入间隔时间(按分钟计)')  # 弹出框框名\n    root.geometry('350x60')     # 设置弹出框的大小 w x h\n    var = tkinter.StringVar()   # 这即是输入框中的内容\n    var.set(30) # 通过var.get()/var.set() 来 获取/设置var的值\n    entry1 = tkinter.Entry(root, textvariable=var)  # 设置\"文本变量\"为var\n    entry1.pack()   # 将entry\"打上去\"\n    btn1 = tkinter.Button(root, text='确认', command=inputint)     # 按下此按钮(Input), 触发inputint函数\n    btn1.pack(side='bottom')\n    root.mainloop()\n    #一直运行并用sleep间隔\n    while True:\n        bgimg=getPicurl()\n        set_wallpaper(bgimg)\n        time.sleep(int(t*60))</pre>\n关于打包成exe，在python3有个pyinstaller，直接用pip安装就行。\n\n使用方式是以下，-F打包单个文件，-w不显示命令窗口，-i图标\n<pre>pyinstaller -F -w -i bitbug_favicon.ico filename.py</pre>\n以上便是自动换桌面壁纸，另附这里添加一个功能，就是在程序运行时用按键触发换壁纸。要做的便是另写一个线程做按键监听。这里用pyHook做按键监听，关于pyhook的安装，不能简单用pip，不然用按键监听的时候会有一个bug。\n<pre>from ctypes import *\nimport pyHook\nimport pythoncom\nimport threading\ndef onKeyboardEvent(event):\n    global lt\n    #96为1左边那个按键，这里写法是双击\n    if event.Ascii==96:\n        if time.time()-lt&lt;2:\n            bgimg=getPicurl()\n            set_wallpaper(bgimg)\n        else:\n            lt=time.time()\n    return True\ndef task0():\n    hm = pyHook.HookManager()\n    hm.KeyDown = onKeyboardEvent\n    hm.HookKeyboard()\n    pythoncom.PumpMessages()\ndef task1():\n    global t\n    while True:\n        bgimg=getPicurl()\n        set_wallpaper(bgimg)\n        time.sleep(int(t*60))\nthreads = []\n    t1 = threading.Thread(target=task0)\n    threads.append(t1)\n    t0 = threading.Thread(target=task1)\n    threads.append(t0)\n    for i in range(2):\n        threads[i].start()\n    for i in range(2):\n        threads[i].join()</pre>\n这段代码结合上面部分便可以完成一个自动换桌面且可按键手动换桌面的程序。\n\n&nbsp;",
            "post_title": "用python写个自动改壁纸的桌面程序",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "427-autosave-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-11-12 13:30:34",
            "post_modified_gmt": "2017-11-12 05:30:34",
            "post_content_filtered": "",
            "post_parent": "427",
            "guid": "http://ganjiacheng.cn/blog/?p=431",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "432",
            "post_author": "1",
            "post_date": "2017-11-12 12:24:43",
            "post_date_gmt": "2017-11-12 04:24:43",
            "post_content": "忍无可忍桌面壁纸软件的广告了，终于决定自己写个，总体逻辑上也并不复杂。\n\n先是随机爬取某bing站的壁纸图片，调用win32接口改桌面壁纸，之后用tk的桌面程序来获取用户输入时间间隔，最后封装成exe使得更通用，在后台运行以及加个图标。<!--more-->不说了，直接上代码。\n\n由于是python3.x，库win32api库可能下载会有问题。建议直接去<a href=\"https://sourceforge.net/projects/pywin32/\">这里</a>手动下载安装。\n<pre>#coding:utf-8\n#python3.5\n#windows\nfrom PIL import Image\nimport win32api,win32con,win32gui  \nimport re,os  \nimport requests\nfrom io import BytesIO\nfrom bs4 import BeautifulSoup\nimport tkinter\nimport random\nimport math\nimport time\nimport re\n\ndef set_wallpaper_from_bmp(bmp_path):  \n    #打开指定注册表路径  \n    reg_key = win32api.RegOpenKeyEx(win32con.HKEY_CURRENT_USER,\"Control Panel\\\\Desktop\",0,win32con.KEY_SET_VALUE)  \n    #最后的参数:2拉伸,0居中,6适应,10填充,0平铺  \n    win32api.RegSetValueEx(reg_key, \"WallpaperStyle\", 0, win32con.REG_SZ, \"2\")  \n    #最后的参数:1表示平铺,拉伸居中等都是0  \n    win32api.RegSetValueEx(reg_key, \"TileWallpaper\", 0, win32con.REG_SZ, \"0\")  \n    #刷新桌面  \n    win32gui.SystemParametersInfo(win32con.SPI_SETDESKWALLPAPER,bmp_path, win32con.SPIF_SENDWININICHANGE)  \n  \ndef set_wallpaper(bgimg):  \n    #把图片格式统一转换成bmp格式,并放在源图片的同一目录  \n    #注意地址必须是绝对地址\n    new_bmp_path=\"C:/backgroundPicture/wallpaper.bmp\"\n    bmpImage = Image.open(BytesIO(bgimg))\n    bmpImage.save(new_bmp_path, \"BMP\")  \n    set_wallpaper_from_bmp(new_bmp_path)  \n\ndef getPicurl():\n    #爬虫部分，主要从这个网站随机取页随机取壁纸，返回图片二进制。\n    req=requests.Session()\n    resp=req.get(\"https://bing.ioliu.cn/?p=1\")\n    soup=BeautifulSoup(resp.text,\"lxml\")\n    pageall=soup.find_all(\"span\")[-1].get_text()\n    maxpage=int(pageall.split(\"/\")[1].strip())\n    ran=math.floor(random.random()*maxpage)+1\n    resp1=req.get(\"https://bing.ioliu.cn?p=\"+str(ran))\n    soup1=BeautifulSoup(resp1.text,\"lxml\")\n    allimg=soup1.find_all(\"img\")\n    ran1=math.floor(random.random()*len(allimg))\n    resp2=req.get(\"https://bing.ioliu.cn\"+allimg[ran1].next_sibling['href'])\n    url=re.findall(r'src=\"http(.*?)\"',resp2.text)[0]\n    image=req.get(\"http\"+url)\n    return image.content\n\ndef inputint():\n    #获取用户输入的时间\n    global t\n    try:\n        t = int(var.get().strip())\n    except:\n        t = 30\n    root.destroy()\n\nif __name__ == '__main__':  \n    t=0\n    if not os.path.exists('C:/backgroundPicture/'):\n        os.mkdir(\"C:/backgroundPicture/\")\n    root = tkinter.Tk(className='请输入间隔时间(按分钟计)')  # 弹出框框名\n    root.geometry('350x60')     # 设置弹出框的大小 w x h\n    var = tkinter.StringVar()   # 这即是输入框中的内容\n    var.set(30) # 通过var.get()/var.set() 来 获取/设置var的值\n    entry1 = tkinter.Entry(root, textvariable=var)  # 设置\"文本变量\"为var\n    entry1.pack()   # 将entry\"打上去\"\n    btn1 = tkinter.Button(root, text='确认', command=inputint)     # 按下此按钮(Input), 触发inputint函数\n    btn1.pack(side='bottom')\n    root.mainloop()\n    #一直运行并用sleep间隔\n    while True:\n        bgimg=getPicurl()\n        set_wallpaper(bgimg)\n        time.sleep(int(t*60))</pre>\n关于打包成exe，在python3有个pyinstaller，直接用pip安装就行。\n\n使用方式是以下，-F打包单个文件，-w不显示命令窗口，-i图标\n<pre>pyinstaller -F -w -i bitbug_favicon.ico filename.py</pre>\n以上便是自动换桌面壁纸，另附这里添加一个功能，就是在程序运行时用按键触发换壁纸。要做的便是另写一个线程做按键监听。\n<pre>from ctypes import *\nimport pyHook\nimport pythoncom\nimport threading\ndef onKeyboardEvent(event):\n    global lt\n    if event.Ascii==96:\n        if time.time()-lt&lt;2:\n            bgimg=getPicurl()\n            set_wallpaper(bgimg)\n        else:\n            lt=time.time()\n    return True\ndef task0():\n    hm = pyHook.HookManager()\n    hm.KeyDown = onKeyboardEvent\n    hm.HookKeyboard()\n    pythoncom.PumpMessages()\ndef task1():\n    global t\n    while True:\n        bgimg=getPicurl()\n        set_wallpaper(bgimg)\n        time.sleep(int(t*60))\nthreads = []\n    t1 = threading.Thread(target=task0)\n    threads.append(t1)\n    t0 = threading.Thread(target=task1)\n    threads.append(t0)\n    for i in range(2):\n        threads[i].start()\n    for i in range(2):\n        threads[i].join()</pre>\n&nbsp;",
            "post_title": "用python写个自动改壁纸的桌面程序",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "427-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-11-12 12:24:43",
            "post_modified_gmt": "2017-11-12 04:24:43",
            "post_content_filtered": "",
            "post_parent": "427",
            "guid": "http://ganjiacheng.cn/blog/?p=432",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "433",
            "post_author": "1",
            "post_date": "2017-11-12 13:31:11",
            "post_date_gmt": "2017-11-12 05:31:11",
            "post_content": "忍无可忍桌面壁纸软件的广告了，终于决定自己写个，总体逻辑上也并不复杂。\r\n\r\n先是随机爬取某bing站的壁纸图片，调用win32接口改桌面壁纸，之后用tk的桌面程序来获取用户输入时间间隔，最后封装成exe使得更通用，在后台运行以及加个图标。<!--more-->不说了，直接上代码。\r\n\r\n由于是python3.x，库win32api库可能下载会有问题。建议直接去<a href=\"https://sourceforge.net/projects/pywin32/\">这里</a>手动下载安装。\r\n<pre>#coding:utf-8\r\n#python3.5\r\n#windows\r\nfrom PIL import Image\r\nimport win32api,win32con,win32gui  \r\nimport re,os  \r\nimport requests\r\nfrom io import BytesIO\r\nfrom bs4 import BeautifulSoup\r\nimport tkinter\r\nimport random\r\nimport math\r\nimport time\r\nimport re\r\n\r\ndef set_wallpaper_from_bmp(bmp_path):  \r\n    #打开指定注册表路径  \r\n    reg_key = win32api.RegOpenKeyEx(win32con.HKEY_CURRENT_USER,\"Control Panel\\\\Desktop\",0,win32con.KEY_SET_VALUE)  \r\n    #最后的参数:2拉伸,0居中,6适应,10填充,0平铺  \r\n    win32api.RegSetValueEx(reg_key, \"WallpaperStyle\", 0, win32con.REG_SZ, \"2\")  \r\n    #最后的参数:1表示平铺,拉伸居中等都是0  \r\n    win32api.RegSetValueEx(reg_key, \"TileWallpaper\", 0, win32con.REG_SZ, \"0\")  \r\n    #刷新桌面  \r\n    win32gui.SystemParametersInfo(win32con.SPI_SETDESKWALLPAPER,bmp_path, win32con.SPIF_SENDWININICHANGE)  \r\n  \r\ndef set_wallpaper(bgimg):  \r\n    #把图片格式统一转换成bmp格式,并放在源图片的同一目录  \r\n    #注意地址必须是绝对地址\r\n    new_bmp_path=\"C:/backgroundPicture/wallpaper.bmp\"\r\n    bmpImage = Image.open(BytesIO(bgimg))\r\n    bmpImage.save(new_bmp_path, \"BMP\")  \r\n    set_wallpaper_from_bmp(new_bmp_path)  \r\n\r\ndef getPicurl():\r\n    #爬虫部分，主要从这个网站随机取页随机取壁纸，返回图片二进制。\r\n    req=requests.Session()\r\n    resp=req.get(\"https://bing.ioliu.cn/?p=1\")\r\n    soup=BeautifulSoup(resp.text,\"lxml\")\r\n    pageall=soup.find_all(\"span\")[-1].get_text()\r\n    maxpage=int(pageall.split(\"/\")[1].strip())\r\n    ran=math.floor(random.random()*maxpage)+1\r\n    resp1=req.get(\"https://bing.ioliu.cn?p=\"+str(ran))\r\n    soup1=BeautifulSoup(resp1.text,\"lxml\")\r\n    allimg=soup1.find_all(\"img\")\r\n    ran1=math.floor(random.random()*len(allimg))\r\n    resp2=req.get(\"https://bing.ioliu.cn\"+allimg[ran1].next_sibling['href'])\r\n    url=re.findall(r'src=\"http(.*?)\"',resp2.text)[0]\r\n    image=req.get(\"http\"+url)\r\n    return image.content\r\n\r\ndef inputint():\r\n    #获取用户输入的时间\r\n    global t\r\n    try:\r\n        t = int(var.get().strip())\r\n    except:\r\n        t = 30\r\n    root.destroy()\r\n\r\nif __name__ == '__main__':  \r\n    t=0\r\n    if not os.path.exists('C:/backgroundPicture/'):\r\n        os.mkdir(\"C:/backgroundPicture/\")\r\n    root = tkinter.Tk(className='请输入间隔时间(按分钟计)')  # 弹出框框名\r\n    root.geometry('350x60')     # 设置弹出框的大小 w x h\r\n    var = tkinter.StringVar()   # 这即是输入框中的内容\r\n    var.set(30) # 通过var.get()/var.set() 来 获取/设置var的值\r\n    entry1 = tkinter.Entry(root, textvariable=var)  # 设置\"文本变量\"为var\r\n    entry1.pack()   # 将entry\"打上去\"\r\n    btn1 = tkinter.Button(root, text='确认', command=inputint)     # 按下此按钮(Input), 触发inputint函数\r\n    btn1.pack(side='bottom')\r\n    root.mainloop()\r\n    #一直运行并用sleep间隔\r\n    while True:\r\n        bgimg=getPicurl()\r\n        set_wallpaper(bgimg)\r\n        time.sleep(int(t*60))</pre>\r\n关于打包成exe，在python3有个pyinstaller，直接用pip安装就行。\r\n\r\n使用方式是以下，-F打包单个文件，-w不显示命令窗口，-i图标\r\n<pre>pyinstaller -F -w -i bitbug_favicon.ico filename.py</pre>\r\n以上便是自动换桌面壁纸，另附这里添加一个功能，就是在程序运行时用按键触发换壁纸。要做的便是另写一个线程做按键监听。这里用pyHook做按键监听，关于pyhook的安装，不能简单用pip，不然用按键监听的时候会有一个bug。\r\n<pre>from ctypes import *\r\nimport pyHook\r\nimport pythoncom\r\nimport threading\r\ndef onKeyboardEvent(event):\r\n    global lt\r\n    #96为1左边那个按键，这里写法是双击\r\n    if event.Ascii==96:\r\n        if time.time()-lt&lt;2:\r\n            bgimg=getPicurl()\r\n            set_wallpaper(bgimg)\r\n        else:\r\n            lt=time.time()\r\n    return True\r\ndef task0():\r\n    hm = pyHook.HookManager()\r\n    hm.KeyDown = onKeyboardEvent\r\n    hm.HookKeyboard()\r\n    pythoncom.PumpMessages()\r\ndef task1():\r\n    global t\r\n    while True:\r\n        bgimg=getPicurl()\r\n        set_wallpaper(bgimg)\r\n        time.sleep(int(t*60))\r\nthreads = []\r\n    t1 = threading.Thread(target=task0)\r\n    threads.append(t1)\r\n    t0 = threading.Thread(target=task1)\r\n    threads.append(t0)\r\n    for i in range(2):\r\n        threads[i].start()\r\n    for i in range(2):\r\n        threads[i].join()</pre>\r\n这段代码结合上面部分便可以完成一个自动换桌面且可按键手动换桌面的程序。\r\n\r\n最后贴一下应用程序<a href=\"http://pan.baidu.com/s/1c1YXoje\">下载地址。</a>",
            "post_title": "用python写个自动改壁纸的桌面程序",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "427-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-11-12 13:31:11",
            "post_modified_gmt": "2017-11-12 05:31:11",
            "post_content_filtered": "",
            "post_parent": "427",
            "guid": "http://ganjiacheng.cn/blog/?p=433",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "436",
            "post_author": "1",
            "post_date": "2017-11-22 18:31:25",
            "post_date_gmt": "2017-11-22 10:31:25",
            "post_content": "websock也没啥好讲的，就一可以实现长连接的协议，其中也有三次握手之说。具体的也不去探究了，这里用node.js做后端来实现与前端js的websocket连接。并完成一个简易的联机游戏。<!--more-->\r\n\r\n首先参考这个<a href=\"https://socket.io/\">socket.io的网址</a>，参考get start可得到一些安装的基本步骤，这里默认已经安装好node.js以及npm，具体操作包括如下\r\n<pre>npm init</pre>\r\n<pre><code>npm install --save express@4.15.2</code></pre>\r\n<pre><code>npm install --save socket.io</code></pre>\r\n之后要进行的是服务器的编写，保存为index.js\r\n<pre>//引入必要库\r\nvar app=require('express')();\r\nvar http=require('http').Server(app);\r\nvar io=require('socket.io')(http);\r\n//n用于保存连接数目，now用于保存当前落子玩家\r\nvar n=0;\r\nvar now=0;\r\n//加载html文件\r\napp.get('/',function(req,res){\r\n    res.sendFile(__dirname + '/index.html');\r\n})\r\n//websocket连接操作\r\nio.on('connection',function(socket) {\r\n    n++;\r\n    //断开连接操作\r\n    socket.on('disconnect',function(){\r\n        n--;\r\n        console.log('out');\r\n    });\r\n    //收到消息，触发指定事件，并传送得到的消息\r\n    socket.on('msg',function(info){\r\n        console.log(now)\r\n        if(info[2]!=now &amp;&amp; n&gt;=2){\r\n            io.emit('message',{for:info})\r\n            now=info[2];\r\n        }\r\n    })\r\n});\r\n//打开http服务器\r\nhttp.listen(3000,function(){\r\n    console.log('start')\r\n})</pre>\r\n接下来要编辑的是html文件，同目录下保存为index.html\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;五子棋&lt;/title&gt;\r\n    &lt;style type=\"text/css\"&gt;\r\n        canvas{\r\n            border:solid 1px black;\r\n            background-color: #5b7d7d;\r\n            -webkit-tap-highlight-color:rgba(0,0,0,0)\r\n        }\r\n    &lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;canvas id=\"can\" width=\"600\" height=\"800\"&gt;not support&lt;/canvas&gt;\r\n    &lt;script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.3/socket.io.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-3.2.1.min.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        //获取canvas，设置宽高\r\n        //获取屏宽和高并设置小的一方为棋盘长度\r\n        var can = document.getElementById('can');\r\n        var x = window.innerWidth&gt;window.innerHeight?window.innerHeight:window.innerWidth;\r\n        var w = can.width = x-20;\r\n        var h = can.height = x-20;\r\n        var con = can.getContext('2d');\r\n        var nowIn=1;\r\n        var alreadyIn=[];\r\n        var blackIn=[];\r\n        var whiteIn=[];\r\n        var local=Math.random();\r\n        //画线，做棋盘。\r\n        function drawline(con,color,stepx,stepy){\r\n            con.strokeStyle=color;\r\n            con.lineWidth=1;\r\n            for(var i=stepx+0.5;i&lt;can.width;i+=stepx){\r\n                con.beginPath();\r\n                con.moveTo(i,0);\r\n                con.lineTo(i,h);\r\n                con.stroke();\r\n            }\r\n            for(var i=stepy+0.5;i&lt;can.height;i+=stepy){\r\n                con.beginPath();\r\n                con.moveTo(0,i);\r\n                con.lineTo(w,i);\r\n                con.stroke();\r\n            }\r\n        }\r\n        //画棋子\r\n        function drawqi(x,y,color){\r\n            con.beginPath();\r\n            con.fillStyle=color;\r\n            con.arc(x*w/15,y*w/15,w/38,0,2*Math.PI);\r\n            con.stroke();\r\n            con.fill();\r\n            con.closePath();\r\n        }\r\n        //判断胜利，这里采用逐子判断。\r\n        function judgeWin(chess){\r\n            for(var i=0;i&lt;chess.length;i++){\r\n                sp=chess[i].split(\",\")\r\n                if(sp[0]&gt;=2 &amp;&amp; sp[1]&gt;=2){\r\n                    if($.inArray((parseInt(sp[0])-1)+\",\"+(parseInt(sp[1])-1),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])-2)+\",\"+(parseInt(sp[1])-2),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])+1)+\",\"+(parseInt(sp[1])+1),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])+2)+\",\"+(parseInt(sp[1])+2),chess)!=-1){\r\n                        return true;\r\n                    }\r\n                    if($.inArray((parseInt(sp[0])-1)+\",\"+(parseInt(sp[1])),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])-2)+\",\"+(parseInt(sp[1])),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])+1)+\",\"+(parseInt(sp[1])),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])+2)+\",\"+(parseInt(sp[1])),chess)!=-1){\r\n                        return true;\r\n                    }\r\n                    if($.inArray((parseInt(sp[0]))+\",\"+(parseInt(sp[1])-1),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0]))+\",\"+(parseInt(sp[1])-2),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0]))+\",\"+(parseInt(sp[1])+1),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0]))+\",\"+(parseInt(sp[1])+2),chess)!=-1){\r\n                        return true;\r\n                    }\r\n                    if($.inArray((parseInt(sp[0])-1)+\",\"+(parseInt(sp[1])+1),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])-2)+\",\"+(parseInt(sp[1])+2),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])+1)+\",\"+(parseInt(sp[1])-1),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])+2)+\",\"+(parseInt(sp[1])-2),chess)!=-1){\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false\r\n        }\r\n        //触发画线，连接websocket\r\n        drawline(con,'lightgray',w/15,h/15);\r\n        var socket=io();\r\n        //canvas点击事件，获取最近的一个落子点坐标，发送事件。\r\n        can.onclick=function(e){\r\n            mx=Math.round(e.offsetX/w*15);\r\n            my=Math.round(e.offsetY/w*15);\r\n            if($.inArray((mx*15+my),alreadyIn)==-1){\r\n                socket.emit('msg',[mx,my,local])\r\n            }\r\n        }\r\n        //服务器返回触发事件，接收消息并展示给已连接用户\r\n        socket.on('message',function(msg){\r\n            mx=msg.for[0]\r\n            my=msg.for[1]\r\n            \r\n            alreadyIn.push(mx*15+my);\r\n            if(nowIn==0){\r\n                draw=drawqi(mx,my,\"#000\");\r\n                blackIn.push([mx,my].toString())\r\n                if(judgeWin(blackIn)){\r\n                    alert(\"black win\");\r\n                }\r\n            }else{\r\n                draw=drawqi(mx,my,\"#fff\");\r\n                whiteIn.push([mx,my].toString());\r\n                if(judgeWin(whiteIn)){\r\n                    setTimeout(alert(\"white win\"),500);\r\n                }\r\n            }\r\n            nowIn=1-nowIn;\r\n        })\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n一般看看socket.io的文档便可以get到一点websocket的灵感，之后就可以自行拓展。\r\n\r\n当然这还是websocket最基础的一部分，之后有待进一步探索。",
            "post_title": "用node.js的socket.io实现双人五子棋对战",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "307-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-11-22 18:31:25",
            "post_modified_gmt": "2017-11-22 10:31:25",
            "post_content_filtered": "",
            "post_parent": "307",
            "guid": "http://ganjiacheng.cn/blog/?p=436",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "437",
            "post_author": "1",
            "post_date": "2017-11-22 18:35:12",
            "post_date_gmt": "2017-11-22 10:35:12",
            "post_content": "",
            "post_title": "M``QKAB)$G9H[RBVI2{B0OE",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "mqkabg9hrbvi2b0oe",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-11-22 18:35:12",
            "post_modified_gmt": "2017-11-22 10:35:12",
            "post_content_filtered": "",
            "post_parent": "307",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2017/11/MQKABG9HRBVI2B0OE.png",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/png",
            "comment_count": "0"
        },
        {
            "ID": "438",
            "post_author": "1",
            "post_date": "2017-11-22 18:35:48",
            "post_date_gmt": "2017-11-22 10:35:48",
            "post_content": "websock也没啥好讲的，就一可以实现长连接的协议，其中也有三次握手之说。具体的也不去探究了，这里用node.js做后端来实现与前端js的websocket连接。并完成一个简易的联机游戏。<!--more-->\n\n首先参考这个<a href=\"https://socket.io/\">socket.io的网址</a>，参考get start可得到一些安装的基本步骤，这里默认已经安装好node.js以及npm，具体操作包括如下\n<pre>npm init</pre>\n<pre><code>npm install --save express@4.15.2</code></pre>\n<pre><code>npm install --save socket.io</code></pre>\n之后要进行的是服务器的编写，保存为index.js\n<pre>//引入必要库\nvar app=require('express')();\nvar http=require('http').Server(app);\nvar io=require('socket.io')(http);\n//n用于保存连接数目，now用于保存当前落子玩家\nvar n=0;\nvar now=0;\n//加载html文件\napp.get('/',function(req,res){\n    res.sendFile(__dirname + '/index.html');\n})\n//websocket连接操作\nio.on('connection',function(socket) {\n    n++;\n    //断开连接操作\n    socket.on('disconnect',function(){\n        n--;\n        console.log('out');\n    });\n    //收到消息，触发指定事件，并传送得到的消息\n    socket.on('msg',function(info){\n        console.log(now)\n        if(info[2]!=now &amp;&amp; n&gt;=2){\n            io.emit('message',{for:info})\n            now=info[2];\n        }\n    })\n});\n//打开http服务器\nhttp.listen(3000,function(){\n    console.log('start')\n})</pre>\n接下来要编辑的是html文件，同目录下保存为index.html\n<pre>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;五子棋&lt;/title&gt;\n    &lt;style type=\"text/css\"&gt;\n        canvas{\n            border:solid 1px black;\n            background-color: #5b7d7d;\n            -webkit-tap-highlight-color:rgba(0,0,0,0)\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;canvas id=\"can\" width=\"600\" height=\"800\"&gt;not support&lt;/canvas&gt;\n    &lt;script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.3/socket.io.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-3.2.1.min.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        //获取canvas，设置宽高\n        //获取屏宽和高并设置小的一方为棋盘长度\n        var can = document.getElementById('can');\n        var x = window.innerWidth&gt;window.innerHeight?window.innerHeight:window.innerWidth;\n        var w = can.width = x-20;\n        var h = can.height = x-20;\n        var con = can.getContext('2d');\n        var nowIn=1;\n        var alreadyIn=[];\n        var blackIn=[];\n        var whiteIn=[];\n        var local=Math.random();\n        //画线，做棋盘。\n        function drawline(con,color,stepx,stepy){\n            con.strokeStyle=color;\n            con.lineWidth=1;\n            for(var i=stepx+0.5;i&lt;can.width;i+=stepx){\n                con.beginPath();\n                con.moveTo(i,0);\n                con.lineTo(i,h);\n                con.stroke();\n            }\n            for(var i=stepy+0.5;i&lt;can.height;i+=stepy){\n                con.beginPath();\n                con.moveTo(0,i);\n                con.lineTo(w,i);\n                con.stroke();\n            }\n        }\n        //画棋子\n        function drawqi(x,y,color){\n            con.beginPath();\n            con.fillStyle=color;\n            con.arc(x*w/15,y*w/15,w/38,0,2*Math.PI);\n            con.stroke();\n            con.fill();\n            con.closePath();\n        }\n        //判断胜利，这里采用逐子判断。\n        function judgeWin(chess){\n            for(var i=0;i&lt;chess.length;i++){\n                sp=chess[i].split(\",\")\n                if(sp[0]&gt;=2 &amp;&amp; sp[1]&gt;=2){\n                    if($.inArray((parseInt(sp[0])-1)+\",\"+(parseInt(sp[1])-1),chess)!=-1&amp;&amp;\n                    $.inArray((parseInt(sp[0])-2)+\",\"+(parseInt(sp[1])-2),chess)!=-1&amp;&amp;\n                    $.inArray((parseInt(sp[0])+1)+\",\"+(parseInt(sp[1])+1),chess)!=-1&amp;&amp;\n                    $.inArray((parseInt(sp[0])+2)+\",\"+(parseInt(sp[1])+2),chess)!=-1){\n                        return true;\n                    }\n                    if($.inArray((parseInt(sp[0])-1)+\",\"+(parseInt(sp[1])),chess)!=-1&amp;&amp;\n                    $.inArray((parseInt(sp[0])-2)+\",\"+(parseInt(sp[1])),chess)!=-1&amp;&amp;\n                    $.inArray((parseInt(sp[0])+1)+\",\"+(parseInt(sp[1])),chess)!=-1&amp;&amp;\n                    $.inArray((parseInt(sp[0])+2)+\",\"+(parseInt(sp[1])),chess)!=-1){\n                        return true;\n                    }\n                    if($.inArray((parseInt(sp[0]))+\",\"+(parseInt(sp[1])-1),chess)!=-1&amp;&amp;\n                    $.inArray((parseInt(sp[0]))+\",\"+(parseInt(sp[1])-2),chess)!=-1&amp;&amp;\n                    $.inArray((parseInt(sp[0]))+\",\"+(parseInt(sp[1])+1),chess)!=-1&amp;&amp;\n                    $.inArray((parseInt(sp[0]))+\",\"+(parseInt(sp[1])+2),chess)!=-1){\n                        return true;\n                    }\n                    if($.inArray((parseInt(sp[0])-1)+\",\"+(parseInt(sp[1])+1),chess)!=-1&amp;&amp;\n                    $.inArray((parseInt(sp[0])-2)+\",\"+(parseInt(sp[1])+2),chess)!=-1&amp;&amp;\n                    $.inArray((parseInt(sp[0])+1)+\",\"+(parseInt(sp[1])-1),chess)!=-1&amp;&amp;\n                    $.inArray((parseInt(sp[0])+2)+\",\"+(parseInt(sp[1])-2),chess)!=-1){\n                        return true;\n                    }\n                }\n            }\n            return false\n        }\n        //触发画线，连接websocket\n        drawline(con,'lightgray',w/15,h/15);\n        var socket=io();\n        //canvas点击事件，获取最近的一个落子点坐标，发送事件。\n        can.onclick=function(e){\n            mx=Math.round(e.offsetX/w*15);\n            my=Math.round(e.offsetY/w*15);\n            if($.inArray((mx*15+my),alreadyIn)==-1){\n                socket.emit('msg',[mx,my,local])\n            }\n        }\n        //服务器返回触发事件，接收消息并展示给已连接用户\n        socket.on('message',function(msg){\n            mx=msg.for[0]\n            my=msg.for[1]\n            \n            alreadyIn.push(mx*15+my);\n            if(nowIn==0){\n                draw=drawqi(mx,my,\"#000\");\n                blackIn.push([mx,my].toString())\n                if(judgeWin(blackIn)){\n                    alert(\"black win\");\n                }\n            }else{\n                draw=drawqi(mx,my,\"#fff\");\n                whiteIn.push([mx,my].toString());\n                if(judgeWin(whiteIn)){\n                    setTimeout(alert(\"white win\"),500);\n                }\n            }\n            nowIn=1-nowIn;\n        })\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;</pre>\n效果图：<img class=\"alignnone size-medium wp-image-437\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/11/MQKABG9HRBVI2B0OE-298x300.png\" alt=\"\" width=\"298\" height=\"300\" />\n\n一般看看socket.io的文档便可以get到一点websocket的灵感，之后就可以自行拓展。\n\n当然这还是websocket最基础的一部分，之后有待进一步探索。",
            "post_title": "用node.js的socket.io实现双人五子棋对战",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "307-autosave-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-11-22 18:35:48",
            "post_modified_gmt": "2017-11-22 10:35:48",
            "post_content_filtered": "",
            "post_parent": "307",
            "guid": "http://ganjiacheng.cn/blog/?p=438",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "439",
            "post_author": "1",
            "post_date": "2017-11-22 18:36:01",
            "post_date_gmt": "2017-11-22 10:36:01",
            "post_content": "websock也没啥好讲的，就一可以实现长连接的协议，其中也有三次握手之说。具体的也不去探究了，这里用node.js做后端来实现与前端js的websocket连接。并完成一个简易的联机游戏。<!--more-->\r\n\r\n首先参考这个<a href=\"https://socket.io/\">socket.io的网址</a>，参考get start可得到一些安装的基本步骤，这里默认已经安装好node.js以及npm，具体操作包括如下\r\n<pre>npm init</pre>\r\n<pre><code>npm install --save express@4.15.2</code></pre>\r\n<pre><code>npm install --save socket.io</code></pre>\r\n之后要进行的是服务器的编写，保存为index.js\r\n<pre>//引入必要库\r\nvar app=require('express')();\r\nvar http=require('http').Server(app);\r\nvar io=require('socket.io')(http);\r\n//n用于保存连接数目，now用于保存当前落子玩家\r\nvar n=0;\r\nvar now=0;\r\n//加载html文件\r\napp.get('/',function(req,res){\r\n    res.sendFile(__dirname + '/index.html');\r\n})\r\n//websocket连接操作\r\nio.on('connection',function(socket) {\r\n    n++;\r\n    //断开连接操作\r\n    socket.on('disconnect',function(){\r\n        n--;\r\n        console.log('out');\r\n    });\r\n    //收到消息，触发指定事件，并传送得到的消息\r\n    socket.on('msg',function(info){\r\n        console.log(now)\r\n        if(info[2]!=now &amp;&amp; n&gt;=2){\r\n            io.emit('message',{for:info})\r\n            now=info[2];\r\n        }\r\n    })\r\n});\r\n//打开http服务器\r\nhttp.listen(3000,function(){\r\n    console.log('start')\r\n})</pre>\r\n接下来要编辑的是html文件，同目录下保存为index.html\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;五子棋&lt;/title&gt;\r\n    &lt;style type=\"text/css\"&gt;\r\n        canvas{\r\n            border:solid 1px black;\r\n            background-color: #5b7d7d;\r\n            -webkit-tap-highlight-color:rgba(0,0,0,0)\r\n        }\r\n    &lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;canvas id=\"can\" width=\"600\" height=\"800\"&gt;not support&lt;/canvas&gt;\r\n    &lt;script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.3/socket.io.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-3.2.1.min.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        //获取canvas，设置宽高\r\n        //获取屏宽和高并设置小的一方为棋盘长度\r\n        var can = document.getElementById('can');\r\n        var x = window.innerWidth&gt;window.innerHeight?window.innerHeight:window.innerWidth;\r\n        var w = can.width = x-20;\r\n        var h = can.height = x-20;\r\n        var con = can.getContext('2d');\r\n        var nowIn=1;\r\n        var alreadyIn=[];\r\n        var blackIn=[];\r\n        var whiteIn=[];\r\n        var local=Math.random();\r\n        //画线，做棋盘。\r\n        function drawline(con,color,stepx,stepy){\r\n            con.strokeStyle=color;\r\n            con.lineWidth=1;\r\n            for(var i=stepx+0.5;i&lt;can.width;i+=stepx){\r\n                con.beginPath();\r\n                con.moveTo(i,0);\r\n                con.lineTo(i,h);\r\n                con.stroke();\r\n            }\r\n            for(var i=stepy+0.5;i&lt;can.height;i+=stepy){\r\n                con.beginPath();\r\n                con.moveTo(0,i);\r\n                con.lineTo(w,i);\r\n                con.stroke();\r\n            }\r\n        }\r\n        //画棋子\r\n        function drawqi(x,y,color){\r\n            con.beginPath();\r\n            con.fillStyle=color;\r\n            con.arc(x*w/15,y*w/15,w/38,0,2*Math.PI);\r\n            con.stroke();\r\n            con.fill();\r\n            con.closePath();\r\n        }\r\n        //判断胜利，这里采用逐子判断。\r\n        function judgeWin(chess){\r\n            for(var i=0;i&lt;chess.length;i++){\r\n                sp=chess[i].split(\",\")\r\n                if(sp[0]&gt;=2 &amp;&amp; sp[1]&gt;=2){\r\n                    if($.inArray((parseInt(sp[0])-1)+\",\"+(parseInt(sp[1])-1),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])-2)+\",\"+(parseInt(sp[1])-2),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])+1)+\",\"+(parseInt(sp[1])+1),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])+2)+\",\"+(parseInt(sp[1])+2),chess)!=-1){\r\n                        return true;\r\n                    }\r\n                    if($.inArray((parseInt(sp[0])-1)+\",\"+(parseInt(sp[1])),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])-2)+\",\"+(parseInt(sp[1])),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])+1)+\",\"+(parseInt(sp[1])),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])+2)+\",\"+(parseInt(sp[1])),chess)!=-1){\r\n                        return true;\r\n                    }\r\n                    if($.inArray((parseInt(sp[0]))+\",\"+(parseInt(sp[1])-1),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0]))+\",\"+(parseInt(sp[1])-2),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0]))+\",\"+(parseInt(sp[1])+1),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0]))+\",\"+(parseInt(sp[1])+2),chess)!=-1){\r\n                        return true;\r\n                    }\r\n                    if($.inArray((parseInt(sp[0])-1)+\",\"+(parseInt(sp[1])+1),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])-2)+\",\"+(parseInt(sp[1])+2),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])+1)+\",\"+(parseInt(sp[1])-1),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])+2)+\",\"+(parseInt(sp[1])-2),chess)!=-1){\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false\r\n        }\r\n        //触发画线，连接websocket\r\n        drawline(con,'lightgray',w/15,h/15);\r\n        var socket=io();\r\n        //canvas点击事件，获取最近的一个落子点坐标，发送事件。\r\n        can.onclick=function(e){\r\n            mx=Math.round(e.offsetX/w*15);\r\n            my=Math.round(e.offsetY/w*15);\r\n            if($.inArray((mx*15+my),alreadyIn)==-1){\r\n                socket.emit('msg',[mx,my,local])\r\n            }\r\n        }\r\n        //服务器返回触发事件，接收消息并展示给已连接用户\r\n        socket.on('message',function(msg){\r\n            mx=msg.for[0]\r\n            my=msg.for[1]\r\n            \r\n            alreadyIn.push(mx*15+my);\r\n            if(nowIn==0){\r\n                draw=drawqi(mx,my,\"#000\");\r\n                blackIn.push([mx,my].toString())\r\n                if(judgeWin(blackIn)){\r\n                    alert(\"black win\");\r\n                }\r\n            }else{\r\n                draw=drawqi(mx,my,\"#fff\");\r\n                whiteIn.push([mx,my].toString());\r\n                if(judgeWin(whiteIn)){\r\n                    setTimeout(alert(\"white win\"),500);\r\n                }\r\n            }\r\n            nowIn=1-nowIn;\r\n        })\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n效果图：<img class=\"alignnone size-medium wp-image-437\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/11/MQKABG9HRBVI2B0OE-298x300.png\" alt=\"\" width=\"298\" height=\"300\" />\r\n\r\n一般看看socket.io的文档便可以get到一点websocket的灵感，之后就可以自行拓展。\r\n\r\n当然这还是websocket最基础的一部分，之后有待进一步探索。",
            "post_title": "用node.js的socket.io实现双人五子棋对战",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "307-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-11-22 18:36:01",
            "post_modified_gmt": "2017-11-22 10:36:01",
            "post_content_filtered": "",
            "post_parent": "307",
            "guid": "http://ganjiacheng.cn/blog/?p=439",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "440",
            "post_author": "1",
            "post_date": "2017-11-24 20:54:24",
            "post_date_gmt": "0-0-0 00:00:00",
            "post_content": "",
            "post_title": "做个chrome扩展程序，以qq空间自动点赞功能为例",
            "post_excerpt": "",
            "post_status": "draft",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-11-24 20:54:24",
            "post_modified_gmt": "2017-11-24 12:54:24",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=440",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "442",
            "post_author": "1",
            "post_date": "2017-11-26 13:25:56",
            "post_date_gmt": "2017-11-26 05:25:56",
            "post_content": "原以为翻译这种包package control就可以解决，还是有许多问题出现，所以记录一下。顺便了解一下sublime包文件结构，毕竟也是python写的！<!--more-->\r\n\r\n这里引用的是github上的一个<a href=\"https://github.com/mullnerz/SublimeText-Google-Translate-Plugin\">google 翻译包</a>，这是另一个人改过的，主要更新了google的api，他的原作是在<a href=\"https://github.com/MTimer/SublimeText-Google-Translate-Plugin\">这里</a>。\r\n\r\n这里的操作皆为windows平台下，首先用git\r\n<pre><code>git clone https://github.com/MTimer/SublimeText-Google-Translate-Plugin 'Inline Google Translate'</code></pre>\r\n打开sublime，点击preferences-&gt;browse packages。把clone下来的文件复制到这里，文件名必须为 Inline Google Translate。\r\n\r\n直接使用当然还会有问题，这里首先是使用代理的问题，由于gwf，需要通过代理来访问google api。因此在preferences-&gt;package setting-&gt;google translate-&gt;setting user中，添加以下，proxy部分添加自己电脑使用的代理的协议和端口，这里使用的是shadowsocks的默认的http和端口。\r\n<pre>{     \r\n    \"source_language\": \"\", // 默认是 '自动检测'\r\n    \"target_language\": \"zh-CN\", // 默认是 en  英文\r\n    \"target_type\": \"html\",  // 输出格式，plain 或者 html 格式\r\n    \"proxy_enable\": \"yes\",  // 开启或关闭代理\r\n    \"proxy_type\": \"http\", // socks4 或者 socks5 或者 http\r\n    \"proxy_host\": \"127.0.0.1\",  // 比如 127.0.0.1\r\n    \"proxy_port\": \"1080\"    // 比如 9050\r\n}</pre>\r\n到这里可以尝试选中一行单词，按下ctrl+alt+g，如果有效果，则前面部分完成了；如果没效果，则按ctrl+~看命令行输出的错误。\r\n\r\n这个包还有另一个问题就是如果选择多行只会翻译第一行。因此对其中的python代码做一定的修改。在goTranslate.py 第一个run函数部分\r\n<pre>def run(self, edit, proxy_enable = settings.get(\"proxy_enable\"), proxy_type = settings.get(\"proxy_type\"), proxy_host = settings.get(\"proxy_host\"), proxy_port = settings.get(\"proxy_port\"), source_language = settings.get(\"source_language\"), target_language = settings.get(\"target_language\")):\r\n        if not source_language:\r\n            source_language = settings.get(\"source_language\")\r\n        if not target_language:\r\n            target_language = settings.get(\"target_language\")\r\n        if not proxy_enable:\r\n            proxy_enable = settings.get(\"proxy_enable\")\r\n        if not proxy_type:\r\n            proxy_type = settings.get(\"proxy_type\")\r\n        if not proxy_host:\r\n            proxy_host = settings.get(\"proxy_host\")\r\n        if not proxy_port:\r\n            proxy_port = settings.get(\"proxy_port\")\r\n        target_type = settings.get(\"target_type\")\r\n\r\n        for region in self.view.sel():\r\n            if not region.empty():\r\n\r\n                v = self.view\r\n                selection = v.substr(region).encode('utf-8')\r\n                print(selection)\r\n                translate = GoogleTranslate(proxy_enable, proxy_type, proxy_host, proxy_port, source_language, target_language)\r\n                #主要改了这下面部分，使用分行获取翻译结果并合并\r\n                tmp=[]\r\n                if not target_language:\r\n                    self.view.run_command(\"go_translate_to\")\r\n                    return                          \r\n                else:\r\n                    for line in selection.split(b\"\\n\"):\r\n                        tmp.append(translate.translate(line, target_type))\r\n                    result=\"\\n\".join(tmp)\r\n\r\n                v.replace(edit, region, result)\r\n                if not source_language:\r\n                    detected = 'Auto'\r\n                else:\r\n                    detected = source_language\r\n                sublime.status_message(u'Done! (translate '+detected+' --&gt; '+target_language+')')</pre>\r\n完成保存sublime就会自动重新加载包。\r\n\r\n之后再可以试试多行的效果。\r\n\r\n另外插一个就是快捷键，由于这里的ctrl+alt+g一般一只手操作不来，所以也想自定义一下。\r\n\r\n以文本的形式打开同目录下的Default (Windows).sublime-keymap。改第一个keys的内容便是修改快捷键，我这里修改为了ctrl+alt+z，因为ctrl+z可以回撤一步，两个便可以配合使用。\r\n\r\n这里涉及到了sublime包的一些编写和使用，感觉也并不是十分复杂，必要也可以自己写个！",
            "post_title": "sublime装个google翻译的package",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "sublime%e8%a3%85%e4%b8%aagoogle%e7%bf%bb%e8%af%91%e7%9a%84package",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-11-26 13:28:18",
            "post_modified_gmt": "2017-11-26 05:28:18",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=442",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "443",
            "post_author": "1",
            "post_date": "2017-11-26 13:00:53",
            "post_date_gmt": "2017-11-26 05:00:53",
            "post_content": "原以为翻译这种包package control就可以解决，还是有许多问题出现，所以记录一下。顺便了解一下sublime包文件结构，毕竟也是python写的。\r\n\r\n这里引用的是github上的一个<a href=\"https://github.com/mullnerz/SublimeText-Google-Translate-Plugin\">google 翻译包</a>，这是另一个人改过的，主要更新了google的api，他的原作是在<a href=\"https://github.com/MTimer/SublimeText-Google-Translate-Plugin\">这里</a>。",
            "post_title": "sublime装个google翻译的库",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "442-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-11-26 13:00:53",
            "post_modified_gmt": "2017-11-26 05:00:53",
            "post_content_filtered": "",
            "post_parent": "442",
            "guid": "http://ganjiacheng.cn/blog/?p=443",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "445",
            "post_author": "1",
            "post_date": "2017-11-26 13:01:18",
            "post_date_gmt": "2017-11-26 05:01:18",
            "post_content": "websocket也没啥好讲的，就一可以实现长连接的协议，其中也有三次握手之说。具体的也不去探究了，这里用node.js做后端来实现与前端js的websocket连接。并完成一个简易的联机游戏。<!--more-->\r\n\r\n首先参考这个<a href=\"https://socket.io/\">socket.io的网址</a>，参考get start可得到一些安装的基本步骤，这里默认已经安装好node.js以及npm，具体操作包括如下\r\n<pre>npm init</pre>\r\n<pre><code>npm install --save express@4.15.2</code></pre>\r\n<pre><code>npm install --save socket.io</code></pre>\r\n之后要进行的是服务器的编写，保存为index.js\r\n<pre>//引入必要库\r\nvar app=require('express')();\r\nvar http=require('http').Server(app);\r\nvar io=require('socket.io')(http);\r\n//n用于保存连接数目，now用于保存当前落子玩家\r\nvar n=0;\r\nvar now=0;\r\n//加载html文件\r\napp.get('/',function(req,res){\r\n    res.sendFile(__dirname + '/index.html');\r\n})\r\n//websocket连接操作\r\nio.on('connection',function(socket) {\r\n    n++;\r\n    //断开连接操作\r\n    socket.on('disconnect',function(){\r\n        n--;\r\n        console.log('out');\r\n    });\r\n    //收到消息，触发指定事件，并传送得到的消息\r\n    socket.on('msg',function(info){\r\n        console.log(now)\r\n        if(info[2]!=now &amp;&amp; n&gt;=2){\r\n            io.emit('message',{for:info})\r\n            now=info[2];\r\n        }\r\n    })\r\n});\r\n//打开http服务器\r\nhttp.listen(3000,function(){\r\n    console.log('start')\r\n})</pre>\r\n接下来要编辑的是html文件，同目录下保存为index.html\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;五子棋&lt;/title&gt;\r\n    &lt;style type=\"text/css\"&gt;\r\n        canvas{\r\n            border:solid 1px black;\r\n            background-color: #5b7d7d;\r\n            -webkit-tap-highlight-color:rgba(0,0,0,0)\r\n        }\r\n    &lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;canvas id=\"can\" width=\"600\" height=\"800\"&gt;not support&lt;/canvas&gt;\r\n    &lt;script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.3/socket.io.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-3.2.1.min.js\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        //获取canvas，设置宽高\r\n        //获取屏宽和高并设置小的一方为棋盘长度\r\n        var can = document.getElementById('can');\r\n        var x = window.innerWidth&gt;window.innerHeight?window.innerHeight:window.innerWidth;\r\n        var w = can.width = x-20;\r\n        var h = can.height = x-20;\r\n        var con = can.getContext('2d');\r\n        var nowIn=1;\r\n        var alreadyIn=[];\r\n        var blackIn=[];\r\n        var whiteIn=[];\r\n        var local=Math.random();\r\n        //画线，做棋盘。\r\n        function drawline(con,color,stepx,stepy){\r\n            con.strokeStyle=color;\r\n            con.lineWidth=1;\r\n            for(var i=stepx+0.5;i&lt;can.width;i+=stepx){\r\n                con.beginPath();\r\n                con.moveTo(i,0);\r\n                con.lineTo(i,h);\r\n                con.stroke();\r\n            }\r\n            for(var i=stepy+0.5;i&lt;can.height;i+=stepy){\r\n                con.beginPath();\r\n                con.moveTo(0,i);\r\n                con.lineTo(w,i);\r\n                con.stroke();\r\n            }\r\n        }\r\n        //画棋子\r\n        function drawqi(x,y,color){\r\n            con.beginPath();\r\n            con.fillStyle=color;\r\n            con.arc(x*w/15,y*w/15,w/38,0,2*Math.PI);\r\n            con.stroke();\r\n            con.fill();\r\n            con.closePath();\r\n        }\r\n        //判断胜利，这里采用逐子判断。\r\n        function judgeWin(chess){\r\n            for(var i=0;i&lt;chess.length;i++){\r\n                sp=chess[i].split(\",\")\r\n                if(sp[0]&gt;=2 &amp;&amp; sp[1]&gt;=2){\r\n                    if($.inArray((parseInt(sp[0])-1)+\",\"+(parseInt(sp[1])-1),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])-2)+\",\"+(parseInt(sp[1])-2),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])+1)+\",\"+(parseInt(sp[1])+1),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])+2)+\",\"+(parseInt(sp[1])+2),chess)!=-1){\r\n                        return true;\r\n                    }\r\n                    if($.inArray((parseInt(sp[0])-1)+\",\"+(parseInt(sp[1])),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])-2)+\",\"+(parseInt(sp[1])),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])+1)+\",\"+(parseInt(sp[1])),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])+2)+\",\"+(parseInt(sp[1])),chess)!=-1){\r\n                        return true;\r\n                    }\r\n                    if($.inArray((parseInt(sp[0]))+\",\"+(parseInt(sp[1])-1),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0]))+\",\"+(parseInt(sp[1])-2),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0]))+\",\"+(parseInt(sp[1])+1),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0]))+\",\"+(parseInt(sp[1])+2),chess)!=-1){\r\n                        return true;\r\n                    }\r\n                    if($.inArray((parseInt(sp[0])-1)+\",\"+(parseInt(sp[1])+1),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])-2)+\",\"+(parseInt(sp[1])+2),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])+1)+\",\"+(parseInt(sp[1])-1),chess)!=-1&amp;&amp;\r\n                    $.inArray((parseInt(sp[0])+2)+\",\"+(parseInt(sp[1])-2),chess)!=-1){\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false\r\n        }\r\n        //触发画线，连接websocket\r\n        drawline(con,'lightgray',w/15,h/15);\r\n        var socket=io();\r\n        //canvas点击事件，获取最近的一个落子点坐标，发送事件。\r\n        can.onclick=function(e){\r\n            mx=Math.round(e.offsetX/w*15);\r\n            my=Math.round(e.offsetY/w*15);\r\n            if($.inArray((mx*15+my),alreadyIn)==-1){\r\n                socket.emit('msg',[mx,my,local])\r\n            }\r\n        }\r\n        //服务器返回触发事件，接收消息并展示给已连接用户\r\n        socket.on('message',function(msg){\r\n            mx=msg.for[0]\r\n            my=msg.for[1]\r\n            \r\n            alreadyIn.push(mx*15+my);\r\n            if(nowIn==0){\r\n                draw=drawqi(mx,my,\"#000\");\r\n                blackIn.push([mx,my].toString())\r\n                if(judgeWin(blackIn)){\r\n                    alert(\"black win\");\r\n                }\r\n            }else{\r\n                draw=drawqi(mx,my,\"#fff\");\r\n                whiteIn.push([mx,my].toString());\r\n                if(judgeWin(whiteIn)){\r\n                    setTimeout(alert(\"white win\"),500);\r\n                }\r\n            }\r\n            nowIn=1-nowIn;\r\n        })\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n效果图：<img class=\"alignnone size-medium wp-image-437\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2017/11/MQKABG9HRBVI2B0OE-298x300.png\" alt=\"\" width=\"298\" height=\"300\" />\r\n\r\n一般看看socket.io的文档便可以get到一点websocket的灵感，之后就可以自行拓展。\r\n\r\n当然这还是websocket最基础的一部分，之后有待进一步探索。",
            "post_title": "用node.js的socket.io实现双人五子棋对战",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "307-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-11-26 13:01:18",
            "post_modified_gmt": "2017-11-26 05:01:18",
            "post_content_filtered": "",
            "post_parent": "307",
            "guid": "http://ganjiacheng.cn/blog/?p=445",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "447",
            "post_author": "1",
            "post_date": "2017-11-26 13:25:56",
            "post_date_gmt": "2017-11-26 05:25:56",
            "post_content": "原以为翻译这种包package control就可以解决，还是有许多问题出现，所以记录一下。顺便了解一下sublime包文件结构，毕竟也是python写的。<!--more-->\r\n\r\n这里引用的是github上的一个<a href=\"https://github.com/mullnerz/SublimeText-Google-Translate-Plugin\">google 翻译包</a>，这是另一个人改过的，主要更新了google的api，他的原作是在<a href=\"https://github.com/MTimer/SublimeText-Google-Translate-Plugin\">这里</a>。\r\n\r\n这里的操作皆为windows平台下，首先用git\r\n<pre><code>git clone https://github.com/MTimer/SublimeText-Google-Translate-Plugin 'Inline Google Translate'</code></pre>\r\n打开sublime，点击preferences-&gt;browse packages。把clone下来的文件复制到这里，文件名必须为 Inline Google Translate。\r\n\r\n直接使用当然还会有问题，这里首先是使用代理的问题，由于gwf，需要通过代理来访问google api。因此在preferences-&gt;package setting-&gt;google translate-&gt;setting user中，添加以下，proxy部分添加自己电脑使用的代理的协议和端口，这里使用的是shadowsocks的默认的http和端口。\r\n<pre>{     \r\n    \"source_language\": \"\", // 默认是 '自动检测'\r\n    \"target_language\": \"zh-CN\", // 默认是 en  英文\r\n    \"target_type\": \"html\",  // 输出格式，plain 或者 html 格式\r\n    \"proxy_enable\": \"yes\",  // 开启或关闭代理\r\n    \"proxy_type\": \"http\", // socks4 或者 socks5 或者 http\r\n    \"proxy_host\": \"127.0.0.1\",  // 比如 127.0.0.1\r\n    \"proxy_port\": \"1080\"    // 比如 9050\r\n}</pre>\r\n到这里可以尝试选中一行单词，按下ctrl+alt+g，如果有效果，则前面部分完成了；如果没效果，则按ctrl+~看命令行输出的错误。\r\n\r\n这个包还有另一个问题就是如果选择多行只会翻译第一行。因此对其中的python代码做一定的修改。在goTranslate.py 第一个run函数部分\r\n<pre>def run(self, edit, proxy_enable = settings.get(\"proxy_enable\"), proxy_type = settings.get(\"proxy_type\"), proxy_host = settings.get(\"proxy_host\"), proxy_port = settings.get(\"proxy_port\"), source_language = settings.get(\"source_language\"), target_language = settings.get(\"target_language\")):\r\n        if not source_language:\r\n            source_language = settings.get(\"source_language\")\r\n        if not target_language:\r\n            target_language = settings.get(\"target_language\")\r\n        if not proxy_enable:\r\n            proxy_enable = settings.get(\"proxy_enable\")\r\n        if not proxy_type:\r\n            proxy_type = settings.get(\"proxy_type\")\r\n        if not proxy_host:\r\n            proxy_host = settings.get(\"proxy_host\")\r\n        if not proxy_port:\r\n            proxy_port = settings.get(\"proxy_port\")\r\n        target_type = settings.get(\"target_type\")\r\n\r\n        for region in self.view.sel():\r\n            if not region.empty():\r\n\r\n                v = self.view\r\n                selection = v.substr(region).encode('utf-8')\r\n                print(selection)\r\n                translate = GoogleTranslate(proxy_enable, proxy_type, proxy_host, proxy_port, source_language, target_language)\r\n                #主要改了这下面部分，使用分行获取翻译结果并合并\r\n                tmp=[]\r\n                if not target_language:\r\n                    self.view.run_command(\"go_translate_to\")\r\n                    return                          \r\n                else:\r\n                    for line in selection.split(b\"\\n\"):\r\n                        tmp.append(translate.translate(line, target_type))\r\n                    result=\"\\n\".join(tmp)\r\n\r\n                v.replace(edit, region, result)\r\n                if not source_language:\r\n                    detected = 'Auto'\r\n                else:\r\n                    detected = source_language\r\n                sublime.status_message(u'Done! (translate '+detected+' --&gt; '+target_language+')')</pre>\r\n完成保存sublime就会自动重新加载包。\r\n\r\n之后再可以试试多行的效果。\r\n\r\n另外插一个就是快捷键，由于这里的ctrl+alt+g一般一只手操作不来，所以也想自定义一下。\r\n\r\n以文本的形式打开同目录下的Default (Windows).sublime-keymap。改第一个keys的内容便是修改快捷键，我这里修改为了ctrl+alt+z，因为ctrl+z可以回撤一步，两个便可以配合使用。\r\n\r\n这里涉及到了sublime包的一些编写和使用，感觉也并不是十分复杂，必要也可以自己写个！",
            "post_title": "sublime装个google翻译的package",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "442-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-11-26 13:25:56",
            "post_modified_gmt": "2017-11-26 05:25:56",
            "post_content_filtered": "",
            "post_parent": "442",
            "guid": "http://ganjiacheng.cn/blog/?p=447",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "448",
            "post_author": "1",
            "post_date": "2017-11-26 13:28:18",
            "post_date_gmt": "2017-11-26 05:28:18",
            "post_content": "原以为翻译这种包package control就可以解决，还是有许多问题出现，所以记录一下。顺便了解一下sublime包文件结构，毕竟也是python写的！<!--more-->\r\n\r\n这里引用的是github上的一个<a href=\"https://github.com/mullnerz/SublimeText-Google-Translate-Plugin\">google 翻译包</a>，这是另一个人改过的，主要更新了google的api，他的原作是在<a href=\"https://github.com/MTimer/SublimeText-Google-Translate-Plugin\">这里</a>。\r\n\r\n这里的操作皆为windows平台下，首先用git\r\n<pre><code>git clone https://github.com/MTimer/SublimeText-Google-Translate-Plugin 'Inline Google Translate'</code></pre>\r\n打开sublime，点击preferences-&gt;browse packages。把clone下来的文件复制到这里，文件名必须为 Inline Google Translate。\r\n\r\n直接使用当然还会有问题，这里首先是使用代理的问题，由于gwf，需要通过代理来访问google api。因此在preferences-&gt;package setting-&gt;google translate-&gt;setting user中，添加以下，proxy部分添加自己电脑使用的代理的协议和端口，这里使用的是shadowsocks的默认的http和端口。\r\n<pre>{     \r\n    \"source_language\": \"\", // 默认是 '自动检测'\r\n    \"target_language\": \"zh-CN\", // 默认是 en  英文\r\n    \"target_type\": \"html\",  // 输出格式，plain 或者 html 格式\r\n    \"proxy_enable\": \"yes\",  // 开启或关闭代理\r\n    \"proxy_type\": \"http\", // socks4 或者 socks5 或者 http\r\n    \"proxy_host\": \"127.0.0.1\",  // 比如 127.0.0.1\r\n    \"proxy_port\": \"1080\"    // 比如 9050\r\n}</pre>\r\n到这里可以尝试选中一行单词，按下ctrl+alt+g，如果有效果，则前面部分完成了；如果没效果，则按ctrl+~看命令行输出的错误。\r\n\r\n这个包还有另一个问题就是如果选择多行只会翻译第一行。因此对其中的python代码做一定的修改。在goTranslate.py 第一个run函数部分\r\n<pre>def run(self, edit, proxy_enable = settings.get(\"proxy_enable\"), proxy_type = settings.get(\"proxy_type\"), proxy_host = settings.get(\"proxy_host\"), proxy_port = settings.get(\"proxy_port\"), source_language = settings.get(\"source_language\"), target_language = settings.get(\"target_language\")):\r\n        if not source_language:\r\n            source_language = settings.get(\"source_language\")\r\n        if not target_language:\r\n            target_language = settings.get(\"target_language\")\r\n        if not proxy_enable:\r\n            proxy_enable = settings.get(\"proxy_enable\")\r\n        if not proxy_type:\r\n            proxy_type = settings.get(\"proxy_type\")\r\n        if not proxy_host:\r\n            proxy_host = settings.get(\"proxy_host\")\r\n        if not proxy_port:\r\n            proxy_port = settings.get(\"proxy_port\")\r\n        target_type = settings.get(\"target_type\")\r\n\r\n        for region in self.view.sel():\r\n            if not region.empty():\r\n\r\n                v = self.view\r\n                selection = v.substr(region).encode('utf-8')\r\n                print(selection)\r\n                translate = GoogleTranslate(proxy_enable, proxy_type, proxy_host, proxy_port, source_language, target_language)\r\n                #主要改了这下面部分，使用分行获取翻译结果并合并\r\n                tmp=[]\r\n                if not target_language:\r\n                    self.view.run_command(\"go_translate_to\")\r\n                    return                          \r\n                else:\r\n                    for line in selection.split(b\"\\n\"):\r\n                        tmp.append(translate.translate(line, target_type))\r\n                    result=\"\\n\".join(tmp)\r\n\r\n                v.replace(edit, region, result)\r\n                if not source_language:\r\n                    detected = 'Auto'\r\n                else:\r\n                    detected = source_language\r\n                sublime.status_message(u'Done! (translate '+detected+' --&gt; '+target_language+')')</pre>\r\n完成保存sublime就会自动重新加载包。\r\n\r\n之后再可以试试多行的效果。\r\n\r\n另外插一个就是快捷键，由于这里的ctrl+alt+g一般一只手操作不来，所以也想自定义一下。\r\n\r\n以文本的形式打开同目录下的Default (Windows).sublime-keymap。改第一个keys的内容便是修改快捷键，我这里修改为了ctrl+alt+z，因为ctrl+z可以回撤一步，两个便可以配合使用。\r\n\r\n这里涉及到了sublime包的一些编写和使用，感觉也并不是十分复杂，必要也可以自己写个！",
            "post_title": "sublime装个google翻译的package",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "442-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-11-26 13:28:18",
            "post_modified_gmt": "2017-11-26 05:28:18",
            "post_content_filtered": "",
            "post_parent": "442",
            "guid": "http://ganjiacheng.cn/blog/?p=448",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "452",
            "post_author": "1",
            "post_date": "2017-11-30 17:43:42",
            "post_date_gmt": "2017-11-30 09:43:42",
            "post_content": "1.",
            "post_title": "常用小程序",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "132-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-11-30 17:43:42",
            "post_modified_gmt": "2017-11-30 09:43:42",
            "post_content_filtered": "",
            "post_parent": "132",
            "guid": "http://ganjiacheng.cn/blog/?p=452",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "454",
            "post_author": "1",
            "post_date": "2017-11-30 17:45:55",
            "post_date_gmt": "2017-11-30 09:45:55",
            "post_content": "python篇：\r\n\r\n1.windows上，在pip install xxx失败的时候怎么办？\r\n\r\n答：<a href=\"http://www.lfd.uci.edu/~gohlke/pythonlibs/\">http://www.lfd.uci.edu/~gohlke/pythonlibs/</a>到这里面寻找whl，下载之后用 pip install xxx.whl 来安装。\r\n\r\n<!--more-->\r\n\r\n2.解决pip3报错Fatal error in launcher: Unable to create process using '\"'。\r\n\r\n一种：\r\n<pre>import pip\r\npip.main(['install','ModuleName'])</pre>\r\n另一种：\r\n<pre class=\"lang-py prettyprint prettyprinted\"><code><span class=\"pln\">python3 </span><span class=\"pun\">-</span><span class=\"pln\">m pip install whlName\r\n</span></code></pre>\r\n3.linux上python3中文会显示UnicodeEncodeError: 'ascii' codec can't encode character。\r\n<pre>import io \r\nimport sys \r\nsys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding='utf-8')</pre>\r\n4.requests爬到的中文网页输出在windows cmd会出错\r\n<pre>res=requests.get(url)\r\nres.encoding='gbk'\r\nprint(res.text)</pre>\r\n5.cv2.imread读取中文路径出错\r\n<pre>#读取\r\nim = cv2.imdecode(np.fromfile(file,dtype=np.uint8),-1)\r\n#写入\r\ncv2.imencode('.jpg',res)[1].tofile(file)</pre>\r\n6.sublime字体高低不齐\r\n\r\n下载安装字体 http://cloud.alphadn.com/blog/yahei-consolas.zip\r\n修改user_setting中的font_face为\r\n<pre>\"font_face\": \"YaHei Consolas Hybrid\",</pre>\r\n7.windows上编写的shell文件在linux运行报错\r\n<pre>vim file.sh\r\n:set ff=unix</pre>",
            "post_title": "解决各种问题集",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "%e8%a7%a3%e5%86%b3%e5%90%84%e7%a7%8d%e9%97%ae%e9%a2%98%e9%9b%86",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-7-13 12:53:58",
            "post_modified_gmt": "2018-7-13 04:53:58",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?page_id=454",
            "menu_order": "0",
            "post_type": "page",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "455",
            "post_author": "1",
            "post_date": "2017-11-30 17:45:16",
            "post_date_gmt": "2017-11-30 09:45:16",
            "post_content": "python篇：\r\n\r\n1.windows上，在pip install xxx失败的时候怎么办？\r\n\r\n答：<a href=\"http://www.lfd.uci.edu/~gohlke/pythonlibs/\">http://www.lfd.uci.edu/~gohlke/pythonlibs/</a>到这里面寻找whl，下载之后用 pip install xxx.whl 来安装。\r\n\r\n<!--more-->\r\n\r\n2.解决pip3报错Fatal error in launcher: Unable to create process using '\"'。\r\n\r\n一种：\r\n<pre>import pip\r\npip.main(['install','ModuleName'])</pre>\r\n另一种：\r\n<pre class=\"lang-py prettyprint prettyprinted\"><code><span class=\"pln\">python3 </span><span class=\"pun\">-</span><span class=\"pln\">m pip install whlName\r\n</span></code></pre>\r\n3.linux上python3中文会显示UnicodeEncodeError: 'ascii' codec can't encode character。\r\n<pre>import io \r\nimport sys \r\nsys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding='utf-8')</pre>\r\n4.requests爬到的中文网页输出在windows cmd会出错\r\n<pre>res=requests.get(url)\r\nres.encoding='gbk'\r\nprint(res.text)</pre>\r\n5.cv2.imread读取中文路径出错\r\n<pre>#读取\r\nim = cv2.imdecode(np.fromfile(file,dtype=np.uint8),-1)\r\n#写入\r\ncv2.imencode('.jpg',res)[1].tofile(file)</pre>",
            "post_title": "解决各种问题集",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "454-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-11-30 17:45:16",
            "post_modified_gmt": "2017-11-30 09:45:16",
            "post_content_filtered": "",
            "post_parent": "454",
            "guid": "http://ganjiacheng.cn/blog/?p=455",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "456",
            "post_author": "1",
            "post_date": "2017-11-30 17:45:47",
            "post_date_gmt": "2017-11-30 09:45:47",
            "post_content": "包括，批量重命名，待更新。。。\r\n\r\n1.批量重命名  changeName.py\r\n<pre>import os\r\nf=os.listdir(\"./\")\r\nf.remove(\"changeName.py\")\r\nj=0\r\nfor i in f:\r\n os.renames(i,str(j)+\".jpg\")\r\n j+=1</pre>",
            "post_title": "常用小程序",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "132-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-11-30 17:45:47",
            "post_modified_gmt": "2017-11-30 09:45:47",
            "post_content_filtered": "",
            "post_parent": "132",
            "guid": "http://ganjiacheng.cn/blog/?p=456",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "458",
            "post_author": "1",
            "post_date": "2017-12-7 16:57:13",
            "post_date_gmt": "2017-12-7 08:57:13",
            "post_content": "swoole也是一个php比较强大的扩展，可以实现高性能的异步并发 TCP、UDP、Unix Socket、HTTP，WebSocket。这里实现一个WebSocket的server端的你画我猜。自我觉得还是踩坑之旅，生产环节用还是值得斟酌。<!--more-->\r\n\r\n安装环节这里不多叙述，linux上按<a href=\"https://wiki.swoole.com/wiki/page/6.html\">这里</a>的进行就可以，插一句修改php.ini那个只要加在第一行就行。\r\n\r\n然后touch一个php文件，这里命名为drawguess.php。具体内容解释在代码注释中。还有结尾彩蛋。\r\n<pre>&lt;?php\r\n//创建全局变量表，这里用于存储用户id，1024为最大容量。\r\n$table = new swoole_table(1024);\r\n$table-&gt;column('fd', swoole_table::TYPE_INT);\r\n$table-&gt;create();\r\n//定义server\r\n$server = new swoole_websocket_server(\"0.0.0.0\", 9501);\r\n$server-&gt;table = $table;\r\n//这里定义答案\r\n$anstr=\"苹果,李子,梨子,榴莲,香蕉,橙子,番茄,柿子,葡萄,水蜜桃,核桃,哈密瓜,西瓜,菠萝,蓝莓,草莓,释迦,杨桃,椰子,板栗,樱桃,荔枝,龙眼,青梅,山楂,柠檬,金桔,芒果,坚果,胡桃,枇杷\";\r\n$ansarr=split(\",\", $anstr);\r\n$ran=rand(0,count($ansarr));\r\n$ans=$ansarr[$ran];\r\n//全局计数，不同进程之间共享\r\n$startGame=new swoole_atomic(0);\r\n$players=new swoole_atomic(999);\r\n$k=new swoole_atomic(0);\r\n//定义open事件，把用户id加入表中\r\n//push为推送数据到客户端,这里广播需要用foreach实现。\r\n$server-&gt;on('open', function($server, $req) {\r\n    global $ans,$players,$startGame;\r\n    $server-&gt;table-&gt;set($req-&gt;fd, array('fd' =&gt; $req-&gt;fd));\r\n    if(count($server-&gt;table)==1){\r\n        $data=json_encode(array(\"start\"=&gt;\"-2\",\"data\"));\r\n        $server-&gt;push($req-&gt;fd,$data);\r\n    }\r\n    if(count($server-&gt;table)==$players-&gt;get()){\r\n        if($startGame-&gt;get()==0){\r\n            $startGame-&gt;set(1);\r\n            foreach ($server-&gt;table as $u) {\r\n                if($u['fd']==$req-&gt;fd){\r\n                    $data=json_encode(array(\"start\"=&gt;\"-1\",\"draw\"=&gt;\"1\",\"ans\"=&gt;$ans));\r\n                    $server-&gt;push($u['fd'],$data);\r\n                }else{\r\n                    $data=json_encode(array(\"start\"=&gt;\"-1\",\"draw\"=&gt;\"0\"));\r\n                    $server-&gt;push($u['fd'],$data);\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n//定义接受到数据触发事件。\r\n//这里主逻辑为接受getdata数据，解析，start为状态，\r\n/*\r\n-4---时间到0事件\r\n-3---第一个玩家选择人数\r\n-2---第一个玩家进入事件\r\n-1---玩家到齐，开始游戏事件\r\n0----touchstart事件\r\n1----touchmove事件\r\n2----设置线条宽度\r\n3----设置橡皮宽度\r\n4----清空事件\r\n5----设置颜色事件\r\n6----答案提交事件，判断成功与否\r\n*/\r\n$server-&gt;on('message', function($server, $frame) {\r\n    //$server-&gt;push($frame-&gt;fd, $frame-&gt;data);\r\n    global $ans,$ansarr,$players,$k;\r\n    $getdata=json_decode($frame-&gt;data);\r\n    if($getdata-&gt;start==-4){\r\n        $ran=rand(0,count($ansarr));\r\n        $ans=$ansarr[$ran];\r\n        $i=0;\r\n        foreach($server-&gt;table as $u) {\r\n            if($i&lt;$k-&gt;get()){\r\n                $i++;\r\n            }else{\r\n                $player=$u[\"fd\"];\r\n                $k-&gt;set(($k-&gt;get()+1)%$players-&gt;get());\r\n                break;\r\n            }\r\n        }\r\n        foreach ($server-&gt;table as $u) {\r\n                if($u['fd']==$player){\r\n                    $data=json_encode(array(\"start\"=&gt;\"-1\",\"draw\"=&gt;\"1\",\"ans\"=&gt;$ans));\r\n                    $server-&gt;push($u['fd'],$data);\r\n                }else{\r\n                    $data=json_encode(array(\"start\"=&gt;\"-1\",\"draw\"=&gt;\"0\"));\r\n                    $server-&gt;push($u['fd'],$data);\r\n                }\r\n            }\r\n    }\r\n    if($getdata-&gt;start==-3){\r\n        $players-&gt;set(intval($getdata-&gt;players));\r\n    }else{\r\n        if($getdata-&gt;start==6){\r\n            echo $getdata-&gt;answer;\r\n        }\r\n        if($getdata-&gt;start==6 &amp;&amp; $getdata-&gt;answer==$ans){\r\n            foreach ($server-&gt;table as $u) {\r\n                $res=array(\"start\"=&gt;\"6\",\"win\"=&gt;$frame-&gt;fd);\r\n                $server-&gt;push($u['fd'], json_encode($res));//消息广播给所有客户端    \r\n            }  \r\n            $ran=rand(0,count($ansarr));\r\n            $ans=$ansarr[$ran];\r\n            $i=0;\r\n            foreach($server-&gt;table as $u) {\r\n                if($i&lt;$k-&gt;get()){\r\n                    $i++;\r\n                }else{\r\n                    $player=$u[\"fd\"];\r\n                    $k-&gt;set(($k-&gt;get()+1)%$players-&gt;get());\r\n                    break;\r\n                }\r\n            }\r\n            foreach ($server-&gt;table as $u) {\r\n                if($u['fd']==$player){\r\n                    $data=json_encode(array(\"start\"=&gt;\"-1\",\"draw\"=&gt;\"1\",\"ans\"=&gt;$ans));\r\n                    $server-&gt;push($u['fd'],$data);\r\n                }else{\r\n                    $data=json_encode(array(\"start\"=&gt;\"-1\",\"draw\"=&gt;\"0\"));\r\n                    $server-&gt;push($u['fd'],$data);\r\n                }\r\n            }\r\n        }else{\r\n            foreach ($server-&gt;table as $u) {\r\n                $server-&gt;push($u['fd'], $frame-&gt;data);//消息广播给所有客户端\r\n            }     \r\n        }\r\n    }\r\n});\r\n//定义关闭websocket事件\r\n$server-&gt;on('close', function($server, $fd) {\r\n    echo \"client-{$fd} is closed\\n\"; \r\n    global $startGame;\r\n    $server-&gt;table-&gt;del($fd);\r\n    if(count($server-&gt;table)==1){\r\n        $startGame-&gt;set(0);\r\n    }\r\n});\r\n//开启server\r\n$server-&gt;start();</pre>\r\n再附上前端代码。\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;meta content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no,minimum-scale=1.0\" name=\"viewport\" &gt;\r\n    &lt;title&gt;draw and guess&lt;/title&gt;\r\n    &lt;style type=\"text/css\"&gt;\r\n        html,body{\r\n            padding: 0px;\r\n            margin: 0px;\r\n            -webkit-tap-highlight-color:rgba(0,0,0,0);\r\n        }\r\n        canvas{\r\n            border: solid 1px black;\r\n        }\r\n        input{\r\n            border: none;\r\n            border-bottom: solid 1px black;\r\n            line-height: 20px;\r\n            font-size: 20px;\r\n            height: 25px;\r\n            outline:none;\r\n            border-radius: 0px;\r\n            width: 70%;\r\n        }\r\n        button{\r\n            height: 30px;\r\n            width: 20%;\r\n            background-color: rgba(255,255,255,0.5);\r\n            border: solid 1px black;\r\n            border-radius: 10px;\r\n            outline: none;\r\n        }\r\n        .sel li{\r\n            list-style: none;\r\n            display: inline-block;\r\n            width: 23%;\r\n        }\r\n        .color{\r\n            position: absolute;\r\n            width: 100%;\r\n            margin-top: -140px;\r\n        }\r\n        .red{\r\n            width: 100%;\r\n            position: relative;\r\n            top: 0px;\r\n        }\r\n        .green{\r\n            width: 100%;\r\n            position: relative;\r\n            top:30px;\r\n        }\r\n        .blue{\r\n            width: 100%;\r\n            position: relative;\r\n            top: 60px;\r\n        }\r\n        .ky{\r\n            width: 20px;\r\n            height: 20px;\r\n            border-radius: 20px;\r\n            background-color: black;\r\n            position: absolute;\r\n        }\r\n        .jd{\r\n            position: absolute;\r\n            margin-top: 4px;\r\n            border: solid 1px black;\r\n            width: 80%;\r\n            height: 10px;\r\n            border-radius: 10px;\r\n        }\r\n        .colorz{\r\n            position: absolute;\r\n            right: 10%;\r\n        }\r\n        .showcol{\r\n            width: 50px;\r\n            height: 20px;\r\n            margin: 5px;\r\n            border:solid 1px black;\r\n            background-color: #000;\r\n        }\r\n        .bs li{\r\n            list-style: none;\r\n            width: 50px;\r\n            height: 20px;\r\n        }\r\n        .bsdiv{\r\n            position: absolute;\r\n            margin-top: -140px;\r\n            margin-left: 25%;\r\n        }\r\n        .ans{\r\n            position: absolute;\r\n            top: 0px;\r\n            right: 5px;\r\n        }\r\n        .error{\r\n            position: absolute;\r\n            top: 0;\r\n            left: 5px;\r\n        }\r\n        .showinfo{\r\n            position: absolute;\r\n            top: 0px;\r\n            width: 100%;\r\n            text-align: center;\r\n        }\r\n    &lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;div class=\"ans\" id=\"answer\"&gt;&lt;/div&gt;\r\n    &lt;div class=\"error\" id=\"error\"&gt;&lt;/div&gt;\r\n    &lt;div class=\"showinfo\" id=\"showinfo\"&gt;123&lt;/div&gt;\r\n    &lt;canvas id=\"can\" width=\"600\" height=\"600\"&gt;not support&lt;/canvas&gt;\r\n    &lt;div class=\"color\" id=\"col\" style=\"display:none;\"&gt;\r\n        &lt;div class=\"showcol\" id=\"showcolor\"&gt;&lt;/div&gt;\r\n        &lt;div class=\"red\"&gt;\r\n            &lt;div class=\"jd\"&gt;&lt;/div&gt;\r\n            &lt;div class=\"ky\" id=\"redmove\"&gt;&lt;/div&gt;\r\n            &lt;div class=\"colorz\"&gt;r&lt;/div&gt;\r\n        &lt;/div&gt;\r\n        &lt;div class=\"green\"&gt;\r\n            &lt;div class=\"jd\"&gt;&lt;/div&gt;\r\n            &lt;div class=\"ky\" id=\"greenmove\"&gt;&lt;/div&gt;\r\n            &lt;div class=\"colorz\"&gt;g&lt;/div&gt;\r\n        &lt;/div&gt;\r\n        &lt;div class=\"blue\"&gt;\r\n            &lt;div class=\"jd\"&gt;&lt;/div&gt;\r\n            &lt;div class=\"ky\" id=\"bluemove\"&gt;&lt;/div&gt;\r\n            &lt;div class=\"colorz\"&gt;b&lt;/div&gt;\r\n        &lt;/div&gt;\r\n    &lt;/div&gt;\r\n    &lt;div class=\"sel\"&gt;\r\n        &lt;ul&gt;\r\n            &lt;li id=\"colorblock\"&gt;颜色&lt;/li&gt;\r\n            &lt;li id=\"bsblock\" style=\"margin-left:-10px;\"&gt;\r\n                &lt;select name=\"\" id=\"selbs\"&gt;\r\n                    &lt;option value=\"\" disabled selected=\"selected\"&gt;画笔&lt;/option&gt;\r\n                    &lt;option value=\"1\"&gt;1&lt;/option&gt;\r\n                    &lt;option value=\"2\"&gt;2&lt;/option&gt;\r\n                    &lt;option value=\"3\"&gt;3&lt;/option&gt;\r\n                    &lt;option value=\"4\"&gt;4&lt;/option&gt;\r\n                    &lt;option value=\"5\"&gt;5&lt;/option&gt;\r\n                    &lt;option value=\"6\"&gt;6&lt;/option&gt;\r\n                    &lt;option value=\"7\"&gt;7&lt;/option&gt;\r\n                    &lt;option value=\"8\"&gt;8&lt;/option&gt;\r\n                &lt;/select&gt;\r\n            &lt;/li&gt;\r\n            &lt;li style=\"margin-right:10px;\"&gt;\r\n                &lt;select name=\"\" id=\"xpsel\"&gt;\r\n                    &lt;option value=\"\" disabled selected=\"selected\"&gt;橡皮&lt;/option&gt;\r\n                    &lt;option value=\"0\"&gt;取消&lt;/option&gt;\r\n                    &lt;option value=\"1\"&gt;1&lt;/option&gt;\r\n                    &lt;option value=\"2\"&gt;2&lt;/option&gt;\r\n                    &lt;option value=\"3\"&gt;3&lt;/option&gt;\r\n                    &lt;option value=\"4\"&gt;4&lt;/option&gt;\r\n                    &lt;option value=\"5\"&gt;5&lt;/option&gt;\r\n                    &lt;option value=\"6\"&gt;6&lt;/option&gt;\r\n                    &lt;option value=\"7\"&gt;7&lt;/option&gt;\r\n                    &lt;option value=\"8\"&gt;8&lt;/option&gt;\r\n                &lt;/select&gt;\r\n            &lt;/li&gt;\r\n            &lt;li id=\"clear\"&gt;清空&lt;/li&gt;\r\n        &lt;/ul&gt;\r\n    &lt;/div&gt;\r\n    &lt;input type=\"text\" id=\"ans\"&gt;\r\n    &lt;button class=\"btn\" id=\"sub\"&gt;提交&lt;/button&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        showinfo(\"您已进入游戏，请等待\");\r\n        var wsServer = 'ws://123.206.217.190:9501';\r\n        var ws = new WebSocket(wsServer);\r\n        var can=document.getElementById(\"can\");\r\n        var color=document.getElementById(\"col\");\r\n        var rm=document.getElementById(\"redmove\");\r\n        var gm=document.getElementById(\"greenmove\");\r\n        var bm=document.getElementById(\"bluemove\");\r\n        var showcol=document.getElementById(\"showcolor\");\r\n        var bsdiv=document.getElementById(\"bsdiv\");\r\n        var sub=document.getElementById(\"sub\");\r\n        var colorclicked=0;\r\n        var colorshow=[0,0,0];\r\n        var lineWidth=1;\r\n        var xpWidth=0;\r\n        var myturn=0;\r\n        var players=0;\r\n        var deadtime=60;\r\n        var timejishu;\r\n\r\n        var cvs=can.getContext(\"2d\");\r\n        var whmin = window.innerWidth&gt;window.innerHeight?window.innerHeight:window.innerWidth;\r\n        var w=can.width=whmin-2;\r\n        var h=can.height=whmin-2;\r\n\r\n        color.addEventListener('touchstart',stcolor,{passive:false});\r\n        color.addEventListener('touchmove',chcolor,{passtive:false});\r\n        rm.addEventListener('touchstart',colormove,{passive:false});\r\n        gm.addEventListener('touchstart',colormove,{passive:false});\r\n        bm.addEventListener('touchstart',colormove,{passive:false});\r\n\r\n        ws.onopen=function(e){\r\n            can.addEventListener('touchstart',sendstart,{passive:false});\r\n            can.addEventListener('touchmove',sendmove,{passive:false});\r\n            function sendstart(e){\r\n                e.preventDefault();\r\n                let data={\"start\":\"0\",\"coor\":[e.touches[0].clientX,e.touches[0].clientY]};\r\n                if(myturn==1){\r\n                    ws.send(JSON.stringify(data));\r\n                }\r\n            }\r\n            function sendmove(e){\r\n                e.preventDefault();\r\n                let data={\"start\":\"1\",\"coor\":[e.touches[0].clientX,e.touches[0].clientY]};\r\n                if(myturn==1){\r\n                    ws.send(JSON.stringify(data));\r\n                }\r\n            }\r\n        }\r\n\r\n        ws.onmessage=function(e){\r\n            var con=JSON.parse(e.data);\r\n            switch(con.start){\r\n                case \"-2\":\r\n                    console.log(con)\r\n                    players=prompt(\"请选择玩家人数\");\r\n                    let data={\"start\":\"-3\",\"players\":players};\r\n                    ws.send(JSON.stringify(data));\r\n                    break\r\n                case \"-1\":\r\n                    if(con.draw==\"1\"){\r\n                        console.log(timejishu)\r\n                        showinfo(\"该你画咯\");\r\n                        document.getElementById(\"answer\").innerHTML=con.ans;\r\n                        timejishu=setInterval(function(){\r\n                            deadtime--;\r\n                            if(deadtime&lt;55){\r\n                                document.getElementById(\"showinfo\").innerHTML=deadtime;\r\n                            }\r\n                            if(deadtime==0){\r\n                                let data={\"start\":\"-4\"};\r\n                                ws.send(JSON.stringify(data));\r\n                                deadtime=60;\r\n                                clearInterval(timejishu);\r\n                            }\r\n                        },1000);\r\n                        myturn=1;\r\n                    }else{\r\n                        showinfo(\"游戏开始\");\r\n                        document.getElementById(\"answer\").innerHTML=\"\";\r\n                        if(timejishu!=undefined){\r\n                            clearInterval(timejishu);\r\n                        }\r\n                        myturn=0;\r\n                    }\r\n                    break\r\n                case \"0\":\r\n                    tstart(con.coor[0],con.coor[1]);\r\n                    break\r\n                case \"1\":\r\n                    move(con.coor[0],con.coor[1]);\r\n                    break\r\n                case \"2\":\r\n                    lineWidth=con.lineWidth;\r\n                    break;\r\n                case \"3\":\r\n                    xpWidth=con.xpWidth;\r\n                    break;\r\n                case \"4\":\r\n                    cvs.clearRect(0,0,w,h); \r\n                    break;\r\n                case \"5\":\r\n                    colorshow=con.color;\r\n                    break;\r\n                case \"6\":\r\n                    if(con.win!=undefined){\r\n                        alert(con.win+\" win!\");\r\n                        deadtime=60;\r\n                    }else{\r\n                        document.getElementById(\"error\").innerHTML=\"error:\\n\"+con.answer;\r\n                    }\r\n            }\r\n        }\r\n        \r\n        document.getElementById(\"colorblock\").onclick=function(){\r\n            if(color.style.display==\"none\"){\r\n                color.style.display=\"block\";\r\n                this.innerHTML=\"确认\";\r\n            }else{\r\n                color.style.display=\"none\";\r\n                let data={\"start\":\"5\",\"color\":colorshow};\r\n                if(myturn==1){\r\n                    ws.send(JSON.stringify(data));\r\n                }\r\n                this.innerHTML=\"颜色\";\r\n            }\r\n        }\r\n        document.getElementById(\"selbs\").onchange=function(){\r\n            let data={\"start\":\"2\",\"lineWidth\":this.value};\r\n            if(myturn==1){\r\n                ws.send(JSON.stringify(data));\r\n            }\r\n        }\r\n        document.getElementById(\"xpsel\").onchange=function(){\r\n            let data={\"start\":\"3\",\"xpWidth\":this.value};\r\n            if(myturn==1){\r\n                ws.send(JSON.stringify(data));\r\n            }\r\n        }\r\n        document.getElementById(\"clear\").onclick=function(){\r\n            if(myturn==1){\r\n                ws.send(JSON.stringify({\"start\":\"4\"}));  \r\n            }\r\n        }\r\n        sub.onclick=function(){\r\n            var ans=document.getElementById(\"ans\").value;\r\n            let data={\"start\":\"6\",\"answer\":ans};\r\n            ws.send(JSON.stringify(data));\r\n        }\r\n\r\n        function showinfo(info){\r\n            document.getElementById(\"showinfo\").innerHTML=info;\r\n        }\r\n\r\n        function tstart(x,y){\r\n            //e.preventDefault();\r\n            cvs.beginPath();\r\n            cvs.moveTo(x,y);\r\n        }\r\n        function move(x,y){\r\n            //e.preventDefault();\r\n            if(xpWidth!=0){\r\n                cvs.clearRect(x-xpWidth*2,y-xpWidth*2,xpWidth*4,xpWidth*4);\r\n            }else{\r\n                cvs.lineTo(x,y);\r\n                cvs.lineWidth=lineWidth*2;\r\n                cvs.lineCap='round';\r\n                cvs.lineJoin=\"round\";\r\n                cvs.strokeStyle=\"rgb(\"+colorshow[0]+\",\"+colorshow[1]+\",\"+colorshow[2]+\")\";\r\n                cvs.stroke();\r\n            }\r\n        }\r\n        function stcolor(e){\r\n            e.preventDefault();\r\n        }\r\n        function chcolor(e){\r\n            e.preventDefault();\r\n            if(e.targetTouches[0].clientX&lt;window.innerWidth*0.8){\r\n                this.children[colorclicked].children[1].style.left=e.targetTouches[0].clientX+\"px\";\r\n                colorshow[colorclicked-1]=parseInt(e.targetTouches[0].clientX/(window.innerWidth*0.8)*255)\r\n            }\r\n            showcol.style.backgroundColor=\"rgb(\"+colorshow[0]+\",\"+colorshow[1]+\",\"+colorshow[2]+\")\";\r\n        }\r\n        function colormove(e){\r\n            e.preventDefault();\r\n            if(this.id==\"redmove\"){\r\n                colorclicked=1;\r\n            }else if(this.id==\"greenmove\"){\r\n                colorclicked=2;\r\n            }else{\r\n                colorclicked=3;\r\n            }\r\n        }\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n运行的话，服务器端\r\n<pre>php drawguess.php</pre>\r\n客户端，swoole的http服务器的话这里不做叙述，可使用python2.x作为http服务器\r\n<pre>python -m SimpleHTTPServer 80</pre>\r\n或者python3.x\r\n<pre><span class=\"n\">python</span> <span class=\"o\">-</span><span class=\"n\">m</span> <span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">server</span> <span class=\"mi\">80</span></pre>\r\n特别说明，这里还会有个bug，回答问题时有正确答案判断为错误，感觉是编码问题，然后这个服务器端运行的时候也是如果有输出中文的话也会输出乱码。有看到改php.ini什么为utf-8，好像也没效果。\r\n\r\n另一个若是开发阶段，经常改服务器端，但每次去找pid并kill比较麻烦，因此可以写个shell命令来自动做一步。\r\n<pre>#!/bin/sh\r\nkill `lsof -t -i:此处写server的端口`\r\nsleep 2\r\nphp 此处写绝对路径/drawguess.php\r\nsleep 1\r\nnetstat -ntlp</pre>\r\nswoole值得探究的可能还很多，然而确实踩坑。。。。",
            "post_title": "swoole初试，作为一个你画我猜的websocket server",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "swoole%e5%88%9d%e8%af%95%ef%bc%8c%e4%bd%9c%e4%b8%ba%e4%b8%80%e4%b8%aa%e4%bd%a0%e7%94%bb%e6%88%91%e7%8c%9c%e7%9a%84websocket-server",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-12-7 17:07:05",
            "post_modified_gmt": "2017-12-7 09:07:05",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=458",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "459",
            "post_author": "1",
            "post_date": "2017-12-7 16:57:13",
            "post_date_gmt": "2017-12-7 08:57:13",
            "post_content": "swoole也是一个php比较强大的扩展，可以实现高性能的异步并发 TCP、UDP、Unix Socket、HTTP，WebSocket。这里实现一个WebSocket的server端的你画我猜。自我觉得还是踩坑之旅，生产环节用还是值得斟酌。<!--more-->\r\n\r\n安装环节这里不多叙述，linux上按<a href=\"https://wiki.swoole.com/wiki/page/6.html\">这里</a>的进行就可以，插一句修改php.ini那个只要加在第一行就行。\r\n\r\n然后touch一个php文件，这里命名为drawguess.php。具体内容解释在代码注释中。还有结尾彩蛋。\r\n<pre>&lt;?php\r\n//创建全局变量表，这里用于存储用户id，1024为最大容量。\r\n$table = new swoole_table(1024);\r\n$table-&gt;column('fd', swoole_table::TYPE_INT);\r\n$table-&gt;create();\r\n//定义server\r\n$server = new swoole_websocket_server(\"0.0.0.0\", 9501);\r\n$server-&gt;table = $table;\r\n//这里定义答案\r\n$anstr=\"苹果,李子,梨子,榴莲,香蕉,橙子,番茄,柿子,葡萄,水蜜桃,核桃,哈密瓜,西瓜,菠萝,蓝莓,草莓,释迦,杨桃,椰子,板栗,樱桃,荔枝,龙眼,青梅,山楂,柠檬,金桔,芒果,坚果,胡桃,枇杷\";\r\n$ansarr=split(\",\", $anstr);\r\n$ran=rand(0,count($ansarr));\r\n$ans=$ansarr[$ran];\r\n//全局计数，不同进程之间共享\r\n$startGame=new swoole_atomic(0);\r\n$players=new swoole_atomic(999);\r\n$k=new swoole_atomic(0);\r\n//定义open事件，把用户id加入表中\r\n//push为推送数据到客户端,这里广播需要用foreach实现。\r\n$server-&gt;on('open', function($server, $req) {\r\n    global $ans,$players,$startGame;\r\n    $server-&gt;table-&gt;set($req-&gt;fd, array('fd' =&gt; $req-&gt;fd));\r\n    if(count($server-&gt;table)==1){\r\n        $data=json_encode(array(\"start\"=&gt;\"-2\",\"data\"));\r\n        $server-&gt;push($req-&gt;fd,$data);\r\n    }\r\n    if(count($server-&gt;table)==$players-&gt;get()){\r\n        if($startGame-&gt;get()==0){\r\n            $startGame-&gt;set(1);\r\n            foreach ($server-&gt;table as $u) {\r\n                if($u['fd']==$req-&gt;fd){\r\n                    $data=json_encode(array(\"start\"=&gt;\"-1\",\"draw\"=&gt;\"1\",\"ans\"=&gt;$ans));\r\n                    $server-&gt;push($u['fd'],$data);\r\n                }else{\r\n                    $data=json_encode(array(\"start\"=&gt;\"-1\",\"draw\"=&gt;\"0\"));\r\n                    $server-&gt;push($u['fd'],$data);\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n//定义接受到数据触发事件。\r\n//这里主逻辑为接受getdata数据，解析，start为状态，\r\n/*\r\n-4---时间到0事件\r\n-3---第一个玩家选择人数\r\n-2---第一个玩家进入事件\r\n-1---玩家到齐，开始游戏事件\r\n0----touchstart事件\r\n1----touchmove事件\r\n2----设置线条宽度\r\n3----设置橡皮宽度\r\n4----清空事件\r\n5----设置颜色事件\r\n6----答案提交事件，判断成功与否\r\n*/\r\n$server-&gt;on('message', function($server, $frame) {\r\n    //$server-&gt;push($frame-&gt;fd, $frame-&gt;data);\r\n    global $ans,$ansarr,$players,$k;\r\n    $getdata=json_decode($frame-&gt;data);\r\n    if($getdata-&gt;start==-4){\r\n        $ran=rand(0,count($ansarr));\r\n        $ans=$ansarr[$ran];\r\n        $i=0;\r\n        foreach($server-&gt;table as $u) {\r\n            if($i&lt;$k-&gt;get()){\r\n                $i++;\r\n            }else{\r\n                $player=$u[\"fd\"];\r\n                $k-&gt;set(($k-&gt;get()+1)%$players-&gt;get());\r\n                break;\r\n            }\r\n        }\r\n        foreach ($server-&gt;table as $u) {\r\n                if($u['fd']==$player){\r\n                    $data=json_encode(array(\"start\"=&gt;\"-1\",\"draw\"=&gt;\"1\",\"ans\"=&gt;$ans));\r\n                    $server-&gt;push($u['fd'],$data);\r\n                }else{\r\n                    $data=json_encode(array(\"start\"=&gt;\"-1\",\"draw\"=&gt;\"0\"));\r\n                    $server-&gt;push($u['fd'],$data);\r\n                }\r\n            }\r\n    }\r\n    if($getdata-&gt;start==-3){\r\n        $players-&gt;set(intval($getdata-&gt;players));\r\n    }else{\r\n        if($getdata-&gt;start==6){\r\n            echo $getdata-&gt;answer;\r\n        }\r\n        if($getdata-&gt;start==6 &amp;&amp; $getdata-&gt;answer==$ans){\r\n            foreach ($server-&gt;table as $u) {\r\n                $res=array(\"start\"=&gt;\"6\",\"win\"=&gt;$frame-&gt;fd);\r\n                $server-&gt;push($u['fd'], json_encode($res));//消息广播给所有客户端    \r\n            }  \r\n            $ran=rand(0,count($ansarr));\r\n            $ans=$ansarr[$ran];\r\n            $i=0;\r\n            foreach($server-&gt;table as $u) {\r\n                if($i&lt;$k-&gt;get()){\r\n                    $i++;\r\n                }else{\r\n                    $player=$u[\"fd\"];\r\n                    $k-&gt;set(($k-&gt;get()+1)%$players-&gt;get());\r\n                    break;\r\n                }\r\n            }\r\n            foreach ($server-&gt;table as $u) {\r\n                if($u['fd']==$player){\r\n                    $data=json_encode(array(\"start\"=&gt;\"-1\",\"draw\"=&gt;\"1\",\"ans\"=&gt;$ans));\r\n                    $server-&gt;push($u['fd'],$data);\r\n                }else{\r\n                    $data=json_encode(array(\"start\"=&gt;\"-1\",\"draw\"=&gt;\"0\"));\r\n                    $server-&gt;push($u['fd'],$data);\r\n                }\r\n            }\r\n        }else{\r\n            foreach ($server-&gt;table as $u) {\r\n                $server-&gt;push($u['fd'], $frame-&gt;data);//消息广播给所有客户端\r\n            }     \r\n        }\r\n    }\r\n});\r\n//定义关闭websocket事件\r\n$server-&gt;on('close', function($server, $fd) {\r\n    echo \"client-{$fd} is closed\\n\"; \r\n    global $startGame;\r\n    $server-&gt;table-&gt;del($fd);\r\n    if(count($server-&gt;table)==1){\r\n        $startGame-&gt;set(0);\r\n    }\r\n});\r\n//开启server\r\n$server-&gt;start();</pre>\r\n再附上前端代码。\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;meta content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no,minimum-scale=1.0\" name=\"viewport\" &gt;\r\n    &lt;title&gt;draw and guess&lt;/title&gt;\r\n    &lt;style type=\"text/css\"&gt;\r\n        html,body{\r\n            padding: 0px;\r\n            margin: 0px;\r\n            -webkit-tap-highlight-color:rgba(0,0,0,0);\r\n        }\r\n        canvas{\r\n            border: solid 1px black;\r\n        }\r\n        input{\r\n            border: none;\r\n            border-bottom: solid 1px black;\r\n            line-height: 20px;\r\n            font-size: 20px;\r\n            height: 25px;\r\n            outline:none;\r\n            border-radius: 0px;\r\n            width: 70%;\r\n        }\r\n        button{\r\n            height: 30px;\r\n            width: 20%;\r\n            background-color: rgba(255,255,255,0.5);\r\n            border: solid 1px black;\r\n            border-radius: 10px;\r\n            outline: none;\r\n        }\r\n        .sel li{\r\n            list-style: none;\r\n            display: inline-block;\r\n            width: 23%;\r\n        }\r\n        .color{\r\n            position: absolute;\r\n            width: 100%;\r\n            margin-top: -140px;\r\n        }\r\n        .red{\r\n            width: 100%;\r\n            position: relative;\r\n            top: 0px;\r\n        }\r\n        .green{\r\n            width: 100%;\r\n            position: relative;\r\n            top:30px;\r\n        }\r\n        .blue{\r\n            width: 100%;\r\n            position: relative;\r\n            top: 60px;\r\n        }\r\n        .ky{\r\n            width: 20px;\r\n            height: 20px;\r\n            border-radius: 20px;\r\n            background-color: black;\r\n            position: absolute;\r\n        }\r\n        .jd{\r\n            position: absolute;\r\n            margin-top: 4px;\r\n            border: solid 1px black;\r\n            width: 80%;\r\n            height: 10px;\r\n            border-radius: 10px;\r\n        }\r\n        .colorz{\r\n            position: absolute;\r\n            right: 10%;\r\n        }\r\n        .showcol{\r\n            width: 50px;\r\n            height: 20px;\r\n            margin: 5px;\r\n            border:solid 1px black;\r\n            background-color: #000;\r\n        }\r\n        .bs li{\r\n            list-style: none;\r\n            width: 50px;\r\n            height: 20px;\r\n        }\r\n        .bsdiv{\r\n            position: absolute;\r\n            margin-top: -140px;\r\n            margin-left: 25%;\r\n        }\r\n        .ans{\r\n            position: absolute;\r\n            top: 0px;\r\n            right: 5px;\r\n        }\r\n        .error{\r\n            position: absolute;\r\n            top: 0;\r\n            left: 5px;\r\n        }\r\n        .showinfo{\r\n            position: absolute;\r\n            top: 0px;\r\n            width: 100%;\r\n            text-align: center;\r\n        }\r\n    &lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;div class=\"ans\" id=\"answer\"&gt;&lt;/div&gt;\r\n    &lt;div class=\"error\" id=\"error\"&gt;&lt;/div&gt;\r\n    &lt;div class=\"showinfo\" id=\"showinfo\"&gt;123&lt;/div&gt;\r\n    &lt;canvas id=\"can\" width=\"600\" height=\"600\"&gt;not support&lt;/canvas&gt;\r\n    &lt;div class=\"color\" id=\"col\" style=\"display:none;\"&gt;\r\n        &lt;div class=\"showcol\" id=\"showcolor\"&gt;&lt;/div&gt;\r\n        &lt;div class=\"red\"&gt;\r\n            &lt;div class=\"jd\"&gt;&lt;/div&gt;\r\n            &lt;div class=\"ky\" id=\"redmove\"&gt;&lt;/div&gt;\r\n            &lt;div class=\"colorz\"&gt;r&lt;/div&gt;\r\n        &lt;/div&gt;\r\n        &lt;div class=\"green\"&gt;\r\n            &lt;div class=\"jd\"&gt;&lt;/div&gt;\r\n            &lt;div class=\"ky\" id=\"greenmove\"&gt;&lt;/div&gt;\r\n            &lt;div class=\"colorz\"&gt;g&lt;/div&gt;\r\n        &lt;/div&gt;\r\n        &lt;div class=\"blue\"&gt;\r\n            &lt;div class=\"jd\"&gt;&lt;/div&gt;\r\n            &lt;div class=\"ky\" id=\"bluemove\"&gt;&lt;/div&gt;\r\n            &lt;div class=\"colorz\"&gt;b&lt;/div&gt;\r\n        &lt;/div&gt;\r\n    &lt;/div&gt;\r\n    &lt;div class=\"sel\"&gt;\r\n        &lt;ul&gt;\r\n            &lt;li id=\"colorblock\"&gt;颜色&lt;/li&gt;\r\n            &lt;li id=\"bsblock\" style=\"margin-left:-10px;\"&gt;\r\n                &lt;select name=\"\" id=\"selbs\"&gt;\r\n                    &lt;option value=\"\" disabled selected=\"selected\"&gt;画笔&lt;/option&gt;\r\n                    &lt;option value=\"1\"&gt;1&lt;/option&gt;\r\n                    &lt;option value=\"2\"&gt;2&lt;/option&gt;\r\n                    &lt;option value=\"3\"&gt;3&lt;/option&gt;\r\n                    &lt;option value=\"4\"&gt;4&lt;/option&gt;\r\n                    &lt;option value=\"5\"&gt;5&lt;/option&gt;\r\n                    &lt;option value=\"6\"&gt;6&lt;/option&gt;\r\n                    &lt;option value=\"7\"&gt;7&lt;/option&gt;\r\n                    &lt;option value=\"8\"&gt;8&lt;/option&gt;\r\n                &lt;/select&gt;\r\n            &lt;/li&gt;\r\n            &lt;li style=\"margin-right:10px;\"&gt;\r\n                &lt;select name=\"\" id=\"xpsel\"&gt;\r\n                    &lt;option value=\"\" disabled selected=\"selected\"&gt;橡皮&lt;/option&gt;\r\n                    &lt;option value=\"0\"&gt;取消&lt;/option&gt;\r\n                    &lt;option value=\"1\"&gt;1&lt;/option&gt;\r\n                    &lt;option value=\"2\"&gt;2&lt;/option&gt;\r\n                    &lt;option value=\"3\"&gt;3&lt;/option&gt;\r\n                    &lt;option value=\"4\"&gt;4&lt;/option&gt;\r\n                    &lt;option value=\"5\"&gt;5&lt;/option&gt;\r\n                    &lt;option value=\"6\"&gt;6&lt;/option&gt;\r\n                    &lt;option value=\"7\"&gt;7&lt;/option&gt;\r\n                    &lt;option value=\"8\"&gt;8&lt;/option&gt;\r\n                &lt;/select&gt;\r\n            &lt;/li&gt;\r\n            &lt;li id=\"clear\"&gt;清空&lt;/li&gt;\r\n        &lt;/ul&gt;\r\n    &lt;/div&gt;\r\n    &lt;input type=\"text\" id=\"ans\"&gt;\r\n    &lt;button class=\"btn\" id=\"sub\"&gt;提交&lt;/button&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        showinfo(\"您已进入游戏，请等待\");\r\n        var wsServer = 'ws://123.206.217.190:9501';\r\n        var ws = new WebSocket(wsServer);\r\n        var can=document.getElementById(\"can\");\r\n        var color=document.getElementById(\"col\");\r\n        var rm=document.getElementById(\"redmove\");\r\n        var gm=document.getElementById(\"greenmove\");\r\n        var bm=document.getElementById(\"bluemove\");\r\n        var showcol=document.getElementById(\"showcolor\");\r\n        var bsdiv=document.getElementById(\"bsdiv\");\r\n        var sub=document.getElementById(\"sub\");\r\n        var colorclicked=0;\r\n        var colorshow=[0,0,0];\r\n        var lineWidth=1;\r\n        var xpWidth=0;\r\n        var myturn=0;\r\n        var players=0;\r\n        var deadtime=60;\r\n        var timejishu;\r\n\r\n        var cvs=can.getContext(\"2d\");\r\n        var whmin = window.innerWidth&gt;window.innerHeight?window.innerHeight:window.innerWidth;\r\n        var w=can.width=whmin-2;\r\n        var h=can.height=whmin-2;\r\n\r\n        color.addEventListener('touchstart',stcolor,{passive:false});\r\n        color.addEventListener('touchmove',chcolor,{passtive:false});\r\n        rm.addEventListener('touchstart',colormove,{passive:false});\r\n        gm.addEventListener('touchstart',colormove,{passive:false});\r\n        bm.addEventListener('touchstart',colormove,{passive:false});\r\n\r\n        ws.onopen=function(e){\r\n            can.addEventListener('touchstart',sendstart,{passive:false});\r\n            can.addEventListener('touchmove',sendmove,{passive:false});\r\n            function sendstart(e){\r\n                e.preventDefault();\r\n                let data={\"start\":\"0\",\"coor\":[e.touches[0].clientX,e.touches[0].clientY]};\r\n                if(myturn==1){\r\n                    ws.send(JSON.stringify(data));\r\n                }\r\n            }\r\n            function sendmove(e){\r\n                e.preventDefault();\r\n                let data={\"start\":\"1\",\"coor\":[e.touches[0].clientX,e.touches[0].clientY]};\r\n                if(myturn==1){\r\n                    ws.send(JSON.stringify(data));\r\n                }\r\n            }\r\n        }\r\n\r\n        ws.onmessage=function(e){\r\n            var con=JSON.parse(e.data);\r\n            switch(con.start){\r\n                case \"-2\":\r\n                    console.log(con)\r\n                    players=prompt(\"请选择玩家人数\");\r\n                    let data={\"start\":\"-3\",\"players\":players};\r\n                    ws.send(JSON.stringify(data));\r\n                    break\r\n                case \"-1\":\r\n                    if(con.draw==\"1\"){\r\n                        console.log(timejishu)\r\n                        showinfo(\"该你画咯\");\r\n                        document.getElementById(\"answer\").innerHTML=con.ans;\r\n                        timejishu=setInterval(function(){\r\n                            deadtime--;\r\n                            if(deadtime&lt;55){\r\n                                document.getElementById(\"showinfo\").innerHTML=deadtime;\r\n                            }\r\n                            if(deadtime==0){\r\n                                let data={\"start\":\"-4\"};\r\n                                ws.send(JSON.stringify(data));\r\n                                deadtime=60;\r\n                                clearInterval(timejishu);\r\n                            }\r\n                        },1000);\r\n                        myturn=1;\r\n                    }else{\r\n                        showinfo(\"游戏开始\");\r\n                        document.getElementById(\"answer\").innerHTML=\"\";\r\n                        if(timejishu!=undefined){\r\n                            clearInterval(timejishu);\r\n                        }\r\n                        myturn=0;\r\n                    }\r\n                    break\r\n                case \"0\":\r\n                    tstart(con.coor[0],con.coor[1]);\r\n                    break\r\n                case \"1\":\r\n                    move(con.coor[0],con.coor[1]);\r\n                    break\r\n                case \"2\":\r\n                    lineWidth=con.lineWidth;\r\n                    break;\r\n                case \"3\":\r\n                    xpWidth=con.xpWidth;\r\n                    break;\r\n                case \"4\":\r\n                    cvs.clearRect(0,0,w,h); \r\n                    break;\r\n                case \"5\":\r\n                    colorshow=con.color;\r\n                    break;\r\n                case \"6\":\r\n                    if(con.win!=undefined){\r\n                        alert(con.win+\" win!\");\r\n                        deadtime=60;\r\n                    }else{\r\n                        document.getElementById(\"error\").innerHTML=\"error:\\n\"+con.answer;\r\n                    }\r\n            }\r\n        }\r\n        \r\n        document.getElementById(\"colorblock\").onclick=function(){\r\n            if(color.style.display==\"none\"){\r\n                color.style.display=\"block\";\r\n                this.innerHTML=\"确认\";\r\n            }else{\r\n                color.style.display=\"none\";\r\n                let data={\"start\":\"5\",\"color\":colorshow};\r\n                if(myturn==1){\r\n                    ws.send(JSON.stringify(data));\r\n                }\r\n                this.innerHTML=\"颜色\";\r\n            }\r\n        }\r\n        document.getElementById(\"selbs\").onchange=function(){\r\n            let data={\"start\":\"2\",\"lineWidth\":this.value};\r\n            if(myturn==1){\r\n                ws.send(JSON.stringify(data));\r\n            }\r\n        }\r\n        document.getElementById(\"xpsel\").onchange=function(){\r\n            let data={\"start\":\"3\",\"xpWidth\":this.value};\r\n            if(myturn==1){\r\n                ws.send(JSON.stringify(data));\r\n            }\r\n        }\r\n        document.getElementById(\"clear\").onclick=function(){\r\n            if(myturn==1){\r\n                ws.send(JSON.stringify({\"start\":\"4\"}));  \r\n            }\r\n        }\r\n        sub.onclick=function(){\r\n            var ans=document.getElementById(\"ans\").value;\r\n            let data={\"start\":\"6\",\"answer\":ans};\r\n            ws.send(JSON.stringify(data));\r\n        }\r\n\r\n        function showinfo(info){\r\n            document.getElementById(\"showinfo\").innerHTML=info;\r\n        }\r\n\r\n        function tstart(x,y){\r\n            //e.preventDefault();\r\n            cvs.beginPath();\r\n            cvs.moveTo(x,y);\r\n        }\r\n        function move(x,y){\r\n            //e.preventDefault();\r\n            if(xpWidth!=0){\r\n                cvs.clearRect(x-xpWidth*2,y-xpWidth*2,xpWidth*4,xpWidth*4);\r\n            }else{\r\n                cvs.lineTo(x,y);\r\n                cvs.lineWidth=lineWidth*2;\r\n                cvs.lineCap='round';\r\n                cvs.lineJoin=\"round\";\r\n                cvs.strokeStyle=\"rgb(\"+colorshow[0]+\",\"+colorshow[1]+\",\"+colorshow[2]+\")\";\r\n                cvs.stroke();\r\n            }\r\n        }\r\n        function stcolor(e){\r\n            e.preventDefault();\r\n        }\r\n        function chcolor(e){\r\n            e.preventDefault();\r\n            if(e.targetTouches[0].clientX&lt;window.innerWidth*0.8){\r\n                this.children[colorclicked].children[1].style.left=e.targetTouches[0].clientX+\"px\";\r\n                colorshow[colorclicked-1]=parseInt(e.targetTouches[0].clientX/(window.innerWidth*0.8)*255)\r\n            }\r\n            showcol.style.backgroundColor=\"rgb(\"+colorshow[0]+\",\"+colorshow[1]+\",\"+colorshow[2]+\")\";\r\n        }\r\n        function colormove(e){\r\n            e.preventDefault();\r\n            if(this.id==\"redmove\"){\r\n                colorclicked=1;\r\n            }else if(this.id==\"greenmove\"){\r\n                colorclicked=2;\r\n            }else{\r\n                colorclicked=3;\r\n            }\r\n        }\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n特别说明，这里还会有个bug，回答问题时有正确答案判断为错误，感觉是编码问题，然后这个服务器端运行的时候也是如果有输出中文的话也会输出乱码。有看到改php.ini什么为utf-8，好像也没效果。\r\n\r\n另一个若是开发阶段，经常改服务器端，但每次去找pid并kill比较麻烦，因此可以写个shell命令来自动做一步。\r\n<pre>#!/bin/sh\r\nkill `lsof -t -i:此处写server的端口`\r\nsleep 2\r\nphp 此处写绝对路径/drawguess.php\r\nsleep 1\r\nnetstat -ntlp</pre>\r\nswoole值得探究的可能还很多，然而确实踩坑。。。。",
            "post_title": "swoole初试，作为一个你画我猜的websocket server",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "458-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-12-7 16:57:13",
            "post_modified_gmt": "2017-12-7 08:57:13",
            "post_content_filtered": "",
            "post_parent": "458",
            "guid": "http://ganjiacheng.cn/blog/?p=459",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "460",
            "post_author": "1",
            "post_date": "2017-12-7 17:06:48",
            "post_date_gmt": "2017-12-7 09:06:48",
            "post_content": "swoole也是一个php比较强大的扩展，可以实现高性能的异步并发 TCP、UDP、Unix Socket、HTTP，WebSocket。这里实现一个WebSocket的server端的你画我猜。自我觉得还是踩坑之旅，生产环节用还是值得斟酌。<!--more-->\n\n安装环节这里不多叙述，linux上按<a href=\"https://wiki.swoole.com/wiki/page/6.html\">这里</a>的进行就可以，插一句修改php.ini那个只要加在第一行就行。\n\n然后touch一个php文件，这里命名为drawguess.php。具体内容解释在代码注释中。还有结尾彩蛋。\n<pre>&lt;?php\n//创建全局变量表，这里用于存储用户id，1024为最大容量。\n$table = new swoole_table(1024);\n$table-&gt;column('fd', swoole_table::TYPE_INT);\n$table-&gt;create();\n//定义server\n$server = new swoole_websocket_server(\"0.0.0.0\", 9501);\n$server-&gt;table = $table;\n//这里定义答案\n$anstr=\"苹果,李子,梨子,榴莲,香蕉,橙子,番茄,柿子,葡萄,水蜜桃,核桃,哈密瓜,西瓜,菠萝,蓝莓,草莓,释迦,杨桃,椰子,板栗,樱桃,荔枝,龙眼,青梅,山楂,柠檬,金桔,芒果,坚果,胡桃,枇杷\";\n$ansarr=split(\",\", $anstr);\n$ran=rand(0,count($ansarr));\n$ans=$ansarr[$ran];\n//全局计数，不同进程之间共享\n$startGame=new swoole_atomic(0);\n$players=new swoole_atomic(999);\n$k=new swoole_atomic(0);\n//定义open事件，把用户id加入表中\n//push为推送数据到客户端,这里广播需要用foreach实现。\n$server-&gt;on('open', function($server, $req) {\n    global $ans,$players,$startGame;\n    $server-&gt;table-&gt;set($req-&gt;fd, array('fd' =&gt; $req-&gt;fd));\n    if(count($server-&gt;table)==1){\n        $data=json_encode(array(\"start\"=&gt;\"-2\",\"data\"));\n        $server-&gt;push($req-&gt;fd,$data);\n    }\n    if(count($server-&gt;table)==$players-&gt;get()){\n        if($startGame-&gt;get()==0){\n            $startGame-&gt;set(1);\n            foreach ($server-&gt;table as $u) {\n                if($u['fd']==$req-&gt;fd){\n                    $data=json_encode(array(\"start\"=&gt;\"-1\",\"draw\"=&gt;\"1\",\"ans\"=&gt;$ans));\n                    $server-&gt;push($u['fd'],$data);\n                }else{\n                    $data=json_encode(array(\"start\"=&gt;\"-1\",\"draw\"=&gt;\"0\"));\n                    $server-&gt;push($u['fd'],$data);\n                }\n            }\n        }\n    }\n});\n//定义接受到数据触发事件。\n//这里主逻辑为接受getdata数据，解析，start为状态，\n/*\n-4---时间到0事件\n-3---第一个玩家选择人数\n-2---第一个玩家进入事件\n-1---玩家到齐，开始游戏事件\n0----touchstart事件\n1----touchmove事件\n2----设置线条宽度\n3----设置橡皮宽度\n4----清空事件\n5----设置颜色事件\n6----答案提交事件，判断成功与否\n*/\n$server-&gt;on('message', function($server, $frame) {\n    //$server-&gt;push($frame-&gt;fd, $frame-&gt;data);\n    global $ans,$ansarr,$players,$k;\n    $getdata=json_decode($frame-&gt;data);\n    if($getdata-&gt;start==-4){\n        $ran=rand(0,count($ansarr));\n        $ans=$ansarr[$ran];\n        $i=0;\n        foreach($server-&gt;table as $u) {\n            if($i&lt;$k-&gt;get()){\n                $i++;\n            }else{\n                $player=$u[\"fd\"];\n                $k-&gt;set(($k-&gt;get()+1)%$players-&gt;get());\n                break;\n            }\n        }\n        foreach ($server-&gt;table as $u) {\n                if($u['fd']==$player){\n                    $data=json_encode(array(\"start\"=&gt;\"-1\",\"draw\"=&gt;\"1\",\"ans\"=&gt;$ans));\n                    $server-&gt;push($u['fd'],$data);\n                }else{\n                    $data=json_encode(array(\"start\"=&gt;\"-1\",\"draw\"=&gt;\"0\"));\n                    $server-&gt;push($u['fd'],$data);\n                }\n            }\n    }\n    if($getdata-&gt;start==-3){\n        $players-&gt;set(intval($getdata-&gt;players));\n    }else{\n        if($getdata-&gt;start==6){\n            echo $getdata-&gt;answer;\n        }\n        if($getdata-&gt;start==6 &amp;&amp; $getdata-&gt;answer==$ans){\n            foreach ($server-&gt;table as $u) {\n                $res=array(\"start\"=&gt;\"6\",\"win\"=&gt;$frame-&gt;fd);\n                $server-&gt;push($u['fd'], json_encode($res));//消息广播给所有客户端    \n            }  \n            $ran=rand(0,count($ansarr));\n            $ans=$ansarr[$ran];\n            $i=0;\n            foreach($server-&gt;table as $u) {\n                if($i&lt;$k-&gt;get()){\n                    $i++;\n                }else{\n                    $player=$u[\"fd\"];\n                    $k-&gt;set(($k-&gt;get()+1)%$players-&gt;get());\n                    break;\n                }\n            }\n            foreach ($server-&gt;table as $u) {\n                if($u['fd']==$player){\n                    $data=json_encode(array(\"start\"=&gt;\"-1\",\"draw\"=&gt;\"1\",\"ans\"=&gt;$ans));\n                    $server-&gt;push($u['fd'],$data);\n                }else{\n                    $data=json_encode(array(\"start\"=&gt;\"-1\",\"draw\"=&gt;\"0\"));\n                    $server-&gt;push($u['fd'],$data);\n                }\n            }\n        }else{\n            foreach ($server-&gt;table as $u) {\n                $server-&gt;push($u['fd'], $frame-&gt;data);//消息广播给所有客户端\n            }     \n        }\n    }\n});\n//定义关闭websocket事件\n$server-&gt;on('close', function($server, $fd) {\n    echo \"client-{$fd} is closed\\n\"; \n    global $startGame;\n    $server-&gt;table-&gt;del($fd);\n    if(count($server-&gt;table)==1){\n        $startGame-&gt;set(0);\n    }\n});\n//开启server\n$server-&gt;start();</pre>\n再附上前端代码。\n<pre>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no,minimum-scale=1.0\" name=\"viewport\" &gt;\n    &lt;title&gt;draw and guess&lt;/title&gt;\n    &lt;style type=\"text/css\"&gt;\n        html,body{\n            padding: 0px;\n            margin: 0px;\n            -webkit-tap-highlight-color:rgba(0,0,0,0);\n        }\n        canvas{\n            border: solid 1px black;\n        }\n        input{\n            border: none;\n            border-bottom: solid 1px black;\n            line-height: 20px;\n            font-size: 20px;\n            height: 25px;\n            outline:none;\n            border-radius: 0px;\n            width: 70%;\n        }\n        button{\n            height: 30px;\n            width: 20%;\n            background-color: rgba(255,255,255,0.5);\n            border: solid 1px black;\n            border-radius: 10px;\n            outline: none;\n        }\n        .sel li{\n            list-style: none;\n            display: inline-block;\n            width: 23%;\n        }\n        .color{\n            position: absolute;\n            width: 100%;\n            margin-top: -140px;\n        }\n        .red{\n            width: 100%;\n            position: relative;\n            top: 0px;\n        }\n        .green{\n            width: 100%;\n            position: relative;\n            top:30px;\n        }\n        .blue{\n            width: 100%;\n            position: relative;\n            top: 60px;\n        }\n        .ky{\n            width: 20px;\n            height: 20px;\n            border-radius: 20px;\n            background-color: black;\n            position: absolute;\n        }\n        .jd{\n            position: absolute;\n            margin-top: 4px;\n            border: solid 1px black;\n            width: 80%;\n            height: 10px;\n            border-radius: 10px;\n        }\n        .colorz{\n            position: absolute;\n            right: 10%;\n        }\n        .showcol{\n            width: 50px;\n            height: 20px;\n            margin: 5px;\n            border:solid 1px black;\n            background-color: #000;\n        }\n        .bs li{\n            list-style: none;\n            width: 50px;\n            height: 20px;\n        }\n        .bsdiv{\n            position: absolute;\n            margin-top: -140px;\n            margin-left: 25%;\n        }\n        .ans{\n            position: absolute;\n            top: 0px;\n            right: 5px;\n        }\n        .error{\n            position: absolute;\n            top: 0;\n            left: 5px;\n        }\n        .showinfo{\n            position: absolute;\n            top: 0px;\n            width: 100%;\n            text-align: center;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"ans\" id=\"answer\"&gt;&lt;/div&gt;\n    &lt;div class=\"error\" id=\"error\"&gt;&lt;/div&gt;\n    &lt;div class=\"showinfo\" id=\"showinfo\"&gt;123&lt;/div&gt;\n    &lt;canvas id=\"can\" width=\"600\" height=\"600\"&gt;not support&lt;/canvas&gt;\n    &lt;div class=\"color\" id=\"col\" style=\"display:none;\"&gt;\n        &lt;div class=\"showcol\" id=\"showcolor\"&gt;&lt;/div&gt;\n        &lt;div class=\"red\"&gt;\n            &lt;div class=\"jd\"&gt;&lt;/div&gt;\n            &lt;div class=\"ky\" id=\"redmove\"&gt;&lt;/div&gt;\n            &lt;div class=\"colorz\"&gt;r&lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=\"green\"&gt;\n            &lt;div class=\"jd\"&gt;&lt;/div&gt;\n            &lt;div class=\"ky\" id=\"greenmove\"&gt;&lt;/div&gt;\n            &lt;div class=\"colorz\"&gt;g&lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=\"blue\"&gt;\n            &lt;div class=\"jd\"&gt;&lt;/div&gt;\n            &lt;div class=\"ky\" id=\"bluemove\"&gt;&lt;/div&gt;\n            &lt;div class=\"colorz\"&gt;b&lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=\"sel\"&gt;\n        &lt;ul&gt;\n            &lt;li id=\"colorblock\"&gt;颜色&lt;/li&gt;\n            &lt;li id=\"bsblock\" style=\"margin-left:-10px;\"&gt;\n                &lt;select name=\"\" id=\"selbs\"&gt;\n                    &lt;option value=\"\" disabled selected=\"selected\"&gt;画笔&lt;/option&gt;\n                    &lt;option value=\"1\"&gt;1&lt;/option&gt;\n                    &lt;option value=\"2\"&gt;2&lt;/option&gt;\n                    &lt;option value=\"3\"&gt;3&lt;/option&gt;\n                    &lt;option value=\"4\"&gt;4&lt;/option&gt;\n                    &lt;option value=\"5\"&gt;5&lt;/option&gt;\n                    &lt;option value=\"6\"&gt;6&lt;/option&gt;\n                    &lt;option value=\"7\"&gt;7&lt;/option&gt;\n                    &lt;option value=\"8\"&gt;8&lt;/option&gt;\n                &lt;/select&gt;\n            &lt;/li&gt;\n            &lt;li style=\"margin-right:10px;\"&gt;\n                &lt;select name=\"\" id=\"xpsel\"&gt;\n                    &lt;option value=\"\" disabled selected=\"selected\"&gt;橡皮&lt;/option&gt;\n                    &lt;option value=\"0\"&gt;取消&lt;/option&gt;\n                    &lt;option value=\"1\"&gt;1&lt;/option&gt;\n                    &lt;option value=\"2\"&gt;2&lt;/option&gt;\n                    &lt;option value=\"3\"&gt;3&lt;/option&gt;\n                    &lt;option value=\"4\"&gt;4&lt;/option&gt;\n                    &lt;option value=\"5\"&gt;5&lt;/option&gt;\n                    &lt;option value=\"6\"&gt;6&lt;/option&gt;\n                    &lt;option value=\"7\"&gt;7&lt;/option&gt;\n                    &lt;option value=\"8\"&gt;8&lt;/option&gt;\n                &lt;/select&gt;\n            &lt;/li&gt;\n            &lt;li id=\"clear\"&gt;清空&lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/div&gt;\n    &lt;input type=\"text\" id=\"ans\"&gt;\n    &lt;button class=\"btn\" id=\"sub\"&gt;提交&lt;/button&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        showinfo(\"您已进入游戏，请等待\");\n        var wsServer = 'ws://123.206.217.190:9501';\n        var ws = new WebSocket(wsServer);\n        var can=document.getElementById(\"can\");\n        var color=document.getElementById(\"col\");\n        var rm=document.getElementById(\"redmove\");\n        var gm=document.getElementById(\"greenmove\");\n        var bm=document.getElementById(\"bluemove\");\n        var showcol=document.getElementById(\"showcolor\");\n        var bsdiv=document.getElementById(\"bsdiv\");\n        var sub=document.getElementById(\"sub\");\n        var colorclicked=0;\n        var colorshow=[0,0,0];\n        var lineWidth=1;\n        var xpWidth=0;\n        var myturn=0;\n        var players=0;\n        var deadtime=60;\n        var timejishu;\n\n        var cvs=can.getContext(\"2d\");\n        var whmin = window.innerWidth&gt;window.innerHeight?window.innerHeight:window.innerWidth;\n        var w=can.width=whmin-2;\n        var h=can.height=whmin-2;\n\n        color.addEventListener('touchstart',stcolor,{passive:false});\n        color.addEventListener('touchmove',chcolor,{passtive:false});\n        rm.addEventListener('touchstart',colormove,{passive:false});\n        gm.addEventListener('touchstart',colormove,{passive:false});\n        bm.addEventListener('touchstart',colormove,{passive:false});\n\n        ws.onopen=function(e){\n            can.addEventListener('touchstart',sendstart,{passive:false});\n            can.addEventListener('touchmove',sendmove,{passive:false});\n            function sendstart(e){\n                e.preventDefault();\n                let data={\"start\":\"0\",\"coor\":[e.touches[0].clientX,e.touches[0].clientY]};\n                if(myturn==1){\n                    ws.send(JSON.stringify(data));\n                }\n            }\n            function sendmove(e){\n                e.preventDefault();\n                let data={\"start\":\"1\",\"coor\":[e.touches[0].clientX,e.touches[0].clientY]};\n                if(myturn==1){\n                    ws.send(JSON.stringify(data));\n                }\n            }\n        }\n\n        ws.onmessage=function(e){\n            var con=JSON.parse(e.data);\n            switch(con.start){\n                case \"-2\":\n                    console.log(con)\n                    players=prompt(\"请选择玩家人数\");\n                    let data={\"start\":\"-3\",\"players\":players};\n                    ws.send(JSON.stringify(data));\n                    break\n                case \"-1\":\n                    if(con.draw==\"1\"){\n                        console.log(timejishu)\n                        showinfo(\"该你画咯\");\n                        document.getElementById(\"answer\").innerHTML=con.ans;\n                        timejishu=setInterval(function(){\n                            deadtime--;\n                            if(deadtime&lt;55){\n                                document.getElementById(\"showinfo\").innerHTML=deadtime;\n                            }\n                            if(deadtime==0){\n                                let data={\"start\":\"-4\"};\n                                ws.send(JSON.stringify(data));\n                                deadtime=60;\n                                clearInterval(timejishu);\n                            }\n                        },1000);\n                        myturn=1;\n                    }else{\n                        showinfo(\"游戏开始\");\n                        document.getElementById(\"answer\").innerHTML=\"\";\n                        if(timejishu!=undefined){\n                            clearInterval(timejishu);\n                        }\n                        myturn=0;\n                    }\n                    break\n                case \"0\":\n                    tstart(con.coor[0],con.coor[1]);\n                    break\n                case \"1\":\n                    move(con.coor[0],con.coor[1]);\n                    break\n                case \"2\":\n                    lineWidth=con.lineWidth;\n                    break;\n                case \"3\":\n                    xpWidth=con.xpWidth;\n                    break;\n                case \"4\":\n                    cvs.clearRect(0,0,w,h); \n                    break;\n                case \"5\":\n                    colorshow=con.color;\n                    break;\n                case \"6\":\n                    if(con.win!=undefined){\n                        alert(con.win+\" win!\");\n                        deadtime=60;\n                    }else{\n                        document.getElementById(\"error\").innerHTML=\"error:\\n\"+con.answer;\n                    }\n            }\n        }\n        \n        document.getElementById(\"colorblock\").onclick=function(){\n            if(color.style.display==\"none\"){\n                color.style.display=\"block\";\n                this.innerHTML=\"确认\";\n            }else{\n                color.style.display=\"none\";\n                let data={\"start\":\"5\",\"color\":colorshow};\n                if(myturn==1){\n                    ws.send(JSON.stringify(data));\n                }\n                this.innerHTML=\"颜色\";\n            }\n        }\n        document.getElementById(\"selbs\").onchange=function(){\n            let data={\"start\":\"2\",\"lineWidth\":this.value};\n            if(myturn==1){\n                ws.send(JSON.stringify(data));\n            }\n        }\n        document.getElementById(\"xpsel\").onchange=function(){\n            let data={\"start\":\"3\",\"xpWidth\":this.value};\n            if(myturn==1){\n                ws.send(JSON.stringify(data));\n            }\n        }\n        document.getElementById(\"clear\").onclick=function(){\n            if(myturn==1){\n                ws.send(JSON.stringify({\"start\":\"4\"}));  \n            }\n        }\n        sub.onclick=function(){\n            var ans=document.getElementById(\"ans\").value;\n            let data={\"start\":\"6\",\"answer\":ans};\n            ws.send(JSON.stringify(data));\n        }\n\n        function showinfo(info){\n            document.getElementById(\"showinfo\").innerHTML=info;\n        }\n\n        function tstart(x,y){\n            //e.preventDefault();\n            cvs.beginPath();\n            cvs.moveTo(x,y);\n        }\n        function move(x,y){\n            //e.preventDefault();\n            if(xpWidth!=0){\n                cvs.clearRect(x-xpWidth*2,y-xpWidth*2,xpWidth*4,xpWidth*4);\n            }else{\n                cvs.lineTo(x,y);\n                cvs.lineWidth=lineWidth*2;\n                cvs.lineCap='round';\n                cvs.lineJoin=\"round\";\n                cvs.strokeStyle=\"rgb(\"+colorshow[0]+\",\"+colorshow[1]+\",\"+colorshow[2]+\")\";\n                cvs.stroke();\n            }\n        }\n        function stcolor(e){\n            e.preventDefault();\n        }\n        function chcolor(e){\n            e.preventDefault();\n            if(e.targetTouches[0].clientX&lt;window.innerWidth*0.8){\n                this.children[colorclicked].children[1].style.left=e.targetTouches[0].clientX+\"px\";\n                colorshow[colorclicked-1]=parseInt(e.targetTouches[0].clientX/(window.innerWidth*0.8)*255)\n            }\n            showcol.style.backgroundColor=\"rgb(\"+colorshow[0]+\",\"+colorshow[1]+\",\"+colorshow[2]+\")\";\n        }\n        function colormove(e){\n            e.preventDefault();\n            if(this.id==\"redmove\"){\n                colorclicked=1;\n            }else if(this.id==\"greenmove\"){\n                colorclicked=2;\n            }else{\n                colorclicked=3;\n            }\n        }\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;</pre>\n运行的话，服务器端\n<pre>php drawguess.php</pre>\nswoole的http服务器的话这里不做叙述，可使用python2.x\n<pre>python -m SimpleHTTPServer 80</pre>\n或者python3.x\n<pre><span class=\"n\">python</span> <span class=\"o\">-</span><span class=\"n\">m</span> <span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">server</span> <span class=\"mi\">80</span></pre>\n特别说明，这里还会有个bug，回答问题时有正确答案判断为错误，感觉是编码问题，然后这个服务器端运行的时候也是如果有输出中文的话也会输出乱码。有看到改php.ini什么为utf-8，好像也没效果。\n\n另一个若是开发阶段，经常改服务器端，但每次去找pid并kill比较麻烦，因此可以写个shell命令来自动做一步。\n<pre>#!/bin/sh\nkill `lsof -t -i:此处写server的端口`\nsleep 2\nphp 此处写绝对路径/drawguess.php\nsleep 1\nnetstat -ntlp</pre>\nswoole值得探究的可能还很多，然而确实踩坑。。。。",
            "post_title": "swoole初试，作为一个你画我猜的websocket server",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "458-autosave-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-12-7 17:06:48",
            "post_modified_gmt": "2017-12-7 09:06:48",
            "post_content_filtered": "",
            "post_parent": "458",
            "guid": "http://ganjiacheng.cn/blog/?p=460",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "461",
            "post_author": "1",
            "post_date": "2017-12-7 17:07:05",
            "post_date_gmt": "2017-12-7 09:07:05",
            "post_content": "swoole也是一个php比较强大的扩展，可以实现高性能的异步并发 TCP、UDP、Unix Socket、HTTP，WebSocket。这里实现一个WebSocket的server端的你画我猜。自我觉得还是踩坑之旅，生产环节用还是值得斟酌。<!--more-->\r\n\r\n安装环节这里不多叙述，linux上按<a href=\"https://wiki.swoole.com/wiki/page/6.html\">这里</a>的进行就可以，插一句修改php.ini那个只要加在第一行就行。\r\n\r\n然后touch一个php文件，这里命名为drawguess.php。具体内容解释在代码注释中。还有结尾彩蛋。\r\n<pre>&lt;?php\r\n//创建全局变量表，这里用于存储用户id，1024为最大容量。\r\n$table = new swoole_table(1024);\r\n$table-&gt;column('fd', swoole_table::TYPE_INT);\r\n$table-&gt;create();\r\n//定义server\r\n$server = new swoole_websocket_server(\"0.0.0.0\", 9501);\r\n$server-&gt;table = $table;\r\n//这里定义答案\r\n$anstr=\"苹果,李子,梨子,榴莲,香蕉,橙子,番茄,柿子,葡萄,水蜜桃,核桃,哈密瓜,西瓜,菠萝,蓝莓,草莓,释迦,杨桃,椰子,板栗,樱桃,荔枝,龙眼,青梅,山楂,柠檬,金桔,芒果,坚果,胡桃,枇杷\";\r\n$ansarr=split(\",\", $anstr);\r\n$ran=rand(0,count($ansarr));\r\n$ans=$ansarr[$ran];\r\n//全局计数，不同进程之间共享\r\n$startGame=new swoole_atomic(0);\r\n$players=new swoole_atomic(999);\r\n$k=new swoole_atomic(0);\r\n//定义open事件，把用户id加入表中\r\n//push为推送数据到客户端,这里广播需要用foreach实现。\r\n$server-&gt;on('open', function($server, $req) {\r\n    global $ans,$players,$startGame;\r\n    $server-&gt;table-&gt;set($req-&gt;fd, array('fd' =&gt; $req-&gt;fd));\r\n    if(count($server-&gt;table)==1){\r\n        $data=json_encode(array(\"start\"=&gt;\"-2\",\"data\"));\r\n        $server-&gt;push($req-&gt;fd,$data);\r\n    }\r\n    if(count($server-&gt;table)==$players-&gt;get()){\r\n        if($startGame-&gt;get()==0){\r\n            $startGame-&gt;set(1);\r\n            foreach ($server-&gt;table as $u) {\r\n                if($u['fd']==$req-&gt;fd){\r\n                    $data=json_encode(array(\"start\"=&gt;\"-1\",\"draw\"=&gt;\"1\",\"ans\"=&gt;$ans));\r\n                    $server-&gt;push($u['fd'],$data);\r\n                }else{\r\n                    $data=json_encode(array(\"start\"=&gt;\"-1\",\"draw\"=&gt;\"0\"));\r\n                    $server-&gt;push($u['fd'],$data);\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n//定义接受到数据触发事件。\r\n//这里主逻辑为接受getdata数据，解析，start为状态，\r\n/*\r\n-4---时间到0事件\r\n-3---第一个玩家选择人数\r\n-2---第一个玩家进入事件\r\n-1---玩家到齐，开始游戏事件\r\n0----touchstart事件\r\n1----touchmove事件\r\n2----设置线条宽度\r\n3----设置橡皮宽度\r\n4----清空事件\r\n5----设置颜色事件\r\n6----答案提交事件，判断成功与否\r\n*/\r\n$server-&gt;on('message', function($server, $frame) {\r\n    //$server-&gt;push($frame-&gt;fd, $frame-&gt;data);\r\n    global $ans,$ansarr,$players,$k;\r\n    $getdata=json_decode($frame-&gt;data);\r\n    if($getdata-&gt;start==-4){\r\n        $ran=rand(0,count($ansarr));\r\n        $ans=$ansarr[$ran];\r\n        $i=0;\r\n        foreach($server-&gt;table as $u) {\r\n            if($i&lt;$k-&gt;get()){\r\n                $i++;\r\n            }else{\r\n                $player=$u[\"fd\"];\r\n                $k-&gt;set(($k-&gt;get()+1)%$players-&gt;get());\r\n                break;\r\n            }\r\n        }\r\n        foreach ($server-&gt;table as $u) {\r\n                if($u['fd']==$player){\r\n                    $data=json_encode(array(\"start\"=&gt;\"-1\",\"draw\"=&gt;\"1\",\"ans\"=&gt;$ans));\r\n                    $server-&gt;push($u['fd'],$data);\r\n                }else{\r\n                    $data=json_encode(array(\"start\"=&gt;\"-1\",\"draw\"=&gt;\"0\"));\r\n                    $server-&gt;push($u['fd'],$data);\r\n                }\r\n            }\r\n    }\r\n    if($getdata-&gt;start==-3){\r\n        $players-&gt;set(intval($getdata-&gt;players));\r\n    }else{\r\n        if($getdata-&gt;start==6){\r\n            echo $getdata-&gt;answer;\r\n        }\r\n        if($getdata-&gt;start==6 &amp;&amp; $getdata-&gt;answer==$ans){\r\n            foreach ($server-&gt;table as $u) {\r\n                $res=array(\"start\"=&gt;\"6\",\"win\"=&gt;$frame-&gt;fd);\r\n                $server-&gt;push($u['fd'], json_encode($res));//消息广播给所有客户端    \r\n            }  \r\n            $ran=rand(0,count($ansarr));\r\n            $ans=$ansarr[$ran];\r\n            $i=0;\r\n            foreach($server-&gt;table as $u) {\r\n                if($i&lt;$k-&gt;get()){\r\n                    $i++;\r\n                }else{\r\n                    $player=$u[\"fd\"];\r\n                    $k-&gt;set(($k-&gt;get()+1)%$players-&gt;get());\r\n                    break;\r\n                }\r\n            }\r\n            foreach ($server-&gt;table as $u) {\r\n                if($u['fd']==$player){\r\n                    $data=json_encode(array(\"start\"=&gt;\"-1\",\"draw\"=&gt;\"1\",\"ans\"=&gt;$ans));\r\n                    $server-&gt;push($u['fd'],$data);\r\n                }else{\r\n                    $data=json_encode(array(\"start\"=&gt;\"-1\",\"draw\"=&gt;\"0\"));\r\n                    $server-&gt;push($u['fd'],$data);\r\n                }\r\n            }\r\n        }else{\r\n            foreach ($server-&gt;table as $u) {\r\n                $server-&gt;push($u['fd'], $frame-&gt;data);//消息广播给所有客户端\r\n            }     \r\n        }\r\n    }\r\n});\r\n//定义关闭websocket事件\r\n$server-&gt;on('close', function($server, $fd) {\r\n    echo \"client-{$fd} is closed\\n\"; \r\n    global $startGame;\r\n    $server-&gt;table-&gt;del($fd);\r\n    if(count($server-&gt;table)==1){\r\n        $startGame-&gt;set(0);\r\n    }\r\n});\r\n//开启server\r\n$server-&gt;start();</pre>\r\n再附上前端代码。\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;meta content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no,minimum-scale=1.0\" name=\"viewport\" &gt;\r\n    &lt;title&gt;draw and guess&lt;/title&gt;\r\n    &lt;style type=\"text/css\"&gt;\r\n        html,body{\r\n            padding: 0px;\r\n            margin: 0px;\r\n            -webkit-tap-highlight-color:rgba(0,0,0,0);\r\n        }\r\n        canvas{\r\n            border: solid 1px black;\r\n        }\r\n        input{\r\n            border: none;\r\n            border-bottom: solid 1px black;\r\n            line-height: 20px;\r\n            font-size: 20px;\r\n            height: 25px;\r\n            outline:none;\r\n            border-radius: 0px;\r\n            width: 70%;\r\n        }\r\n        button{\r\n            height: 30px;\r\n            width: 20%;\r\n            background-color: rgba(255,255,255,0.5);\r\n            border: solid 1px black;\r\n            border-radius: 10px;\r\n            outline: none;\r\n        }\r\n        .sel li{\r\n            list-style: none;\r\n            display: inline-block;\r\n            width: 23%;\r\n        }\r\n        .color{\r\n            position: absolute;\r\n            width: 100%;\r\n            margin-top: -140px;\r\n        }\r\n        .red{\r\n            width: 100%;\r\n            position: relative;\r\n            top: 0px;\r\n        }\r\n        .green{\r\n            width: 100%;\r\n            position: relative;\r\n            top:30px;\r\n        }\r\n        .blue{\r\n            width: 100%;\r\n            position: relative;\r\n            top: 60px;\r\n        }\r\n        .ky{\r\n            width: 20px;\r\n            height: 20px;\r\n            border-radius: 20px;\r\n            background-color: black;\r\n            position: absolute;\r\n        }\r\n        .jd{\r\n            position: absolute;\r\n            margin-top: 4px;\r\n            border: solid 1px black;\r\n            width: 80%;\r\n            height: 10px;\r\n            border-radius: 10px;\r\n        }\r\n        .colorz{\r\n            position: absolute;\r\n            right: 10%;\r\n        }\r\n        .showcol{\r\n            width: 50px;\r\n            height: 20px;\r\n            margin: 5px;\r\n            border:solid 1px black;\r\n            background-color: #000;\r\n        }\r\n        .bs li{\r\n            list-style: none;\r\n            width: 50px;\r\n            height: 20px;\r\n        }\r\n        .bsdiv{\r\n            position: absolute;\r\n            margin-top: -140px;\r\n            margin-left: 25%;\r\n        }\r\n        .ans{\r\n            position: absolute;\r\n            top: 0px;\r\n            right: 5px;\r\n        }\r\n        .error{\r\n            position: absolute;\r\n            top: 0;\r\n            left: 5px;\r\n        }\r\n        .showinfo{\r\n            position: absolute;\r\n            top: 0px;\r\n            width: 100%;\r\n            text-align: center;\r\n        }\r\n    &lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;div class=\"ans\" id=\"answer\"&gt;&lt;/div&gt;\r\n    &lt;div class=\"error\" id=\"error\"&gt;&lt;/div&gt;\r\n    &lt;div class=\"showinfo\" id=\"showinfo\"&gt;123&lt;/div&gt;\r\n    &lt;canvas id=\"can\" width=\"600\" height=\"600\"&gt;not support&lt;/canvas&gt;\r\n    &lt;div class=\"color\" id=\"col\" style=\"display:none;\"&gt;\r\n        &lt;div class=\"showcol\" id=\"showcolor\"&gt;&lt;/div&gt;\r\n        &lt;div class=\"red\"&gt;\r\n            &lt;div class=\"jd\"&gt;&lt;/div&gt;\r\n            &lt;div class=\"ky\" id=\"redmove\"&gt;&lt;/div&gt;\r\n            &lt;div class=\"colorz\"&gt;r&lt;/div&gt;\r\n        &lt;/div&gt;\r\n        &lt;div class=\"green\"&gt;\r\n            &lt;div class=\"jd\"&gt;&lt;/div&gt;\r\n            &lt;div class=\"ky\" id=\"greenmove\"&gt;&lt;/div&gt;\r\n            &lt;div class=\"colorz\"&gt;g&lt;/div&gt;\r\n        &lt;/div&gt;\r\n        &lt;div class=\"blue\"&gt;\r\n            &lt;div class=\"jd\"&gt;&lt;/div&gt;\r\n            &lt;div class=\"ky\" id=\"bluemove\"&gt;&lt;/div&gt;\r\n            &lt;div class=\"colorz\"&gt;b&lt;/div&gt;\r\n        &lt;/div&gt;\r\n    &lt;/div&gt;\r\n    &lt;div class=\"sel\"&gt;\r\n        &lt;ul&gt;\r\n            &lt;li id=\"colorblock\"&gt;颜色&lt;/li&gt;\r\n            &lt;li id=\"bsblock\" style=\"margin-left:-10px;\"&gt;\r\n                &lt;select name=\"\" id=\"selbs\"&gt;\r\n                    &lt;option value=\"\" disabled selected=\"selected\"&gt;画笔&lt;/option&gt;\r\n                    &lt;option value=\"1\"&gt;1&lt;/option&gt;\r\n                    &lt;option value=\"2\"&gt;2&lt;/option&gt;\r\n                    &lt;option value=\"3\"&gt;3&lt;/option&gt;\r\n                    &lt;option value=\"4\"&gt;4&lt;/option&gt;\r\n                    &lt;option value=\"5\"&gt;5&lt;/option&gt;\r\n                    &lt;option value=\"6\"&gt;6&lt;/option&gt;\r\n                    &lt;option value=\"7\"&gt;7&lt;/option&gt;\r\n                    &lt;option value=\"8\"&gt;8&lt;/option&gt;\r\n                &lt;/select&gt;\r\n            &lt;/li&gt;\r\n            &lt;li style=\"margin-right:10px;\"&gt;\r\n                &lt;select name=\"\" id=\"xpsel\"&gt;\r\n                    &lt;option value=\"\" disabled selected=\"selected\"&gt;橡皮&lt;/option&gt;\r\n                    &lt;option value=\"0\"&gt;取消&lt;/option&gt;\r\n                    &lt;option value=\"1\"&gt;1&lt;/option&gt;\r\n                    &lt;option value=\"2\"&gt;2&lt;/option&gt;\r\n                    &lt;option value=\"3\"&gt;3&lt;/option&gt;\r\n                    &lt;option value=\"4\"&gt;4&lt;/option&gt;\r\n                    &lt;option value=\"5\"&gt;5&lt;/option&gt;\r\n                    &lt;option value=\"6\"&gt;6&lt;/option&gt;\r\n                    &lt;option value=\"7\"&gt;7&lt;/option&gt;\r\n                    &lt;option value=\"8\"&gt;8&lt;/option&gt;\r\n                &lt;/select&gt;\r\n            &lt;/li&gt;\r\n            &lt;li id=\"clear\"&gt;清空&lt;/li&gt;\r\n        &lt;/ul&gt;\r\n    &lt;/div&gt;\r\n    &lt;input type=\"text\" id=\"ans\"&gt;\r\n    &lt;button class=\"btn\" id=\"sub\"&gt;提交&lt;/button&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        showinfo(\"您已进入游戏，请等待\");\r\n        var wsServer = 'ws://123.206.217.190:9501';\r\n        var ws = new WebSocket(wsServer);\r\n        var can=document.getElementById(\"can\");\r\n        var color=document.getElementById(\"col\");\r\n        var rm=document.getElementById(\"redmove\");\r\n        var gm=document.getElementById(\"greenmove\");\r\n        var bm=document.getElementById(\"bluemove\");\r\n        var showcol=document.getElementById(\"showcolor\");\r\n        var bsdiv=document.getElementById(\"bsdiv\");\r\n        var sub=document.getElementById(\"sub\");\r\n        var colorclicked=0;\r\n        var colorshow=[0,0,0];\r\n        var lineWidth=1;\r\n        var xpWidth=0;\r\n        var myturn=0;\r\n        var players=0;\r\n        var deadtime=60;\r\n        var timejishu;\r\n\r\n        var cvs=can.getContext(\"2d\");\r\n        var whmin = window.innerWidth&gt;window.innerHeight?window.innerHeight:window.innerWidth;\r\n        var w=can.width=whmin-2;\r\n        var h=can.height=whmin-2;\r\n\r\n        color.addEventListener('touchstart',stcolor,{passive:false});\r\n        color.addEventListener('touchmove',chcolor,{passtive:false});\r\n        rm.addEventListener('touchstart',colormove,{passive:false});\r\n        gm.addEventListener('touchstart',colormove,{passive:false});\r\n        bm.addEventListener('touchstart',colormove,{passive:false});\r\n\r\n        ws.onopen=function(e){\r\n            can.addEventListener('touchstart',sendstart,{passive:false});\r\n            can.addEventListener('touchmove',sendmove,{passive:false});\r\n            function sendstart(e){\r\n                e.preventDefault();\r\n                let data={\"start\":\"0\",\"coor\":[e.touches[0].clientX,e.touches[0].clientY]};\r\n                if(myturn==1){\r\n                    ws.send(JSON.stringify(data));\r\n                }\r\n            }\r\n            function sendmove(e){\r\n                e.preventDefault();\r\n                let data={\"start\":\"1\",\"coor\":[e.touches[0].clientX,e.touches[0].clientY]};\r\n                if(myturn==1){\r\n                    ws.send(JSON.stringify(data));\r\n                }\r\n            }\r\n        }\r\n\r\n        ws.onmessage=function(e){\r\n            var con=JSON.parse(e.data);\r\n            switch(con.start){\r\n                case \"-2\":\r\n                    console.log(con)\r\n                    players=prompt(\"请选择玩家人数\");\r\n                    let data={\"start\":\"-3\",\"players\":players};\r\n                    ws.send(JSON.stringify(data));\r\n                    break\r\n                case \"-1\":\r\n                    if(con.draw==\"1\"){\r\n                        console.log(timejishu)\r\n                        showinfo(\"该你画咯\");\r\n                        document.getElementById(\"answer\").innerHTML=con.ans;\r\n                        timejishu=setInterval(function(){\r\n                            deadtime--;\r\n                            if(deadtime&lt;55){\r\n                                document.getElementById(\"showinfo\").innerHTML=deadtime;\r\n                            }\r\n                            if(deadtime==0){\r\n                                let data={\"start\":\"-4\"};\r\n                                ws.send(JSON.stringify(data));\r\n                                deadtime=60;\r\n                                clearInterval(timejishu);\r\n                            }\r\n                        },1000);\r\n                        myturn=1;\r\n                    }else{\r\n                        showinfo(\"游戏开始\");\r\n                        document.getElementById(\"answer\").innerHTML=\"\";\r\n                        if(timejishu!=undefined){\r\n                            clearInterval(timejishu);\r\n                        }\r\n                        myturn=0;\r\n                    }\r\n                    break\r\n                case \"0\":\r\n                    tstart(con.coor[0],con.coor[1]);\r\n                    break\r\n                case \"1\":\r\n                    move(con.coor[0],con.coor[1]);\r\n                    break\r\n                case \"2\":\r\n                    lineWidth=con.lineWidth;\r\n                    break;\r\n                case \"3\":\r\n                    xpWidth=con.xpWidth;\r\n                    break;\r\n                case \"4\":\r\n                    cvs.clearRect(0,0,w,h); \r\n                    break;\r\n                case \"5\":\r\n                    colorshow=con.color;\r\n                    break;\r\n                case \"6\":\r\n                    if(con.win!=undefined){\r\n                        alert(con.win+\" win!\");\r\n                        deadtime=60;\r\n                    }else{\r\n                        document.getElementById(\"error\").innerHTML=\"error:\\n\"+con.answer;\r\n                    }\r\n            }\r\n        }\r\n        \r\n        document.getElementById(\"colorblock\").onclick=function(){\r\n            if(color.style.display==\"none\"){\r\n                color.style.display=\"block\";\r\n                this.innerHTML=\"确认\";\r\n            }else{\r\n                color.style.display=\"none\";\r\n                let data={\"start\":\"5\",\"color\":colorshow};\r\n                if(myturn==1){\r\n                    ws.send(JSON.stringify(data));\r\n                }\r\n                this.innerHTML=\"颜色\";\r\n            }\r\n        }\r\n        document.getElementById(\"selbs\").onchange=function(){\r\n            let data={\"start\":\"2\",\"lineWidth\":this.value};\r\n            if(myturn==1){\r\n                ws.send(JSON.stringify(data));\r\n            }\r\n        }\r\n        document.getElementById(\"xpsel\").onchange=function(){\r\n            let data={\"start\":\"3\",\"xpWidth\":this.value};\r\n            if(myturn==1){\r\n                ws.send(JSON.stringify(data));\r\n            }\r\n        }\r\n        document.getElementById(\"clear\").onclick=function(){\r\n            if(myturn==1){\r\n                ws.send(JSON.stringify({\"start\":\"4\"}));  \r\n            }\r\n        }\r\n        sub.onclick=function(){\r\n            var ans=document.getElementById(\"ans\").value;\r\n            let data={\"start\":\"6\",\"answer\":ans};\r\n            ws.send(JSON.stringify(data));\r\n        }\r\n\r\n        function showinfo(info){\r\n            document.getElementById(\"showinfo\").innerHTML=info;\r\n        }\r\n\r\n        function tstart(x,y){\r\n            //e.preventDefault();\r\n            cvs.beginPath();\r\n            cvs.moveTo(x,y);\r\n        }\r\n        function move(x,y){\r\n            //e.preventDefault();\r\n            if(xpWidth!=0){\r\n                cvs.clearRect(x-xpWidth*2,y-xpWidth*2,xpWidth*4,xpWidth*4);\r\n            }else{\r\n                cvs.lineTo(x,y);\r\n                cvs.lineWidth=lineWidth*2;\r\n                cvs.lineCap='round';\r\n                cvs.lineJoin=\"round\";\r\n                cvs.strokeStyle=\"rgb(\"+colorshow[0]+\",\"+colorshow[1]+\",\"+colorshow[2]+\")\";\r\n                cvs.stroke();\r\n            }\r\n        }\r\n        function stcolor(e){\r\n            e.preventDefault();\r\n        }\r\n        function chcolor(e){\r\n            e.preventDefault();\r\n            if(e.targetTouches[0].clientX&lt;window.innerWidth*0.8){\r\n                this.children[colorclicked].children[1].style.left=e.targetTouches[0].clientX+\"px\";\r\n                colorshow[colorclicked-1]=parseInt(e.targetTouches[0].clientX/(window.innerWidth*0.8)*255)\r\n            }\r\n            showcol.style.backgroundColor=\"rgb(\"+colorshow[0]+\",\"+colorshow[1]+\",\"+colorshow[2]+\")\";\r\n        }\r\n        function colormove(e){\r\n            e.preventDefault();\r\n            if(this.id==\"redmove\"){\r\n                colorclicked=1;\r\n            }else if(this.id==\"greenmove\"){\r\n                colorclicked=2;\r\n            }else{\r\n                colorclicked=3;\r\n            }\r\n        }\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n运行的话，服务器端\r\n<pre>php drawguess.php</pre>\r\n客户端，swoole的http服务器的话这里不做叙述，可使用python2.x作为http服务器\r\n<pre>python -m SimpleHTTPServer 80</pre>\r\n或者python3.x\r\n<pre><span class=\"n\">python</span> <span class=\"o\">-</span><span class=\"n\">m</span> <span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">server</span> <span class=\"mi\">80</span></pre>\r\n特别说明，这里还会有个bug，回答问题时有正确答案判断为错误，感觉是编码问题，然后这个服务器端运行的时候也是如果有输出中文的话也会输出乱码。有看到改php.ini什么为utf-8，好像也没效果。\r\n\r\n另一个若是开发阶段，经常改服务器端，但每次去找pid并kill比较麻烦，因此可以写个shell命令来自动做一步。\r\n<pre>#!/bin/sh\r\nkill `lsof -t -i:此处写server的端口`\r\nsleep 2\r\nphp 此处写绝对路径/drawguess.php\r\nsleep 1\r\nnetstat -ntlp</pre>\r\nswoole值得探究的可能还很多，然而确实踩坑。。。。",
            "post_title": "swoole初试，作为一个你画我猜的websocket server",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "458-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-12-7 17:07:05",
            "post_modified_gmt": "2017-12-7 09:07:05",
            "post_content_filtered": "",
            "post_parent": "458",
            "guid": "http://ganjiacheng.cn/blog/?p=461",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "463",
            "post_author": "1",
            "post_date": "2017-12-7 22:38:35",
            "post_date_gmt": "2017-12-7 14:38:35",
            "post_content": "关于定时器，如果把浏览器最小化或者看其他页面的时候，页面都会处于未激活状态，也就是对于chrome定时器会变1s运行一次，手机定时器则会直接暂停。<!--more-->\r\n\r\n比如运行如下代码，页面切到后台的话，定时器chrome会变一秒变一次，手机则会暂停。\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;test js&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        var time=0;\r\n        setInterval(function(){\r\n            time++;\r\n            document.write(time+\" \");\r\n            document.title=time+\" \";\r\n        },100);\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n然后先尝试一个web worker实现的不停下的setInterval，类似于让定时器部分js在后台运行，这样就可以一直运行定时器，前台收到msg展示即可。下面是html部分\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;Document&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        var worker = new Worker(\"worker.js\");\r\n\r\n        // 向worker.js发送信息\r\n        worker.postMessage( 'hello world' );\r\n\r\n        // 接收从worker.js发送的信息，存储在event.data中\r\n        worker.onmessage = function(event){\r\n            document.write(event.data+\" \");\r\n            document.title=event.data+\" \";\r\n        }\r\n\r\n        // 报错信息\r\n        worker.onerror=function(error){\r\n            console.log(error.filename,error.lineno,error.message);\r\n        }\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n下面是web worker的js部分。\r\n<pre>onmessage = function(event){\r\n    var data = event.data;\r\n    var time=0;\r\n    setInterval(function(){\r\n        // 向前端页面发送信息\r\n        postMessage(time);\r\n        time++;\r\n    }, 100)\r\n}</pre>\r\n再来一种比较奇妙的实现，主要参考<a href=\"https://imququ.com/post/ios-none-freeze-timer.html\">这里</a>。\r\n\r\n通过mate的refresh和setInterval的配合实现。不过这个好像最小只能实现一秒。\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;meta http-equiv=\"refresh\" content=\"2\" id=\"refresh\"&gt;\r\n    &lt;title&gt;123&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        var meta = document.getElementById(\"refresh\");\r\n        var time = 0;\r\n        setInterval(function() {\r\n            meta.content = meta.content;\r\n            document.title=time+\" \";\r\n            document.write(time+\" \");\r\n            time++;\r\n        }, parseInt(meta.content / 2) * 1000);\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n最后再扯扯这个问题的初衷，一次面试被问到页面定时器显示时间由于会停止，后台运行（最小化）后回来时间不对了怎么办。\r\n\r\n这个容易调入上面的陷阱，想着怎么让定时器持续运行，其实只要setInterval获取系统时间便可以。即使停了回来也会运行一次获取到系统时间。代码如下\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;time&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;div id=\"time\"&gt;&lt;/div&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        setInterval(function(){\r\n            document.getElementById(\"time\").innerHTML=new Date().toString();\r\n        },1000);\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\nThat's all；",
            "post_title": "不会停下的setInterval",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e4%b8%8d%e4%bc%9a%e5%81%9c%e4%b8%8b%e7%9a%84setinterval",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-12-7 22:38:35",
            "post_modified_gmt": "2017-12-7 14:38:35",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=463",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "465",
            "post_author": "1",
            "post_date": "2017-12-7 22:38:35",
            "post_date_gmt": "2017-12-7 14:38:35",
            "post_content": "关于定时器，如果把浏览器最小化或者看其他页面的时候，页面都会处于未激活状态，也就是对于chrome定时器会变1s运行一次，手机定时器则会直接暂停。<!--more-->\r\n\r\n比如运行如下代码，页面切到后台的话，定时器chrome会变一秒变一次，手机则会暂停。\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;test js&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        var time=0;\r\n        setInterval(function(){\r\n            time++;\r\n            document.write(time+\" \");\r\n            document.title=time+\" \";\r\n        },100);\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n然后先尝试一个web worker实现的不停下的setInterval，类似于让定时器部分js在后台运行，这样就可以一直运行定时器，前台收到msg展示即可。下面是html部分\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;Document&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        var worker = new Worker(\"worker.js\");\r\n\r\n        // 向worker.js发送信息\r\n        worker.postMessage( 'hello world' );\r\n\r\n        // 接收从worker.js发送的信息，存储在event.data中\r\n        worker.onmessage = function(event){\r\n            document.write(event.data+\" \");\r\n            document.title=event.data+\" \";\r\n        }\r\n\r\n        // 报错信息\r\n        worker.onerror=function(error){\r\n            console.log(error.filename,error.lineno,error.message);\r\n        }\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n下面是web worker的js部分。\r\n<pre>onmessage = function(event){\r\n    var data = event.data;\r\n    var time=0;\r\n    setInterval(function(){\r\n        // 向前端页面发送信息\r\n        postMessage(time);\r\n        time++;\r\n    }, 100)\r\n}</pre>\r\n再来一种比较奇妙的实现，主要参考<a href=\"https://imququ.com/post/ios-none-freeze-timer.html\">这里</a>。\r\n\r\n通过mate的refresh和setInterval的配合实现。不过这个好像最小只能实现一秒。\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;meta http-equiv=\"refresh\" content=\"2\" id=\"refresh\"&gt;\r\n    &lt;title&gt;123&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        var meta = document.getElementById(\"refresh\");\r\n        var time = 0;\r\n        setInterval(function() {\r\n            meta.content = meta.content;\r\n            document.title=time+\" \";\r\n            document.write(time+\" \");\r\n            time++;\r\n        }, parseInt(meta.content / 2) * 1000);\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n最后再扯扯这个问题的初衷，一次面试被问到页面定时器显示时间由于会停止，后台运行（最小化）后回来时间不对了怎么办。\r\n\r\n这个容易调入上面的陷阱，想着怎么让定时器持续运行，其实只要setInterval获取系统时间便可以。即使停了回来也会运行一次获取到系统时间。代码如下\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;time&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;div id=\"time\"&gt;&lt;/div&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        setInterval(function(){\r\n            document.getElementById(\"time\").innerHTML=new Date().toString();\r\n        },1000);\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\nThat's all；",
            "post_title": "不会停下的setInterval",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "463-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-12-7 22:38:35",
            "post_modified_gmt": "2017-12-7 14:38:35",
            "post_content_filtered": "",
            "post_parent": "463",
            "guid": "http://ganjiacheng.cn/blog/?p=465",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "469",
            "post_author": "1",
            "post_date": "2017-12-21 13:37:52",
            "post_date_gmt": "2017-12-21 05:37:52",
            "post_content": "最近接触些python后端开发，记录下所用到的一些技术。<!--more-->\r\n\r\nflask，这个在他的官网里也有详细文档，这里简单论述一个登录+后台管理的例子。\r\n<pre>#引入一个蓝图，蓝图封装一些接口\r\nfrom lantu import simple_page\r\nfrom flask import Flask,render_template,request,session,redirect,url_for\r\nimport json\r\nimport hashlib\r\n#定义app，secret_key主要在生成session时候用\r\napp=Flask(__name__)\r\napp.secret_key='gjc'\r\n#绑定蓝图\r\napp.register_blueprint(simple_page)\r\n#主页跳转到登录\r\n@app.route('/')\r\ndef index():\r\n    return redirect(url_for('login'))\r\n#登录判断session，有则跳转到主页\r\n@app.route(\"/login\")\r\ndef login():\r\n    if \"username\" not in session:\r\n        return render_template('login.html')\r\n    else:\r\n        return redirect(url_for('simple_page.main'))\r\n#登录验证接口\r\n@app.route(\"/login/loginYz\",methods=['POST'])\r\ndef loginyz():\r\n    psd=hashlib.sha256()\r\n    psd.update('root'.encode('utf-8'))\r\n    if request.form['username']!='root':\r\n        res={\r\n            \"state\":\"1001\",\r\n            \"result\":\"username error\"\r\n        }\r\n        return json.dumps(res)\r\n    elif psd.hexdigest()!=request.form['password']:\r\n        res={\r\n            \"state\":\"1002\",\r\n            \"result\":\"password error\"\r\n        }\r\n        return json.dumps(res)\r\n    else:\r\n        session['username'] = request.form['username']\r\n        res={\r\n            \"state\":\"1000\",\r\n            \"result\":\"success\",\r\n            \"linkTo\":\"/main\"\r\n        }\r\n        return json.dumps(res) \r\n#登出接口，删除session\r\n@app.route(\"/loginout\")\r\ndef loginout():\r\n    session.pop('username', None)\r\n    return redirect(url_for('login'))\r\n#开始出程序\r\nif __name__=='__main__':\r\n    app.run(\"0.0.0.0\",debug=True)</pre>\r\n上面绑定的蓝图\r\n<pre>from flask import Blueprint,render_template,abort,session,request\r\nfrom jinja2 import TemplateNotFound\r\nfrom pymongo import MongoClient\r\nimport json\r\n#连接mongodb数据库\r\nclient=MongoClient()\r\ndb=client.test_database\r\nposts=db.posts\r\n#定义一个蓝图\r\nsimple_page=Blueprint('simple_page',__name__,template_folder='templates')\r\n#管理主页\r\n@simple_page.route(\"/main\")\r\ndef main():\r\n    if \"username\" in session:\r\n        data={}\r\n        data['username']=session['username']\r\n        data['info']=[post for post in posts.find()]\r\n        return render_template(\"main.html\",data=data)\r\n    else:\r\n        return render_template('login.html')\r\n#增加数据\r\n@simple_page.route(\"/main/add\",methods=['POST'])\r\ndef add():\r\n    post={\r\n        \"name\":request.form['name'],\r\n        \"email\":request.form['email'],\r\n        \"phone\":request.form['tel'],\r\n        \"more\":request.form['more']\r\n    }\r\n    if posts.insert_one(post).inserted_id!=\"\":\r\n        return json.dumps({\"state\":\"1000\",\"result\":\"success\"})\r\n    else:\r\n        return json.dumps({\"state\":\"1004\",\"result\":\"insert error\"})\r\n#删除数据\r\n@simple_page.route(\"/main/dele\",methods=['POST'])\r\ndef dele():\r\n    result=posts.delete_one({\"name\":request.form['name']})\r\n    if result.deleted_count&gt;0:\r\n        return json.dumps({\"state\":\"1000\",\"result\":request.form['name']})\r\n    else:\r\n        return json.dumps({\"state\":\"1005\",\"result\":\"delete error\"})\r\n#修改数据\r\n@simple_page.route(\"/main/edit\",methods=['POST'])\r\ndef edit():\r\n    result=posts.update_one({\"name\":request.form['org_name']},{\"$set\":{\r\n        \"name\":request.form['ch_name'],\r\n        \"email\":request.form['ch_email'],\r\n        \"phone\":request.form['ch_phone'],\r\n        \"more\":request.form['ch_more']\r\n    }})\r\n    if result.matched_count!=0:\r\n        return json.dumps({\"state\":\"1000\",\"result\":request.form['ch_name']})\r\n    else:\r\n        return json.dumps({\"state\":\"1006\",\"result\":\"edit error\"})\r\n    #return json.dumps({\"state\":\"1000\",\"result\":result.matched_count})</pre>\r\n关于前端页面这里不做展示了，接下来使用gunicorn运行该flask程序\r\n\r\n首先可以配置一下gunicorn的config，flask项目touch一个config.py，复制如下内容，当然也可以自行修改配置，内容也可以在<a href=\"https://github.com/benoitc/gunicorn/blob/master/examples/example_config.py\">这里</a>下载。\r\n<pre>bind = '0.0.0.0:8000'\r\nbacklog = 2048\r\nworkers = 1\r\nworker_class = 'sync'\r\nworker_connections = 1000\r\ntimeout = 30\r\nkeepalive = 2\r\nspew = False\r\ndaemon = False\r\npidfile = None\r\numask = 0\r\nuser = None\r\ngroup = None\r\ntmp_upload_dir = None\r\nerrorlog = '-'\r\nloglevel = 'info'\r\naccesslog = '-'\r\naccess_log_format = '%(h)s %(l)s %(u)s %(t)s \"%(r)s\" %(s)s %(b)s \"%(f)s\" \"%(a)s\"'\r\nproc_name = None\r\ndef post_fork(server, worker):\r\n    server.log.info(\"Worker spawned (pid: %s)\", worker.pid)\r\n\r\ndef pre_fork(server, worker):\r\n    pass\r\n\r\ndef pre_exec(server):\r\n    server.log.info(\"Forked child, re-executing.\")\r\n\r\ndef when_ready(server):\r\n    server.log.info(\"Server is ready. Spawning workers\")\r\n\r\ndef worker_int(worker):\r\n    worker.log.info(\"worker received INT or QUIT signal\")\r\n\r\n    ## get traceback info\r\n    import threading, sys, traceback\r\n    id2name = dict([(th.ident, th.name) for th in threading.enumerate()])\r\n    code = []\r\n    for threadId, stack in sys._current_frames().items():\r\n        code.append(\"\\n# Thread: %s(%d)\" % (id2name.get(threadId,\"\"),\r\n            threadId))\r\n        for filename, lineno, name, line in traceback.extract_stack(stack):\r\n            code.append('File: \"%s\", line %d, in %s' % (filename,\r\n                lineno, name))\r\n            if line:\r\n                code.append(\"  %s\" % (line.strip()))\r\n    worker.log.debug(\"\\n\".join(code))\r\n\r\ndef worker_abort(worker):\r\n    worker.log.info(\"worker received SIGABRT signal\")</pre>\r\n然后运行\r\n<pre>gunicorn -c config.py main:app</pre>\r\n就可以多线程运行flask程序啦！",
            "post_title": "flask+mongodb+gunicron初试",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "flaskmongodbgunicron%e5%88%9d%e8%af%95",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-12-21 13:37:52",
            "post_modified_gmt": "2017-12-21 05:37:52",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=469",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "470",
            "post_author": "1",
            "post_date": "2017-12-21 13:08:38",
            "post_date_gmt": "2017-12-21 05:08:38",
            "post_content": "最近接触些python后端开发，记录下所用到的一些技术。\r\n\r\nflask，这个在他的官网里也有详细文档，这里简单论述一个例子。",
            "post_title": "flask+mongodb+gunicron初试",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "469-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-12-21 13:08:38",
            "post_modified_gmt": "2017-12-21 05:08:38",
            "post_content_filtered": "",
            "post_parent": "469",
            "guid": "http://ganjiacheng.cn/blog/?p=470",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "471",
            "post_author": "1",
            "post_date": "2017-12-21 13:37:52",
            "post_date_gmt": "2017-12-21 05:37:52",
            "post_content": "最近接触些python后端开发，记录下所用到的一些技术。<!--more-->\r\n\r\nflask，这个在他的官网里也有详细文档，这里简单论述一个登录+后台管理的例子。\r\n<pre>#引入一个蓝图，蓝图封装一些接口\r\nfrom lantu import simple_page\r\nfrom flask import Flask,render_template,request,session,redirect,url_for\r\nimport json\r\nimport hashlib\r\n#定义app，secret_key主要在生成session时候用\r\napp=Flask(__name__)\r\napp.secret_key='gjc'\r\n#绑定蓝图\r\napp.register_blueprint(simple_page)\r\n#主页跳转到登录\r\n@app.route('/')\r\ndef index():\r\n    return redirect(url_for('login'))\r\n#登录判断session，有则跳转到主页\r\n@app.route(\"/login\")\r\ndef login():\r\n    if \"username\" not in session:\r\n        return render_template('login.html')\r\n    else:\r\n        return redirect(url_for('simple_page.main'))\r\n#登录验证接口\r\n@app.route(\"/login/loginYz\",methods=['POST'])\r\ndef loginyz():\r\n    psd=hashlib.sha256()\r\n    psd.update('root'.encode('utf-8'))\r\n    if request.form['username']!='root':\r\n        res={\r\n            \"state\":\"1001\",\r\n            \"result\":\"username error\"\r\n        }\r\n        return json.dumps(res)\r\n    elif psd.hexdigest()!=request.form['password']:\r\n        res={\r\n            \"state\":\"1002\",\r\n            \"result\":\"password error\"\r\n        }\r\n        return json.dumps(res)\r\n    else:\r\n        session['username'] = request.form['username']\r\n        res={\r\n            \"state\":\"1000\",\r\n            \"result\":\"success\",\r\n            \"linkTo\":\"/main\"\r\n        }\r\n        return json.dumps(res) \r\n#登出接口，删除session\r\n@app.route(\"/loginout\")\r\ndef loginout():\r\n    session.pop('username', None)\r\n    return redirect(url_for('login'))\r\n#开始出程序\r\nif __name__=='__main__':\r\n    app.run(\"0.0.0.0\",debug=True)</pre>\r\n上面绑定的蓝图\r\n<pre>from flask import Blueprint,render_template,abort,session,request\r\nfrom jinja2 import TemplateNotFound\r\nfrom pymongo import MongoClient\r\nimport json\r\n#连接mongodb数据库\r\nclient=MongoClient()\r\ndb=client.test_database\r\nposts=db.posts\r\n#定义一个蓝图\r\nsimple_page=Blueprint('simple_page',__name__,template_folder='templates')\r\n#管理主页\r\n@simple_page.route(\"/main\")\r\ndef main():\r\n    if \"username\" in session:\r\n        data={}\r\n        data['username']=session['username']\r\n        data['info']=[post for post in posts.find()]\r\n        return render_template(\"main.html\",data=data)\r\n    else:\r\n        return render_template('login.html')\r\n#增加数据\r\n@simple_page.route(\"/main/add\",methods=['POST'])\r\ndef add():\r\n    post={\r\n        \"name\":request.form['name'],\r\n        \"email\":request.form['email'],\r\n        \"phone\":request.form['tel'],\r\n        \"more\":request.form['more']\r\n    }\r\n    if posts.insert_one(post).inserted_id!=\"\":\r\n        return json.dumps({\"state\":\"1000\",\"result\":\"success\"})\r\n    else:\r\n        return json.dumps({\"state\":\"1004\",\"result\":\"insert error\"})\r\n#删除数据\r\n@simple_page.route(\"/main/dele\",methods=['POST'])\r\ndef dele():\r\n    result=posts.delete_one({\"name\":request.form['name']})\r\n    if result.deleted_count&gt;0:\r\n        return json.dumps({\"state\":\"1000\",\"result\":request.form['name']})\r\n    else:\r\n        return json.dumps({\"state\":\"1005\",\"result\":\"delete error\"})\r\n#修改数据\r\n@simple_page.route(\"/main/edit\",methods=['POST'])\r\ndef edit():\r\n    result=posts.update_one({\"name\":request.form['org_name']},{\"$set\":{\r\n        \"name\":request.form['ch_name'],\r\n        \"email\":request.form['ch_email'],\r\n        \"phone\":request.form['ch_phone'],\r\n        \"more\":request.form['ch_more']\r\n    }})\r\n    if result.matched_count!=0:\r\n        return json.dumps({\"state\":\"1000\",\"result\":request.form['ch_name']})\r\n    else:\r\n        return json.dumps({\"state\":\"1006\",\"result\":\"edit error\"})\r\n    #return json.dumps({\"state\":\"1000\",\"result\":result.matched_count})</pre>\r\n关于前端页面这里不做展示了，接下来使用gunicorn运行该flask程序\r\n\r\n首先可以配置一下gunicorn的config，flask项目touch一个config.py，复制如下内容，当然也可以自行修改配置，内容也可以在<a href=\"https://github.com/benoitc/gunicorn/blob/master/examples/example_config.py\">这里</a>下载。\r\n<pre>bind = '0.0.0.0:8000'\r\nbacklog = 2048\r\nworkers = 1\r\nworker_class = 'sync'\r\nworker_connections = 1000\r\ntimeout = 30\r\nkeepalive = 2\r\nspew = False\r\ndaemon = False\r\npidfile = None\r\numask = 0\r\nuser = None\r\ngroup = None\r\ntmp_upload_dir = None\r\nerrorlog = '-'\r\nloglevel = 'info'\r\naccesslog = '-'\r\naccess_log_format = '%(h)s %(l)s %(u)s %(t)s \"%(r)s\" %(s)s %(b)s \"%(f)s\" \"%(a)s\"'\r\nproc_name = None\r\ndef post_fork(server, worker):\r\n    server.log.info(\"Worker spawned (pid: %s)\", worker.pid)\r\n\r\ndef pre_fork(server, worker):\r\n    pass\r\n\r\ndef pre_exec(server):\r\n    server.log.info(\"Forked child, re-executing.\")\r\n\r\ndef when_ready(server):\r\n    server.log.info(\"Server is ready. Spawning workers\")\r\n\r\ndef worker_int(worker):\r\n    worker.log.info(\"worker received INT or QUIT signal\")\r\n\r\n    ## get traceback info\r\n    import threading, sys, traceback\r\n    id2name = dict([(th.ident, th.name) for th in threading.enumerate()])\r\n    code = []\r\n    for threadId, stack in sys._current_frames().items():\r\n        code.append(\"\\n# Thread: %s(%d)\" % (id2name.get(threadId,\"\"),\r\n            threadId))\r\n        for filename, lineno, name, line in traceback.extract_stack(stack):\r\n            code.append('File: \"%s\", line %d, in %s' % (filename,\r\n                lineno, name))\r\n            if line:\r\n                code.append(\"  %s\" % (line.strip()))\r\n    worker.log.debug(\"\\n\".join(code))\r\n\r\ndef worker_abort(worker):\r\n    worker.log.info(\"worker received SIGABRT signal\")</pre>\r\n然后运行\r\n<pre>gunicorn -c config.py main:app</pre>\r\n就可以多线程运行flask程序啦！",
            "post_title": "flask+mongodb+gunicron初试",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "469-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-12-21 13:37:52",
            "post_modified_gmt": "2017-12-21 05:37:52",
            "post_content_filtered": "",
            "post_parent": "469",
            "guid": "http://ganjiacheng.cn/blog/?p=471",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "472",
            "post_author": "1",
            "post_date": "2017-12-21 13:38:17",
            "post_date_gmt": "2017-12-21 05:38:17",
            "post_content": "最近接触些python后端开发，记录下所用到的一些技术。<!--more-->\n\nflask，这个在他的官网里也有详细文档，这里简单论述一个登录+后台管理的例子。\n<pre>#引入一个蓝图，蓝图封装一些接口\nfrom lantu import simple_page\nfrom flask import Flask,render_template,request,session,redirect,url_for\nimport json\nimport hashlib\n#定义app，secret_key主要在生成session时候用\napp=Flask(__name__)\napp.secret_key='gjc'\n#绑定蓝图\napp.register_blueprint(simple_page)\n#主页跳转到登录\n@app.route('/')\ndef index():\n    return redirect(url_for('login'))\n#登录判断session，有则跳转到主页\n@app.route(\"/login\")\ndef login():\n    if \"username\" not in session:\n        return render_template('login.html')\n    else:\n        return redirect(url_for('simple_page.main'))\n#登录验证接口\n@app.route(\"/login/loginYz\",methods=['POST'])\ndef loginyz():\n    psd=hashlib.sha256()\n    psd.update('root'.encode('utf-8'))\n    if request.form['username']!='root':\n        res={\n            \"state\":\"1001\",\n            \"result\":\"username error\"\n        }\n        return json.dumps(res)\n    elif psd.hexdigest()!=request.form['password']:\n        res={\n            \"state\":\"1002\",\n            \"result\":\"password error\"\n        }\n        return json.dumps(res)\n    else:\n        session['username'] = request.form['username']\n        res={\n            \"state\":\"1000\",\n            \"result\":\"success\",\n            \"linkTo\":\"/main\"\n        }\n        return json.dumps(res) \n#登出接口，删除session\n@app.route(\"/loginout\")\ndef loginout():\n    session.pop('username', None)\n    return redirect(url_for('login'))\n#开始出程序\nif __name__=='__main__':\n    app.run(\"0.0.0.0\",debug=True)</pre>\n上面绑定的蓝图\n<pre>from flask import Blueprint,render_template,abort,session,request\nfrom jinja2 import TemplateNotFound\nfrom pymongo import MongoClient\nimport json\n#连接mongodb数据库\nclient=MongoClient()\ndb=client.test_database\nposts=db.posts\n#定义一个蓝图\nsimple_page=Blueprint('simple_page',__name__,template_folder='templates')\n#管理主页\n@simple_page.route(\"/main\")\ndef main():\n    if \"username\" in session:\n        data={}\n        data['username']=session['username']\n        data['info']=[post for post in posts.find()]\n        return render_template(\"main.html\",data=data)\n    else:\n        return render_template('login.html')\n#增加数据\n@simple_page.route(\"/main/add\",methods=['POST'])\ndef add():\n    post={\n        \"name\":request.form['name'],\n        \"email\":request.form['email'],\n        \"phone\":request.form['tel'],\n        \"more\":request.form['more']\n    }\n    if posts.insert_one(post).inserted_id!=\"\":\n        return json.dumps({\"state\":\"1000\",\"result\":\"success\"})\n    else:\n        return json.dumps({\"state\":\"1004\",\"result\":\"insert error\"})\n#删除数据\n@simple_page.route(\"/main/dele\",methods=['POST'])\ndef dele():\n    result=posts.delete_one({\"name\":request.form['name']})\n    if result.deleted_count&gt;0:\n        return json.dumps({\"state\":\"1000\",\"result\":request.form['name']})\n    else:\n        return json.dumps({\"state\":\"1005\",\"result\":\"delete error\"})\n#修改数据\n@simple_page.route(\"/main/edit\",methods=['POST'])\ndef edit():\n    result=posts.update_one({\"name\":request.form['org_name']},{\"$set\":{\n        \"name\":request.form['ch_name'],\n        \"email\":request.form['ch_email'],\n        \"phone\":request.form['ch_phone'],\n        \"more\":request.form['ch_more']\n    }})\n    if result.matched_count!=0:\n        return json.dumps({\"state\":\"1000\",\"result\":request.form['ch_name']})\n    else:\n        return json.dumps({\"state\":\"1006\",\"result\":\"edit error\"})\n    #return json.dumps({\"state\":\"1000\",\"result\":result.matched_count})</pre>\n关于前端页面这里不做展示了，接下来使用gunicorn运行该flask程序\n\n首先可以配置一下gunicorn的config，flask项目touch一个config.py，复制如下内容，当然也可以自行修改配置，内容也可以在<a href=\"https://github.com/benoitc/gunicorn/blob/master/examples/example_config.py\">这里</a>下载。\n<pre>bind = '0.0.0.0:8000'\nbacklog = 2048\nworkers = 1\nworker_class = 'sync'\nworker_connections = 1000\ntimeout = 30\nkeepalive = 2\nspew = False\ndaemon = False\npidfile = None\numask = 0\nuser = None\ngroup = None\ntmp_upload_dir = None\nerrorlog = '-'\nloglevel = 'info'\naccesslog = '-'\naccess_log_format = '%(h)s %(l)s %(u)s %(t)s \"%(r)s\" %(s)s %(b)s \"%(f)s\" \"%(a)s\"'\nproc_name = None\ndef post_fork(server, worker):\n    server.log.info(\"Worker spawned (pid: %s)\", worker.pid)\n\ndef pre_fork(server, worker):\n    pass\n\ndef pre_exec(server):\n    server.log.info(\"Forked child, re-executing.\")\n\ndef when_ready(server):\n    server.log.info(\"Server is ready. Spawning workers\")\n\ndef worker_int(worker):\n    worker.log.info(\"worker received INT or QUIT signal\")\n\n    ## get traceback info\n    import threading, sys, traceback\n    id2name = dict([(th.ident, th.name) for th in threading.enumerate()])\n    code = []\n    for threadId, stack in sys._current_frames().items():\n        code.append(\"\\n# Thread: %s(%d)\" % (id2name.get(threadId,\"\"),\n            threadId))\n        for filename, lineno, name, line in traceback.extract_stack(stack):\n            code.append('File: \"%s\", line %d, in %s' % (filename,\n                lineno, name))\n            if line:\n                code.append(\"  %s\" % (line.strip()))\n    worker.log.debug(\"\\n\".join(code))\n\ndef worker_abort(worker):\n    worker.log.info(\"worker received SIGABRT signal\")</pre>\n然后运行\n<pre>gunicorn -c config.py main:app</pre>\n就可以多线程运行flask程序啦！",
            "post_title": "flask+mongodb+gunicron初试",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "469-autosave-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2017-12-21 13:38:17",
            "post_modified_gmt": "2017-12-21 05:38:17",
            "post_content_filtered": "",
            "post_parent": "469",
            "guid": "http://ganjiacheng.cn/blog/?p=472",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "474",
            "post_author": "1",
            "post_date": "2018-1-1 09:12:09",
            "post_date_gmt": "2018-1-1 01:12:09",
            "post_content": "之前的博客多数以技术为主，今后将加入Life板块，用以记录生活，随笔，杂念～\r\n\r\n首篇就做一篇2017年总结，也算有东西写，不ga聊。<!--more-->\r\n\r\n2017上半年，我大二上，还当着宿管会技术部的部长，事情也是一大堆。\r\n\r\n开年印象比较深刻的是我作为主负责人之一的项目在上线前一刻被pass了，这可能也是后来我离开宿管原因之一。\r\n\r\n我找了半个女朋友，咋么这么说呢，至少那时候没有确定关系吧，聊得挺开的，也经常一起吃饭看电影，或许是我自嗨吧。事实如此，到暑假便忙的说话都少了，九月自然分开。对于感情好像没什么多说的，都靠感觉呗。\r\n\r\n上半年技术部中我还在积极的培训与探讨下任的问题，这件事也算在5月份落地。\r\n\r\n技术上由于之前想好了转python，上半年开始接触到一些机器学习的内容，也找到了可靠的图像方面的导师，但下半年还是没有坚持下去，中间也做了一段时间爬虫，这可能不是主要原因，我觉得还是内心平静不下来学习，经常是一个人钻牛角尖，借一句话：便纵有千种风情，更与何人说。\r\n\r\n6月份参加了数学建模校赛，好像二等奖吧，就进了集训队，暑假集训忙的不可开交，七月集训完，我选择了退出，当时的考虑是体验过付出过便好，回报拿奖什么都不在乎，二来我希望在机器学习方面多深入一点。现在回头来看我应该也不会后悔吧，反正都是让我更上一层的，经历越丰富越好。\r\n\r\n下半年，一个比较担心的事情是技术部名义上的存在。没有事情与可替代一定会来，虽然退出了，但毕竟也是一手带过来的，希望能有好ending吧。\r\n\r\n之后也就是忙了一个月上面说的爬虫，总共也有爬下百g的图片和数据吧。后来觉得这是个耗时不讨好的活（爬下来的数据不是给我自己用，也没报酬）便不干了。\r\n\r\n11，12月，事情不多每天水水，琢磨着找个实习罢，很幸运还能有内推机会，参加了网易前端面试，虽然没过，然后又来到了现在所在公司，做着python后端和数据处理。虽然都以前端名义投的简历，当时也没多想具体找什么工作，没有强求吧。现在看来其实也没什么，自身的进步在于自身而不在于所在的公司和工作吧。\r\n\r\n在一家小做互联网金融的公司，接触很多股票方面的、我觉得也算一个了解的机会，本来可能很难接触到的一些，现在可能就在眼前，就看自己去学习。至于后端应该问题不大，对于我还比较轻松。不确定能长久做下去，但在做的时候有进步就好吧，不管是技术还是其他领域。\r\n\r\n2018-01-01\r\n\r\n临山开往杭州的汽车上",
            "post_title": "2017总结咯",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "2017%e6%80%bb%e7%bb%93%e5%92%af",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-1 09:16:15",
            "post_modified_gmt": "2018-1-1 01:16:15",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=474",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "475",
            "post_author": "1",
            "post_date": "2018-1-1 09:12:09",
            "post_date_gmt": "2018-1-1 01:12:09",
            "post_content": "<!--more-->之前的博客多数以技术为主，今后将加入Life板块，用以记录生活，随笔，杂念～\r\n\r\n首篇就做一篇2017年总结，也算有东西写，不ga聊。<!--more-->\r\n\r\n2017上半年，我大二上，还当着宿管会技术部的部长，事情也是一大堆。\r\n\r\n开年印象比较深刻的是我作为主负责人之一的项目在上线前一刻被pass了，这可能也是后来我离开宿管原因之一。\r\n\r\n我找了半个女朋友，咋么这么说呢，至少那时候没有确定关系吧，聊得挺开的，也经常一起吃饭看电影，或许是我自嗨吧。事实如此，到暑假便忙的说话都少了，九月自然分开。对于感情好像没什么多说的，都靠感觉呗。\r\n\r\n上半年技术部中我还在积极的培训与探讨下任的问题，这件事也算在5月份落地。\r\n\r\n技术上由于之前想好了转python，上半年开始接触到一些机器学习的内容，也找到了可靠的图像方面的导师，但下半年还是没有坚持下去，中间也做了一段时间爬虫，这可能不是主要原因，我觉得还是内心平静不下来学习，经常是一个人钻牛角尖，借一句话：便纵有千种风情，更与何人说。\r\n\r\n6月份参加了数学建模校赛，好像二等奖吧，就进了集训队，暑假集训忙的不可开交，七月集训完，我选择了退出，当时的考虑是体验过付出过便好，回报拿奖什么都不在乎，二来我希望在机器学习方面多深入一点。现在回头来看我应该也不会后悔吧，反正都是让我更上一层的，经历越丰富越好。\r\n\r\n下半年，一个比较担心的事情是技术部名义上的存在。没有事情与可替代一定会来，虽然退出了，但毕竟也是一手带过来的，希望能有好ending吧。\r\n\r\n之后也就是忙了一个月上面说的爬虫，总共也有爬下百g的图片和数据吧。后来觉得这是个耗时不讨好的活（爬下来的数据不是给我自己用，也没报酬）便不干了。\r\n\r\n11，12月，事情不多每天水水，琢磨着找个实习罢，很幸运还能有内推机会，参加了网易前端面试，虽然没过，然后又来到了现在所在公司，做着python后端和数据处理。虽然都以前端名义投的简历，当时也没多想具体找什么工作，没有强求吧。现在看来其实也没什么，自身的进步在于自身而不在于所在的公司和工作吧。\r\n\r\n在一家小做互联网金融的公司，接触很多股票方面的、我觉得也算一个了解的机会，本来可能很难接触到的一些，现在可能就在眼前，就看自己去学习。至于后端应该问题不大，对于我还比较轻松。不确定能长久做下去，但在做的时候有进步就好吧，不管是技术还是其他领域。\r\n\r\n2018-01-01\r\n\r\n临山开往杭州的汽车上",
            "post_title": "2017总结咯",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "474-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-1 09:12:09",
            "post_modified_gmt": "2018-1-1 01:12:09",
            "post_content_filtered": "",
            "post_parent": "474",
            "guid": "http://ganjiacheng.cn/blog/?p=475",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "476",
            "post_author": "1",
            "post_date": "2018-1-1 09:13:10",
            "post_date_gmt": "2018-1-1 01:13:10",
            "post_content": "之前的博客多数以技术为主，今后将加入Life板块，用以记录生活，随笔，杂念～\r\n\r\n首篇就做一篇2017年总结，也算有东西写，不ga聊。<!--more-->\r\n\r\n2017上半年，我大二上，还当着宿管会技术部的部长，事情也是一大堆。\r\n\r\n开年印象比较深刻的是我作为主负责人之一的项目在上线前一刻被pass了，这可能也是后来我离开宿管原因之一。\r\n\r\n我找了半个女朋友，咋么这么说呢，至少那时候没有确定关系吧，聊得挺开的，也经常一起吃饭看电影，或许是我自嗨吧。事实如此，到暑假便忙的说话都少了，九月自然分开。对于感情好像没什么多说的，都靠感觉呗。\r\n\r\n上半年技术部中我还在积极的培训与探讨下任的问题，这件事也算在5月份落地。\r\n\r\n技术上由于之前想好了转python，上半年开始接触到一些机器学习的内容，也找到了可靠的图像方面的导师，但下半年还是没有坚持下去，中间也做了一段时间爬虫，这可能不是主要原因，我觉得还是内心平静不下来学习，经常是一个人钻牛角尖，借一句话：便纵有千种风情，更与何人说。\r\n\r\n6月份参加了数学建模校赛，好像二等奖吧，就进了集训队，暑假集训忙的不可开交，七月集训完，我选择了退出，当时的考虑是体验过付出过便好，回报拿奖什么都不在乎，二来我希望在机器学习方面多深入一点。现在回头来看我应该也不会后悔吧，反正都是让我更上一层的，经历越丰富越好。\r\n\r\n下半年，一个比较担心的事情是技术部名义上的存在。没有事情与可替代一定会来，虽然退出了，但毕竟也是一手带过来的，希望能有好ending吧。\r\n\r\n之后也就是忙了一个月上面说的爬虫，总共也有爬下百g的图片和数据吧。后来觉得这是个耗时不讨好的活（爬下来的数据不是给我自己用，也没报酬）便不干了。\r\n\r\n11，12月，事情不多每天水水，琢磨着找个实习罢，很幸运还能有内推机会，参加了网易前端面试，虽然没过，然后又来到了现在所在公司，做着python后端和数据处理。虽然都以前端名义投的简历，当时也没多想具体找什么工作，没有强求吧。现在看来其实也没什么，自身的进步在于自身而不在于所在的公司和工作吧。\r\n\r\n在一家小做互联网金融的公司，接触很多股票方面的、我觉得也算一个了解的机会，本来可能很难接触到的一些，现在可能就在眼前，就看自己去学习。至于后端应该问题不大，对于我还比较轻松。不确定能长久做下去，但在做的时候有进步就好吧，不管是技术还是其他领域。\r\n\r\n2018-01-01\r\n\r\n临山开往杭州的汽车上",
            "post_title": "2017总结咯",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "474-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-1 09:13:10",
            "post_modified_gmt": "2018-1-1 01:13:10",
            "post_content_filtered": "",
            "post_parent": "474",
            "guid": "http://ganjiacheng.cn/blog/?p=476",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "477",
            "post_author": "1",
            "post_date": "2018-1-3 16:49:12",
            "post_date_gmt": "2018-1-3 08:49:12",
            "post_content": "之前由于每次有数据用python画图都要找找其他资料和手册，顾这里做一些总结，用于方便查找与快捷使用！这里主要用matplotlib.pyplot。<!--more-->\r\n<pre>import numpy as np\r\nimport matplotlib.pyplot as plt\r\n#得到测试点\r\nx=np.linspace(-5,5,50)\r\ny=np.sin(x)\r\nz=2*x\r\n\r\n#设置画板大小\r\nplt.figure(figsize=(6,6))\r\n#用plot画图,前两个参数为数据的x和y值\r\n#第三个参数为三个属性的结合：颜色如(b，g，r)+标记如(.，o，,)+连线如(-，--，-.)\r\n#label为线条说明，markersize为标记大小，linewidth为连线大小\r\nplt.plot(x,y,\"go-\",label=\"yyy\",markersize=2,linewidth=1)\r\nplt.plot(x,z,\"b.-\",label=\"zzz\")\r\n\r\n#坐标轴显示范围\r\nplt.axis([-5,5,-5,5])\r\n#设置坐标轴刻度\r\nplt.xticks([-5,0,5])\r\nplt.yticks([-5,0,5],[\"bad\",\"normal\",\"good\"])\r\n#坐标轴说明\r\nplt.xlabel(\"x axis\")\r\nplt.ylabel(\"y axis\")\r\n#图标题\r\nplt.title(\"this is title\")\r\n#显示线条说明\r\nplt.legend()\r\n#显示网格\r\nplt.grid(True)\r\n#做标注\r\nplt.annotate(\"con\",xy=(0,0),xycoords='data',xytext=(+30,-30),textcoords='offset points',fontsize=16,arrowprops=dict(arrowstyle='-&gt;', connectionstyle=\"arc3,rad=.2\"))\r\n#做注释\r\nplt.text(x,y,\"con\",fondict={'size':16,'color':'r'})\r\n#画图\r\nplt.show()</pre>\r\n上面的plot可做散点也可作连线图，要做复杂的散点图也可以用plt.scatter\r\n\r\n下面再试一试常用的柱状图\r\n<pre>import numpy as np\r\nimport matplotlib.pyplot as plt\r\n#得到测试点\r\nx=np.linspace(0,5,10)\r\ny=np.sin(x)\r\nz=2*x\r\n#画柱状图\r\nplt.bar(x,z,width=0.1,bottom=None,align='center')\r\n#画柱状大小的描述\r\nfor i,j in zip(x,z):\r\n    plt.text(i,j,\"%.2f\"%j,ha='center',va='bottom')\r\nplt.show()</pre>\r\n再来尝试绘制一个饼图，这里引用<a href=\"https://www.jianshu.com/p/0a76c94e9db7\">https://www.jianshu.com/p/0a76c94e9db7</a>\r\n<pre>from matplotlib import pyplot as plt \r\n\r\n#调节图形大小，宽，高\r\nplt.figure(figsize=(6,9))\r\n#定义饼状图的标签，标签是列表\r\nlabels = [u'第一部分',u'第二部分',u'第三部分']\r\n#每个标签占多大，会自动去算百分比\r\nsizes = [60,30,10]\r\ncolors = ['red','yellowgreen','lightskyblue']\r\n#将某部分爆炸出来， 使用括号，将第一块分割出来，数值的大小是分割出来的与其他两块的间隙\r\nexplode = (0.05,0,0)\r\n\r\npatches,l_text,p_text = plt.pie(sizes,explode=explode,labels=labels,colors=colors,\r\n labeldistance = 1.1,autopct = '%3.1f%%',shadow = False,\r\n startangle = 90,pctdistance = 0.6)\r\n\r\n#labeldistance，文本的位置离远点有多远，1.1指1.1倍半径的位置\r\n#autopct，圆里面的文本格式，%3.1f%%表示小数有三位，整数有一位的浮点数\r\n#shadow，饼是否有阴影\r\n#startangle，起始角度，0，表示从0开始逆时针转，为第一块。一般选择从90度开始比较好看\r\n#pctdistance，百分比的text离圆心的距离\r\n#patches, l_texts, p_texts，为了得到饼图的返回值，p_texts饼图内部文本的，l_texts饼图外label的文本\r\n\r\n#改变文本的大小\r\n#方法是把每一个text遍历。调用set_size方法设置它的属性\r\nfor t in l_text:\r\n    t.set_size=(30)\r\nfor t in p_text:\r\n    t.set_size=(20)\r\n# 设置x，y轴刻度一致，这样饼图才能是圆的\r\nplt.axis('equal')\r\nplt.legend()\r\nplt.show()</pre>\r\n先用matplotlib做这些基础的图形，之后亦可用seaborn做些更好看的。",
            "post_title": "python数据分析之基础画图",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "python%e6%95%b0%e6%8d%ae%e5%88%86%e6%9e%90%e4%b9%8b%e5%9f%ba%e7%a1%80%e7%94%bb%e5%9b%be",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-3 16:49:12",
            "post_modified_gmt": "2018-1-3 08:49:12",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=477",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "478",
            "post_author": "1",
            "post_date": "2018-1-3 15:43:46",
            "post_date_gmt": "2018-1-3 07:43:46",
            "post_content": "之前由于每次有数据用python画图都要找找其他资料和手册，顾这里做一些总结，用于方便查找与快捷使用！这里主要用matplotlib.pyplot。\r\n<pre>import numpy as np\r\nimport matplotlib.pyplot as plt\r\n#得到测试点\r\nx=np.linspace(-5,5,50)\r\ny=np.sin(x)\r\nz=2*x\r\n\r\n#用plot画图,前两个参数为数据的x和y值\r\n#第三个参数为三个属性的结合：颜色如(b，g，r)+标记如(.，o，,)+连线如(-，--，-.)\r\n#label为线条说明，markersize为标记大小，linewidth为连线大小\r\nplt.plot(x,y,\"go-\",label=\"yyy\",markersize=2,linewidth=1)\r\nplt.plot(x,z,\"b.-\",label=\"zzz\")\r\n\r\n#坐标轴显示范围\r\nplt.axis([-5,5,-5,5])\r\n#设置坐标轴刻度\r\nplt.xticks([-5,0,5])\r\nplt.yticks([-5,0,5],[\"bad\",\"normal\",\"good\"])\r\n#坐标轴说明\r\nplt.xlabel(\"x axis\")\r\nplt.ylabel(\"y axis\")\r\n#图标题\r\nplt.title(\"this is title\")\r\n#显示线条说明\r\nplt.legend()\r\n#显示网格\r\nplt.grid(True)\r\n#画图\r\nplt.show()</pre>\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "python数据分析之画图",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "477-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-3 15:43:46",
            "post_modified_gmt": "2018-1-3 07:43:46",
            "post_content_filtered": "",
            "post_parent": "477",
            "guid": "http://ganjiacheng.cn/blog/?p=478",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "479",
            "post_author": "1",
            "post_date": "2018-1-3 16:49:12",
            "post_date_gmt": "2018-1-3 08:49:12",
            "post_content": "之前由于每次有数据用python画图都要找找其他资料和手册，顾这里做一些总结，用于方便查找与快捷使用！这里主要用matplotlib.pyplot。<!--more-->\r\n<pre>import numpy as np\r\nimport matplotlib.pyplot as plt\r\n#得到测试点\r\nx=np.linspace(-5,5,50)\r\ny=np.sin(x)\r\nz=2*x\r\n\r\n#设置画板大小\r\nplt.figure(figsize=(6,6))\r\n#用plot画图,前两个参数为数据的x和y值\r\n#第三个参数为三个属性的结合：颜色如(b，g，r)+标记如(.，o，,)+连线如(-，--，-.)\r\n#label为线条说明，markersize为标记大小，linewidth为连线大小\r\nplt.plot(x,y,\"go-\",label=\"yyy\",markersize=2,linewidth=1)\r\nplt.plot(x,z,\"b.-\",label=\"zzz\")\r\n\r\n#坐标轴显示范围\r\nplt.axis([-5,5,-5,5])\r\n#设置坐标轴刻度\r\nplt.xticks([-5,0,5])\r\nplt.yticks([-5,0,5],[\"bad\",\"normal\",\"good\"])\r\n#坐标轴说明\r\nplt.xlabel(\"x axis\")\r\nplt.ylabel(\"y axis\")\r\n#图标题\r\nplt.title(\"this is title\")\r\n#显示线条说明\r\nplt.legend()\r\n#显示网格\r\nplt.grid(True)\r\n#做标注\r\nplt.annotate(\"con\",xy=(0,0),xycoords='data',xytext=(+30,-30),textcoords='offset points',fontsize=16,arrowprops=dict(arrowstyle='-&gt;', connectionstyle=\"arc3,rad=.2\"))\r\n#做注释\r\nplt.text(x,y,\"con\",fondict={'size':16,'color':'r'})\r\n#画图\r\nplt.show()</pre>\r\n上面的plot可做散点也可作连线图，要做复杂的散点图也可以用plt.scatter\r\n\r\n下面再试一试常用的柱状图\r\n<pre>import numpy as np\r\nimport matplotlib.pyplot as plt\r\n#得到测试点\r\nx=np.linspace(0,5,10)\r\ny=np.sin(x)\r\nz=2*x\r\n#画柱状图\r\nplt.bar(x,z,width=0.1,bottom=None,align='center')\r\n#画柱状大小的描述\r\nfor i,j in zip(x,z):\r\n    plt.text(i,j,\"%.2f\"%j,ha='center',va='bottom')\r\nplt.show()</pre>\r\n再来尝试绘制一个饼图，这里引用<a href=\"https://www.jianshu.com/p/0a76c94e9db7\">https://www.jianshu.com/p/0a76c94e9db7</a>\r\n<pre>from matplotlib import pyplot as plt \r\n\r\n#调节图形大小，宽，高\r\nplt.figure(figsize=(6,9))\r\n#定义饼状图的标签，标签是列表\r\nlabels = [u'第一部分',u'第二部分',u'第三部分']\r\n#每个标签占多大，会自动去算百分比\r\nsizes = [60,30,10]\r\ncolors = ['red','yellowgreen','lightskyblue']\r\n#将某部分爆炸出来， 使用括号，将第一块分割出来，数值的大小是分割出来的与其他两块的间隙\r\nexplode = (0.05,0,0)\r\n\r\npatches,l_text,p_text = plt.pie(sizes,explode=explode,labels=labels,colors=colors,\r\n labeldistance = 1.1,autopct = '%3.1f%%',shadow = False,\r\n startangle = 90,pctdistance = 0.6)\r\n\r\n#labeldistance，文本的位置离远点有多远，1.1指1.1倍半径的位置\r\n#autopct，圆里面的文本格式，%3.1f%%表示小数有三位，整数有一位的浮点数\r\n#shadow，饼是否有阴影\r\n#startangle，起始角度，0，表示从0开始逆时针转，为第一块。一般选择从90度开始比较好看\r\n#pctdistance，百分比的text离圆心的距离\r\n#patches, l_texts, p_texts，为了得到饼图的返回值，p_texts饼图内部文本的，l_texts饼图外label的文本\r\n\r\n#改变文本的大小\r\n#方法是把每一个text遍历。调用set_size方法设置它的属性\r\nfor t in l_text:\r\n    t.set_size=(30)\r\nfor t in p_text:\r\n    t.set_size=(20)\r\n# 设置x，y轴刻度一致，这样饼图才能是圆的\r\nplt.axis('equal')\r\nplt.legend()\r\nplt.show()</pre>\r\n先用matplotlib做这些基础的图形，之后亦可用seaborn做些更好看的。",
            "post_title": "python数据分析之基础画图",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "477-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-3 16:49:12",
            "post_modified_gmt": "2018-1-3 08:49:12",
            "post_content_filtered": "",
            "post_parent": "477",
            "guid": "http://ganjiacheng.cn/blog/?p=479",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "481",
            "post_author": "1",
            "post_date": "2018-4-7 12:12:51",
            "post_date_gmt": "2018-4-7 04:12:51",
            "post_content": "包括，批量重命名，待更新。。。\n\n1.批量重命名  changeName.py\n<pre>import os\nf=os.listdir(\"./\")\nf.remove(\"changeName.py\")\nj=0\nfor i in f:\n os.renames(i,str(j)+\".jpg\")\n j+=1</pre>\n2.实现数组next并循环---js版\n<pre>(now+1)%array.length</pre>\n3.python字典自动初始化为0\n<pre>from collections import defaultdict\nd=defaultdict(int)\nd['count']+=1</pre>\n4.linux+windows 查看端口监听并kill\n<pre>#linux\nnetstat -apn|grep 8000\n或者\nps -aux|grep 8000\nkill -9 pid\n\n#windows\nnetstat -ano|findstr 3000\nnetstat -ano</pre>\n5.linux开启防火墙\n<pre>firewall-cmd --zone=public --add-port=8892/tcp --permanent\nsystemctl restart firewalld</pre>\n6.linux下python后台运行\n<pre>nohup python -u filename.py &gt; filename.out 2&gt;&amp;1 &amp;\ntail -f filename.out</pre>\n7.git add，git commit提交错误\n<pre>git status\ngit reset HEAD</pre>\n<pre>git log\ngit reset --soft commit_id</pre>\n如果使用hard reset 了\n<pre>git reflog\ngit reset</pre>",
            "post_title": "常用编程小操作",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "132-autosave-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-4-7 12:12:51",
            "post_modified_gmt": "2018-4-7 04:12:51",
            "post_content_filtered": "",
            "post_parent": "132",
            "guid": "http://ganjiacheng.cn/blog/?p=481",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "482",
            "post_author": "1",
            "post_date": "2018-1-4 14:11:05",
            "post_date_gmt": "2018-1-4 06:11:05",
            "post_content": "包括，批量重命名，待更新。。。\r\n\r\n1.批量重命名  changeName.py\r\n<pre>import os\r\nf=os.listdir(\"./\")\r\nf.remove(\"changeName.py\")\r\nj=0\r\nfor i in f:\r\n os.renames(i,str(j)+\".jpg\")\r\n j+=1</pre>\r\n2.实现数组next并循环---js版\r\n<pre>(now+1)%array.length</pre>\r\n3.python字典自动初始化为0\r\n<pre>from collections import defaultdict\r\nd=defaultdict(int)\r\nd['count']+=1</pre>",
            "post_title": "常用编程小操作",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "132-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-4 14:11:05",
            "post_modified_gmt": "2018-1-4 06:11:05",
            "post_content_filtered": "",
            "post_parent": "132",
            "guid": "http://ganjiacheng.cn/blog/?p=482",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "483",
            "post_author": "1",
            "post_date": "2018-1-4 14:12:46",
            "post_date_gmt": "2018-1-4 06:12:46",
            "post_content": "我叫甘家城，来自宁波余姚，目前是杭电的一名大三学生，作为一个电子专业的学生，走过前端，也看过最好的php\n<h5>All of life is an act of letting go, but what hurts the most is not taking a moment to say goodbye.</h5>\n&nbsp;\n\n私邮：935669873@qq.com\n\n&nbsp;",
            "post_title": "个人简介",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "2-autosave-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-4 14:12:46",
            "post_modified_gmt": "2018-1-4 06:12:46",
            "post_content_filtered": "",
            "post_parent": "2",
            "guid": "http://ganjiacheng.cn/blog/?p=483",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "484",
            "post_author": "1",
            "post_date": "2018-1-4 14:13:52",
            "post_date_gmt": "2018-1-4 06:13:52",
            "post_content": "我叫甘家城，来自宁波余姚，目前是杭电的一名大三学生，作为一个电子专业的学生，路过前端的崛起，也看过“最好”的php，目前写着苦短的python，咯咯咯。\r\n<h5>All of life is an act of letting go, but what hurts the most is not taking a moment to say goodbye.</h5>\r\n&nbsp;\r\n\r\n私邮：935669873@qq.com\r\n\r\n&nbsp;",
            "post_title": "个人简介",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "2-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-4 14:13:52",
            "post_modified_gmt": "2018-1-4 06:13:52",
            "post_content_filtered": "",
            "post_parent": "2",
            "guid": "http://ganjiacheng.cn/blog/?p=484",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "485",
            "post_author": "1",
            "post_date": "2018-2-2 11:41:18",
            "post_date_gmt": "0-0-0 00:00:00",
            "post_content": "value_counts()  Series 用于统计数据频率\n\nsort_index(axis=0/1行或列,by=列索引)  DataFrame 排序\n\nnp.where(筛选条件，条件True时的值，False时的值)\n\nreindex(index=行索引,columns=列索引,fill_value=填充值)\n\niloc[行索引(索引，数组，切片)]\n\nadd(df,fill_value=0)     sub()     div()     mul()\n\ncumsum()累加\n\ndescribe()统计汇总\n\ndiff()一阶差分（前后两个数的差）\n\npct_change()前后两个数差的百分比\n\nSeries.corr(Series)相关系数     DataFrame.corrwith(Series)一列与每列相关系数\n\nSeries.cov(Series)协方差",
            "post_title": "python数据分析 pandas小记",
            "post_excerpt": "",
            "post_status": "draft",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-2-2 11:41:18",
            "post_modified_gmt": "2018-2-2 03:41:18",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=485",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "486",
            "post_author": "1",
            "post_date": "2018-1-4 14:31:15",
            "post_date_gmt": "2018-1-4 06:31:15",
            "post_content": "value_counts()\r\n\r\nSeries使用，用于统计数据频率\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "python数据分析小记",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "485-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-4 14:31:15",
            "post_modified_gmt": "2018-1-4 06:31:15",
            "post_content_filtered": "",
            "post_parent": "485",
            "guid": "http://ganjiacheng.cn/blog/?p=486",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "487",
            "post_author": "1",
            "post_date": "2018-1-4 15:56:22",
            "post_date_gmt": "2018-1-4 07:56:22",
            "post_content": "value_counts()  Series使用，用于统计数据频率\r\n\r\nsort_index()  排序\r\n\r\nnp.where(筛选条件，条件True时的值，False时的值)\r\n\r\n&nbsp;",
            "post_title": "python数据分析小记",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "485-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-4 15:56:22",
            "post_modified_gmt": "2018-1-4 07:56:22",
            "post_content_filtered": "",
            "post_parent": "485",
            "guid": "http://ganjiacheng.cn/blog/?p=487",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "488",
            "post_author": "1",
            "post_date": "2018-1-4 16:36:04",
            "post_date_gmt": "2018-1-4 08:36:04",
            "post_content": "value_counts()  Series 用于统计数据频率\r\n\r\nsort_index(axis=0)  DataFrame 排序\r\n\r\nnp.where(筛选条件，条件True时的值，False时的值)\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "python数据分析小记",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "485-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-4 16:36:04",
            "post_modified_gmt": "2018-1-4 08:36:04",
            "post_content_filtered": "",
            "post_parent": "485",
            "guid": "http://ganjiacheng.cn/blog/?p=488",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "489",
            "post_author": "1",
            "post_date": "2018-1-5 14:05:16",
            "post_date_gmt": "2018-1-5 06:05:16",
            "post_content": "value_counts()  Series 用于统计数据频率\r\n\r\nsort_index(axis=0/1行或列,by=列索引)  DataFrame 排序\r\n\r\nnp.where(筛选条件，条件True时的值，False时的值)\r\n\r\nreindex(index=行索引,columns=列索引,fill_value=填充值)\r\n\r\niloc[行索引(索引，数组，切片)]\r\n\r\nadd(df,fill_value=0)     sub()     div()     mul()\r\n\r\ncumsum()累加\r\n\r\ndescribe()统计汇总\r\n\r\ndiff()一阶差分（前后两个数的差）\r\n\r\npct_change()前后两个数差的百分比\r\n\r\nSeries.corr(Series)相关系数     DataFrame.corrwith(Series)一列与每列相关系数\r\n\r\nSeries.cov(Series)协方差",
            "post_title": "python数据分析小记",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "485-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-5 14:05:16",
            "post_modified_gmt": "2018-1-5 06:05:16",
            "post_content_filtered": "",
            "post_parent": "485",
            "guid": "http://ganjiacheng.cn/blog/?p=489",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "491",
            "post_author": "1",
            "post_date": "2018-1-19 14:38:40",
            "post_date_gmt": "2018-1-19 06:38:40",
            "post_content": "包括，批量重命名，待更新。。。\r\n\r\n1.批量重命名  changeName.py\r\n<pre>import os\r\nf=os.listdir(\"./\")\r\nf.remove(\"changeName.py\")\r\nj=0\r\nfor i in f:\r\n os.renames(i,str(j)+\".jpg\")\r\n j+=1</pre>\r\n2.实现数组next并循环---js版\r\n<pre>(now+1)%array.length</pre>\r\n3.python字典自动初始化为0\r\n<pre>from collections import defaultdict\r\nd=defaultdict(int)\r\nd['count']+=1</pre>\r\n4.linux 查看端口监听并kill\r\n<pre>netstat -apn|grep 8000\r\nkill -9 8000</pre>",
            "post_title": "常用编程小操作",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "132-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-19 14:38:40",
            "post_modified_gmt": "2018-1-19 06:38:40",
            "post_content_filtered": "",
            "post_parent": "132",
            "guid": "http://ganjiacheng.cn/blog/?p=491",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "493",
            "post_author": "1",
            "post_date": "2018-1-20 10:22:59",
            "post_date_gmt": "0-0-0 00:00:00",
            "post_content": "",
            "post_title": "用神经网络玩五子棋",
            "post_excerpt": "",
            "post_status": "draft",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-20 10:22:59",
            "post_modified_gmt": "2018-1-20 02:22:59",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=493",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "494",
            "post_author": "1",
            "post_date": "2018-1-20 10:22:59",
            "post_date_gmt": "2018-1-20 02:22:59",
            "post_content": "",
            "post_title": "用神经网络玩五子棋",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "493-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-20 10:22:59",
            "post_modified_gmt": "2018-1-20 02:22:59",
            "post_content_filtered": "",
            "post_parent": "493",
            "guid": "http://ganjiacheng.cn/blog/?p=494",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "496",
            "post_author": "1",
            "post_date": "2018-1-22 19:40:21",
            "post_date_gmt": "0-0-0 00:00:00",
            "post_content": "为什么要谈此呢？一来心浮气躁的我总不能好好的转换于这三者之间，二来理清关系能位将来做规划埋下伏笔。\r\n\r\n谈什么呢？主要以我自己的理解为主，穿插一些经历、事迹、见闻。主观因素比较多，其他人理性观看。\r\n\r\n余业，我这里可以理解为副业或者阶段性职业。职业，此处理解为为你带来稳定收入来源的工作（不考虑炒股等高风险当职业的）。事业，目前理解为能为之奋斗一生的事情，看起来很高大上，其实源于内心应该每个人都会有，只是为世事而“忘了”。\r\n\r\n我这里不把业当成现实意义上的工作，而是穿插于人一生所需做的事。甚至如学业，对于我自己的一生来说，我只能把它当做余业。\r\n\r\n三个业并无先后重要关系，都是相辅相成吧。\r\n\r\n余业，很大一部分余业是来自于兴趣，但兴趣并不能让你维持太久，因此过几天或几个月，找个借口就可以轻易抛弃。比如我常常会对音乐美术或者古文之类的涌起一股热浪，买个吉他，买本素描，买卷古文我都干过，但都不超过一个月，抛到了脑后，该干啥干啥去咯。我并不会后悔干这些事情，反而觉得年轻时能抓住自己偶尔燃气的热情是比较难能可贵的。\r\n\r\n还有也就如之前说的学业等人生看似必须完成的“工作”，但我目前看来懂得了做人才是最重要的，其他其实都不是必须的，我该有选择学什么的权利，但仿佛我是大学成年后才有萌发的这个意识。阿爸阿妈常常劝我大学该好好完成学业，然而我却早早找了实习，我觉得这两个都算一个余业，只是学到了不同的东西，对于我并无太多不同，然一个是自己选的，另一个则是默认的。\r\n\r\n有时候很多大学生会选择兼职，也算一种余业，但我认为大多数兼职只是能让未接触社会的接触到一点工作的苦，然后觉得学习好好，对于接触过苦的人，兼职也无太大意义，不如直接实习或工作，法律对兼职保护远不如上面两种。\r\n\r\n职业，如果以一份固定时间稳定的工作来定，我做程序员来说肯定不是，一开始我想着前端，而前端的发展快的眼花缭乱，工作是要实时赶得上脚步的\r\n\r\n&nbsp;",
            "post_title": "谈谈余业，职业与事业（阶段性更新）",
            "post_excerpt": "",
            "post_status": "draft",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-22 19:40:21",
            "post_modified_gmt": "2018-1-22 11:40:21",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=496",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "497",
            "post_author": "1",
            "post_date": "2018-1-21 10:23:45",
            "post_date_gmt": "2018-1-21 02:23:45",
            "post_content": "",
            "post_title": "谈谈职业与事业",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "496-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-21 10:23:45",
            "post_modified_gmt": "2018-1-21 02:23:45",
            "post_content_filtered": "",
            "post_parent": "496",
            "guid": "http://ganjiacheng.cn/blog/?p=497",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "498",
            "post_author": "1",
            "post_date": "2018-1-21 10:25:27",
            "post_date_gmt": "2018-1-21 02:25:27",
            "post_content": "",
            "post_title": "谈谈兴趣，职业与事业",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "496-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-21 10:25:27",
            "post_modified_gmt": "2018-1-21 02:25:27",
            "post_content_filtered": "",
            "post_parent": "496",
            "guid": "http://ganjiacheng.cn/blog/?p=498",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "500",
            "post_author": "1",
            "post_date": "2018-1-21 11:43:49",
            "post_date_gmt": "2018-1-21 03:43:49",
            "post_content": "",
            "post_title": "谈谈余业，职业与事业",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "496-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-21 11:43:49",
            "post_modified_gmt": "2018-1-21 03:43:49",
            "post_content_filtered": "",
            "post_parent": "496",
            "guid": "http://ganjiacheng.cn/blog/?p=500",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "501",
            "post_author": "1",
            "post_date": "2018-1-21 12:22:10",
            "post_date_gmt": "2018-1-21 04:22:10",
            "post_content": "",
            "post_title": "谈谈余业，职业与事业（阶段性更新）",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "496-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-21 12:22:10",
            "post_modified_gmt": "2018-1-21 04:22:10",
            "post_content_filtered": "",
            "post_parent": "496",
            "guid": "http://ganjiacheng.cn/blog/?p=501",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "504",
            "post_author": "1",
            "post_date": "2018-1-22 16:21:05",
            "post_date_gmt": "2018-1-22 08:21:05",
            "post_content": "为什么要谈此呢？一来心浮气躁的我总不能好好的转换于这三者之间，二来理清关系能位将来做规划埋下伏笔。\r\n\r\n谈什么呢？主要以我自己的理解为主，穿插一些经历、事迹、见闻。主观因素比较多，其他人理性观看。\r\n\r\n&nbsp;",
            "post_title": "谈谈余业，职业与事业（阶段性更新）",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "496-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-22 16:21:05",
            "post_modified_gmt": "2018-1-22 08:21:05",
            "post_content_filtered": "",
            "post_parent": "496",
            "guid": "http://ganjiacheng.cn/blog/?p=504",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "505",
            "post_author": "1",
            "post_date": "2018-1-22 16:24:52",
            "post_date_gmt": "2018-1-22 08:24:52",
            "post_content": "为什么要谈此呢？一来心浮气躁的我总不能好好的转换于这三者之间，二来理清关系能位将来做规划埋下伏笔。\r\n\r\n谈什么呢？主要以我自己的理解为主，穿插一些经历、事迹、见闻。主观因素比较多，其他人理性观看。\r\n\r\n余业，我这里亦可以理解为副业或者阶段性职业。职业，此处理解为为你带来稳定收入来源的工作（不考虑炒股等高风险当职业的）。事业，目前理解为",
            "post_title": "谈谈余业，职业与事业（阶段性更新）",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "496-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-22 16:24:52",
            "post_modified_gmt": "2018-1-22 08:24:52",
            "post_content_filtered": "",
            "post_parent": "496",
            "guid": "http://ganjiacheng.cn/blog/?p=505",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "506",
            "post_author": "1",
            "post_date": "2018-1-22 16:28:19",
            "post_date_gmt": "2018-1-22 08:28:19",
            "post_content": "为什么要谈此呢？一来心浮气躁的我总不能好好的转换于这三者之间，二来理清关系能位将来做规划埋下伏笔。\r\n\r\n谈什么呢？主要以我自己的理解为主，穿插一些经历、事迹、见闻。主观因素比较多，其他人理性观看。\r\n\r\n余业，我这里亦可以理解为副业或者阶段性职业。职业，此处理解为为你带来稳定收入来源的工作（不考虑炒股等高风险当职业的）。事业，目前理解为能为之无偿奋斗一生的事情，看起来很高大上，其实源于内心应该每个人都会有，只是为世事而忘了。",
            "post_title": "谈谈余业，职业与事业（阶段性更新）",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "496-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-22 16:28:19",
            "post_modified_gmt": "2018-1-22 08:28:19",
            "post_content_filtered": "",
            "post_parent": "496",
            "guid": "http://ganjiacheng.cn/blog/?p=506",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "507",
            "post_author": "1",
            "post_date": "2018-1-22 16:28:45",
            "post_date_gmt": "2018-1-22 08:28:45",
            "post_content": "为什么要谈此呢？一来心浮气躁的我总不能好好的转换于这三者之间，二来理清关系能位将来做规划埋下伏笔。\r\n\r\n谈什么呢？主要以我自己的理解为主，穿插一些经历、事迹、见闻。主观因素比较多，其他人理性观看。\r\n\r\n余业，我这里亦可以理解为副业或者阶段性职业。职业，此处理解为为你带来稳定收入来源的工作（不考虑炒股等高风险当职业的）。事业，目前理解为能为之无偿奋斗一生的事情，看起来很高大上，其实源于内心应该每个人都会有，只是为世事而“忘了”。",
            "post_title": "谈谈余业，职业与事业（阶段性更新）",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "496-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-22 16:28:45",
            "post_modified_gmt": "2018-1-22 08:28:45",
            "post_content_filtered": "",
            "post_parent": "496",
            "guid": "http://ganjiacheng.cn/blog/?p=507",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "508",
            "post_author": "1",
            "post_date": "2018-1-22 16:30:29",
            "post_date_gmt": "2018-1-22 08:30:29",
            "post_content": "为什么要谈此呢？一来心浮气躁的我总不能好好的转换于这三者之间，二来理清关系能位将来做规划埋下伏笔。\r\n\r\n谈什么呢？主要以我自己的理解为主，穿插一些经历、事迹、见闻。主观因素比较多，其他人理性观看。\r\n\r\n余业，我这里亦可以理解为副业或者阶段性职业。职业，此处理解为为你带来稳定收入来源的工作（不考虑炒股等高风险当职业的）。事业，目前理解为能为之无偿奋斗一生的事情，看起来很高大上，其实源于内心应该每个人都会有，只是为世事而“忘了”。\r\n\r\n&nbsp;",
            "post_title": "谈谈余业，职业与事业（阶段性更新）",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "496-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-22 16:30:29",
            "post_modified_gmt": "2018-1-22 08:30:29",
            "post_content_filtered": "",
            "post_parent": "496",
            "guid": "http://ganjiacheng.cn/blog/?p=508",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "509",
            "post_author": "1",
            "post_date": "2018-1-22 16:31:13",
            "post_date_gmt": "2018-1-22 08:31:13",
            "post_content": "为什么要谈此呢？一来心浮气躁的我总不能好好的转换于这三者之间，二来理清关系能位将来做规划埋下伏笔。\r\n\r\n谈什么呢？主要以我自己的理解为主，穿插一些经历、事迹、见闻。主观因素比较多，其他人理性观看。\r\n\r\n余业，我这里可以理解为副业或者阶段性职业。职业，此处理解为为你带来稳定收入来源的工作（不考虑炒股等高风险当职业的）。事业，目前理解为能为之无偿奋斗一生的事情，看起来很高大上，其实源于内心应该每个人都会有，只是为世事而“忘了”。\r\n\r\n&nbsp;",
            "post_title": "谈谈余业，职业与事业（阶段性更新）",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "496-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-22 16:31:13",
            "post_modified_gmt": "2018-1-22 08:31:13",
            "post_content_filtered": "",
            "post_parent": "496",
            "guid": "http://ganjiacheng.cn/blog/?p=509",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "510",
            "post_author": "1",
            "post_date": "2018-1-22 16:45:37",
            "post_date_gmt": "2018-1-22 08:45:37",
            "post_content": "为什么要谈此呢？一来心浮气躁的我总不能好好的转换于这三者之间，二来理清关系能位将来做规划埋下伏笔。\r\n\r\n谈什么呢？主要以我自己的理解为主，穿插一些经历、事迹、见闻。主观因素比较多，其他人理性观看。\r\n\r\n余业，我这里可以理解为副业或者阶段性职业。职业，此处理解为为你带来稳定收入来源的工作（不考虑炒股等高风险当职业的）。事业，目前理解为能为之奋斗一生的事情，看起来很高大上，其实源于内心应该每个人都会有，只是为世事而“忘了”。\r\n\r\n我这里不把业当成现实意义上的工作，而是穿插于人一生所需做的事。甚至如学业，对于我自己的一生来说，我只能把它当做余业。\r\n\r\n三个业并无先后重要关系，都是相辅相成吧。\r\n\r\n余业，",
            "post_title": "谈谈余业，职业与事业（阶段性更新）",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "496-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-22 16:45:37",
            "post_modified_gmt": "2018-1-22 08:45:37",
            "post_content_filtered": "",
            "post_parent": "496",
            "guid": "http://ganjiacheng.cn/blog/?p=510",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "511",
            "post_author": "1",
            "post_date": "2018-1-22 16:57:10",
            "post_date_gmt": "2018-1-22 08:57:10",
            "post_content": "为什么要谈此呢？一来心浮气躁的我总不能好好的转换于这三者之间，二来理清关系能位将来做规划埋下伏笔。\r\n\r\n谈什么呢？主要以我自己的理解为主，穿插一些经历、事迹、见闻。主观因素比较多，其他人理性观看。\r\n\r\n余业，我这里可以理解为副业或者阶段性职业。职业，此处理解为为你带来稳定收入来源的工作（不考虑炒股等高风险当职业的）。事业，目前理解为能为之奋斗一生的事情，看起来很高大上，其实源于内心应该每个人都会有，只是为世事而“忘了”。\r\n\r\n我这里不把业当成现实意义上的工作，而是穿插于人一生所需做的事。甚至如学业，对于我自己的一生来说，我只能把它当做余业。\r\n\r\n三个业并无先后重要关系，都是相辅相成吧。\r\n\r\n余业，很大一部分余业是来自于兴趣，但兴趣并不能让你维持太久，因此过几天或几个月，找个借口就可以轻易抛弃。我常常会对音乐美术或者古文之类的涌起一股热浪，买个吉他，买本素描，买卷古文我都干过，但都不超过一个月，抛到了脑后，该干啥干啥去咯。\r\n\r\n还有也就如之前说的学业等人生看似必须完成的“工作”，但我看来懂得了做人才是最重要的，其他其实都不是必须的，我该有选择学什么的权利，但仿佛我是大学成年后才有的这个意识",
            "post_title": "谈谈余业，职业与事业（阶段性更新）",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "496-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-22 16:57:10",
            "post_modified_gmt": "2018-1-22 08:57:10",
            "post_content_filtered": "",
            "post_parent": "496",
            "guid": "http://ganjiacheng.cn/blog/?p=511",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "512",
            "post_author": "1",
            "post_date": "2018-1-22 19:30:24",
            "post_date_gmt": "2018-1-22 11:30:24",
            "post_content": "为什么要谈此呢？一来心浮气躁的我总不能好好的转换于这三者之间，二来理清关系能位将来做规划埋下伏笔。\r\n\r\n谈什么呢？主要以我自己的理解为主，穿插一些经历、事迹、见闻。主观因素比较多，其他人理性观看。\r\n\r\n余业，我这里可以理解为副业或者阶段性职业。职业，此处理解为为你带来稳定收入来源的工作（不考虑炒股等高风险当职业的）。事业，目前理解为能为之奋斗一生的事情，看起来很高大上，其实源于内心应该每个人都会有，只是为世事而“忘了”。\r\n\r\n我这里不把业当成现实意义上的工作，而是穿插于人一生所需做的事。甚至如学业，对于我自己的一生来说，我只能把它当做余业。\r\n\r\n三个业并无先后重要关系，都是相辅相成吧。\r\n\r\n余业，很大一部分余业是来自于兴趣，但兴趣并不能让你维持太久，因此过几天或几个月，找个借口就可以轻易抛弃。比如我常常会对音乐美术或者古文之类的涌起一股热浪，买个吉他，买本素描，买卷古文我都干过，但都不超过一个月，抛到了脑后，该干啥干啥去咯。我并不会后悔干这些事情，反而觉得年轻时能抓住自己偶尔燃气的热情是比较难能可贵的。\r\n\r\n还有也就如之前说的学业等人生看似必须完成的“工作”，但我目前看来懂得了做人才是最重要的，其他其实都不是必须的，我该有选择学什么的权利，但仿佛我是大学成年后才有萌发的这个意识。阿爸阿妈常常劝我大学该好好完成学业，然而我却早早找了实习，我觉得这两个都算一个余业，只是学到了不同的东西，对于我并无太多不同，然一个是自己选的，另一个则是默认的。\r\n\r\n有时候很多大学生会选择兼职，也算一种余业，但我认为大多数兼职只是能让未接触社会的接触到一点工作的苦，然后觉得学习好好，对于接触过苦的人，兼职也无太大意义，不如直接实习或工作，法律对兼职保护远不如上面两种。\r\n\r\n职业，\r\n\r\n&nbsp;",
            "post_title": "谈谈余业，职业与事业（阶段性更新）",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "496-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-22 19:30:24",
            "post_modified_gmt": "2018-1-22 11:30:24",
            "post_content_filtered": "",
            "post_parent": "496",
            "guid": "http://ganjiacheng.cn/blog/?p=512",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "513",
            "post_author": "1",
            "post_date": "2018-1-22 19:40:21",
            "post_date_gmt": "2018-1-22 11:40:21",
            "post_content": "为什么要谈此呢？一来心浮气躁的我总不能好好的转换于这三者之间，二来理清关系能位将来做规划埋下伏笔。\r\n\r\n谈什么呢？主要以我自己的理解为主，穿插一些经历、事迹、见闻。主观因素比较多，其他人理性观看。\r\n\r\n余业，我这里可以理解为副业或者阶段性职业。职业，此处理解为为你带来稳定收入来源的工作（不考虑炒股等高风险当职业的）。事业，目前理解为能为之奋斗一生的事情，看起来很高大上，其实源于内心应该每个人都会有，只是为世事而“忘了”。\r\n\r\n我这里不把业当成现实意义上的工作，而是穿插于人一生所需做的事。甚至如学业，对于我自己的一生来说，我只能把它当做余业。\r\n\r\n三个业并无先后重要关系，都是相辅相成吧。\r\n\r\n余业，很大一部分余业是来自于兴趣，但兴趣并不能让你维持太久，因此过几天或几个月，找个借口就可以轻易抛弃。比如我常常会对音乐美术或者古文之类的涌起一股热浪，买个吉他，买本素描，买卷古文我都干过，但都不超过一个月，抛到了脑后，该干啥干啥去咯。我并不会后悔干这些事情，反而觉得年轻时能抓住自己偶尔燃气的热情是比较难能可贵的。\r\n\r\n还有也就如之前说的学业等人生看似必须完成的“工作”，但我目前看来懂得了做人才是最重要的，其他其实都不是必须的，我该有选择学什么的权利，但仿佛我是大学成年后才有萌发的这个意识。阿爸阿妈常常劝我大学该好好完成学业，然而我却早早找了实习，我觉得这两个都算一个余业，只是学到了不同的东西，对于我并无太多不同，然一个是自己选的，另一个则是默认的。\r\n\r\n有时候很多大学生会选择兼职，也算一种余业，但我认为大多数兼职只是能让未接触社会的接触到一点工作的苦，然后觉得学习好好，对于接触过苦的人，兼职也无太大意义，不如直接实习或工作，法律对兼职保护远不如上面两种。\r\n\r\n职业，如果以一份固定时间稳定的工作来定，我做程序员来说肯定不是，一开始我想着前端，而前端的发展快的眼花缭乱，工作是要实时赶得上脚步的\r\n\r\n&nbsp;",
            "post_title": "谈谈余业，职业与事业（阶段性更新）",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "496-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-22 19:40:21",
            "post_modified_gmt": "2018-1-22 11:40:21",
            "post_content_filtered": "",
            "post_parent": "496",
            "guid": "http://ganjiacheng.cn/blog/?p=513",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "515",
            "post_author": "1",
            "post_date": "2018-1-26 11:31:35",
            "post_date_gmt": "2018-1-26 03:31:35",
            "post_content": "看AlphaZero的时候看到这个mcts，因为需要用他来产生棋局进行训练。比较神奇，就小小探究一下。这边做一个五子棋mcts AI。<!--more-->\r\n\r\nmcts按我目前的理解也就是在目前的情况下（根节点），随机产生下一步的节点，之后进行随机模拟至产生一个结果，把结果反馈于当前节点与之前的节点，这样模拟n次以后，得到根节点的下一步的各个节点的A/B，A为结果获胜的次数，B为访问次数。<img class=\"\" src=\"https://upload-images.jianshu.io/upload_images/42741-5399e14c51cb1521.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/200\" data-original-src=\"//upload-images.jianshu.io/upload_images/42741-5399e14c51cb1521.png\" data-original-width=\"200\" data-original-height=\"72\" data-original-format=\"image/png\" data-original-filesize=\"6109\" />用公式计算就可以得到各个节点的收益，得到收益最大的节点并进行选中。盗图如下，不过图中有多层节点，需计算也就更大。\r\n\r\n<img class=\"alignleft\" src=\"https://upload-images.jianshu.io/upload_images/42741-e566dddb28a8f525.png\" />\r\n\r\n&nbsp;\r\n\r\n直接上代码\r\n<pre>from math import *\r\nimport random\r\n#python3\r\n#如果要改写其他游戏，主要编写下面这个class就可以\r\nclass Chess:\r\n    #初始化游戏状态\r\n    def __init__(self,cl):\r\n        self.cl=cl\r\n        self.all_n=cl*cl\r\n        self.playerJustMoved = 2\r\n        self.place=[0]*self.all_n\r\n    #复制游戏状态作为子节点\r\n    def Clone(self):\r\n        st = Chess(self.cl)\r\n        st.playerJustMoved = self.playerJustMoved\r\n        st.place=self.place[:]\r\n        return st\r\n    #进行游戏的下一步\r\n    def DoMove(self,state):\r\n\r\n        self.playerJustMoved = 3 - self.playerJustMoved\r\n        self.place[state]=self.playerJustMoved\r\n    #获取游戏可移动状态\r\n    def GetMoves(self):\r\n        \"\"\" Get all possible moves from this state.\r\n        \"\"\"\r\n        return [i for i in range(self.all_n) if self.place[i] == 0]\r\n    #检查是否游戏结束\r\n    def checkout(self):\r\n        for i in range(self.all_n):\r\n            if self.place[i]!=0 and self.check(i):\r\n                return True\r\n        return False\r\n    #检查五子棋\r\n    def check(self,z):\r\n        y=int(z/self.cl)\r\n        x=z-y*self.cl\r\n        mid=self.place[x+y*self.cl]\r\n        if (x&lt;2 and y&lt;2) or (x&lt;2 and y&gt;self.cl-3) or (x&gt;self.cl-3 and y&gt;self.cl-3) or (x&gt;self.cl-3 and y&lt;2):\r\n            return False\r\n        elif x&lt;2 or x&gt;self.cl-3:\r\n            if mid==self.place[x+(y-1)*self.cl] and mid==self.place[x+(y-2)*self.cl] and mid==self.place[x+(y+1)*self.cl] and mid==self.place[x+(y+2)*self.cl]:\r\n                return True\r\n        elif y&lt;2 or y&gt;self.cl-3:\r\n            if mid==self.place[x-1+y*self.cl] and mid==self.place[x-2+y*self.cl] and mid==self.place[x+1+y*self.cl] and mid==self.place[x+2+y*self.cl]:\r\n                return True\r\n        else:\r\n            if mid==self.place[x+(y-1)*self.cl] and mid==self.place[x+(y-2)*self.cl] and mid==self.place[x+(y+1)*self.cl] and mid==self.place[x+(y+2)*self.cl]:\r\n                return True\r\n            if mid==self.place[x-1+y*self.cl] and mid==self.place[x-2+y*self.cl] and mid==self.place[x+1+y*self.cl] and mid==self.place[x+2+y*self.cl]:\r\n                return True\r\n            if mid==self.place[x-1+(y-1)*self.cl] and mid==self.place[x-2+(y-2)*self.cl] and mid==self.place[x+1+(y+1)*self.cl] and mid==self.place[x+2+(y+2)*self.cl]:\r\n                return True\r\n            if mid==self.place[x-1+(y+1)*self.cl] and mid==self.place[x-2+(y+2)*self.cl] and mid==self.place[x+1+(y-1)*self.cl] and mid==self.place[x+2+(y-2)*self.cl]:\r\n                return True\r\n    #得到游戏结果，这边主要得到模拟结果用作反馈\r\n    def GetResult(self, playerjm):\r\n        \"\"\" Get the game result from the viewpoint of playerjm. \r\n        \"\"\"\r\n        for i in range(self.all_n):\r\n            if self.place[i]!=0 and self.check(i):   \r\n                if self.place[i] == playerjm:\r\n                    return 1.0\r\n                else:\r\n                    return 0.0\r\n        if self.GetMoves() == []:\r\n            return 0.5 # draw\r\n        assert False\r\n#mcts算法节点部分\r\nclass Node:\r\n    \"\"\" A node in the game tree. Note wins is always from the viewpoint of playerJustMoved.\r\n        Crashes if state not specified.\r\n    \"\"\"\r\n    def __init__(self, move = None, parent = None, state = None):\r\n        self.move = move # the move that got us to this node - \"None\" for the root node\r\n        self.parentNode = parent # \"None\" for the root node\r\n        self.childNodes = []\r\n        self.wins = 0\r\n        self.visits = 0\r\n        self.untriedMoves = state.GetMoves() # future child nodes\r\n        self.playerJustMoved = state.playerJustMoved # the only part of the state that the Node needs later\r\n        \r\n    def UCTSelectChild(self):\r\n        \"\"\" Use the UCB1 formula to select a child node. Often a constant UCTK is applied so we have\r\n            lambda c: c.wins/c.visits + UCTK * sqrt(2*log(self.visits)/c.visits to vary the amount of\r\n            exploration versus exploitation.\r\n        \"\"\"\r\n        s = sorted(self.childNodes, key = lambda c: c.wins/c.visits + sqrt(2*log(self.visits)/c.visits))[-1]\r\n        return s\r\n    \r\n    def AddChild(self, m, s):\r\n        \"\"\" Remove m from untriedMoves and add a new child node for this move.\r\n            Return the added child node\r\n        \"\"\"\r\n        n = Node(move = m, parent = self, state = s)\r\n        self.untriedMoves.remove(m)\r\n        self.childNodes.append(n)\r\n        return n\r\n    \r\n    def Update(self, result):\r\n        \"\"\" Update this node - one additional visit and result additional wins. result must be from the viewpoint of playerJustmoved.\r\n        \"\"\"\r\n        self.visits += 1\r\n        self.wins += result\r\n\r\n    def __repr__(self):\r\n        return \"[M:\" + str(self.move) + \" W/V:\" + str(self.wins) + \"/\" + str(self.visits) + \" U:\" + str(self.untriedMoves) + \"]\"\r\n\r\n    def TreeToString(self, indent):\r\n        s = self.IndentString(indent) + str(self)\r\n        for c in self.childNodes:\r\n             s += c.TreeToString(indent+1)\r\n        return s\r\n\r\n    def IndentString(self,indent):\r\n        s = \"\\n\"\r\n        for i in range (1,indent+1):\r\n            s += \"| \"\r\n        return s\r\n\r\n    def ChildrenToString(self):\r\n        s = \"\"\r\n        for c in self.childNodes:\r\n             s += str(c) + \"\\n\"\r\n        return s\r\n\r\n#mcts算法模拟部分\r\ndef UCT(rootstate, itermax, verbose = False):\r\n    \"\"\" Conduct a UCT search for itermax iterations starting from rootstate.\r\n        Return the best move from the rootstate.\r\n        Assumes 2 alternating players (player 1 starts), with game results in the range [0.0, 1.0].\"\"\"\r\n\r\n    rootnode = Node(state = rootstate)\r\n\r\n    for i in range(itermax):\r\n        node = rootnode\r\n        state = rootstate.Clone()\r\n\r\n        # Select\r\n        while node.untriedMoves == [] and node.childNodes != []: # node is fully expanded and non-terminal\r\n            node = node.UCTSelectChild()\r\n            state.DoMove(node.move)\r\n\r\n        # Expand\r\n        if node.untriedMoves != []: # if we can expand (i.e. state/node is non-terminal)\r\n            m = random.choice(node.untriedMoves) \r\n            state.DoMove(m)\r\n            node = node.AddChild(m,state) # add child and descend tree\r\n\r\n        # Rollout - this can often be made orders of magnitude quicker using a state.GetRandomMove() function\r\n        while state.GetMoves() != []: # while state is non-terminal\r\n            state.DoMove(random.choice(state.GetMoves()))\r\n\r\n        # Backpropagate\r\n        while node != None: # backpropagate from the expanded node and work back to the root node\r\n            node.Update(state.GetResult(node.playerJustMoved)) # state is terminal. Update node with result from POV of node.playerJustMoved\r\n            node = node.parentNode\r\n\r\n    # Output some information about the tree - can be omitted\r\n    #if (verbose): print rootnode.TreeToString(0)\r\n    #else: print rootnode.ChildrenToString()\r\n    #print(rootnode.childNodes)\r\n    return sorted(rootnode.childNodes, key = lambda c: c.visits)[-1].move # return the move that was most visited\r\n#主函数                \r\ndef UCTPlayGame():\r\n    itermax=5000#每一步迭代的次数，越多越准确,但这边只有单分支，应该会有一个上限\r\n    length=8#棋盘长宽\r\n    res=[\"_\"]*length*length\r\n    state = Chess(length)\r\n    save_state=\"\"\r\n    while (not state.checkout() and state.GetMoves()!=[]):\r\n        if state.playerJustMoved == 1:\r\n            m = UCT(rootstate = state, itermax = itermax, verbose = False) #2\r\n            print(\"电脑2下子(\"+str(m-int(m/length)*length)+\" \"+str(int(m/length))+\")\")\r\n            res[m]=\"X\"\r\n        else:\r\n            m = UCT(rootstate = state, itermax = itermax, verbose = False) #1\r\n            print(\"电脑1下子(\"+str(m-int(m/length)*length)+\" \"+str(int(m/length))+\")\")\r\n            #如果想自己和电脑下就注释掉上面两行，再去掉下面两个注释。\r\n            #my=input(\"您下子(格式如:3 4)\\n\").split(\" \")\r\n            #m=int(my[0])+int(my[1])*length\r\n            res[m]=\"O\"\r\n        print(\"Best Move: \" + str(m) + \"\\n\")\r\n        for i in range(length):\r\n            print(\" \".join(res[length*i:length*(i+1)]))\r\n        state.DoMove(m)\r\n    if state.GetResult(state.playerJustMoved) == 1.0:\r\n        print(\"Player \" + str(state.playerJustMoved) + \" wins!\")\r\n    elif state.GetResult(state.playerJustMoved) == 0.0:\r\n        print(\"Player \" + str(3 - state.playerJustMoved) + \" wins!\")\r\n    else: print(\"Nobody wins!\")\r\n\r\nif __name__ == \"__main__\":\r\n    \"\"\" Play a single game to the end using UCT for both players. \r\n    \"\"\"\r\n    UCTPlayGame()</pre>\r\n实验结果：\r\n\r\n以8*8棋盘为例，在每步迭代几千次之后，电脑就基本可以学会档这个技能，但电脑要赢这边还是有点困难，没有多步的规划。\r\n\r\n有时候也会莫名下到棋盘边上的点，想想棋盘边上的点赢的概率应该低吧。这个可能步数不够或者模拟有问题。实验如下图：\r\n\r\n<img class=\"alignnone size-full wp-image-518\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/01/微信图片_20180126111340.png\" alt=\"\" width=\"132\" height=\"174\" />\r\n\r\n灵感来源：<a href=\"https://zhuanlan.zhihu.com/p/32089487\">知乎某讲篇AlphaZero的文章\r\n</a>\r\n\r\n算法代码借鉴：<a href=\"http://mcts.ai\">mcts.ai</a>",
            "post_title": "蒙特卡洛树搜索(mcts)实践--还是五子棋吧",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e8%92%99%e7%89%b9%e5%8d%a1%e6%b4%9b%e6%a0%91%e6%90%9c%e7%b4%a2mcts%e7%9a%84%e4%b8%80%e6%ac%a1%e5%ae%9e%e8%b7%b5-%e8%bf%98%e6%98%af%e4%ba%94%e5%ad%90%e6%a3%8b%e5%90%a7",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-26 11:33:20",
            "post_modified_gmt": "2018-1-26 03:33:20",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=515",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "516",
            "post_author": "1",
            "post_date": "2018-1-26 10:14:13",
            "post_date_gmt": "2018-1-26 02:14:13",
            "post_content": "",
            "post_title": "蒙特卡洛树搜索(mcts)的一次实践--还是五子棋吧",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "515-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-26 10:14:13",
            "post_modified_gmt": "2018-1-26 02:14:13",
            "post_content_filtered": "",
            "post_parent": "515",
            "guid": "http://ganjiacheng.cn/blog/?p=516",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "517",
            "post_author": "1",
            "post_date": "2018-1-26 10:36:08",
            "post_date_gmt": "2018-1-26 02:36:08",
            "post_content": "看AlphaZero的时候看到这个mcts，因为需要用他来产生棋局进行训练。比较神奇，就小小探究一下。这边做一个五子棋mcts AI。<!--more-->\r\n\r\nmcts按我目前的理解也就是在目前的情况下（根节点），随机产生下一步的节点，之后进行随机模拟至产生一个结果，把结果反馈于当前节点与之前的节点，这样模拟n次以后，得到根节点的下一步的各个节点的A/B，A为结果获胜的次数，B为访问次数。<img class=\"\" src=\"https://upload-images.jianshu.io/upload_images/42741-5399e14c51cb1521.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/200\" data-original-src=\"//upload-images.jianshu.io/upload_images/42741-5399e14c51cb1521.png\" data-original-width=\"200\" data-original-height=\"72\" data-original-format=\"image/png\" data-original-filesize=\"6109\" />用公式计算就可以得到各个节点的收益，得到收益最大的节点并进行选中。盗图如下，不过图中有多层节点，需计算也就更大。\r\n\r\n<img class=\"alignleft\" src=\"https://upload-images.jianshu.io/upload_images/42741-e566dddb28a8f525.png\" />\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n直接上代码\r\n<pre></pre>\r\n&nbsp;\r\n\r\n灵感来源：<a href=\"https://zhuanlan.zhihu.com/p/32089487\">知乎某讲篇AlphaZero的文章\r\n</a>\r\n\r\n算法代码借鉴：<a href=\"http://mcts.ai\">mcts.ai</a>",
            "post_title": "蒙特卡洛树搜索(mcts)的一次实践--还是五子棋吧",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "515-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-26 10:36:08",
            "post_modified_gmt": "2018-1-26 02:36:08",
            "post_content_filtered": "",
            "post_parent": "515",
            "guid": "http://ganjiacheng.cn/blog/?p=517",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "518",
            "post_author": "1",
            "post_date": "2018-1-26 11:13:46",
            "post_date_gmt": "2018-1-26 03:13:46",
            "post_content": "",
            "post_title": "微信图片_20180126111340",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "%e5%be%ae%e4%bf%a1%e5%9b%be%e7%89%87_20180126111340",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-26 11:13:46",
            "post_modified_gmt": "2018-1-26 03:13:46",
            "post_content_filtered": "",
            "post_parent": "515",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2018/01/微信图片_20180126111340.png",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/png",
            "comment_count": "0"
        },
        {
            "ID": "519",
            "post_author": "1",
            "post_date": "2018-1-26 11:14:46",
            "post_date_gmt": "2018-1-26 03:14:46",
            "post_content": "看AlphaZero的时候看到这个mcts，因为需要用他来产生棋局进行训练。比较神奇，就小小探究一下。这边做一个五子棋mcts AI。<!--more-->\r\n\r\nmcts按我目前的理解也就是在目前的情况下（根节点），随机产生下一步的节点，之后进行随机模拟至产生一个结果，把结果反馈于当前节点与之前的节点，这样模拟n次以后，得到根节点的下一步的各个节点的A/B，A为结果获胜的次数，B为访问次数。<img class=\"\" src=\"https://upload-images.jianshu.io/upload_images/42741-5399e14c51cb1521.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/200\" data-original-src=\"//upload-images.jianshu.io/upload_images/42741-5399e14c51cb1521.png\" data-original-width=\"200\" data-original-height=\"72\" data-original-format=\"image/png\" data-original-filesize=\"6109\" />用公式计算就可以得到各个节点的收益，得到收益最大的节点并进行选中。盗图如下，不过图中有多层节点，需计算也就更大。\r\n\r\n<img class=\"alignleft\" src=\"https://upload-images.jianshu.io/upload_images/42741-e566dddb28a8f525.png\" />\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n直接上代码\r\n<pre></pre>\r\n实验结果：\r\n\r\n<img class=\"alignnone size-full wp-image-518\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/01/微信图片_20180126111340.png\" alt=\"\" width=\"132\" height=\"174\" />\r\n\r\n灵感来源：<a href=\"https://zhuanlan.zhihu.com/p/32089487\">知乎某讲篇AlphaZero的文章\r\n</a>\r\n\r\n算法代码借鉴：<a href=\"http://mcts.ai\">mcts.ai</a>",
            "post_title": "蒙特卡洛树搜索(mcts)的一次实践--还是五子棋吧",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "515-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-26 11:14:46",
            "post_modified_gmt": "2018-1-26 03:14:46",
            "post_content_filtered": "",
            "post_parent": "515",
            "guid": "http://ganjiacheng.cn/blog/?p=519",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "520",
            "post_author": "1",
            "post_date": "2018-1-26 11:31:35",
            "post_date_gmt": "2018-1-26 03:31:35",
            "post_content": "看AlphaZero的时候看到这个mcts，因为需要用他来产生棋局进行训练。比较神奇，就小小探究一下。这边做一个五子棋mcts AI。<!--more-->\r\n\r\nmcts按我目前的理解也就是在目前的情况下（根节点），随机产生下一步的节点，之后进行随机模拟至产生一个结果，把结果反馈于当前节点与之前的节点，这样模拟n次以后，得到根节点的下一步的各个节点的A/B，A为结果获胜的次数，B为访问次数。<img class=\"\" src=\"https://upload-images.jianshu.io/upload_images/42741-5399e14c51cb1521.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/200\" data-original-src=\"//upload-images.jianshu.io/upload_images/42741-5399e14c51cb1521.png\" data-original-width=\"200\" data-original-height=\"72\" data-original-format=\"image/png\" data-original-filesize=\"6109\" />用公式计算就可以得到各个节点的收益，得到收益最大的节点并进行选中。盗图如下，不过图中有多层节点，需计算也就更大。\r\n\r\n<img class=\"alignleft\" src=\"https://upload-images.jianshu.io/upload_images/42741-e566dddb28a8f525.png\" />\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n直接上代码\r\n<pre>from math import *\r\nimport random\r\n#python3\r\n#如果要改写其他游戏，主要编写下面这个class就可以\r\nclass Chess:\r\n    #初始化游戏状态\r\n    def __init__(self,cl):\r\n        self.cl=cl\r\n        self.all_n=cl*cl\r\n        self.playerJustMoved = 2\r\n        self.place=[0]*self.all_n\r\n    #复制游戏状态作为子节点\r\n    def Clone(self):\r\n        st = Chess(self.cl)\r\n        st.playerJustMoved = self.playerJustMoved\r\n        st.place=self.place[:]\r\n        return st\r\n    #进行游戏的下一步\r\n    def DoMove(self,state):\r\n\r\n        self.playerJustMoved = 3 - self.playerJustMoved\r\n        self.place[state]=self.playerJustMoved\r\n    #获取游戏可移动状态\r\n    def GetMoves(self):\r\n        \"\"\" Get all possible moves from this state.\r\n        \"\"\"\r\n        return [i for i in range(self.all_n) if self.place[i] == 0]\r\n    #检查是否游戏结束\r\n    def checkout(self):\r\n        for i in range(self.all_n):\r\n            if self.place[i]!=0 and self.check(i):\r\n                return True\r\n        return False\r\n    #检查五子棋\r\n    def check(self,z):\r\n        y=int(z/self.cl)\r\n        x=z-y*self.cl\r\n        mid=self.place[x+y*self.cl]\r\n        if (x&lt;2 and y&lt;2) or (x&lt;2 and y&gt;self.cl-3) or (x&gt;self.cl-3 and y&gt;self.cl-3) or (x&gt;self.cl-3 and y&lt;2):\r\n            return False\r\n        elif x&lt;2 or x&gt;self.cl-3:\r\n            if mid==self.place[x+(y-1)*self.cl] and mid==self.place[x+(y-2)*self.cl] and mid==self.place[x+(y+1)*self.cl] and mid==self.place[x+(y+2)*self.cl]:\r\n                return True\r\n        elif y&lt;2 or y&gt;self.cl-3:\r\n            if mid==self.place[x-1+y*self.cl] and mid==self.place[x-2+y*self.cl] and mid==self.place[x+1+y*self.cl] and mid==self.place[x+2+y*self.cl]:\r\n                return True\r\n        else:\r\n            if mid==self.place[x+(y-1)*self.cl] and mid==self.place[x+(y-2)*self.cl] and mid==self.place[x+(y+1)*self.cl] and mid==self.place[x+(y+2)*self.cl]:\r\n                return True\r\n            if mid==self.place[x-1+y*self.cl] and mid==self.place[x-2+y*self.cl] and mid==self.place[x+1+y*self.cl] and mid==self.place[x+2+y*self.cl]:\r\n                return True\r\n            if mid==self.place[x-1+(y-1)*self.cl] and mid==self.place[x-2+(y-2)*self.cl] and mid==self.place[x+1+(y+1)*self.cl] and mid==self.place[x+2+(y+2)*self.cl]:\r\n                return True\r\n            if mid==self.place[x-1+(y+1)*self.cl] and mid==self.place[x-2+(y+2)*self.cl] and mid==self.place[x+1+(y-1)*self.cl] and mid==self.place[x+2+(y-2)*self.cl]:\r\n                return True\r\n    #得到游戏结果，这边主要得到模拟结果用作反馈\r\n    def GetResult(self, playerjm):\r\n        \"\"\" Get the game result from the viewpoint of playerjm. \r\n        \"\"\"\r\n        for i in range(self.all_n):\r\n            if self.place[i]!=0 and self.check(i):   \r\n                if self.place[i] == playerjm:\r\n                    return 1.0\r\n                else:\r\n                    return 0.0\r\n        if self.GetMoves() == []:\r\n            return 0.5 # draw\r\n        assert False\r\n#mcts算法节点部分\r\nclass Node:\r\n    \"\"\" A node in the game tree. Note wins is always from the viewpoint of playerJustMoved.\r\n        Crashes if state not specified.\r\n    \"\"\"\r\n    def __init__(self, move = None, parent = None, state = None):\r\n        self.move = move # the move that got us to this node - \"None\" for the root node\r\n        self.parentNode = parent # \"None\" for the root node\r\n        self.childNodes = []\r\n        self.wins = 0\r\n        self.visits = 0\r\n        self.untriedMoves = state.GetMoves() # future child nodes\r\n        self.playerJustMoved = state.playerJustMoved # the only part of the state that the Node needs later\r\n        \r\n    def UCTSelectChild(self):\r\n        \"\"\" Use the UCB1 formula to select a child node. Often a constant UCTK is applied so we have\r\n            lambda c: c.wins/c.visits + UCTK * sqrt(2*log(self.visits)/c.visits to vary the amount of\r\n            exploration versus exploitation.\r\n        \"\"\"\r\n        s = sorted(self.childNodes, key = lambda c: c.wins/c.visits + sqrt(2*log(self.visits)/c.visits))[-1]\r\n        return s\r\n    \r\n    def AddChild(self, m, s):\r\n        \"\"\" Remove m from untriedMoves and add a new child node for this move.\r\n            Return the added child node\r\n        \"\"\"\r\n        n = Node(move = m, parent = self, state = s)\r\n        self.untriedMoves.remove(m)\r\n        self.childNodes.append(n)\r\n        return n\r\n    \r\n    def Update(self, result):\r\n        \"\"\" Update this node - one additional visit and result additional wins. result must be from the viewpoint of playerJustmoved.\r\n        \"\"\"\r\n        self.visits += 1\r\n        self.wins += result\r\n\r\n    def __repr__(self):\r\n        return \"[M:\" + str(self.move) + \" W/V:\" + str(self.wins) + \"/\" + str(self.visits) + \" U:\" + str(self.untriedMoves) + \"]\"\r\n\r\n    def TreeToString(self, indent):\r\n        s = self.IndentString(indent) + str(self)\r\n        for c in self.childNodes:\r\n             s += c.TreeToString(indent+1)\r\n        return s\r\n\r\n    def IndentString(self,indent):\r\n        s = \"\\n\"\r\n        for i in range (1,indent+1):\r\n            s += \"| \"\r\n        return s\r\n\r\n    def ChildrenToString(self):\r\n        s = \"\"\r\n        for c in self.childNodes:\r\n             s += str(c) + \"\\n\"\r\n        return s\r\n\r\n#mcts算法模拟部分\r\ndef UCT(rootstate, itermax, verbose = False):\r\n    \"\"\" Conduct a UCT search for itermax iterations starting from rootstate.\r\n        Return the best move from the rootstate.\r\n        Assumes 2 alternating players (player 1 starts), with game results in the range [0.0, 1.0].\"\"\"\r\n\r\n    rootnode = Node(state = rootstate)\r\n\r\n    for i in range(itermax):\r\n        node = rootnode\r\n        state = rootstate.Clone()\r\n\r\n        # Select\r\n        while node.untriedMoves == [] and node.childNodes != []: # node is fully expanded and non-terminal\r\n            node = node.UCTSelectChild()\r\n            state.DoMove(node.move)\r\n\r\n        # Expand\r\n        if node.untriedMoves != []: # if we can expand (i.e. state/node is non-terminal)\r\n            m = random.choice(node.untriedMoves) \r\n            state.DoMove(m)\r\n            node = node.AddChild(m,state) # add child and descend tree\r\n\r\n        # Rollout - this can often be made orders of magnitude quicker using a state.GetRandomMove() function\r\n        while state.GetMoves() != []: # while state is non-terminal\r\n            state.DoMove(random.choice(state.GetMoves()))\r\n\r\n        # Backpropagate\r\n        while node != None: # backpropagate from the expanded node and work back to the root node\r\n            node.Update(state.GetResult(node.playerJustMoved)) # state is terminal. Update node with result from POV of node.playerJustMoved\r\n            node = node.parentNode\r\n\r\n    # Output some information about the tree - can be omitted\r\n    #if (verbose): print rootnode.TreeToString(0)\r\n    #else: print rootnode.ChildrenToString()\r\n    #print(rootnode.childNodes)\r\n    return sorted(rootnode.childNodes, key = lambda c: c.visits)[-1].move # return the move that was most visited\r\n#主函数                \r\ndef UCTPlayGame():\r\n    itermax=5000#每一步迭代的次数，越多越准确,但这边只有单分支，应该会有一个上限\r\n    length=8#棋盘长宽\r\n    res=[\"_\"]*length*length\r\n    state = Chess(length)\r\n    save_state=\"\"\r\n    while (not state.checkout() and state.GetMoves()!=[]):\r\n        if state.playerJustMoved == 1:\r\n            m = UCT(rootstate = state, itermax = itermax, verbose = False) #2\r\n            print(\"电脑2下子(\"+str(m-int(m/length)*length)+\" \"+str(int(m/length))+\")\")\r\n            res[m]=\"X\"\r\n        else:\r\n            m = UCT(rootstate = state, itermax = itermax, verbose = False) #1\r\n            print(\"电脑1下子(\"+str(m-int(m/length)*length)+\" \"+str(int(m/length))+\")\")\r\n            #如果想自己和电脑下就注释掉上面两行，再去掉下面两个注释。\r\n            #my=input(\"您下子(格式如:3 4)\\n\").split(\" \")\r\n            #m=int(my[0])+int(my[1])*length\r\n            res[m]=\"O\"\r\n        print(\"Best Move: \" + str(m) + \"\\n\")\r\n        for i in range(length):\r\n            print(\" \".join(res[length*i:length*(i+1)]))\r\n        state.DoMove(m)\r\n    if state.GetResult(state.playerJustMoved) == 1.0:\r\n        print(\"Player \" + str(state.playerJustMoved) + \" wins!\")\r\n    elif state.GetResult(state.playerJustMoved) == 0.0:\r\n        print(\"Player \" + str(3 - state.playerJustMoved) + \" wins!\")\r\n    else: print(\"Nobody wins!\")\r\n\r\nif __name__ == \"__main__\":\r\n    \"\"\" Play a single game to the end using UCT for both players. \r\n    \"\"\"\r\n    UCTPlayGame()</pre>\r\n实验结果：\r\n\r\n以8*8棋盘为例，在每步迭代几千次之后，电脑就基本可以学会档这个技能，但电脑要赢这边还是有点困难，没有多步的规划。\r\n\r\n有时候也会莫名下到棋盘边上的点，想想棋盘边上的点赢的概率应该低吧。这个可能步数不够或者模拟有问题。实验如下图：\r\n\r\n<img class=\"alignnone size-full wp-image-518\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/01/微信图片_20180126111340.png\" alt=\"\" width=\"132\" height=\"174\" />\r\n\r\n灵感来源：<a href=\"https://zhuanlan.zhihu.com/p/32089487\">知乎某讲篇AlphaZero的文章\r\n</a>\r\n\r\n算法代码借鉴：<a href=\"http://mcts.ai\">mcts.ai</a>",
            "post_title": "蒙特卡洛树搜索(mcts)的一次实践--还是五子棋吧",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "515-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-26 11:31:35",
            "post_modified_gmt": "2018-1-26 03:31:35",
            "post_content_filtered": "",
            "post_parent": "515",
            "guid": "http://ganjiacheng.cn/blog/?p=520",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "521",
            "post_author": "1",
            "post_date": "2018-1-26 11:32:18",
            "post_date_gmt": "2018-1-26 03:32:18",
            "post_content": "看AlphaZero的时候看到这个mcts，因为需要用他来产生棋局进行训练。比较神奇，就小小探究一下。这边做一个五子棋mcts AI。<!--more-->\r\n\r\nmcts按我目前的理解也就是在目前的情况下（根节点），随机产生下一步的节点，之后进行随机模拟至产生一个结果，把结果反馈于当前节点与之前的节点，这样模拟n次以后，得到根节点的下一步的各个节点的A/B，A为结果获胜的次数，B为访问次数。<img class=\"\" src=\"https://upload-images.jianshu.io/upload_images/42741-5399e14c51cb1521.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/200\" data-original-src=\"//upload-images.jianshu.io/upload_images/42741-5399e14c51cb1521.png\" data-original-width=\"200\" data-original-height=\"72\" data-original-format=\"image/png\" data-original-filesize=\"6109\" />用公式计算就可以得到各个节点的收益，得到收益最大的节点并进行选中。盗图如下，不过图中有多层节点，需计算也就更大。\r\n\r\n<img class=\"alignleft\" src=\"https://upload-images.jianshu.io/upload_images/42741-e566dddb28a8f525.png\" />\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n直接上代码\r\n<pre>from math import *\r\nimport random\r\n#python3\r\n#如果要改写其他游戏，主要编写下面这个class就可以\r\nclass Chess:\r\n    #初始化游戏状态\r\n    def __init__(self,cl):\r\n        self.cl=cl\r\n        self.all_n=cl*cl\r\n        self.playerJustMoved = 2\r\n        self.place=[0]*self.all_n\r\n    #复制游戏状态作为子节点\r\n    def Clone(self):\r\n        st = Chess(self.cl)\r\n        st.playerJustMoved = self.playerJustMoved\r\n        st.place=self.place[:]\r\n        return st\r\n    #进行游戏的下一步\r\n    def DoMove(self,state):\r\n\r\n        self.playerJustMoved = 3 - self.playerJustMoved\r\n        self.place[state]=self.playerJustMoved\r\n    #获取游戏可移动状态\r\n    def GetMoves(self):\r\n        \"\"\" Get all possible moves from this state.\r\n        \"\"\"\r\n        return [i for i in range(self.all_n) if self.place[i] == 0]\r\n    #检查是否游戏结束\r\n    def checkout(self):\r\n        for i in range(self.all_n):\r\n            if self.place[i]!=0 and self.check(i):\r\n                return True\r\n        return False\r\n    #检查五子棋\r\n    def check(self,z):\r\n        y=int(z/self.cl)\r\n        x=z-y*self.cl\r\n        mid=self.place[x+y*self.cl]\r\n        if (x&lt;2 and y&lt;2) or (x&lt;2 and y&gt;self.cl-3) or (x&gt;self.cl-3 and y&gt;self.cl-3) or (x&gt;self.cl-3 and y&lt;2):\r\n            return False\r\n        elif x&lt;2 or x&gt;self.cl-3:\r\n            if mid==self.place[x+(y-1)*self.cl] and mid==self.place[x+(y-2)*self.cl] and mid==self.place[x+(y+1)*self.cl] and mid==self.place[x+(y+2)*self.cl]:\r\n                return True\r\n        elif y&lt;2 or y&gt;self.cl-3:\r\n            if mid==self.place[x-1+y*self.cl] and mid==self.place[x-2+y*self.cl] and mid==self.place[x+1+y*self.cl] and mid==self.place[x+2+y*self.cl]:\r\n                return True\r\n        else:\r\n            if mid==self.place[x+(y-1)*self.cl] and mid==self.place[x+(y-2)*self.cl] and mid==self.place[x+(y+1)*self.cl] and mid==self.place[x+(y+2)*self.cl]:\r\n                return True\r\n            if mid==self.place[x-1+y*self.cl] and mid==self.place[x-2+y*self.cl] and mid==self.place[x+1+y*self.cl] and mid==self.place[x+2+y*self.cl]:\r\n                return True\r\n            if mid==self.place[x-1+(y-1)*self.cl] and mid==self.place[x-2+(y-2)*self.cl] and mid==self.place[x+1+(y+1)*self.cl] and mid==self.place[x+2+(y+2)*self.cl]:\r\n                return True\r\n            if mid==self.place[x-1+(y+1)*self.cl] and mid==self.place[x-2+(y+2)*self.cl] and mid==self.place[x+1+(y-1)*self.cl] and mid==self.place[x+2+(y-2)*self.cl]:\r\n                return True\r\n    #得到游戏结果，这边主要得到模拟结果用作反馈\r\n    def GetResult(self, playerjm):\r\n        \"\"\" Get the game result from the viewpoint of playerjm. \r\n        \"\"\"\r\n        for i in range(self.all_n):\r\n            if self.place[i]!=0 and self.check(i):   \r\n                if self.place[i] == playerjm:\r\n                    return 1.0\r\n                else:\r\n                    return 0.0\r\n        if self.GetMoves() == []:\r\n            return 0.5 # draw\r\n        assert False\r\n#mcts算法节点部分\r\nclass Node:\r\n    \"\"\" A node in the game tree. Note wins is always from the viewpoint of playerJustMoved.\r\n        Crashes if state not specified.\r\n    \"\"\"\r\n    def __init__(self, move = None, parent = None, state = None):\r\n        self.move = move # the move that got us to this node - \"None\" for the root node\r\n        self.parentNode = parent # \"None\" for the root node\r\n        self.childNodes = []\r\n        self.wins = 0\r\n        self.visits = 0\r\n        self.untriedMoves = state.GetMoves() # future child nodes\r\n        self.playerJustMoved = state.playerJustMoved # the only part of the state that the Node needs later\r\n        \r\n    def UCTSelectChild(self):\r\n        \"\"\" Use the UCB1 formula to select a child node. Often a constant UCTK is applied so we have\r\n            lambda c: c.wins/c.visits + UCTK * sqrt(2*log(self.visits)/c.visits to vary the amount of\r\n            exploration versus exploitation.\r\n        \"\"\"\r\n        s = sorted(self.childNodes, key = lambda c: c.wins/c.visits + sqrt(2*log(self.visits)/c.visits))[-1]\r\n        return s\r\n    \r\n    def AddChild(self, m, s):\r\n        \"\"\" Remove m from untriedMoves and add a new child node for this move.\r\n            Return the added child node\r\n        \"\"\"\r\n        n = Node(move = m, parent = self, state = s)\r\n        self.untriedMoves.remove(m)\r\n        self.childNodes.append(n)\r\n        return n\r\n    \r\n    def Update(self, result):\r\n        \"\"\" Update this node - one additional visit and result additional wins. result must be from the viewpoint of playerJustmoved.\r\n        \"\"\"\r\n        self.visits += 1\r\n        self.wins += result\r\n\r\n    def __repr__(self):\r\n        return \"[M:\" + str(self.move) + \" W/V:\" + str(self.wins) + \"/\" + str(self.visits) + \" U:\" + str(self.untriedMoves) + \"]\"\r\n\r\n    def TreeToString(self, indent):\r\n        s = self.IndentString(indent) + str(self)\r\n        for c in self.childNodes:\r\n             s += c.TreeToString(indent+1)\r\n        return s\r\n\r\n    def IndentString(self,indent):\r\n        s = \"\\n\"\r\n        for i in range (1,indent+1):\r\n            s += \"| \"\r\n        return s\r\n\r\n    def ChildrenToString(self):\r\n        s = \"\"\r\n        for c in self.childNodes:\r\n             s += str(c) + \"\\n\"\r\n        return s\r\n\r\n#mcts算法模拟部分\r\ndef UCT(rootstate, itermax, verbose = False):\r\n    \"\"\" Conduct a UCT search for itermax iterations starting from rootstate.\r\n        Return the best move from the rootstate.\r\n        Assumes 2 alternating players (player 1 starts), with game results in the range [0.0, 1.0].\"\"\"\r\n\r\n    rootnode = Node(state = rootstate)\r\n\r\n    for i in range(itermax):\r\n        node = rootnode\r\n        state = rootstate.Clone()\r\n\r\n        # Select\r\n        while node.untriedMoves == [] and node.childNodes != []: # node is fully expanded and non-terminal\r\n            node = node.UCTSelectChild()\r\n            state.DoMove(node.move)\r\n\r\n        # Expand\r\n        if node.untriedMoves != []: # if we can expand (i.e. state/node is non-terminal)\r\n            m = random.choice(node.untriedMoves) \r\n            state.DoMove(m)\r\n            node = node.AddChild(m,state) # add child and descend tree\r\n\r\n        # Rollout - this can often be made orders of magnitude quicker using a state.GetRandomMove() function\r\n        while state.GetMoves() != []: # while state is non-terminal\r\n            state.DoMove(random.choice(state.GetMoves()))\r\n\r\n        # Backpropagate\r\n        while node != None: # backpropagate from the expanded node and work back to the root node\r\n            node.Update(state.GetResult(node.playerJustMoved)) # state is terminal. Update node with result from POV of node.playerJustMoved\r\n            node = node.parentNode\r\n\r\n    # Output some information about the tree - can be omitted\r\n    #if (verbose): print rootnode.TreeToString(0)\r\n    #else: print rootnode.ChildrenToString()\r\n    #print(rootnode.childNodes)\r\n    return sorted(rootnode.childNodes, key = lambda c: c.visits)[-1].move # return the move that was most visited\r\n#主函数                \r\ndef UCTPlayGame():\r\n    itermax=5000#每一步迭代的次数，越多越准确,但这边只有单分支，应该会有一个上限\r\n    length=8#棋盘长宽\r\n    res=[\"_\"]*length*length\r\n    state = Chess(length)\r\n    save_state=\"\"\r\n    while (not state.checkout() and state.GetMoves()!=[]):\r\n        if state.playerJustMoved == 1:\r\n            m = UCT(rootstate = state, itermax = itermax, verbose = False) #2\r\n            print(\"电脑2下子(\"+str(m-int(m/length)*length)+\" \"+str(int(m/length))+\")\")\r\n            res[m]=\"X\"\r\n        else:\r\n            m = UCT(rootstate = state, itermax = itermax, verbose = False) #1\r\n            print(\"电脑1下子(\"+str(m-int(m/length)*length)+\" \"+str(int(m/length))+\")\")\r\n            #如果想自己和电脑下就注释掉上面两行，再去掉下面两个注释。\r\n            #my=input(\"您下子(格式如:3 4)\\n\").split(\" \")\r\n            #m=int(my[0])+int(my[1])*length\r\n            res[m]=\"O\"\r\n        print(\"Best Move: \" + str(m) + \"\\n\")\r\n        for i in range(length):\r\n            print(\" \".join(res[length*i:length*(i+1)]))\r\n        state.DoMove(m)\r\n    if state.GetResult(state.playerJustMoved) == 1.0:\r\n        print(\"Player \" + str(state.playerJustMoved) + \" wins!\")\r\n    elif state.GetResult(state.playerJustMoved) == 0.0:\r\n        print(\"Player \" + str(3 - state.playerJustMoved) + \" wins!\")\r\n    else: print(\"Nobody wins!\")\r\n\r\nif __name__ == \"__main__\":\r\n    \"\"\" Play a single game to the end using UCT for both players. \r\n    \"\"\"\r\n    UCTPlayGame()</pre>\r\n实验结果：\r\n\r\n以8*8棋盘为例，在每步迭代几千次之后，电脑就基本可以学会档这个技能，但电脑要赢这边还是有点困难，没有多步的规划。\r\n\r\n有时候也会莫名下到棋盘边上的点，想想棋盘边上的点赢的概率应该低吧。这个可能步数不够或者模拟有问题。实验如下图：\r\n\r\n<img class=\"alignnone size-full wp-image-518\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/01/微信图片_20180126111340.png\" alt=\"\" width=\"132\" height=\"174\" />\r\n\r\n灵感来源：<a href=\"https://zhuanlan.zhihu.com/p/32089487\">知乎某讲篇AlphaZero的文章\r\n</a>\r\n\r\n算法代码借鉴：<a href=\"http://mcts.ai\">mcts.ai</a>",
            "post_title": "蒙特卡洛树搜索(mcts)实践--还是五子棋吧",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "515-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-26 11:32:18",
            "post_modified_gmt": "2018-1-26 03:32:18",
            "post_content_filtered": "",
            "post_parent": "515",
            "guid": "http://ganjiacheng.cn/blog/?p=521",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "522",
            "post_author": "1",
            "post_date": "2018-1-26 11:33:20",
            "post_date_gmt": "2018-1-26 03:33:20",
            "post_content": "看AlphaZero的时候看到这个mcts，因为需要用他来产生棋局进行训练。比较神奇，就小小探究一下。这边做一个五子棋mcts AI。<!--more-->\r\n\r\nmcts按我目前的理解也就是在目前的情况下（根节点），随机产生下一步的节点，之后进行随机模拟至产生一个结果，把结果反馈于当前节点与之前的节点，这样模拟n次以后，得到根节点的下一步的各个节点的A/B，A为结果获胜的次数，B为访问次数。<img class=\"\" src=\"https://upload-images.jianshu.io/upload_images/42741-5399e14c51cb1521.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/200\" data-original-src=\"//upload-images.jianshu.io/upload_images/42741-5399e14c51cb1521.png\" data-original-width=\"200\" data-original-height=\"72\" data-original-format=\"image/png\" data-original-filesize=\"6109\" />用公式计算就可以得到各个节点的收益，得到收益最大的节点并进行选中。盗图如下，不过图中有多层节点，需计算也就更大。\r\n\r\n<img class=\"alignleft\" src=\"https://upload-images.jianshu.io/upload_images/42741-e566dddb28a8f525.png\" />\r\n\r\n&nbsp;\r\n\r\n直接上代码\r\n<pre>from math import *\r\nimport random\r\n#python3\r\n#如果要改写其他游戏，主要编写下面这个class就可以\r\nclass Chess:\r\n    #初始化游戏状态\r\n    def __init__(self,cl):\r\n        self.cl=cl\r\n        self.all_n=cl*cl\r\n        self.playerJustMoved = 2\r\n        self.place=[0]*self.all_n\r\n    #复制游戏状态作为子节点\r\n    def Clone(self):\r\n        st = Chess(self.cl)\r\n        st.playerJustMoved = self.playerJustMoved\r\n        st.place=self.place[:]\r\n        return st\r\n    #进行游戏的下一步\r\n    def DoMove(self,state):\r\n\r\n        self.playerJustMoved = 3 - self.playerJustMoved\r\n        self.place[state]=self.playerJustMoved\r\n    #获取游戏可移动状态\r\n    def GetMoves(self):\r\n        \"\"\" Get all possible moves from this state.\r\n        \"\"\"\r\n        return [i for i in range(self.all_n) if self.place[i] == 0]\r\n    #检查是否游戏结束\r\n    def checkout(self):\r\n        for i in range(self.all_n):\r\n            if self.place[i]!=0 and self.check(i):\r\n                return True\r\n        return False\r\n    #检查五子棋\r\n    def check(self,z):\r\n        y=int(z/self.cl)\r\n        x=z-y*self.cl\r\n        mid=self.place[x+y*self.cl]\r\n        if (x&lt;2 and y&lt;2) or (x&lt;2 and y&gt;self.cl-3) or (x&gt;self.cl-3 and y&gt;self.cl-3) or (x&gt;self.cl-3 and y&lt;2):\r\n            return False\r\n        elif x&lt;2 or x&gt;self.cl-3:\r\n            if mid==self.place[x+(y-1)*self.cl] and mid==self.place[x+(y-2)*self.cl] and mid==self.place[x+(y+1)*self.cl] and mid==self.place[x+(y+2)*self.cl]:\r\n                return True\r\n        elif y&lt;2 or y&gt;self.cl-3:\r\n            if mid==self.place[x-1+y*self.cl] and mid==self.place[x-2+y*self.cl] and mid==self.place[x+1+y*self.cl] and mid==self.place[x+2+y*self.cl]:\r\n                return True\r\n        else:\r\n            if mid==self.place[x+(y-1)*self.cl] and mid==self.place[x+(y-2)*self.cl] and mid==self.place[x+(y+1)*self.cl] and mid==self.place[x+(y+2)*self.cl]:\r\n                return True\r\n            if mid==self.place[x-1+y*self.cl] and mid==self.place[x-2+y*self.cl] and mid==self.place[x+1+y*self.cl] and mid==self.place[x+2+y*self.cl]:\r\n                return True\r\n            if mid==self.place[x-1+(y-1)*self.cl] and mid==self.place[x-2+(y-2)*self.cl] and mid==self.place[x+1+(y+1)*self.cl] and mid==self.place[x+2+(y+2)*self.cl]:\r\n                return True\r\n            if mid==self.place[x-1+(y+1)*self.cl] and mid==self.place[x-2+(y+2)*self.cl] and mid==self.place[x+1+(y-1)*self.cl] and mid==self.place[x+2+(y-2)*self.cl]:\r\n                return True\r\n    #得到游戏结果，这边主要得到模拟结果用作反馈\r\n    def GetResult(self, playerjm):\r\n        \"\"\" Get the game result from the viewpoint of playerjm. \r\n        \"\"\"\r\n        for i in range(self.all_n):\r\n            if self.place[i]!=0 and self.check(i):   \r\n                if self.place[i] == playerjm:\r\n                    return 1.0\r\n                else:\r\n                    return 0.0\r\n        if self.GetMoves() == []:\r\n            return 0.5 # draw\r\n        assert False\r\n#mcts算法节点部分\r\nclass Node:\r\n    \"\"\" A node in the game tree. Note wins is always from the viewpoint of playerJustMoved.\r\n        Crashes if state not specified.\r\n    \"\"\"\r\n    def __init__(self, move = None, parent = None, state = None):\r\n        self.move = move # the move that got us to this node - \"None\" for the root node\r\n        self.parentNode = parent # \"None\" for the root node\r\n        self.childNodes = []\r\n        self.wins = 0\r\n        self.visits = 0\r\n        self.untriedMoves = state.GetMoves() # future child nodes\r\n        self.playerJustMoved = state.playerJustMoved # the only part of the state that the Node needs later\r\n        \r\n    def UCTSelectChild(self):\r\n        \"\"\" Use the UCB1 formula to select a child node. Often a constant UCTK is applied so we have\r\n            lambda c: c.wins/c.visits + UCTK * sqrt(2*log(self.visits)/c.visits to vary the amount of\r\n            exploration versus exploitation.\r\n        \"\"\"\r\n        s = sorted(self.childNodes, key = lambda c: c.wins/c.visits + sqrt(2*log(self.visits)/c.visits))[-1]\r\n        return s\r\n    \r\n    def AddChild(self, m, s):\r\n        \"\"\" Remove m from untriedMoves and add a new child node for this move.\r\n            Return the added child node\r\n        \"\"\"\r\n        n = Node(move = m, parent = self, state = s)\r\n        self.untriedMoves.remove(m)\r\n        self.childNodes.append(n)\r\n        return n\r\n    \r\n    def Update(self, result):\r\n        \"\"\" Update this node - one additional visit and result additional wins. result must be from the viewpoint of playerJustmoved.\r\n        \"\"\"\r\n        self.visits += 1\r\n        self.wins += result\r\n\r\n    def __repr__(self):\r\n        return \"[M:\" + str(self.move) + \" W/V:\" + str(self.wins) + \"/\" + str(self.visits) + \" U:\" + str(self.untriedMoves) + \"]\"\r\n\r\n    def TreeToString(self, indent):\r\n        s = self.IndentString(indent) + str(self)\r\n        for c in self.childNodes:\r\n             s += c.TreeToString(indent+1)\r\n        return s\r\n\r\n    def IndentString(self,indent):\r\n        s = \"\\n\"\r\n        for i in range (1,indent+1):\r\n            s += \"| \"\r\n        return s\r\n\r\n    def ChildrenToString(self):\r\n        s = \"\"\r\n        for c in self.childNodes:\r\n             s += str(c) + \"\\n\"\r\n        return s\r\n\r\n#mcts算法模拟部分\r\ndef UCT(rootstate, itermax, verbose = False):\r\n    \"\"\" Conduct a UCT search for itermax iterations starting from rootstate.\r\n        Return the best move from the rootstate.\r\n        Assumes 2 alternating players (player 1 starts), with game results in the range [0.0, 1.0].\"\"\"\r\n\r\n    rootnode = Node(state = rootstate)\r\n\r\n    for i in range(itermax):\r\n        node = rootnode\r\n        state = rootstate.Clone()\r\n\r\n        # Select\r\n        while node.untriedMoves == [] and node.childNodes != []: # node is fully expanded and non-terminal\r\n            node = node.UCTSelectChild()\r\n            state.DoMove(node.move)\r\n\r\n        # Expand\r\n        if node.untriedMoves != []: # if we can expand (i.e. state/node is non-terminal)\r\n            m = random.choice(node.untriedMoves) \r\n            state.DoMove(m)\r\n            node = node.AddChild(m,state) # add child and descend tree\r\n\r\n        # Rollout - this can often be made orders of magnitude quicker using a state.GetRandomMove() function\r\n        while state.GetMoves() != []: # while state is non-terminal\r\n            state.DoMove(random.choice(state.GetMoves()))\r\n\r\n        # Backpropagate\r\n        while node != None: # backpropagate from the expanded node and work back to the root node\r\n            node.Update(state.GetResult(node.playerJustMoved)) # state is terminal. Update node with result from POV of node.playerJustMoved\r\n            node = node.parentNode\r\n\r\n    # Output some information about the tree - can be omitted\r\n    #if (verbose): print rootnode.TreeToString(0)\r\n    #else: print rootnode.ChildrenToString()\r\n    #print(rootnode.childNodes)\r\n    return sorted(rootnode.childNodes, key = lambda c: c.visits)[-1].move # return the move that was most visited\r\n#主函数                \r\ndef UCTPlayGame():\r\n    itermax=5000#每一步迭代的次数，越多越准确,但这边只有单分支，应该会有一个上限\r\n    length=8#棋盘长宽\r\n    res=[\"_\"]*length*length\r\n    state = Chess(length)\r\n    save_state=\"\"\r\n    while (not state.checkout() and state.GetMoves()!=[]):\r\n        if state.playerJustMoved == 1:\r\n            m = UCT(rootstate = state, itermax = itermax, verbose = False) #2\r\n            print(\"电脑2下子(\"+str(m-int(m/length)*length)+\" \"+str(int(m/length))+\")\")\r\n            res[m]=\"X\"\r\n        else:\r\n            m = UCT(rootstate = state, itermax = itermax, verbose = False) #1\r\n            print(\"电脑1下子(\"+str(m-int(m/length)*length)+\" \"+str(int(m/length))+\")\")\r\n            #如果想自己和电脑下就注释掉上面两行，再去掉下面两个注释。\r\n            #my=input(\"您下子(格式如:3 4)\\n\").split(\" \")\r\n            #m=int(my[0])+int(my[1])*length\r\n            res[m]=\"O\"\r\n        print(\"Best Move: \" + str(m) + \"\\n\")\r\n        for i in range(length):\r\n            print(\" \".join(res[length*i:length*(i+1)]))\r\n        state.DoMove(m)\r\n    if state.GetResult(state.playerJustMoved) == 1.0:\r\n        print(\"Player \" + str(state.playerJustMoved) + \" wins!\")\r\n    elif state.GetResult(state.playerJustMoved) == 0.0:\r\n        print(\"Player \" + str(3 - state.playerJustMoved) + \" wins!\")\r\n    else: print(\"Nobody wins!\")\r\n\r\nif __name__ == \"__main__\":\r\n    \"\"\" Play a single game to the end using UCT for both players. \r\n    \"\"\"\r\n    UCTPlayGame()</pre>\r\n实验结果：\r\n\r\n以8*8棋盘为例，在每步迭代几千次之后，电脑就基本可以学会档这个技能，但电脑要赢这边还是有点困难，没有多步的规划。\r\n\r\n有时候也会莫名下到棋盘边上的点，想想棋盘边上的点赢的概率应该低吧。这个可能步数不够或者模拟有问题。实验如下图：\r\n\r\n<img class=\"alignnone size-full wp-image-518\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/01/微信图片_20180126111340.png\" alt=\"\" width=\"132\" height=\"174\" />\r\n\r\n灵感来源：<a href=\"https://zhuanlan.zhihu.com/p/32089487\">知乎某讲篇AlphaZero的文章\r\n</a>\r\n\r\n算法代码借鉴：<a href=\"http://mcts.ai\">mcts.ai</a>",
            "post_title": "蒙特卡洛树搜索(mcts)实践--还是五子棋吧",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "515-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-26 11:33:20",
            "post_modified_gmt": "2018-1-26 03:33:20",
            "post_content_filtered": "",
            "post_parent": "515",
            "guid": "http://ganjiacheng.cn/blog/?p=522",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "524",
            "post_author": "1",
            "post_date": "2018-1-29 16:31:06",
            "post_date_gmt": "2018-1-29 08:31:06",
            "post_content": "包括，批量重命名，待更新。。。\r\n\r\n1.批量重命名  changeName.py\r\n<pre>import os\r\nf=os.listdir(\"./\")\r\nf.remove(\"changeName.py\")\r\nj=0\r\nfor i in f:\r\n os.renames(i,str(j)+\".jpg\")\r\n j+=1</pre>\r\n2.实现数组next并循环---js版\r\n<pre>(now+1)%array.length</pre>\r\n3.python字典自动初始化为0\r\n<pre>from collections import defaultdict\r\nd=defaultdict(int)\r\nd['count']+=1</pre>\r\n4.linux 查看端口监听并kill\r\n<pre>netstat -apn|grep 8000\r\n或者\r\nps -aux|grep 8000\r\nkill -9 pid</pre>",
            "post_title": "常用编程小操作",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "132-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-29 16:31:06",
            "post_modified_gmt": "2018-1-29 08:31:06",
            "post_content_filtered": "",
            "post_parent": "132",
            "guid": "http://ganjiacheng.cn/blog/?p=524",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "525",
            "post_author": "1",
            "post_date": "2018-1-31 18:46:21",
            "post_date_gmt": "2018-1-31 10:46:21",
            "post_content": "既然已经接触了股票类金融，便也尝试一下宽客的滋味，至少python编程还是在的，在聚宽创了个号，了解基本的几个股票概念，便开始实践。<!--more-->\r\n\r\n看了很多知乎，雪球大v的文章，了解到<strong>量化</strong>大多也是条充满荆棘的道路，然而这种路走多了好像也习惯了，（绝望多了也享受绝望的感觉了）&lt;-这种feeling很奇妙。不试试咋么知道呢，反正还没到头脑发热的程度，大不了重头再来呗。\r\n\r\n家里人谈股色变，但好像我没咋受影响，自己的路自己走，也没有太多包袱。\r\n\r\n可能我注定不会是一个专精的程序员，从web前端到后台，再到机器学习神经网络；从js到php，再到python，然后到现在写写量化策略。是种历练吧。\r\n\r\n开始说第一个策略把，策略叫聪明钱，注解还是在代码里展示：\r\n<pre># 导入函数库\r\nimport jqdata\r\nimport numpy as np\r\nimport random\r\nimport datetime\r\n\r\n# 初始化函数，设定基准等等\r\ndef initialize(context):\r\n    # 设定沪深300作为基准\r\n    set_benchmark('000300.XSHG')\r\n    # 开启动态复权模式(真实价格)\r\n    set_option('use_real_price', True)\r\n    # 输出内容到日志 log.info()\r\n    # 过滤掉order系列API产生的比error级别低的log\r\n    log.set_level('order', 'error')\r\n    ### 股票相关设定 ###\r\n    # 股票类每笔交易时的手续费是：买入时佣金万分之三，卖出时佣金万分之三加千分之一印花税, 每笔交易佣金最低扣5块钱\r\n    set_order_cost(OrderCost(close_tax=0.001, open_commission=0.0003, close_commission=0.0003, min_commission=5), type='stock')\r\n    #运行，这里按天回测\r\n    run_daily(trade, \"every_bar\")\r\n\r\n#下面三个是过滤器，过滤停牌，摘牌，st的股票\r\ndef paused_filter(security_list):\r\n    current_data=get_current_data()\r\n    security_list=[stock for  stock in security_list if not current_data[stock].paused]\r\n    return security_list\r\n    \r\ndef delisted_filter(security_list):\r\n    current_data=get_current_data()\r\n    security_list=[stock for stock in security_list if not '退' in current_data[stock].name]\r\n    return security_list\r\n\r\ndef st_filter(security_list):\r\n    current_data=get_current_data()\r\n    security_list=[stock for stock in security_list if not current_data[stock].is_st]\r\n    return security_list\r\n\r\n#主要交易\r\ndef trade(context):\r\n    #选择股票，并用一些财务数据简单过滤，挑中100个\r\n    stock_to_choose=get_fundamentals(query(\r\n        valuation.code,valuation.pe_ratio,\r\n        valuation.pb_ratio,valuation.market_cap,\r\n        indicator.eps,indicator.inc_net_profit_annual\r\n    ).filter(\r\n        valuation.pe_ratio&lt;400,\r\n        valuation.pe_ratio&gt;0,\r\n        indicator.eps&gt;0.1,\r\n        indicator.inc_net_profit_annual&gt;0.2,\r\n        indicator.roe&gt;2\r\n    ).order_by(\r\n        valuation.pb_ratio.asc()\r\n    ).limit(\r\n        100\r\n    ), date=None)\r\n    #过滤股票\r\n    stockpool=list(stock_to_choose['code'])\r\n    stockpool=paused_filter(stockpool)\r\n    stockpool=delisted_filter(stockpool)\r\n    stockpool=st_filter(stockpool)\r\n    #选择在每周周五交易\r\n    if context.current_dt.weekday()==4:\r\n        \r\n        all_q={\"stock\":[],\"q\":[]}\r\n        #遍历股票池\r\n        for stock in stockpool:\r\n            #按分钟获取20天的历史数据---收盘价，成交量，成交额\r\n            df=attribute_history(stock,240*20,'1m',['close','volume','money'])\r\n            #计算单笔的平均价格\r\n            vwap_all = df['money'].sum()/df['volume'].sum()\r\n            #计算涨跌幅，定义聪明因子s=涨跌幅除以根号成交量\r\n            data_return=df['close'].pct_change()\r\n            df[\"smart\"]=np.abs(data_return)/np.sqrt(df['volume'])\r\n            #过滤\r\n            df = df[(df['smart']&gt;0) &amp; (df['smart']&lt;np.inf)]\r\n            #按聪明因子s排序\r\n            df=df.sort(\"smart\",ascending=False)\r\n            #计算成交量累积和\r\n            df[\"accumvol\"]=df['volume'].cumsum()\r\n            if len(df[\"accumvol\"].values)==0:\r\n                continue\r\n            #获取总和的前百分之20\r\n            high_acc=df[\"accumvol\"].values[-1]*0.2\r\n            tmp = df[df['accumvol'] &lt;= high_acc]\r\n            \r\n            if tmp['volume'].sum()==0:\r\n                continue\r\n            #截取的单笔的均价\r\n            vwap_smart = tmp['money'].sum()/tmp['volume'].sum()\r\n            #均价相比较\r\n            all_q['stock'].append(stock)\r\n            all_q['q'].append(vwap_smart/vwap_all)\r\n        #获取前百分之2\r\n        tmp_q=pd.DataFrame(all_q)\r\n        q_min=tmp_q[\"q\"].quantile(0)\r\n        q_max=tmp_q[\"q\"].quantile(0.02)\r\n        my_q=tmp_q[tmp_q[\"q\"]&gt;=q_min][tmp_q[\"q\"]&lt;q_max]\r\n        my_stk=my_q['stock'].values\r\n        #获取持仓的股票代码\r\n        slist=list(context.portfolio.positions.keys())\r\n        #不符合的卖出\r\n        for stk in slist:\r\n            if stk not in my_stk:\r\n                order_target_value(stk, 0)\r\n        #符合的买进\r\n        buy_list=[]\r\n        for stock in my_stk:\r\n            if stock not in slist:\r\n                buy_list.append(stock)\r\n        if len(buy_list)==0:\r\n            Cash=context.portfolio.available_cash\r\n        else:\r\n            Cash=context.portfolio.available_cash/len(buy_list)\r\n            for  stock in buy_list:\r\n                order_target_value(stock,Cash)</pre>\r\n回测结果：\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/01/微信图片_20180131184240.png\"><img class=\"alignnone wp-image-528 size-full\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/01/微信图片_20180131184240.png\" alt=\"\" width=\"1019\" height=\"401\" /></a>\r\n\r\n这个策略在16年的时候还是可以的，但在17年回测的时候就不太行了。也了解了策略必须要经常更替，一个策略不可能长时间保持高收益。\r\n\r\n策略来源：<a href=\"https://uqer.io/community/share/578f04e0228e5b3b9b5f1ab7\">https://uqer.io/community/share/578f04e0228e5b3b9b5f1ab7</a>",
            "post_title": "宽客初探---策略之旅",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e5%ae%bd%e5%ae%a2%e5%88%9d%e6%8e%a2-%e7%ad%96%e7%95%a5%e4%b9%8b%e6%97%85",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-31 18:46:21",
            "post_modified_gmt": "2018-1-31 10:46:21",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=525",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "526",
            "post_author": "1",
            "post_date": "2018-1-31 17:09:20",
            "post_date_gmt": "2018-1-31 09:09:20",
            "post_content": "",
            "post_title": "宽客初探---策略之旅",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "525-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-31 17:09:20",
            "post_modified_gmt": "2018-1-31 09:09:20",
            "post_content_filtered": "",
            "post_parent": "525",
            "guid": "http://ganjiacheng.cn/blog/?p=526",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "527",
            "post_author": "1",
            "post_date": "2018-1-31 18:26:38",
            "post_date_gmt": "2018-1-31 10:26:38",
            "post_content": "既然已经接触了股票类金融，便也尝试一下宽客的滋味，至少python编程还是在的，在聚宽创了个号，了解基本的几个股票概念，便开始实践。\r\n\r\n看了很多知乎，雪球大v的文章，了解到<strong>量化</strong>大多也是条充满荆棘的道路，然而这种路走多了好像也习惯了，（绝望多了也享受绝望的感觉了）&lt;-这种feeling很奇妙。不试试咋么知道呢，反正还没到头脑发热的程度，大不了重头再来呗。\r\n\r\n家里人谈股色变，但好像我没咋受影响，自己的路自己走，也没有太多包袱。\r\n\r\n可能我注定不会是一个专精的程序员，从web前端到后台，再到机器学习神经网络；从js到php，再到python，然后到现在写写量化策略。是种历练吧。\r\n\r\n开始说第一个策略把，策略叫聪明钱，注解还是在代码里展示：\r\n<pre># 导入函数库\r\nimport jqdata\r\nimport numpy as np\r\nimport random\r\nimport datetime\r\n\r\n# 初始化函数，设定基准等等\r\ndef initialize(context):\r\n    # 设定沪深300作为基准\r\n    set_benchmark('000300.XSHG')\r\n    # 开启动态复权模式(真实价格)\r\n    set_option('use_real_price', True)\r\n    # 输出内容到日志 log.info()\r\n    # 过滤掉order系列API产生的比error级别低的log\r\n    log.set_level('order', 'error')\r\n    ### 股票相关设定 ###\r\n    # 股票类每笔交易时的手续费是：买入时佣金万分之三，卖出时佣金万分之三加千分之一印花税, 每笔交易佣金最低扣5块钱\r\n    set_order_cost(OrderCost(close_tax=0.001, open_commission=0.0003, close_commission=0.0003, min_commission=5), type='stock')\r\n    #运行，这里按天回测\r\n    run_daily(trade, \"every_bar\")\r\n\r\n#下面三个是过滤器，过滤停牌，摘牌，st的股票\r\ndef paused_filter(security_list):\r\n    current_data=get_current_data()\r\n    security_list=[stock for  stock in security_list if not current_data[stock].paused]\r\n    return security_list\r\n    \r\ndef delisted_filter(security_list):\r\n    current_data=get_current_data()\r\n    security_list=[stock for stock in security_list if not '退' in current_data[stock].name]\r\n    return security_list\r\n\r\ndef st_filter(security_list):\r\n    current_data=get_current_data()\r\n    security_list=[stock for stock in security_list if not current_data[stock].is_st]\r\n    return security_list\r\n\r\n#主要交易\r\ndef trade(context):\r\n    #选择股票，并用一些财务数据简单过滤，挑中100个\r\n    stock_to_choose=get_fundamentals(query(\r\n        valuation.code,valuation.pe_ratio,\r\n        valuation.pb_ratio,valuation.market_cap,\r\n        indicator.eps,indicator.inc_net_profit_annual\r\n    ).filter(\r\n        valuation.pe_ratio&lt;400,\r\n        valuation.pe_ratio&gt;0,\r\n        indicator.eps&gt;0.1,\r\n        indicator.inc_net_profit_annual&gt;0.2,\r\n        indicator.roe&gt;2\r\n    ).order_by(\r\n        valuation.pb_ratio.asc()\r\n    ).limit(\r\n        100\r\n    ), date=None)\r\n    #过滤股票\r\n    stockpool=list(stock_to_choose['code'])\r\n    stockpool=paused_filter(stockpool)\r\n    stockpool=delisted_filter(stockpool)\r\n    stockpool=st_filter(stockpool)\r\n    #选择在每周周五交易\r\n    if context.current_dt.weekday()==4:\r\n        \r\n        all_q={\"stock\":[],\"q\":[]}\r\n        #遍历股票池\r\n        for stock in stockpool:\r\n            #按分钟获取20天的历史数据---收盘价，成交量，成交额\r\n            df=attribute_history(stock,240*20,'1m',['close','volume','money'])\r\n            #计算单笔的平均价格\r\n            vwap_all = df['money'].sum()/df['volume'].sum()\r\n            #计算涨跌幅，定义聪明因子s=涨跌幅除以根号成交量\r\n            data_return=df['close'].pct_change()\r\n            df[\"smart\"]=np.abs(data_return)/np.sqrt(df['volume'])\r\n            #过滤\r\n            df = df[(df['smart']&gt;0) &amp; (df['smart']&lt;np.inf)]\r\n            #按聪明因子s排序\r\n            df=df.sort(\"smart\",ascending=False)\r\n            #计算成交量累积和\r\n            df[\"accumvol\"]=df['volume'].cumsum()\r\n            if len(df[\"accumvol\"].values)==0:\r\n                continue\r\n            high_acc=df[\"accumvol\"].values[-1]*0.2\r\n            tmp = df[df['accumvol'] &lt;= high_acc]\r\n            \r\n            if tmp['volume'].sum()==0:\r\n                continue\r\n            vwap_smart = tmp['money'].sum()/tmp['volume'].sum()\r\n            \r\n            all_q['stock'].append(stock)\r\n            all_q['q'].append(vwap_smart/vwap_all)\r\n            \r\n        tmp_q=pd.DataFrame(all_q)\r\n        q_min=tmp_q[\"q\"].quantile(0)\r\n        q_max=tmp_q[\"q\"].quantile(0.02)\r\n        my_q=tmp_q[tmp_q[\"q\"]&gt;=q_min][tmp_q[\"q\"]&lt;q_max]\r\n        my_stk=my_q['stock'].values\r\n        \r\n        slist=list(context.portfolio.positions.keys())\r\n        \r\n        for stk in slist:\r\n            if stk not in my_stk:\r\n                order_target_value(stk, 0)\r\n        \r\n        buy_list=[]\r\n        for stock in my_stk:\r\n            if stock not in slist:\r\n                buy_list.append(stock)\r\n        if len(buy_list)==0:\r\n            Cash=context.portfolio.available_cash\r\n        else:\r\n            Cash=context.portfolio.available_cash/len(buy_list)\r\n            for  stock in buy_list:\r\n                order_target_value(stock,Cash)\r\n            \r\n    #print(my_q['stock'].values)\r\n    \r\n    \r\n    \r\n</pre>\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n策略来源：<a href=\"https://uqer.io/community/share/578f04e0228e5b3b9b5f1ab7\">https://uqer.io/community/share/578f04e0228e5b3b9b5f1ab7</a>",
            "post_title": "宽客初探---策略之旅",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "525-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-31 18:26:38",
            "post_modified_gmt": "2018-1-31 10:26:38",
            "post_content_filtered": "",
            "post_parent": "525",
            "guid": "http://ganjiacheng.cn/blog/?p=527",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "528",
            "post_author": "1",
            "post_date": "2018-1-31 18:42:48",
            "post_date_gmt": "2018-1-31 10:42:48",
            "post_content": "",
            "post_title": "微信图片_20180131184240",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "%e5%be%ae%e4%bf%a1%e5%9b%be%e7%89%87_20180131184240",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-31 18:42:48",
            "post_modified_gmt": "2018-1-31 10:42:48",
            "post_content_filtered": "",
            "post_parent": "525",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2018/01/微信图片_20180131184240.png",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/png",
            "comment_count": "0"
        },
        {
            "ID": "529",
            "post_author": "1",
            "post_date": "2018-1-31 18:46:21",
            "post_date_gmt": "2018-1-31 10:46:21",
            "post_content": "既然已经接触了股票类金融，便也尝试一下宽客的滋味，至少python编程还是在的，在聚宽创了个号，了解基本的几个股票概念，便开始实践。<!--more-->\r\n\r\n看了很多知乎，雪球大v的文章，了解到<strong>量化</strong>大多也是条充满荆棘的道路，然而这种路走多了好像也习惯了，（绝望多了也享受绝望的感觉了）&lt;-这种feeling很奇妙。不试试咋么知道呢，反正还没到头脑发热的程度，大不了重头再来呗。\r\n\r\n家里人谈股色变，但好像我没咋受影响，自己的路自己走，也没有太多包袱。\r\n\r\n可能我注定不会是一个专精的程序员，从web前端到后台，再到机器学习神经网络；从js到php，再到python，然后到现在写写量化策略。是种历练吧。\r\n\r\n开始说第一个策略把，策略叫聪明钱，注解还是在代码里展示：\r\n<pre># 导入函数库\r\nimport jqdata\r\nimport numpy as np\r\nimport random\r\nimport datetime\r\n\r\n# 初始化函数，设定基准等等\r\ndef initialize(context):\r\n    # 设定沪深300作为基准\r\n    set_benchmark('000300.XSHG')\r\n    # 开启动态复权模式(真实价格)\r\n    set_option('use_real_price', True)\r\n    # 输出内容到日志 log.info()\r\n    # 过滤掉order系列API产生的比error级别低的log\r\n    log.set_level('order', 'error')\r\n    ### 股票相关设定 ###\r\n    # 股票类每笔交易时的手续费是：买入时佣金万分之三，卖出时佣金万分之三加千分之一印花税, 每笔交易佣金最低扣5块钱\r\n    set_order_cost(OrderCost(close_tax=0.001, open_commission=0.0003, close_commission=0.0003, min_commission=5), type='stock')\r\n    #运行，这里按天回测\r\n    run_daily(trade, \"every_bar\")\r\n\r\n#下面三个是过滤器，过滤停牌，摘牌，st的股票\r\ndef paused_filter(security_list):\r\n    current_data=get_current_data()\r\n    security_list=[stock for  stock in security_list if not current_data[stock].paused]\r\n    return security_list\r\n    \r\ndef delisted_filter(security_list):\r\n    current_data=get_current_data()\r\n    security_list=[stock for stock in security_list if not '退' in current_data[stock].name]\r\n    return security_list\r\n\r\ndef st_filter(security_list):\r\n    current_data=get_current_data()\r\n    security_list=[stock for stock in security_list if not current_data[stock].is_st]\r\n    return security_list\r\n\r\n#主要交易\r\ndef trade(context):\r\n    #选择股票，并用一些财务数据简单过滤，挑中100个\r\n    stock_to_choose=get_fundamentals(query(\r\n        valuation.code,valuation.pe_ratio,\r\n        valuation.pb_ratio,valuation.market_cap,\r\n        indicator.eps,indicator.inc_net_profit_annual\r\n    ).filter(\r\n        valuation.pe_ratio&lt;400,\r\n        valuation.pe_ratio&gt;0,\r\n        indicator.eps&gt;0.1,\r\n        indicator.inc_net_profit_annual&gt;0.2,\r\n        indicator.roe&gt;2\r\n    ).order_by(\r\n        valuation.pb_ratio.asc()\r\n    ).limit(\r\n        100\r\n    ), date=None)\r\n    #过滤股票\r\n    stockpool=list(stock_to_choose['code'])\r\n    stockpool=paused_filter(stockpool)\r\n    stockpool=delisted_filter(stockpool)\r\n    stockpool=st_filter(stockpool)\r\n    #选择在每周周五交易\r\n    if context.current_dt.weekday()==4:\r\n        \r\n        all_q={\"stock\":[],\"q\":[]}\r\n        #遍历股票池\r\n        for stock in stockpool:\r\n            #按分钟获取20天的历史数据---收盘价，成交量，成交额\r\n            df=attribute_history(stock,240*20,'1m',['close','volume','money'])\r\n            #计算单笔的平均价格\r\n            vwap_all = df['money'].sum()/df['volume'].sum()\r\n            #计算涨跌幅，定义聪明因子s=涨跌幅除以根号成交量\r\n            data_return=df['close'].pct_change()\r\n            df[\"smart\"]=np.abs(data_return)/np.sqrt(df['volume'])\r\n            #过滤\r\n            df = df[(df['smart']&gt;0) &amp; (df['smart']&lt;np.inf)]\r\n            #按聪明因子s排序\r\n            df=df.sort(\"smart\",ascending=False)\r\n            #计算成交量累积和\r\n            df[\"accumvol\"]=df['volume'].cumsum()\r\n            if len(df[\"accumvol\"].values)==0:\r\n                continue\r\n            #获取总和的前百分之20\r\n            high_acc=df[\"accumvol\"].values[-1]*0.2\r\n            tmp = df[df['accumvol'] &lt;= high_acc]\r\n            \r\n            if tmp['volume'].sum()==0:\r\n                continue\r\n            #截取的单笔的均价\r\n            vwap_smart = tmp['money'].sum()/tmp['volume'].sum()\r\n            #均价相比较\r\n            all_q['stock'].append(stock)\r\n            all_q['q'].append(vwap_smart/vwap_all)\r\n        #获取前百分之2\r\n        tmp_q=pd.DataFrame(all_q)\r\n        q_min=tmp_q[\"q\"].quantile(0)\r\n        q_max=tmp_q[\"q\"].quantile(0.02)\r\n        my_q=tmp_q[tmp_q[\"q\"]&gt;=q_min][tmp_q[\"q\"]&lt;q_max]\r\n        my_stk=my_q['stock'].values\r\n        #获取持仓的股票代码\r\n        slist=list(context.portfolio.positions.keys())\r\n        #不符合的卖出\r\n        for stk in slist:\r\n            if stk not in my_stk:\r\n                order_target_value(stk, 0)\r\n        #符合的买进\r\n        buy_list=[]\r\n        for stock in my_stk:\r\n            if stock not in slist:\r\n                buy_list.append(stock)\r\n        if len(buy_list)==0:\r\n            Cash=context.portfolio.available_cash\r\n        else:\r\n            Cash=context.portfolio.available_cash/len(buy_list)\r\n            for  stock in buy_list:\r\n                order_target_value(stock,Cash)</pre>\r\n回测结果：\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/01/微信图片_20180131184240.png\"><img class=\"alignnone wp-image-528 size-full\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/01/微信图片_20180131184240.png\" alt=\"\" width=\"1019\" height=\"401\" /></a>\r\n\r\n这个策略在16年的时候还是可以的，但在17年回测的时候就不太行了。也了解了策略必须要经常更替，一个策略不可能长时间保持高收益。\r\n\r\n策略来源：<a href=\"https://uqer.io/community/share/578f04e0228e5b3b9b5f1ab7\">https://uqer.io/community/share/578f04e0228e5b3b9b5f1ab7</a>",
            "post_title": "宽客初探---策略之旅",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "525-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-1-31 18:46:21",
            "post_modified_gmt": "2018-1-31 10:46:21",
            "post_content_filtered": "",
            "post_parent": "525",
            "guid": "http://ganjiacheng.cn/blog/?p=529",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "530",
            "post_author": "1",
            "post_date": "2018-2-1 12:08:03",
            "post_date_gmt": "2018-2-1 04:08:03",
            "post_content": "包括，批量重命名，待更新。。。\r\n\r\n1.批量重命名  changeName.py\r\n<pre>import os\r\nf=os.listdir(\"./\")\r\nf.remove(\"changeName.py\")\r\nj=0\r\nfor i in f:\r\n os.renames(i,str(j)+\".jpg\")\r\n j+=1</pre>\r\n2.实现数组next并循环---js版\r\n<pre>(now+1)%array.length</pre>\r\n3.python字典自动初始化为0\r\n<pre>from collections import defaultdict\r\nd=defaultdict(int)\r\nd['count']+=1</pre>\r\n4.linux 查看端口监听并kill\r\n<pre>netstat -apn|grep 8000\r\n或者\r\nps -aux|grep 8000\r\nkill -9 pid</pre>\r\n5.linux开启防火墙\r\n<pre>firewall-cmd --zone=public --add-port=8892/tcp --permanent\r\nsystemctl restart firewalld</pre>",
            "post_title": "常用编程小操作",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "132-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-2-1 12:08:03",
            "post_modified_gmt": "2018-2-1 04:08:03",
            "post_content_filtered": "",
            "post_parent": "132",
            "guid": "http://ganjiacheng.cn/blog/?p=530",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "532",
            "post_author": "1",
            "post_date": "2018-2-7 19:52:28",
            "post_date_gmt": "2018-2-7 11:52:28",
            "post_content": "用 python完成tts的话一般会用pyttsx库，但一般pip下载的话会有各种报错。所以这里找了实际试了可用的github上几个改编的库。<!--more-->\r\n\r\n对于python3.x版本，选择 <a href=\"https://github.com/jpercent/pyttsx\">https://github.com/jpercent/pyttsx</a> ，来完成tts，但python3版本的目前还没发现有保存为音频文件的，只能直接发出声音。代码如下：\r\n<pre>import pyttsx\r\nengine = pyttsx.init()\r\nengine.say(\"你好\")\r\nengine.runAndWait()</pre>\r\n对于python2.7版本，可以选择<a href=\"https://github.com/hick/pyttsx\">https://github.com/hick/pyttsx</a>来完成tts，他可以让文本转为声音并且可以下载保存为wav文件。\r\n\r\n完成tts还需要pywin32，可以到这里下载对应版本，<a href=\"https://github.com/mhammond/pywin32/releases\">https://github.com/mhammond/pywin32/releases</a>，试过目前没错。\r\n\r\n这里使用的环境是在windows8，python2.7版本。如果要读中文的话可以在 控制面板--轻松使用--语音识别--文本到语音转换，看看有没有中文语音库。\r\n\r\n当然还需要准备一个文本文件，在windows，首先把文本转为utf-8格式，具体做法是用记事本打开txt文件，文件--另存为--在编码里选utf-8，保存；\r\n\r\n前戏完成，然后运行下面代码：\r\n<pre>#coding:utf-8\r\nimport pyttsx\r\n\r\n#读取txt文件(txt必须为utf-8编码)\r\ns=open(\"filename.txt\").read()\r\n\r\n#解码为unicode\r\nc=s.decode(\"utf-8\")\r\n\r\n#初始化tts\r\nengine = pyttsx.init()\r\n\r\n#直接发出声音\r\n#engine.say(u\"你好\")\r\n\r\n#保存为文件\r\nengine.rec(c,\"filename.wav\")</pre>",
            "post_title": "用python完成文本转音频(tts)",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e7%94%a8python%e5%ae%8c%e6%88%90%e6%96%87%e6%9c%ac%e8%bd%ac%e9%9f%b3%e9%a2%91tts",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-2-10 13:25:55",
            "post_modified_gmt": "2018-2-10 05:25:55",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=532",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "533",
            "post_author": "1",
            "post_date": "2018-2-7 09:58:59",
            "post_date_gmt": "2018-2-7 01:58:59",
            "post_content": "https://github.com/jpercent/pyttsx\r\n\r\nhttps://github.com/mhammond/pywin32/releases",
            "post_title": "python tts",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "532-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-2-7 09:58:59",
            "post_modified_gmt": "2018-2-7 01:58:59",
            "post_content_filtered": "",
            "post_parent": "532",
            "guid": "http://ganjiacheng.cn/blog/?p=533",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "535",
            "post_author": "1",
            "post_date": "2018-2-7 19:52:28",
            "post_date_gmt": "2018-2-7 11:52:28",
            "post_content": "用 python完成tts的话一般会用pyttsx库，但一般pip下载的话会有各种报错。所以这里找了实际试了可用的github上几个改编的库。<!--more-->\r\n\r\n对于python3.x版本，选择 <a href=\"https://github.com/jpercent/pyttsx\">https://github.com/jpercent/pyttsx</a> ，来完成tts，但python3版本的目前还没发现有保存为音频文件的，只能直接发出声音。代码如下：\r\n<pre>import pyttsx\r\nengine = pyttsx.init()\r\nengine.say(\"你好)\r\nengine.runAndWait()</pre>\r\n对于python2.7版本，可以选择<a href=\"https://github.com/hick/pyttsx\">https://github.com/hick/pyttsx</a>来完成tts，他可以让文本转为声音并且可以下载保存为wav文件。\r\n\r\n完成tts还需要pywin32，可以到这里下载对应版本，<a href=\"https://github.com/mhammond/pywin32/releases\">https://github.com/mhammond/pywin32/releases</a>，试过目前没错。\r\n\r\n这里使用的环境是在windows8，python2.7版本。如果要读中文的话可以在 控制面板--轻松使用--语音识别--文本到语音转换，看看有没有中文语音库。\r\n\r\n当然还需要准备一个文本文件，在windows，首先把文本转为utf-8格式，具体做法是用记事本打开txt文件，文件--另存为--在编码里选utf-8，保存；\r\n\r\n前戏完成，然后运行下面代码：\r\n<pre>#coding:utf-8\r\nimport pyttsx\r\n\r\n#读取txt文件(txt必须为utf-8编码)\r\ns=open(\"filename.txt\").read()\r\n\r\n#解码为unicode\r\nc=s.decode(\"utf-8\")\r\n\r\n#初始化tts\r\nengine = pyttsx.init()\r\n\r\n#直接发出声音\r\n#engine.say(u\"你好\")\r\n\r\n#保存为文件\r\nengine.rec(c,\"filename.wav\")</pre>",
            "post_title": "用python完成文本转音频(tts)",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "532-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-2-7 19:52:28",
            "post_modified_gmt": "2018-2-7 11:52:28",
            "post_content_filtered": "",
            "post_parent": "532",
            "guid": "http://ganjiacheng.cn/blog/?p=535",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "537",
            "post_author": "1",
            "post_date": "2018-2-8 11:31:18",
            "post_date_gmt": "2018-2-8 03:31:18",
            "post_content": "包括，批量重命名，待更新。。。\r\n\r\n1.批量重命名  changeName.py\r\n<pre>import os\r\nf=os.listdir(\"./\")\r\nf.remove(\"changeName.py\")\r\nj=0\r\nfor i in f:\r\n os.renames(i,str(j)+\".jpg\")\r\n j+=1</pre>\r\n2.实现数组next并循环---js版\r\n<pre>(now+1)%array.length</pre>\r\n3.python字典自动初始化为0\r\n<pre>from collections import defaultdict\r\nd=defaultdict(int)\r\nd['count']+=1</pre>\r\n4.linux+windows 查看端口监听并kill\r\n<pre>#linux\r\nnetstat -apn|grep 8000\r\n或者\r\nps -aux|grep 8000\r\nkill -9 pid\r\n\r\n#windows\r\nnetstat -ano|findstr 3000\r\nnetstat -ano</pre>\r\n5.linux开启防火墙\r\n<pre>firewall-cmd --zone=public --add-port=8892/tcp --permanent\r\nsystemctl restart firewalld</pre>",
            "post_title": "常用编程小操作",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "132-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-2-8 11:31:18",
            "post_modified_gmt": "2018-2-8 03:31:18",
            "post_content_filtered": "",
            "post_parent": "132",
            "guid": "http://ganjiacheng.cn/blog/?p=537",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "538",
            "post_author": "1",
            "post_date": "2018-2-10 13:25:55",
            "post_date_gmt": "2018-2-10 05:25:55",
            "post_content": "用 python完成tts的话一般会用pyttsx库，但一般pip下载的话会有各种报错。所以这里找了实际试了可用的github上几个改编的库。<!--more-->\r\n\r\n对于python3.x版本，选择 <a href=\"https://github.com/jpercent/pyttsx\">https://github.com/jpercent/pyttsx</a> ，来完成tts，但python3版本的目前还没发现有保存为音频文件的，只能直接发出声音。代码如下：\r\n<pre>import pyttsx\r\nengine = pyttsx.init()\r\nengine.say(\"你好\")\r\nengine.runAndWait()</pre>\r\n对于python2.7版本，可以选择<a href=\"https://github.com/hick/pyttsx\">https://github.com/hick/pyttsx</a>来完成tts，他可以让文本转为声音并且可以下载保存为wav文件。\r\n\r\n完成tts还需要pywin32，可以到这里下载对应版本，<a href=\"https://github.com/mhammond/pywin32/releases\">https://github.com/mhammond/pywin32/releases</a>，试过目前没错。\r\n\r\n这里使用的环境是在windows8，python2.7版本。如果要读中文的话可以在 控制面板--轻松使用--语音识别--文本到语音转换，看看有没有中文语音库。\r\n\r\n当然还需要准备一个文本文件，在windows，首先把文本转为utf-8格式，具体做法是用记事本打开txt文件，文件--另存为--在编码里选utf-8，保存；\r\n\r\n前戏完成，然后运行下面代码：\r\n<pre>#coding:utf-8\r\nimport pyttsx\r\n\r\n#读取txt文件(txt必须为utf-8编码)\r\ns=open(\"filename.txt\").read()\r\n\r\n#解码为unicode\r\nc=s.decode(\"utf-8\")\r\n\r\n#初始化tts\r\nengine = pyttsx.init()\r\n\r\n#直接发出声音\r\n#engine.say(u\"你好\")\r\n\r\n#保存为文件\r\nengine.rec(c,\"filename.wav\")</pre>",
            "post_title": "用python完成文本转音频(tts)",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "532-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-2-10 13:25:55",
            "post_modified_gmt": "2018-2-10 05:25:55",
            "post_content_filtered": "",
            "post_parent": "532",
            "guid": "http://ganjiacheng.cn/blog/?p=538",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "539",
            "post_author": "1",
            "post_date": "2018-2-13 21:07:02",
            "post_date_gmt": "2018-2-13 13:07:02",
            "post_content": "在上次tts的基础上，这次来完成一个完整的聊天应用。流程为记录音频--读取音频--语音识别（使用百度api）--文本对话（使用图灵机器人api）--tts。<!--more-->\r\n\r\n其余的就直接在代码中解释：\r\n<pre>#python3.x\r\n#aip是百度语言识别AI库，可以到百度免费使用\r\nfrom pyaudio import PyAudio,paInt16\r\nimport numpy as np\r\nfrom datetime import datetime\r\nimport wave\r\nfrom aip import speech\r\nimport requests\r\nimport pyttsx\r\n\r\n#封装成类\r\nclass Chat(object):\r\n    \"\"\"docstring for Chat\"\"\"\r\n    def __init__(self):\r\n        pass      \r\n    #保存二进制数据成wav文件（这里主要是对直接使用二进制还有问题）\r\n    def save_wave_file(self,filename, data):\r\n        wf = wave.open(filename, 'wb')\r\n        wf.setnchannels(1)\r\n        wf.setsampwidth(2)\r\n        wf.setframerate(8000)\r\n        wf.writeframes(b\"\".join(data))\r\n        wf.close()\r\n    #获取用户输入并保存音频，主要借鉴下面网址\r\n    #<a href=\"http://xbd.xao.ac.cn/sites/scipydoc/wave_pyaudio.html#id5\">http://xbd.xao.ac.cn/sites/scipydoc/wave_pyaudio.html#id5</a>\r\n    def get_audio(self):\r\n        NUM_SAMPLES = 2000\r\n        SAMPLING_RATE = 8000\r\n        LEVEL = 1500\r\n        COUNT_NUM = 20\r\n        SAVE_LENGTH = 5\r\n\r\n        pa = PyAudio()\r\n        stream = pa.open(format=paInt16, channels=1, rate=SAMPLING_RATE, input=True, frames_per_buffer=NUM_SAMPLES)\r\n\r\n        save_count = 0\r\n        save_buffer = []\r\n\r\n        while True:\r\n            string_audio_data = stream.read(NUM_SAMPLES)\r\n\r\n            audio_data = np.fromstring(string_audio_data, dtype=np.short)\r\n\r\n            large_sample_count = np.sum(audio_data&gt;LEVEL)\r\n\r\n            print(np.max(audio_data))\r\n\r\n            if large_sample_count&gt;COUNT_NUM:\r\n                save_count = SAVE_LENGTH\r\n            else:\r\n                save_count -= 1\r\n\r\n            if save_count &lt; 0:\r\n                save_count = 0\r\n\r\n            if save_count &gt; 0:\r\n                save_buffer.append(string_audio_data)\r\n            else:\r\n                if len(save_buffer) &gt; 0:\r\n                    filename = \"tmp.wav\" \r\n                    self.save_wave_file(filename, save_buffer)\r\n                    return\r\n    #用百度api语音识别，这里需要填写的三个参数是在百度AI得到\r\n    def trans_audio_to_words(self):\r\n        s = speech.AipSpeech(\"参数1\",\"参数2\",\"参数3\")\r\n        f = open(\"tmp.wav\",\"rb\")\r\n        res = s.asr(speech=f.read(),format=\"wav\",rate=8000,options={'lan':'zh'})\r\n        print(res)\r\n        if res['err_no']==0:\r\n            return res['result']\r\n        else:\r\n            return \"\"\r\n    #获取图灵机器人的谈话交互数据，这里要写key，在图灵机器人得到\r\n    def connect_robot(self,info):\r\n        data = {\r\n            \"key\":\"参数key\",\r\n            \"info\":info,\r\n            \"usid\":\"123456\",\r\n        }\r\n        res = requests.post(\"http://www.tuling123.com/openapi/api\",data=data)\r\n        res_data = res.json()\r\n        print(res_data)\r\n        if res_data['code']==100000:\r\n            return res_data['text']\r\n        else:\r\n            return \"不能识别\"\r\n    #使用tts读返回文字\r\n    def tts(self,words):\r\n        engine = pyttsx.init()\r\n        engine.say(words)\r\n        engine.runAndWait()\r\n\r\n#类使用方法\r\nif __name__=='__main__':\r\n    chat = Chat()\r\n    while True:\r\n        chat.get_audio()\r\n        words = chat.trans_audio_to_words()\r\n        if words == \"\":\r\n            print(\"error\")\r\n        else:\r\n            rres = chat.connect_robot(words)\r\n            chat.tts(rres)</pre>\r\n<p style=\"text-align: left;\">虽然效果不好，反应比较慢，但做完整个流程还是比较惊喜的。</p>\r\n<p style=\"text-align: left;\">另一个缺点便是语音识别效果不是很好，一个可能得改进音频输入，另一个可能百度api就这点识别率或者并没写对参数。</p>\r\n<p style=\"text-align: left;\">但不需要触发关键词，直接便可以开始聊天。</p>",
            "post_title": "Python一个人机聊天的应用",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e4%b8%80%e4%b8%aa%e4%ba%ba%e6%9c%ba%e8%81%8a%e5%a4%a9%e7%9a%84%e5%ba%94%e7%94%a8",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-2-13 21:08:06",
            "post_modified_gmt": "2018-2-13 13:08:06",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=539",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "540",
            "post_author": "1",
            "post_date": "2018-2-13 10:10:44",
            "post_date_gmt": "2018-2-13 02:10:44",
            "post_content": "在上次tts的基础上，这次来完成一个完整的聊天应用。流程为记录音频--读取音频--语音识别（使用百度api）--文本对话（使用图灵机器人api）--tts。",
            "post_title": "一个人机聊天的应用",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "539-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-2-13 10:10:44",
            "post_modified_gmt": "2018-2-13 02:10:44",
            "post_content_filtered": "",
            "post_parent": "539",
            "guid": "http://ganjiacheng.cn/blog/?p=540",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "541",
            "post_author": "1",
            "post_date": "2018-2-13 10:28:50",
            "post_date_gmt": "2018-2-13 02:28:50",
            "post_content": "在上次tts的基础上，这次来完成一个完整的聊天应用。流程为记录音频--读取音频--语音识别（使用百度api）--文本对话（使用图灵机器人api）--tts。\r\n<p style=\"text-align: left;\">类智能音箱的应用前面和之前的一样，在语言识别之后--爬取酷狗搜索解析出mp3源地址--播放。</p>\r\n<p style=\"text-align: left;\"></p>",
            "post_title": "一个人机聊天的应用+类智能音箱的应用",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "539-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-2-13 10:28:50",
            "post_modified_gmt": "2018-2-13 02:28:50",
            "post_content_filtered": "",
            "post_parent": "539",
            "guid": "http://ganjiacheng.cn/blog/?p=541",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "542",
            "post_author": "1",
            "post_date": "2018-2-13 21:07:02",
            "post_date_gmt": "2018-2-13 13:07:02",
            "post_content": "在上次tts的基础上，这次来完成一个完整的聊天应用。流程为记录音频--读取音频--语音识别（使用百度api）--文本对话（使用图灵机器人api）--tts。<!--more-->\r\n\r\n其余的就直接在代码中解释：\r\n<pre>#python3.x\r\n#aip是百度语言识别AI库，可以到百度免费使用\r\nfrom pyaudio import PyAudio,paInt16\r\nimport numpy as np\r\nfrom datetime import datetime\r\nimport wave\r\nfrom aip import speech\r\nimport requests\r\nimport pyttsx\r\n\r\n#封装成类\r\nclass Chat(object):\r\n    \"\"\"docstring for Chat\"\"\"\r\n    def __init__(self):\r\n        pass      \r\n    #保存二进制数据成wav文件（这里主要是对直接使用二进制还有问题）\r\n    def save_wave_file(self,filename, data):\r\n        wf = wave.open(filename, 'wb')\r\n        wf.setnchannels(1)\r\n        wf.setsampwidth(2)\r\n        wf.setframerate(8000)\r\n        wf.writeframes(b\"\".join(data))\r\n        wf.close()\r\n    #获取用户输入并保存音频，主要借鉴下面网址\r\n    #<a href=\"http://xbd.xao.ac.cn/sites/scipydoc/wave_pyaudio.html#id5\">http://xbd.xao.ac.cn/sites/scipydoc/wave_pyaudio.html#id5</a>\r\n    def get_audio(self):\r\n        NUM_SAMPLES = 2000\r\n        SAMPLING_RATE = 8000\r\n        LEVEL = 1500\r\n        COUNT_NUM = 20\r\n        SAVE_LENGTH = 5\r\n\r\n        pa = PyAudio()\r\n        stream = pa.open(format=paInt16, channels=1, rate=SAMPLING_RATE, input=True, frames_per_buffer=NUM_SAMPLES)\r\n\r\n        save_count = 0\r\n        save_buffer = []\r\n\r\n        while True:\r\n            string_audio_data = stream.read(NUM_SAMPLES)\r\n\r\n            audio_data = np.fromstring(string_audio_data, dtype=np.short)\r\n\r\n            large_sample_count = np.sum(audio_data&gt;LEVEL)\r\n\r\n            print(np.max(audio_data))\r\n\r\n            if large_sample_count&gt;COUNT_NUM:\r\n                save_count = SAVE_LENGTH\r\n            else:\r\n                save_count -= 1\r\n\r\n            if save_count &lt; 0:\r\n                save_count = 0\r\n\r\n            if save_count &gt; 0:\r\n                save_buffer.append(string_audio_data)\r\n            else:\r\n                if len(save_buffer) &gt; 0:\r\n                    filename = \"tmp.wav\" \r\n                    self.save_wave_file(filename, save_buffer)\r\n                    return\r\n    #用百度api语音识别，这里需要填写的三个参数是在百度AI得到\r\n    def trans_audio_to_words(self):\r\n        s = speech.AipSpeech(\"参数1\",\"参数2\",\"参数3\")\r\n        f = open(\"tmp.wav\",\"rb\")\r\n        res = s.asr(speech=f.read(),format=\"wav\",rate=8000,options={'lan':'zh'})\r\n        print(res)\r\n        if res['err_no']==0:\r\n            return res['result']\r\n        else:\r\n            return \"\"\r\n    #获取图灵机器人的谈话交互数据，这里要写key，在图灵机器人得到\r\n    def connect_robot(self,info):\r\n        data = {\r\n            \"key\":\"参数key\",\r\n            \"info\":info,\r\n            \"usid\":\"123456\",\r\n        }\r\n        res = requests.post(\"http://www.tuling123.com/openapi/api\",data=data)\r\n        res_data = res.json()\r\n        print(res_data)\r\n        if res_data['code']==100000:\r\n            return res_data['text']\r\n        else:\r\n            return \"不能识别\"\r\n    #使用tts读返回文字\r\n    def tts(self,words):\r\n        engine = pyttsx.init()\r\n        engine.say(words)\r\n        engine.runAndWait()\r\n\r\n#类使用方法\r\nif __name__=='__main__':\r\n    chat = Chat()\r\n    while True:\r\n        chat.get_audio()\r\n        words = chat.trans_audio_to_words()\r\n        if words == \"\":\r\n            print(\"error\")\r\n        else:\r\n            rres = chat.connect_robot(words)\r\n            chat.tts(rres)</pre>\r\n<p style=\"text-align: left;\">虽然效果不好，反应比较慢，但做完整个流程还是比较惊喜的。</p>\r\n<p style=\"text-align: left;\">另一个缺点便是语音识别效果不是很好，一个可能得改进音频输入，另一个可能百度api就这点识别率或者并没写对参数。</p>\r\n<p style=\"text-align: left;\">但不需要触发关键词，直接便可以开始聊天。</p>",
            "post_title": "一个人机聊天的应用",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "539-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-2-13 21:07:02",
            "post_modified_gmt": "2018-2-13 13:07:02",
            "post_content_filtered": "",
            "post_parent": "539",
            "guid": "http://ganjiacheng.cn/blog/?p=542",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "543",
            "post_author": "1",
            "post_date": "2018-2-13 21:07:20",
            "post_date_gmt": "2018-2-13 13:07:20",
            "post_content": "在上次tts的基础上，这次来完成一个完整的聊天应用。流程为记录音频--读取音频--语音识别（使用百度api）--文本对话（使用图灵机器人api）--tts。<!--more-->\n\n其余的就直接在代码中解释：\n<pre>#python3.x\n#aip是百度语言识别AI库，可以到百度免费使用\nfrom pyaudio import PyAudio,paInt16\nimport numpy as np\nfrom datetime import datetime\nimport wave\nfrom aip import speech\nimport requests\nimport pyttsx\n\n#封装成类\nclass Chat(object):\n    \"\"\"docstring for Chat\"\"\"\n    def __init__(self):\n        pass      \n    #保存二进制数据成wav文件（这里主要是对直接使用二进制还有问题）\n    def save_wave_file(self,filename, data):\n        wf = wave.open(filename, 'wb')\n        wf.setnchannels(1)\n        wf.setsampwidth(2)\n        wf.setframerate(8000)\n        wf.writeframes(b\"\".join(data))\n        wf.close()\n    #获取用户输入并保存音频，主要借鉴下面网址\n    #<a href=\"http://xbd.xao.ac.cn/sites/scipydoc/wave_pyaudio.html#id5\">http://xbd.xao.ac.cn/sites/scipydoc/wave_pyaudio.html#id5</a>\n    def get_audio(self):\n        NUM_SAMPLES = 2000\n        SAMPLING_RATE = 8000\n        LEVEL = 1500\n        COUNT_NUM = 20\n        SAVE_LENGTH = 5\n\n        pa = PyAudio()\n        stream = pa.open(format=paInt16, channels=1, rate=SAMPLING_RATE, input=True, frames_per_buffer=NUM_SAMPLES)\n\n        save_count = 0\n        save_buffer = []\n\n        while True:\n            string_audio_data = stream.read(NUM_SAMPLES)\n\n            audio_data = np.fromstring(string_audio_data, dtype=np.short)\n\n            large_sample_count = np.sum(audio_data&gt;LEVEL)\n\n            print(np.max(audio_data))\n\n            if large_sample_count&gt;COUNT_NUM:\n                save_count = SAVE_LENGTH\n            else:\n                save_count -= 1\n\n            if save_count &lt; 0:\n                save_count = 0\n\n            if save_count &gt; 0:\n                save_buffer.append(string_audio_data)\n            else:\n                if len(save_buffer) &gt; 0:\n                    filename = \"tmp.wav\" \n                    self.save_wave_file(filename, save_buffer)\n                    return\n    #用百度api语音识别，这里需要填写的三个参数是在百度AI得到\n    def trans_audio_to_words(self):\n        s = speech.AipSpeech(\"参数1\",\"参数2\",\"参数3\")\n        f = open(\"tmp.wav\",\"rb\")\n        res = s.asr(speech=f.read(),format=\"wav\",rate=8000,options={'lan':'zh'})\n        print(res)\n        if res['err_no']==0:\n            return res['result']\n        else:\n            return \"\"\n    #获取图灵机器人的谈话交互数据，这里要写key，在图灵机器人得到\n    def connect_robot(self,info):\n        data = {\n            \"key\":\"参数key\",\n            \"info\":info,\n            \"usid\":\"123456\",\n        }\n        res = requests.post(\"http://www.tuling123.com/openapi/api\",data=data)\n        res_data = res.json()\n        print(res_data)\n        if res_data['code']==100000:\n            return res_data['text']\n        else:\n            return \"不能识别\"\n    #使用tts读返回文字\n    def tts(self,words):\n        engine = pyttsx.init()\n        engine.say(words)\n        engine.runAndWait()\n\n#类使用方法\nif __name__=='__main__':\n    chat = Chat()\n    while True:\n        chat.get_audio()\n        words = chat.trans_audio_to_words()\n        if words == \"\":\n            print(\"error\")\n        else:\n            rres = chat.connect_robot(words)\n            chat.tts(rres)</pre>\n<p style=\"text-align: left;\">虽然效果不好，反应比较慢，但做完整个流程还是比较惊喜的。</p>\n<p style=\"text-align: left;\">另一个缺点便是语音识别效果不是很好，一个可能得改进音频输入，另一个可能百度api就这点识别率或者并没写对参数。</p>\n<p style=\"text-align: left;\">但不需要触发关键词，直接便可以开始聊天。</p>",
            "post_title": "一个人机聊天的应用",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "539-autosave-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-2-13 21:07:20",
            "post_modified_gmt": "2018-2-13 13:07:20",
            "post_content_filtered": "",
            "post_parent": "539",
            "guid": "http://ganjiacheng.cn/blog/?p=543",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "544",
            "post_author": "1",
            "post_date": "2018-2-13 21:08:06",
            "post_date_gmt": "2018-2-13 13:08:06",
            "post_content": "在上次tts的基础上，这次来完成一个完整的聊天应用。流程为记录音频--读取音频--语音识别（使用百度api）--文本对话（使用图灵机器人api）--tts。<!--more-->\r\n\r\n其余的就直接在代码中解释：\r\n<pre>#python3.x\r\n#aip是百度语言识别AI库，可以到百度免费使用\r\nfrom pyaudio import PyAudio,paInt16\r\nimport numpy as np\r\nfrom datetime import datetime\r\nimport wave\r\nfrom aip import speech\r\nimport requests\r\nimport pyttsx\r\n\r\n#封装成类\r\nclass Chat(object):\r\n    \"\"\"docstring for Chat\"\"\"\r\n    def __init__(self):\r\n        pass      \r\n    #保存二进制数据成wav文件（这里主要是对直接使用二进制还有问题）\r\n    def save_wave_file(self,filename, data):\r\n        wf = wave.open(filename, 'wb')\r\n        wf.setnchannels(1)\r\n        wf.setsampwidth(2)\r\n        wf.setframerate(8000)\r\n        wf.writeframes(b\"\".join(data))\r\n        wf.close()\r\n    #获取用户输入并保存音频，主要借鉴下面网址\r\n    #<a href=\"http://xbd.xao.ac.cn/sites/scipydoc/wave_pyaudio.html#id5\">http://xbd.xao.ac.cn/sites/scipydoc/wave_pyaudio.html#id5</a>\r\n    def get_audio(self):\r\n        NUM_SAMPLES = 2000\r\n        SAMPLING_RATE = 8000\r\n        LEVEL = 1500\r\n        COUNT_NUM = 20\r\n        SAVE_LENGTH = 5\r\n\r\n        pa = PyAudio()\r\n        stream = pa.open(format=paInt16, channels=1, rate=SAMPLING_RATE, input=True, frames_per_buffer=NUM_SAMPLES)\r\n\r\n        save_count = 0\r\n        save_buffer = []\r\n\r\n        while True:\r\n            string_audio_data = stream.read(NUM_SAMPLES)\r\n\r\n            audio_data = np.fromstring(string_audio_data, dtype=np.short)\r\n\r\n            large_sample_count = np.sum(audio_data&gt;LEVEL)\r\n\r\n            print(np.max(audio_data))\r\n\r\n            if large_sample_count&gt;COUNT_NUM:\r\n                save_count = SAVE_LENGTH\r\n            else:\r\n                save_count -= 1\r\n\r\n            if save_count &lt; 0:\r\n                save_count = 0\r\n\r\n            if save_count &gt; 0:\r\n                save_buffer.append(string_audio_data)\r\n            else:\r\n                if len(save_buffer) &gt; 0:\r\n                    filename = \"tmp.wav\" \r\n                    self.save_wave_file(filename, save_buffer)\r\n                    return\r\n    #用百度api语音识别，这里需要填写的三个参数是在百度AI得到\r\n    def trans_audio_to_words(self):\r\n        s = speech.AipSpeech(\"参数1\",\"参数2\",\"参数3\")\r\n        f = open(\"tmp.wav\",\"rb\")\r\n        res = s.asr(speech=f.read(),format=\"wav\",rate=8000,options={'lan':'zh'})\r\n        print(res)\r\n        if res['err_no']==0:\r\n            return res['result']\r\n        else:\r\n            return \"\"\r\n    #获取图灵机器人的谈话交互数据，这里要写key，在图灵机器人得到\r\n    def connect_robot(self,info):\r\n        data = {\r\n            \"key\":\"参数key\",\r\n            \"info\":info,\r\n            \"usid\":\"123456\",\r\n        }\r\n        res = requests.post(\"http://www.tuling123.com/openapi/api\",data=data)\r\n        res_data = res.json()\r\n        print(res_data)\r\n        if res_data['code']==100000:\r\n            return res_data['text']\r\n        else:\r\n            return \"不能识别\"\r\n    #使用tts读返回文字\r\n    def tts(self,words):\r\n        engine = pyttsx.init()\r\n        engine.say(words)\r\n        engine.runAndWait()\r\n\r\n#类使用方法\r\nif __name__=='__main__':\r\n    chat = Chat()\r\n    while True:\r\n        chat.get_audio()\r\n        words = chat.trans_audio_to_words()\r\n        if words == \"\":\r\n            print(\"error\")\r\n        else:\r\n            rres = chat.connect_robot(words)\r\n            chat.tts(rres)</pre>\r\n<p style=\"text-align: left;\">虽然效果不好，反应比较慢，但做完整个流程还是比较惊喜的。</p>\r\n<p style=\"text-align: left;\">另一个缺点便是语音识别效果不是很好，一个可能得改进音频输入，另一个可能百度api就这点识别率或者并没写对参数。</p>\r\n<p style=\"text-align: left;\">但不需要触发关键词，直接便可以开始聊天。</p>",
            "post_title": "Python一个人机聊天的应用",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "539-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-2-13 21:08:06",
            "post_modified_gmt": "2018-2-13 13:08:06",
            "post_content_filtered": "",
            "post_parent": "539",
            "guid": "http://ganjiacheng.cn/blog/?p=544",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "545",
            "post_author": "1",
            "post_date": "2018-2-14 10:43:33",
            "post_date_gmt": "0-0-0 00:00:00",
            "post_content": "",
            "post_title": "用tensorflow来试试LSTM",
            "post_excerpt": "",
            "post_status": "draft",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-2-14 10:43:33",
            "post_modified_gmt": "2018-2-14 02:43:33",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=545",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "549",
            "post_author": "1",
            "post_date": "2018-2-26 18:44:10",
            "post_date_gmt": "2018-2-26 10:44:10",
            "post_content": "新尝试另一个语言node.js和框架express，记录一些基本的操作与技巧。<!--more-->\r\n\r\n此次最大的不同是node.js是异步的，有些操作就不那么直观。\r\n\r\n这里在linux centos做测试。前提先安装好node.js和npm。\r\n\r\n这里也类似上次flask完成一个登陆与增删改操作的接口。\r\n\r\n先用命令行直接生成一个项目\r\n<pre class=\"language-sh\"><code class=\"language-sh\" translate=\"no\">npm install express-generator -g\r\nexpress --view=pug myapp\r\n</code>cd myapp &amp;&amp; npm install npm start<code class=\"language-sh\" translate=\"no\"></code></pre>\r\napp.js主文件\r\n<pre>//最后两个为session所需库，还有mongodb库，需自行下载\r\n//npm install --save express-session,session-file-store,mongodb\r\nvar express = require('express');\r\nvar path = require('path');\r\nvar favicon = require('serve-favicon');\r\nvar logger = require('morgan');\r\nvar cookieParser = require('cookie-parser');\r\nvar bodyParser = require('body-parser');\r\nvar session = require('express-session');\r\nvar FileStore = require('session-file-store')(session);\r\n\r\n#引入路由文件\r\nvar RetInfo = require(\"./common/retinfo\");\r\nvar index = require('./routes/index');\r\nvar users = require('./routes/users');\r\nvar manage = require('./routes/manage');\r\n\r\nvar app = express();\r\n\r\n// view engine setup\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.set('view engine', 'pug');\r\n\r\n//解析请求body\r\n// uncomment after placing your favicon in /public\r\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\r\napp.use(logger('dev'));\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n//开启并设置session\r\napp.use(session({\r\n    secret: 'chyingp',\r\n    store: new FileStore(),\r\n    saveUninitialized: false,\r\n    resave: false,\r\n    cookie: {\r\n        maxAge: 24*60*60*1000\r\n    }\r\n}));\r\n//绑定路由，中间件\r\napp.use('/', index);\r\napp.use('/users', users);\r\n//不设置的则下面的路由都会运行这个函数\r\napp.use(function(req,res,next) {\r\n    var sess = req.session;\r\n    var loginUser = sess.loginUser;\r\n    if(loginUser===undefined) return res.json(RetInfo.error(\"login out\"));\r\n    next();\r\n});\r\n//绑定另一个中间件，需登录后\r\napp.use('/manage',manage);\r\n//错误处理\r\n// catch 404 and forward to error handler\r\napp.use(function(req, res, next) {\r\n  var err = new Error('Not Found');\r\n  err.status = 404;\r\n  next(err);\r\n});\r\n\r\n// error handler\r\napp.use(function(err, req, res, next) {\r\n  // set locals, only providing error in development\r\n  res.locals.message = err.message;\r\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\r\n\r\n  // render the error page\r\n  res.status(err.status || 500);\r\n  res.render('error');\r\n});\r\n\r\nmodule.exports = app;</pre>\r\n根目录下 新建一个文件夹common/用于存放通用函数，下面写了两种形式。\r\n\r\ncommon/retinfo.js 用于接口返回数据\r\n<pre>module.exports = {\r\n    response : function(sts,msg) {\r\n        return {\"sts\":sts,\"msg\":msg}\r\n    },\r\n    success : function() {\r\n        return this.response(1,\"success\")\r\n    },\r\n    error : function(msg) {\r\n        return this.response(-1,msg)\r\n    },\r\n    dberr : function(msg) {\r\n        return this.response(-1,\"db error\");\r\n    }\r\n}</pre>\r\ncommon/mongodb.js 用于数据库操作,这里使用了promise，因为mongodb操作后会有回调函数，不方便调用，写成promise就可以用then进行下去。\r\n<pre>//use for mongodb database \r\n\r\nvar MongoClient = require('mongodb').MongoClient;\r\n\r\nfunction Mongodb(dbName, colName){\r\n\r\n    this.dbName = dbName;\r\n    this.colName = colName;\r\n    this.url = 'mongodb://localhost:27017/';\r\n\r\n    this.fetch = function(params){\r\n        //回调函数里没法获取到外部的this，所以再定义一下that\r\n        var that = this;\r\n        return new Promise(function(resolve, reject, notufy) {\r\n            MongoClient.connect(that.url, function(err, db){\r\n                if(err) reject(err);\r\n                var dbo = db.db(that.dbName);\r\n                dbo.collection(that.colName).find(params).toArray(function(err, res){\r\n                    if(err) reject(err);\r\n                    resolve(res);\r\n                    db.close();\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    this.save = function(params){\r\n        var that = this;\r\n        return new Promise(function(resolve, reject, notufy){\r\n            MongoClient.connect(that.url, function(err, db){\r\n                if(err) reject(err);\r\n                var dbo = db.db(that.dbName);\r\n                dbo.collection(that.colName).insertOne(params, function(err, res){\r\n                    if(err) reject(err);\r\n                    resolve(res);\r\n                    db.close();\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    this.delete = function(params){\r\n        var that = this;\r\n        return new Promise(function(resolve, reject, notufy){\r\n            MongoClient.connect(that.url, function(err, db){\r\n                if(err) reject(err);\r\n                var dbo = db.db(that.dbName);\r\n                dbo.collection(that.colName).deleteOne(params, function(err, res){\r\n                    if(err) reject(err);\r\n                    resolve(res);\r\n                    db.close();\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    this.update = function(whparams,params){\r\n        var that = this;\r\n        return new Promise(function(resolve, reject, notufy){\r\n            MongoClient.connect(that.url, function(err, db){\r\n                if(err) reject(err);\r\n                var dbo = db.db(that.dbName);\r\n                dbo.collection(that.colName).updateOne(whparams, {$set:params}, function(err, res){\r\n                    if(err) reject(err);\r\n                    resolve(res);\r\n                    db.close();\r\n                });\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nmodule.exports = Mongodb;</pre>\r\n然后编写中间件routes/users.js\r\n<pre>var express = require('express');\r\nvar router = express.Router();\r\nvar RetInfo = require(\"../common/retinfo\");\r\n//登录\r\nrouter.get('/login', function(req, res, next) {\r\n    username = req.query.username;\r\n    password = req.query.password;\r\n    \r\n    if(!username || !password) return res.json(RetInfo.error(\"lack of params\"));\r\n\r\n    if(username == \"admin\" &amp;&amp; password == \"admin\"){\r\n        \r\n        req.session.regenerate(function(err) {\r\n            if(err) return res.json(RetInfo.error(\"login error\"));\r\n            req.session.loginUser = username;\r\n            return res.json(RetInfo.success());\r\n        });\r\n\r\n    }else{\r\n        return res.json(RetInfo.error(\"username or password error\"));\r\n    }\r\n});\r\n//登出\r\nrouter.get(\"/loginout\", function(req, res, next) {\r\n    req.session.destroy(function(err) {\r\n        if(err) return res.json(RetInfo.error(\"login out error\"));\r\n        return res.json(RetInfo.success());\r\n    });\r\n})\r\n\r\nmodule.exports = router;</pre>\r\nroutes/manage.js  这里写了一般的增删改操作\r\n<pre>var express = require('express');\r\nvar router = express.Router();\r\nvar RetInfo = require(\"../common/retinfo\");\r\n\r\nvar Mongo = require(\"../common/mongodb\");\r\nDB_POSTS = new Mongo(\"test_database\",\"posts\");\r\n//获取数据\r\nrouter.get(\"/\",function(req, res, next){\r\n    DB_POSTS.fetch({}).then((data)=&gt;{\r\n        return res.send(data);\r\n    },(err)=&gt;{\r\n        return res.send(RetInfo.error(err.message));\r\n    });\r\n})\r\n//增加\r\n.post(\"/\",function(req, res, next){\r\n    DB_POSTS.save(req.body).then((data)=&gt;{\r\n        return res.send(RetInfo.success());\r\n    },(err)=&gt;{\r\n        return res.send(RetInfo.error(err.message));\r\n    });\r\n})\r\n//删除\r\n.delete(\"/\",function(req, res, next){\r\n    data={\"_id\":req.query.id}\r\n    DB_POSTS.delete(data).then((data)=&gt;{\r\n        return res.send(data)\r\n    },(err)=&gt;{\r\n        return res.send(RetInfo.error(err.message))\r\n    });\r\n})\r\n//修改\r\n.put(\"/\",function(req, res, next){\r\n    const params = req.body;\r\n    DB_POSTS.update({\"_id\":params.id},params).then((data)=&gt;{\r\n        return res.send(RetInfo.success());\r\n    },(err)=&gt;{\r\n        return res.send(RetInfo.error(err.message));\r\n    })\r\n})\r\n\r\nmodule.exports = router;</pre>\r\n运行的话可以有很多方法\r\n<pre>一般运行\r\nnpm start\r\ndebug模式\r\nDEBUG=myapp:* npm start\r\n开发修改后自动重启\r\nnodemon app.js\r\n后台一直运行\r\nforever start ./bin/www</pre>\r\n后言：对于js语法 es6等还比较生疏，并没有涉及，可能有待改进，但总怕麻烦。。。。",
            "post_title": "node+express+mongodb初试",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "nodeexpressmongodb%e5%88%9d%e8%af%95",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-2-28 15:07:08",
            "post_modified_gmt": "2018-2-28 07:07:08",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=549",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "550",
            "post_author": "1",
            "post_date": "2018-2-26 17:54:40",
            "post_date_gmt": "2018-2-26 09:54:40",
            "post_content": "新尝试另一个语言node.js和框架express，记录一些基本的操作与技巧。\r\n\r\n此次最大的不同是node.js是异步的，有些操作就不那么直观。\r\n\r\n这里在linux centos做测试。前提先安装好node.js和npm。\r\n\r\n这里也类似上次flask完成一个登陆与增删改操作的接口。\r\n\r\n先用命令行直接生成一个项目\r\n<pre class=\"language-sh\"><code class=\"language-sh\" translate=\"no\">npm install express-generator -g\r\nexpress --view=pug myapp\r\n</code>cd myapp &amp;&amp; npm install\r\nnpm start<code class=\"language-sh\" translate=\"no\"></code></pre>\r\napp.js\r\n<pre>//最后两个为session所需库，还有mongodb库，需自行下载\r\n//npm install --save express-session,session-file-store,mongodb\r\nvar express = require('express');\r\nvar path = require('path');\r\nvar favicon = require('serve-favicon');\r\nvar logger = require('morgan');\r\nvar cookieParser = require('cookie-parser');\r\nvar bodyParser = require('body-parser');\r\nvar session = require('express-session');\r\nvar FileStore = require('session-file-store')(session);\r\n\r\n#引入路由文件\r\nvar RetInfo = require(\"./common/retinfo\");\r\nvar index = require('./routes/index');\r\nvar users = require('./routes/users');\r\nvar manage = require('./routes/manage');\r\n\r\nvar app = express();\r\n\r\n// view engine setup\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.set('view engine', 'pug');\r\n\r\n#解析请求body\r\n// uncomment after placing your favicon in /public\r\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\r\napp.use(logger('dev'));\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\n</pre>",
            "post_title": "node+express+mongodb初试",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "549-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-2-26 17:54:40",
            "post_modified_gmt": "2018-2-26 09:54:40",
            "post_content_filtered": "",
            "post_parent": "549",
            "guid": "http://ganjiacheng.cn/blog/?p=550",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "551",
            "post_author": "1",
            "post_date": "2018-2-26 18:44:10",
            "post_date_gmt": "2018-2-26 10:44:10",
            "post_content": "新尝试另一个语言node.js和框架express，记录一些基本的操作与技巧。<!--more-->\r\n\r\n此次最大的不同是node.js是异步的，有些操作就不那么直观。\r\n\r\n这里在linux centos做测试。前提先安装好node.js和npm。\r\n\r\n这里也类似上次flask完成一个登陆与增删改操作的接口。\r\n\r\n先用命令行直接生成一个项目\r\n<pre class=\"language-sh\"><code class=\"language-sh\" translate=\"no\">npm install express-generator -g\r\nexpress --view=pug myapp\r\n</code>cd myapp &amp;&amp; npm install npm start<code class=\"language-sh\" translate=\"no\"></code></pre>\r\napp.js主文件\r\n<pre>//最后两个为session所需库，还有mongodb库，需自行下载\r\n//npm install --save express-session,session-file-store,mongodb\r\nvar express = require('express');\r\nvar path = require('path');\r\nvar favicon = require('serve-favicon');\r\nvar logger = require('morgan');\r\nvar cookieParser = require('cookie-parser');\r\nvar bodyParser = require('body-parser');\r\nvar session = require('express-session');\r\nvar FileStore = require('session-file-store')(session);\r\n\r\n#引入路由文件\r\nvar RetInfo = require(\"./common/retinfo\");\r\nvar index = require('./routes/index');\r\nvar users = require('./routes/users');\r\nvar manage = require('./routes/manage');\r\n\r\nvar app = express();\r\n\r\n// view engine setup\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.set('view engine', 'pug');\r\n\r\n//解析请求body\r\n// uncomment after placing your favicon in /public\r\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\r\napp.use(logger('dev'));\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n//开启并设置session\r\napp.use(session({\r\n    secret: 'chyingp',\r\n    store: new FileStore(),\r\n    saveUninitialized: false,\r\n    resave: false,\r\n    cookie: {\r\n        maxAge: 24*60*60*1000\r\n    }\r\n}));\r\n//绑定路由，中间件\r\napp.use('/', index);\r\napp.use('/users', users);\r\n//不设置的则下面的路由都会运行这个函数\r\napp.use(function(req,res,next) {\r\n    var sess = req.session;\r\n    var loginUser = sess.loginUser;\r\n    if(loginUser===undefined) return res.json(RetInfo.error(\"login out\"));\r\n    next();\r\n});\r\n//绑定另一个中间件，需登录后\r\napp.use('/manage',manage);\r\n//错误处理\r\n// catch 404 and forward to error handler\r\napp.use(function(req, res, next) {\r\n  var err = new Error('Not Found');\r\n  err.status = 404;\r\n  next(err);\r\n});\r\n\r\n// error handler\r\napp.use(function(err, req, res, next) {\r\n  // set locals, only providing error in development\r\n  res.locals.message = err.message;\r\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\r\n\r\n  // render the error page\r\n  res.status(err.status || 500);\r\n  res.render('error');\r\n});\r\n\r\nmodule.exports = app;</pre>\r\n根目录下 新建一个文件夹common/用于存放通用函数，下面写了两种形式。\r\n\r\ncommon/retinfo.js 用于接口返回数据\r\n<pre>module.exports = {\r\n    response : function(sts,msg) {\r\n        return {\"sts\":sts,\"msg\":msg}\r\n    },\r\n    success : function() {\r\n        return this.response(1,\"success\")\r\n    },\r\n    error : function(msg) {\r\n        return this.response(-1,msg)\r\n    },\r\n    dberr : function(msg) {\r\n        return this.response(-1,\"db error\");\r\n    }\r\n}</pre>\r\ncommon/mongodb.js 用于数据库操作,这里使用了promise，因为mongodb操作后会有回调函数，不方便调用，写成promise就可以用then进行下去。\r\n<pre>//use for mongodb database \r\n\r\nvar MongoClient = require('mongodb').MongoClient;\r\n\r\nfunction Mongodb(dbName, colName){\r\n\r\n    this.dbName = dbName;\r\n    this.colName = colName;\r\n    this.url = 'mongodb://localhost:27017/';\r\n\r\n    this.fetch = function(params){\r\n        //回调函数里没法获取到外部的this，所以再定义一下that\r\n        var that = this;\r\n        return new Promise(function(resolve, reject, notufy) {\r\n            MongoClient.connect(that.url, function(err, db){\r\n                if(err) reject(err);\r\n                var dbo = db.db(that.dbName);\r\n                dbo.collection(that.colName).find(params).toArray(function(err, res){\r\n                    if(err) reject(err);\r\n                    resolve(res);\r\n                    db.close();\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    this.save = function(params){\r\n        var that = this;\r\n        return new Promise(function(resolve, reject, notufy){\r\n            MongoClient.connect(that.url, function(err, db){\r\n                if(err) reject(err);\r\n                var dbo = db.db(that.dbName);\r\n                dbo.collection(that.colName).insertOne(params, function(err, res){\r\n                    if(err) reject(err);\r\n                    resolve(res);\r\n                    db.close();\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    this.delete = function(params){\r\n        var that = this;\r\n        return new Promise(function(resolve, reject, notufy){\r\n            MongoClient.connect(that.url, function(err, db){\r\n                if(err) reject(err);\r\n                var dbo = db.db(that.dbName);\r\n                dbo.collection(that.colName).deleteOne(params, function(err, res){\r\n                    if(err) reject(err);\r\n                    resolve(res);\r\n                    db.close();\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    this.update = function(whparams,params){\r\n        var that = this;\r\n        return new Promise(function(resolve, reject, notufy){\r\n            MongoClient.connect(that.url, function(err, db){\r\n                if(err) reject(err);\r\n                var dbo = db.db(that.dbName);\r\n                dbo.collection(that.colName).updateOne(whparams, {$set:params}, function(err, res){\r\n                    if(err) reject(err);\r\n                    resolve(res);\r\n                    db.close();\r\n                });\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nmodule.exports = Mongodb;</pre>\r\n然后编写中间件routes/users.js\r\n<pre>var express = require('express');\r\nvar router = express.Router();\r\nvar RetInfo = require(\"../common/retinfo\");\r\n//登录\r\nrouter.get('/login', function(req, res, next) {\r\n    username = req.query.username;\r\n    password = req.query.password;\r\n    \r\n    if(!username || !password) return res.json(RetInfo.error(\"lack of params\"));\r\n\r\n    if(username == \"admin\" &amp;&amp; password == \"admin\"){\r\n        \r\n        req.session.regenerate(function(err) {\r\n            if(err) return res.json(RetInfo.error(\"login error\"));\r\n            req.session.loginUser = username;\r\n            return res.json(RetInfo.success());\r\n        });\r\n\r\n    }else{\r\n        return res.json(RetInfo.error(\"username or password error\"));\r\n    }\r\n});\r\n//登出\r\nrouter.get(\"/loginout\", function(req, res, next) {\r\n    req.session.destroy(function(err) {\r\n        if(err) return res.json(RetInfo.error(\"login out error\"));\r\n        return res.json(RetInfo.success());\r\n    });\r\n})\r\n\r\nmodule.exports = router;</pre>\r\nroutes/manage.js  这里写了一般的增删改操作\r\n<pre>var express = require('express');\r\nvar router = express.Router();\r\nvar RetInfo = require(\"../common/retinfo\");\r\n\r\nvar Mongo = require(\"../common/mongodb\");\r\nDB_POSTS = new Mongo(\"test_database\",\"posts\");\r\n//获取数据\r\nrouter.get(\"/\",function(req, res, next){\r\n    DB_POSTS.fetch({}).then((data)=&gt;{\r\n        return res.send(data);\r\n    },(err)=&gt;{\r\n        return res.send(RetInfo.error(err.message));\r\n    });\r\n})\r\n//增加\r\n.post(\"/\",function(req, res, next){\r\n    DB_POSTS.save(req.body).then((data)=&gt;{\r\n        return res.send(RetInfo.success());\r\n    },(err)=&gt;{\r\n        return res.send(RetInfo.error(err.message));\r\n    });\r\n})\r\n//删除\r\n.delete(\"/\",function(req, res, next){\r\n    data={\"_id\":req.query.id}\r\n    DB_POSTS.delete(data).then((data)=&gt;{\r\n        return res.send(data)\r\n    },(err)=&gt;{\r\n        return res.send(RetInfo.error(err.message))\r\n    });\r\n})\r\n//修改\r\n.put(\"/\",function(req, res, next){\r\n    const params = req.body;\r\n    DB_POSTS.update({\"_id\":params.id},params).then((data)=&gt;{\r\n        return res.send(RetInfo.success());\r\n    },(err)=&gt;{\r\n        return res.send(RetInfo.error(err.message));\r\n    })\r\n})\r\n\r\nmodule.exports = router;</pre>\r\n运行的话可以有很多方法\r\n<pre>一般运行\r\nnpm start\r\ndebug模式\r\nDEBUG=myapp:* npm start\r\n开发修改后自动重启\r\nnodemon npm start\r\n后台一直运行\r\nforever start app.js</pre>\r\n后言：对于js语法 es6等还比较生疏，并没有涉及，可能有待改进，但总怕麻烦。。。。",
            "post_title": "node+express+mongodb初试",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "549-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-2-26 18:44:10",
            "post_modified_gmt": "2018-2-26 10:44:10",
            "post_content_filtered": "",
            "post_parent": "549",
            "guid": "http://ganjiacheng.cn/blog/?p=551",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "552",
            "post_author": "1",
            "post_date": "2018-2-26 18:47:58",
            "post_date_gmt": "2018-2-26 10:47:58",
            "post_content": "新尝试另一个语言node.js和框架express，记录一些基本的操作与技巧。<!--more-->\r\n\r\n此次最大的不同是node.js是异步的，有些操作就不那么直观。\r\n\r\n这里在linux centos做测试。前提先安装好node.js和npm。\r\n\r\n这里也类似上次flask完成一个登陆与增删改操作的接口。\r\n\r\n先用命令行直接生成一个项目\r\n<pre class=\"language-sh\"><code class=\"language-sh\" translate=\"no\">npm install express-generator -g\r\nexpress --view=pug myapp\r\n</code>cd myapp &amp;&amp; npm install npm start<code class=\"language-sh\" translate=\"no\"></code></pre>\r\napp.js主文件\r\n<pre>//最后两个为session所需库，还有mongodb库，需自行下载\r\n//npm install --save express-session,session-file-store,mongodb\r\nvar express = require('express');\r\nvar path = require('path');\r\nvar favicon = require('serve-favicon');\r\nvar logger = require('morgan');\r\nvar cookieParser = require('cookie-parser');\r\nvar bodyParser = require('body-parser');\r\nvar session = require('express-session');\r\nvar FileStore = require('session-file-store')(session);\r\n\r\n#引入路由文件\r\nvar RetInfo = require(\"./common/retinfo\");\r\nvar index = require('./routes/index');\r\nvar users = require('./routes/users');\r\nvar manage = require('./routes/manage');\r\n\r\nvar app = express();\r\n\r\n// view engine setup\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.set('view engine', 'pug');\r\n\r\n//解析请求body\r\n// uncomment after placing your favicon in /public\r\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\r\napp.use(logger('dev'));\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n//开启并设置session\r\napp.use(session({\r\n    secret: 'chyingp',\r\n    store: new FileStore(),\r\n    saveUninitialized: false,\r\n    resave: false,\r\n    cookie: {\r\n        maxAge: 24*60*60*1000\r\n    }\r\n}));\r\n//绑定路由，中间件\r\napp.use('/', index);\r\napp.use('/users', users);\r\n//不设置的则下面的路由都会运行这个函数\r\napp.use(function(req,res,next) {\r\n    var sess = req.session;\r\n    var loginUser = sess.loginUser;\r\n    if(loginUser===undefined) return res.json(RetInfo.error(\"login out\"));\r\n    next();\r\n});\r\n//绑定另一个中间件，需登录后\r\napp.use('/manage',manage);\r\n//错误处理\r\n// catch 404 and forward to error handler\r\napp.use(function(req, res, next) {\r\n  var err = new Error('Not Found');\r\n  err.status = 404;\r\n  next(err);\r\n});\r\n\r\n// error handler\r\napp.use(function(err, req, res, next) {\r\n  // set locals, only providing error in development\r\n  res.locals.message = err.message;\r\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\r\n\r\n  // render the error page\r\n  res.status(err.status || 500);\r\n  res.render('error');\r\n});\r\n\r\nmodule.exports = app;</pre>\r\n根目录下 新建一个文件夹common/用于存放通用函数，下面写了两种形式。\r\n\r\ncommon/retinfo.js 用于接口返回数据\r\n<pre>module.exports = {\r\n    response : function(sts,msg) {\r\n        return {\"sts\":sts,\"msg\":msg}\r\n    },\r\n    success : function() {\r\n        return this.response(1,\"success\")\r\n    },\r\n    error : function(msg) {\r\n        return this.response(-1,msg)\r\n    },\r\n    dberr : function(msg) {\r\n        return this.response(-1,\"db error\");\r\n    }\r\n}</pre>\r\ncommon/mongodb.js 用于数据库操作,这里使用了promise，因为mongodb操作后会有回调函数，不方便调用，写成promise就可以用then进行下去。\r\n<pre>//use for mongodb database \r\n\r\nvar MongoClient = require('mongodb').MongoClient;\r\n\r\nfunction Mongodb(dbName, colName){\r\n\r\n    this.dbName = dbName;\r\n    this.colName = colName;\r\n    this.url = 'mongodb://localhost:27017/';\r\n\r\n    this.fetch = function(params){\r\n        //回调函数里没法获取到外部的this，所以再定义一下that\r\n        var that = this;\r\n        return new Promise(function(resolve, reject, notufy) {\r\n            MongoClient.connect(that.url, function(err, db){\r\n                if(err) reject(err);\r\n                var dbo = db.db(that.dbName);\r\n                dbo.collection(that.colName).find(params).toArray(function(err, res){\r\n                    if(err) reject(err);\r\n                    resolve(res);\r\n                    db.close();\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    this.save = function(params){\r\n        var that = this;\r\n        return new Promise(function(resolve, reject, notufy){\r\n            MongoClient.connect(that.url, function(err, db){\r\n                if(err) reject(err);\r\n                var dbo = db.db(that.dbName);\r\n                dbo.collection(that.colName).insertOne(params, function(err, res){\r\n                    if(err) reject(err);\r\n                    resolve(res);\r\n                    db.close();\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    this.delete = function(params){\r\n        var that = this;\r\n        return new Promise(function(resolve, reject, notufy){\r\n            MongoClient.connect(that.url, function(err, db){\r\n                if(err) reject(err);\r\n                var dbo = db.db(that.dbName);\r\n                dbo.collection(that.colName).deleteOne(params, function(err, res){\r\n                    if(err) reject(err);\r\n                    resolve(res);\r\n                    db.close();\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    this.update = function(whparams,params){\r\n        var that = this;\r\n        return new Promise(function(resolve, reject, notufy){\r\n            MongoClient.connect(that.url, function(err, db){\r\n                if(err) reject(err);\r\n                var dbo = db.db(that.dbName);\r\n                dbo.collection(that.colName).updateOne(whparams, {$set:params}, function(err, res){\r\n                    if(err) reject(err);\r\n                    resolve(res);\r\n                    db.close();\r\n                });\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nmodule.exports = Mongodb;</pre>\r\n然后编写中间件routes/users.js\r\n<pre>var express = require('express');\r\nvar router = express.Router();\r\nvar RetInfo = require(\"../common/retinfo\");\r\n//登录\r\nrouter.get('/login', function(req, res, next) {\r\n    username = req.query.username;\r\n    password = req.query.password;\r\n    \r\n    if(!username || !password) return res.json(RetInfo.error(\"lack of params\"));\r\n\r\n    if(username == \"admin\" &amp;&amp; password == \"admin\"){\r\n        \r\n        req.session.regenerate(function(err) {\r\n            if(err) return res.json(RetInfo.error(\"login error\"));\r\n            req.session.loginUser = username;\r\n            return res.json(RetInfo.success());\r\n        });\r\n\r\n    }else{\r\n        return res.json(RetInfo.error(\"username or password error\"));\r\n    }\r\n});\r\n//登出\r\nrouter.get(\"/loginout\", function(req, res, next) {\r\n    req.session.destroy(function(err) {\r\n        if(err) return res.json(RetInfo.error(\"login out error\"));\r\n        return res.json(RetInfo.success());\r\n    });\r\n})\r\n\r\nmodule.exports = router;</pre>\r\nroutes/manage.js  这里写了一般的增删改操作\r\n<pre>var express = require('express');\r\nvar router = express.Router();\r\nvar RetInfo = require(\"../common/retinfo\");\r\n\r\nvar Mongo = require(\"../common/mongodb\");\r\nDB_POSTS = new Mongo(\"test_database\",\"posts\");\r\n//获取数据\r\nrouter.get(\"/\",function(req, res, next){\r\n    DB_POSTS.fetch({}).then((data)=&gt;{\r\n        return res.send(data);\r\n    },(err)=&gt;{\r\n        return res.send(RetInfo.error(err.message));\r\n    });\r\n})\r\n//增加\r\n.post(\"/\",function(req, res, next){\r\n    DB_POSTS.save(req.body).then((data)=&gt;{\r\n        return res.send(RetInfo.success());\r\n    },(err)=&gt;{\r\n        return res.send(RetInfo.error(err.message));\r\n    });\r\n})\r\n//删除\r\n.delete(\"/\",function(req, res, next){\r\n    data={\"_id\":req.query.id}\r\n    DB_POSTS.delete(data).then((data)=&gt;{\r\n        return res.send(data)\r\n    },(err)=&gt;{\r\n        return res.send(RetInfo.error(err.message))\r\n    });\r\n})\r\n//修改\r\n.put(\"/\",function(req, res, next){\r\n    const params = req.body;\r\n    DB_POSTS.update({\"_id\":params.id},params).then((data)=&gt;{\r\n        return res.send(RetInfo.success());\r\n    },(err)=&gt;{\r\n        return res.send(RetInfo.error(err.message));\r\n    })\r\n})\r\n\r\nmodule.exports = router;</pre>\r\n运行的话可以有很多方法\r\n<pre>一般运行\r\nnpm start\r\ndebug模式\r\nDEBUG=myapp:* npm start\r\n开发修改后自动重启\r\nnodemon app.js\r\n后台一直运行\r\nforever start app.js</pre>\r\n后言：对于js语法 es6等还比较生疏，并没有涉及，可能有待改进，但总怕麻烦。。。。",
            "post_title": "node+express+mongodb初试",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "549-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-2-26 18:47:58",
            "post_modified_gmt": "2018-2-26 10:47:58",
            "post_content_filtered": "",
            "post_parent": "549",
            "guid": "http://ganjiacheng.cn/blog/?p=552",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "554",
            "post_author": "1",
            "post_date": "2018-3-7 11:37:02",
            "post_date_gmt": "0-0-0 00:00:00",
            "post_content": "人常常有孤独的时候，总要有个排解之处，这里记下一些孤独以供后来参考回味。\n\n这还得从小时候讲起，家里经常就我一个人，也没有什么近邻小伙伴，所以常常一个人玩着好几个人玩的游戏，一个人下象棋，一个人玩纸牌，一个人玩大富翁，自己扮演多个角色。想来还好没幻化出其他人格，也算是比较理性的想象。但其实还是孤独引起的，有人玩的时候也不会进行上面这些事情，内心还是渴望摆脱这种困境。\n\n到后来看起来比较孤独的便是喜欢一个人坐，大家都是有同桌嘻嘻的，而我可能以想做安静的美男子。内子是觉得一个人坐有自己的空间，不需要太拘束。\n\n现在大学，独自在外打拼有时候也就几个朋友聚聚，一般时候还是要自己应对，常常自己对自己说话，可以作为一种鼓励，也可以看做一种自勉。\n\n星际航行\n\n无聊\n\n&nbsp;",
            "post_title": "心之所向，孤独篇",
            "post_excerpt": "",
            "post_status": "draft",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-3-7 11:37:02",
            "post_modified_gmt": "2018-3-7 03:37:02",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=554",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "555",
            "post_author": "1",
            "post_date": "2018-2-26 23:44:18",
            "post_date_gmt": "2018-2-26 15:44:18",
            "post_content": "人常常有孤独的时候，总要有个排解之处，这里记下一些孤独以供后来参考回味。\r\n\r\n这还得从小时候讲起，家里经常就我一个人，也没有什么近邻小伙伴，所以常常一个人玩着好几个人玩的游戏，一个人下象棋，一个人玩纸牌，一个人玩大富翁，自己扮演多个角色。想来还好没幻化出其他人格，也算是比较理性的想象。但其实还是孤独引起的，有人玩的时候也不会进行上面这些事情，内心还是渴望摆脱这种困境。\r\n\r\n到后来看起来比较孤独的便是喜欢一个人坐，大家都是有同桌嘻嘻的，而我可能以想做安静的美男子。内子是觉得一个人坐有自己的空间，不需要太拘束。\r\n\r\n现在大学，独自在外打拼有时候也就几个朋友聚聚，一般时候还是要自己应对，常常自己对自己说话，可以作为一种鼓励，也可以看做一种自勉。\r\n\r\n星际航行\r\n\r\n无聊\r\n\r\n&nbsp;",
            "post_title": "心之所向，孤独篇",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "554-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-2-26 23:44:18",
            "post_modified_gmt": "2018-2-26 15:44:18",
            "post_content_filtered": "",
            "post_parent": "554",
            "guid": "http://ganjiacheng.cn/blog/?p=555",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "556",
            "post_author": "1",
            "post_date": "2018-2-27 11:05:12",
            "post_date_gmt": "2018-2-27 03:05:12",
            "post_content": "是老早之前写的，今天整理系统文件发现了这个扫雷，也是小惊喜，小看了下还挺有趣哈！<!--more-->\r\n\r\n直接上代码，具体在代码中注释。\r\n\r\n主要看点有两块，一个是从n个整数随机产生不重复的m个随机整数,m&lt;n\r\n\r\n另一个就是自动搜寻周边不是雷的区域，也就是点了一个不是雷有时会显现一大片。\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"&gt;\r\n    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt;\r\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=0.5, maximum-scale=2.0, user-scalable=no\" /&gt;\r\n    &lt;title&gt;扫雷&lt;/title&gt;\r\n    &lt;style type=\"text/css\"&gt;\r\n        *{\r\n            color: black;\r\n            margin:0px;\r\n            padding:0px;\r\n        }\r\n        html,body{\r\n            -webkit-tap-highlight-color: transparent;\r\n            -webkit-touch-callout: none;\r\n            -webkit-user-select: none;\r\n            text-decoration: none;\r\n            height: 100%;\r\n        }\r\n        .con div{\r\n            height: 40px;\r\n            margin-left: 0.2%;\r\n            width: 11%;\r\n            display: inline-block;\r\n            border: solid 1px #000;\r\n            position: absolute;\r\n            line-height: 50px;\r\n            text-align: center;\r\n            color:red;\r\n        }\r\n        .ti{\r\n            position: absolute;\r\n            bottom: 12%;\r\n        }\r\n    &lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;div id=\"contain\" class=\"con\"&gt;&lt;/div&gt;\r\n    &lt;div class=\"ti\"&gt;已花时间：&lt;span id=\"time\"&gt;0&lt;/span&gt;秒&lt;/div&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        var leiRes=new Array(),nums=new Array();\r\n        var Lei=1,i,jk,G=81,res=1,clickNum=0,num=0;\r\n        //随机产生区间内的随机数\r\n        function setRandomNum(min,max){\r\n            return Math.floor(Math.random()*(max-min+1)+min);\r\n        }\r\n        //搜寻周边8个点\r\n        function NotLeiNum(n){\r\n            var z=Math.floor(n/9),x=n%9,leiNum=0;\r\n            var arr=new Array();\r\n            if(z-1&gt;=0){\r\n                arr.push((z-1)*9+x);\r\n            }\r\n            if(z+1&lt;9){\r\n                arr.push((z+1)*9+x);\r\n            }\r\n            if(x-1&gt;=0){\r\n                arr.push(z*9+x-1);\r\n            }\r\n            if(x+1&lt;9){\r\n                arr.push(z*9+x+1);\r\n            }\r\n            if(x-1&gt;=0&amp;&amp;z-1&gt;=0){\r\n                arr.push((z-1)*9+x-1);\r\n            }\r\n            if(x-1&gt;=0&amp;&amp;z+1&lt;9){\r\n                arr.push((z+1)*9+x-1);\r\n            }\r\n            if(x+1&lt;9&amp;&amp;z-1&gt;=0){\r\n                arr.push((z-1)*9+x+1);\r\n            }\r\n            if(x+1&lt;9&amp;&amp;z+1&lt;9){\r\n                arr.push((z+1)*9+x+1);\r\n            }\r\n            for(i=0;i&lt;arr.length;i++){\r\n                if(leiRes[arr[i]]==1){\r\n                    leiNum++;\r\n                }\r\n            }\r\n            return leiNum;\r\n        }\r\n        //搜寻周边四个点\r\n        function NotLei(n){\r\n            var z=Math.floor(n/9),x=n%9,leiNum=0;\r\n            var arr=new Array();\r\n            if(z-1&gt;=0){\r\n                arr.push((z-1)*9+x);\r\n            }\r\n            if(z+1&lt;9){\r\n                arr.push((z+1)*9+x);\r\n            }\r\n            if(x-1&gt;=0){\r\n                arr.push(z*9+x-1);\r\n            }\r\n            if(x+1&lt;9){\r\n                arr.push(z*9+x+1);\r\n            }\r\n            for(i=0;i&lt;arr.length;i++){\r\n                if(leiRes[arr[i]]==1){\r\n                    leiNum++;\r\n                }\r\n            }\r\n            if(leiNum&lt;1){\r\n                if(NotLeiNum(n)==0){\r\n                    document.getElementById(n).innerHTML=0;\r\n                    document.getElementById(n).style.backgroundColor=\"#84EFFF\";\r\n                    document.getElementById(n).style.color=\"#000\";\r\n                    return 1;\r\n                }\r\n            }\r\n            return 0;\r\n        }\r\n        //递归判断周边四个点\r\n        function judgeLei(n,dir){\r\n            var z=Math.floor(n/9),x=n%9,leiNum=0;\r\n            var arr=new Array();\r\n            switch(dir){\r\n                case 1:\r\n                if(z-1&gt;=0&amp;&amp;leiRes[(z-1)*9+x]==0){\r\n                    if(NotLei((z-1)*9+x)){\r\n                        judgeLei((z-1)*9+x,1);\r\n                    }\r\n                }\r\n                \r\n                case 2:\r\n                if(z+1&lt;9&amp;&amp;leiRes[(z+1)*9+x]==0){\r\n                    if(NotLei((z+1)*9+x)){\r\n                        judgeLei((z+1)*9+x,2);\r\n                    }\r\n                }\r\n                \r\n                case 3:\r\n                if(x-1&gt;=0&amp;&amp;leiRes[z*9+x-1]==0){\r\n                    if(NotLei(z*9+x-1)){\r\n                        judgeLei(z*9+x-1,3);\r\n                    }\r\n                }\r\n                \r\n                case 4:\r\n                if(x+1&lt;9&amp;&amp;leiRes[z*9+x+1]==0){\r\n                    if(NotLei(z*9+x+1)){\r\n                        judgeLei(z*9+x+1,4);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //初始化\r\n        for(i=0;i&lt;G;i++){\r\n            nums[i]=i;\r\n            j=Math.floor(i/9),k=i%9;\r\n            leiRes[i]=0;\r\n            var ele=document.createElement(\"div\");\r\n            ele.setAttribute(\"id\",i);\r\n            document.getElementById(\"contain\").appendChild(ele);\r\n            document.getElementById(i).setAttribute(\"style\",\"top:\"+j*40+\"px;\"+\"left:\"+k*11+\"%\");\r\n        }\r\n        //n个整数获取m个不相等整数\r\n        //思路为例存有0-100的数组，首先随机获取一个整数，然后这个整数作为下标与数组下标0的数交换位置，进行下一步从数组下标1-100中在获取数\r\n        for(i=0;i&lt;Lei;i++){\r\n            r=setRandomNum(i,G-1);\r\n            var temp=nums[i];\r\n            nums[i]=nums[r];\r\n            nums[r]=temp;\r\n            leiRes[nums[i]]=1;\r\n        }\r\n        //主游戏环节，为所有节点绑定事件\r\n        var sl=document.getElementById(\"contain\").childNodes;\r\n        for(i=0;i&lt;sl.length;i++){\r\n            sl[i].onclick=function(){\r\n                for(j=0;j&lt;Lei;j++){\r\n                    if(this.id==nums[j]){\r\n                        res=0;\r\n                        document.getElementById(this.id).innerHTML=\"雷\";\r\n                        alert('游戏失败');\r\n                        if(confirm(\"确认重新开始游戏?\")){\r\n                            window.location.reload();\r\n                        }\r\n                    }\r\n                }\r\n                if(res==1){\r\n                    var n = NotLeiNum(this.id);\r\n                    document.getElementById(this.id).innerHTML=n;\r\n                    document.getElementById(this.id).style.backgroundColor=\"#84EFFF\";\r\n                    document.getElementById(this.id).style.color=\"#000\";\r\n                    if(n==0){\r\n                        judgeLei(this.id,1);\r\n                        /*judgeLei(this.id,2);\r\n                        judgeLei(this.id,3);\r\n                        judgeLei(this.id,4);*/\r\n                    }\r\n                }\r\n                seledNum=document.getElementById(\"contain\").childNodes;\r\n                for(i=0;i&lt;seledNum.length;i++){\r\n                    if(seledNum[i].innerHTML==\"\"){\r\n                        num++;\r\n                    }\r\n                }\r\n                if(num==Lei){\r\n                    alert(\"你成功啦\");\r\n                }else{\r\n                    num=0;\r\n                }\r\n            }\r\n        }\r\n        //计时器\r\n        var n=0;\r\n        function addtime(){\r\n            n++;\r\n            document.getElementById(\"time\").innerHTML=n;\r\n        }\r\n        setInterval(\"addtime()\",1000);\r\n        &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>",
            "post_title": "扫雷js版",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e6%89%ab%e9%9b%b7js%e7%89%88",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-2-28 13:55:54",
            "post_modified_gmt": "2018-2-28 05:55:54",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=556",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "557",
            "post_author": "1",
            "post_date": "2018-2-27 10:36:03",
            "post_date_gmt": "2018-2-27 02:36:03",
            "post_content": "老早之前写的，今天整理系统文件发现了这个扫雷，也是小惊喜，还挺有趣哈！\r\n\r\n&nbsp;",
            "post_title": "扫雷js版",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "556-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-2-27 10:36:03",
            "post_modified_gmt": "2018-2-27 02:36:03",
            "post_content_filtered": "",
            "post_parent": "556",
            "guid": "http://ganjiacheng.cn/blog/?p=557",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "558",
            "post_author": "1",
            "post_date": "2018-2-27 11:05:12",
            "post_date_gmt": "2018-2-27 03:05:12",
            "post_content": "是老早之前写的，今天整理系统文件发现了这个扫雷，也是小惊喜，小看了下还挺有趣哈！<!--more-->\r\n\r\n直接上代码，具体在代码中注释。\r\n\r\n主要看点有两块，一个是从n个整数随机产生不重复的m个随机整数,m&lt;n\r\n\r\n另一个就是自动搜寻周边不是雷的区域，也就是点了一个不是雷有时会显现一大片。\r\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"&gt;\r\n    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt;\r\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=0.5, maximum-scale=2.0, user-scalable=no\" /&gt;\r\n    &lt;title&gt;扫雷&lt;/title&gt;\r\n    &lt;style type=\"text/css\"&gt;\r\n        *{\r\n            color: black;\r\n            margin:0px;\r\n            padding:0px;\r\n        }\r\n        html,body{\r\n            -webkit-tap-highlight-color: transparent;\r\n            -webkit-touch-callout: none;\r\n            -webkit-user-select: none;\r\n            text-decoration: none;\r\n            height: 100%;\r\n        }\r\n        .con div{\r\n            height: 40px;\r\n            margin-left: 0.2%;\r\n            width: 11%;\r\n            display: inline-block;\r\n            border: solid 1px #000;\r\n            position: absolute;\r\n            line-height: 50px;\r\n            text-align: center;\r\n            color:red;\r\n        }\r\n        .ti{\r\n            position: absolute;\r\n            bottom: 12%;\r\n        }\r\n    &lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;div id=\"contain\" class=\"con\"&gt;&lt;/div&gt;\r\n    &lt;div class=\"ti\"&gt;已花时间：&lt;span id=\"time\"&gt;0&lt;/span&gt;秒&lt;/div&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        var leiRes=new Array(),nums=new Array();\r\n        var Lei=1,i,jk,G=81,res=1,clickNum=0,num=0;\r\n        //随机产生区间内的随机数\r\n        function setRandomNum(min,max){\r\n            return Math.floor(Math.random()*(max-min+1)+min);\r\n        }\r\n        //搜寻周边8个点\r\n        function NotLeiNum(n){\r\n            var z=Math.floor(n/9),x=n%9,leiNum=0;\r\n            var arr=new Array();\r\n            if(z-1&gt;=0){\r\n                arr.push((z-1)*9+x);\r\n            }\r\n            if(z+1&lt;9){\r\n                arr.push((z+1)*9+x);\r\n            }\r\n            if(x-1&gt;=0){\r\n                arr.push(z*9+x-1);\r\n            }\r\n            if(x+1&lt;9){\r\n                arr.push(z*9+x+1);\r\n            }\r\n            if(x-1&gt;=0&amp;&amp;z-1&gt;=0){\r\n                arr.push((z-1)*9+x-1);\r\n            }\r\n            if(x-1&gt;=0&amp;&amp;z+1&lt;9){\r\n                arr.push((z+1)*9+x-1);\r\n            }\r\n            if(x+1&lt;9&amp;&amp;z-1&gt;=0){\r\n                arr.push((z-1)*9+x+1);\r\n            }\r\n            if(x+1&lt;9&amp;&amp;z+1&lt;9){\r\n                arr.push((z+1)*9+x+1);\r\n            }\r\n            for(i=0;i&lt;arr.length;i++){\r\n                if(leiRes[arr[i]]==1){\r\n                    leiNum++;\r\n                }\r\n            }\r\n            return leiNum;\r\n        }\r\n        //搜寻周边四个点\r\n        function NotLei(n){\r\n            var z=Math.floor(n/9),x=n%9,leiNum=0;\r\n            var arr=new Array();\r\n            if(z-1&gt;=0){\r\n                arr.push((z-1)*9+x);\r\n            }\r\n            if(z+1&lt;9){\r\n                arr.push((z+1)*9+x);\r\n            }\r\n            if(x-1&gt;=0){\r\n                arr.push(z*9+x-1);\r\n            }\r\n            if(x+1&lt;9){\r\n                arr.push(z*9+x+1);\r\n            }\r\n            for(i=0;i&lt;arr.length;i++){\r\n                if(leiRes[arr[i]]==1){\r\n                    leiNum++;\r\n                }\r\n            }\r\n            if(leiNum&lt;1){\r\n                if(NotLeiNum(n)==0){\r\n                    document.getElementById(n).innerHTML=0;\r\n                    document.getElementById(n).style.backgroundColor=\"#84EFFF\";\r\n                    document.getElementById(n).style.color=\"#000\";\r\n                    return 1;\r\n                }\r\n            }\r\n            return 0;\r\n        }\r\n        //递归判断周边四个点\r\n        function judgeLei(n,dir){\r\n            var z=Math.floor(n/9),x=n%9,leiNum=0;\r\n            var arr=new Array();\r\n            switch(dir){\r\n                case 1:\r\n                if(z-1&gt;=0&amp;&amp;leiRes[(z-1)*9+x]==0){\r\n                    if(NotLei((z-1)*9+x)){\r\n                        judgeLei((z-1)*9+x,1);\r\n                    }\r\n                }\r\n                \r\n                case 2:\r\n                if(z+1&lt;9&amp;&amp;leiRes[(z+1)*9+x]==0){\r\n                    if(NotLei((z+1)*9+x)){\r\n                        judgeLei((z+1)*9+x,2);\r\n                    }\r\n                }\r\n                \r\n                case 3:\r\n                if(x-1&gt;=0&amp;&amp;leiRes[z*9+x-1]==0){\r\n                    if(NotLei(z*9+x-1)){\r\n                        judgeLei(z*9+x-1,3);\r\n                    }\r\n                }\r\n                \r\n                case 4:\r\n                if(x+1&lt;9&amp;&amp;leiRes[z*9+x+1]==0){\r\n                    if(NotLei(z*9+x+1)){\r\n                        judgeLei(z*9+x+1,4);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //初始化\r\n        for(i=0;i&lt;G;i++){\r\n            nums[i]=i;\r\n            j=Math.floor(i/9),k=i%9;\r\n            leiRes[i]=0;\r\n            var ele=document.createElement(\"div\");\r\n            ele.setAttribute(\"id\",i);\r\n            document.getElementById(\"contain\").appendChild(ele);\r\n            document.getElementById(i).setAttribute(\"style\",\"top:\"+j*40+\"px;\"+\"left:\"+k*11+\"%\");\r\n        }\r\n        //n个整数获取m个不相等整数\r\n        //思路为例存有0-100的数组，首先随机获取一个整数，然后这个整数作为下标与数组下标0的数交换位置，进行下一步从数组下标1-100中在获取数\r\n        for(i=0;i&lt;Lei;i++){\r\n            r=setRandomNum(i,G-1);\r\n            var temp=nums[i];\r\n            nums[i]=nums[r];\r\n            nums[r]=temp;\r\n            leiRes[nums[i]]=1;\r\n        }\r\n        //主游戏环节，为所有节点绑定事件\r\n        var sl=document.getElementById(\"contain\").childNodes;\r\n        for(i=0;i&lt;sl.length;i++){\r\n            sl[i].onclick=function(){\r\n                for(j=0;j&lt;Lei;j++){\r\n                    if(this.id==nums[j]){\r\n                        res=0;\r\n                        document.getElementById(this.id).innerHTML=\"雷\";\r\n                        alert('游戏失败');\r\n                        if(confirm(\"确认重新开始游戏?\")){\r\n                            window.location.reload();\r\n                        }\r\n                    }\r\n                }\r\n                if(res==1){\r\n                    var n = NotLeiNum(this.id);\r\n                    document.getElementById(this.id).innerHTML=n;\r\n                    document.getElementById(this.id).style.backgroundColor=\"#84EFFF\";\r\n                    document.getElementById(this.id).style.color=\"#000\";\r\n                    if(n==0){\r\n                        judgeLei(this.id,1);\r\n                        /*judgeLei(this.id,2);\r\n                        judgeLei(this.id,3);\r\n                        judgeLei(this.id,4);*/\r\n                    }\r\n                }\r\n                seledNum=document.getElementById(\"contain\").childNodes;\r\n                for(i=0;i&lt;seledNum.length;i++){\r\n                    if(seledNum[i].innerHTML==\"\"){\r\n                        num++;\r\n                    }\r\n                }\r\n                if(num==Lei){\r\n                    alert(\"你成功啦\");\r\n                }else{\r\n                    num=0;\r\n                }\r\n            }\r\n        }\r\n        //计时器\r\n        var n=0;\r\n        function addtime(){\r\n            n++;\r\n            document.getElementById(\"time\").innerHTML=n;\r\n        }\r\n        setInterval(\"addtime()\",1000);\r\n        &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>",
            "post_title": "扫雷js版",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "556-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-2-27 11:05:12",
            "post_modified_gmt": "2018-2-27 03:05:12",
            "post_content_filtered": "",
            "post_parent": "556",
            "guid": "http://ganjiacheng.cn/blog/?p=558",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "559",
            "post_author": "1",
            "post_date": "2018-2-28 15:07:08",
            "post_date_gmt": "2018-2-28 07:07:08",
            "post_content": "新尝试另一个语言node.js和框架express，记录一些基本的操作与技巧。<!--more-->\r\n\r\n此次最大的不同是node.js是异步的，有些操作就不那么直观。\r\n\r\n这里在linux centos做测试。前提先安装好node.js和npm。\r\n\r\n这里也类似上次flask完成一个登陆与增删改操作的接口。\r\n\r\n先用命令行直接生成一个项目\r\n<pre class=\"language-sh\"><code class=\"language-sh\" translate=\"no\">npm install express-generator -g\r\nexpress --view=pug myapp\r\n</code>cd myapp &amp;&amp; npm install npm start<code class=\"language-sh\" translate=\"no\"></code></pre>\r\napp.js主文件\r\n<pre>//最后两个为session所需库，还有mongodb库，需自行下载\r\n//npm install --save express-session,session-file-store,mongodb\r\nvar express = require('express');\r\nvar path = require('path');\r\nvar favicon = require('serve-favicon');\r\nvar logger = require('morgan');\r\nvar cookieParser = require('cookie-parser');\r\nvar bodyParser = require('body-parser');\r\nvar session = require('express-session');\r\nvar FileStore = require('session-file-store')(session);\r\n\r\n#引入路由文件\r\nvar RetInfo = require(\"./common/retinfo\");\r\nvar index = require('./routes/index');\r\nvar users = require('./routes/users');\r\nvar manage = require('./routes/manage');\r\n\r\nvar app = express();\r\n\r\n// view engine setup\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.set('view engine', 'pug');\r\n\r\n//解析请求body\r\n// uncomment after placing your favicon in /public\r\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\r\napp.use(logger('dev'));\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n//开启并设置session\r\napp.use(session({\r\n    secret: 'chyingp',\r\n    store: new FileStore(),\r\n    saveUninitialized: false,\r\n    resave: false,\r\n    cookie: {\r\n        maxAge: 24*60*60*1000\r\n    }\r\n}));\r\n//绑定路由，中间件\r\napp.use('/', index);\r\napp.use('/users', users);\r\n//不设置的则下面的路由都会运行这个函数\r\napp.use(function(req,res,next) {\r\n    var sess = req.session;\r\n    var loginUser = sess.loginUser;\r\n    if(loginUser===undefined) return res.json(RetInfo.error(\"login out\"));\r\n    next();\r\n});\r\n//绑定另一个中间件，需登录后\r\napp.use('/manage',manage);\r\n//错误处理\r\n// catch 404 and forward to error handler\r\napp.use(function(req, res, next) {\r\n  var err = new Error('Not Found');\r\n  err.status = 404;\r\n  next(err);\r\n});\r\n\r\n// error handler\r\napp.use(function(err, req, res, next) {\r\n  // set locals, only providing error in development\r\n  res.locals.message = err.message;\r\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\r\n\r\n  // render the error page\r\n  res.status(err.status || 500);\r\n  res.render('error');\r\n});\r\n\r\nmodule.exports = app;</pre>\r\n根目录下 新建一个文件夹common/用于存放通用函数，下面写了两种形式。\r\n\r\ncommon/retinfo.js 用于接口返回数据\r\n<pre>module.exports = {\r\n    response : function(sts,msg) {\r\n        return {\"sts\":sts,\"msg\":msg}\r\n    },\r\n    success : function() {\r\n        return this.response(1,\"success\")\r\n    },\r\n    error : function(msg) {\r\n        return this.response(-1,msg)\r\n    },\r\n    dberr : function(msg) {\r\n        return this.response(-1,\"db error\");\r\n    }\r\n}</pre>\r\ncommon/mongodb.js 用于数据库操作,这里使用了promise，因为mongodb操作后会有回调函数，不方便调用，写成promise就可以用then进行下去。\r\n<pre>//use for mongodb database \r\n\r\nvar MongoClient = require('mongodb').MongoClient;\r\n\r\nfunction Mongodb(dbName, colName){\r\n\r\n    this.dbName = dbName;\r\n    this.colName = colName;\r\n    this.url = 'mongodb://localhost:27017/';\r\n\r\n    this.fetch = function(params){\r\n        //回调函数里没法获取到外部的this，所以再定义一下that\r\n        var that = this;\r\n        return new Promise(function(resolve, reject, notufy) {\r\n            MongoClient.connect(that.url, function(err, db){\r\n                if(err) reject(err);\r\n                var dbo = db.db(that.dbName);\r\n                dbo.collection(that.colName).find(params).toArray(function(err, res){\r\n                    if(err) reject(err);\r\n                    resolve(res);\r\n                    db.close();\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    this.save = function(params){\r\n        var that = this;\r\n        return new Promise(function(resolve, reject, notufy){\r\n            MongoClient.connect(that.url, function(err, db){\r\n                if(err) reject(err);\r\n                var dbo = db.db(that.dbName);\r\n                dbo.collection(that.colName).insertOne(params, function(err, res){\r\n                    if(err) reject(err);\r\n                    resolve(res);\r\n                    db.close();\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    this.delete = function(params){\r\n        var that = this;\r\n        return new Promise(function(resolve, reject, notufy){\r\n            MongoClient.connect(that.url, function(err, db){\r\n                if(err) reject(err);\r\n                var dbo = db.db(that.dbName);\r\n                dbo.collection(that.colName).deleteOne(params, function(err, res){\r\n                    if(err) reject(err);\r\n                    resolve(res);\r\n                    db.close();\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    this.update = function(whparams,params){\r\n        var that = this;\r\n        return new Promise(function(resolve, reject, notufy){\r\n            MongoClient.connect(that.url, function(err, db){\r\n                if(err) reject(err);\r\n                var dbo = db.db(that.dbName);\r\n                dbo.collection(that.colName).updateOne(whparams, {$set:params}, function(err, res){\r\n                    if(err) reject(err);\r\n                    resolve(res);\r\n                    db.close();\r\n                });\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nmodule.exports = Mongodb;</pre>\r\n然后编写中间件routes/users.js\r\n<pre>var express = require('express');\r\nvar router = express.Router();\r\nvar RetInfo = require(\"../common/retinfo\");\r\n//登录\r\nrouter.get('/login', function(req, res, next) {\r\n    username = req.query.username;\r\n    password = req.query.password;\r\n    \r\n    if(!username || !password) return res.json(RetInfo.error(\"lack of params\"));\r\n\r\n    if(username == \"admin\" &amp;&amp; password == \"admin\"){\r\n        \r\n        req.session.regenerate(function(err) {\r\n            if(err) return res.json(RetInfo.error(\"login error\"));\r\n            req.session.loginUser = username;\r\n            return res.json(RetInfo.success());\r\n        });\r\n\r\n    }else{\r\n        return res.json(RetInfo.error(\"username or password error\"));\r\n    }\r\n});\r\n//登出\r\nrouter.get(\"/loginout\", function(req, res, next) {\r\n    req.session.destroy(function(err) {\r\n        if(err) return res.json(RetInfo.error(\"login out error\"));\r\n        return res.json(RetInfo.success());\r\n    });\r\n})\r\n\r\nmodule.exports = router;</pre>\r\nroutes/manage.js  这里写了一般的增删改操作\r\n<pre>var express = require('express');\r\nvar router = express.Router();\r\nvar RetInfo = require(\"../common/retinfo\");\r\n\r\nvar Mongo = require(\"../common/mongodb\");\r\nDB_POSTS = new Mongo(\"test_database\",\"posts\");\r\n//获取数据\r\nrouter.get(\"/\",function(req, res, next){\r\n    DB_POSTS.fetch({}).then((data)=&gt;{\r\n        return res.send(data);\r\n    },(err)=&gt;{\r\n        return res.send(RetInfo.error(err.message));\r\n    });\r\n})\r\n//增加\r\n.post(\"/\",function(req, res, next){\r\n    DB_POSTS.save(req.body).then((data)=&gt;{\r\n        return res.send(RetInfo.success());\r\n    },(err)=&gt;{\r\n        return res.send(RetInfo.error(err.message));\r\n    });\r\n})\r\n//删除\r\n.delete(\"/\",function(req, res, next){\r\n    data={\"_id\":req.query.id}\r\n    DB_POSTS.delete(data).then((data)=&gt;{\r\n        return res.send(data)\r\n    },(err)=&gt;{\r\n        return res.send(RetInfo.error(err.message))\r\n    });\r\n})\r\n//修改\r\n.put(\"/\",function(req, res, next){\r\n    const params = req.body;\r\n    DB_POSTS.update({\"_id\":params.id},params).then((data)=&gt;{\r\n        return res.send(RetInfo.success());\r\n    },(err)=&gt;{\r\n        return res.send(RetInfo.error(err.message));\r\n    })\r\n})\r\n\r\nmodule.exports = router;</pre>\r\n运行的话可以有很多方法\r\n<pre>一般运行\r\nnpm start\r\ndebug模式\r\nDEBUG=myapp:* npm start\r\n开发修改后自动重启\r\nnodemon app.js\r\n后台一直运行\r\nforever start ./bin/www</pre>\r\n后言：对于js语法 es6等还比较生疏，并没有涉及，可能有待改进，但总怕麻烦。。。。",
            "post_title": "node+express+mongodb初试",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "549-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-2-28 15:07:08",
            "post_modified_gmt": "2018-2-28 07:07:08",
            "post_content_filtered": "",
            "post_parent": "549",
            "guid": "http://ganjiacheng.cn/blog/?p=559",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "563",
            "post_author": "1",
            "post_date": "2018-3-9 13:33:12",
            "post_date_gmt": "2018-3-9 05:33:12",
            "post_content": "博客不知不觉已经一周年咯。\r\n\r\n一年写了50+篇文章，coding也基本未间断。\r\n\r\n在去年还未知的技术走向今年也将看到沉淀。\r\n\r\n这次主要将要完成一个的一个事情便是 将博客已有的一些技术和代码较为完善的转存到github上。\r\n\r\n一方面是收集零散的片段，另一方面是整理注释代码。\r\n\r\n为以后做简单的借鉴与留念。\r\n\r\ngithub地址是<a href=\"https://github.com/webgjc/blog\">https://github.com/webgjc/blog</a>",
            "post_title": "庆祝博客一周年！！",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e5%ba%86%e7%a5%9d%e5%8d%9a%e5%ae%a2%e4%b8%80%e5%91%a8%e5%b9%b4%ef%bc%81%ef%bc%81",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-3-9 13:33:12",
            "post_modified_gmt": "2018-3-9 05:33:12",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=563",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "564",
            "post_author": "1",
            "post_date": "2018-3-9 13:33:12",
            "post_date_gmt": "2018-3-9 05:33:12",
            "post_content": "博客不知不觉已经一周年咯。\r\n\r\n一年写了50+篇文章，coding也基本未间断。\r\n\r\n在去年还未知的技术走向今年也将看到沉淀。\r\n\r\n这次主要将要完成一个的一个事情便是 将博客已有的一些技术和代码较为完善的转存到github上。\r\n\r\n一方面是收集零散的片段，另一方面是整理注释代码。\r\n\r\n为以后做简单的借鉴与留念。\r\n\r\ngithub地址是<a href=\"https://github.com/webgjc/blog\">https://github.com/webgjc/blog</a>",
            "post_title": "庆祝博客一周年！！",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "563-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-3-9 13:33:12",
            "post_modified_gmt": "2018-3-9 05:33:12",
            "post_content_filtered": "",
            "post_parent": "563",
            "guid": "http://ganjiacheng.cn/blog/?p=564",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "565",
            "post_author": "1",
            "post_date": "2018-3-9 14:02:27",
            "post_date_gmt": "0-0-0 00:00:00",
            "post_content": "",
            "post_title": "平凡的世界，平凡的人",
            "post_excerpt": "",
            "post_status": "draft",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-3-9 14:02:27",
            "post_modified_gmt": "2018-3-9 06:02:27",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=565",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "566",
            "post_author": "1",
            "post_date": "2018-3-9 14:02:24",
            "post_date_gmt": "2018-3-9 06:02:24",
            "post_content": "",
            "post_title": "平凡的世界，平凡的人",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "565-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-3-9 14:02:24",
            "post_modified_gmt": "2018-3-9 06:02:24",
            "post_content_filtered": "",
            "post_parent": "565",
            "guid": "http://ganjiacheng.cn/blog/?p=566",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "570",
            "post_author": "1",
            "post_date": "2018-3-14 17:31:20",
            "post_date_gmt": "2018-3-14 09:31:20",
            "post_content": "由于每次更改后端接口都要经过测试，然后又要去修改接口文档，就想着能不能整合这两步，为了自己能灵活修改，便自己来写个。\r\n\r\n<a href=\"https://github.com/webgjc/ApiTestToMd\">https://github.com/webgjc/ApiTestToMd</a><!--more-->\r\n\r\n这次的代码有点多，就不直接展示了，放在github上，也可方便下载使用。\r\n\r\n&nbsp;\r\n\r\n写写思路及主要用到的工具：\r\n\r\n后端使用flask框架，requests作为接口测试，增加了百度翻译api作为参数翻译，另外写了一些文件的接口。\r\n\r\n前端使用bootstrap4作为测试接口页面的主要ui。测试记录存在sessionStorage里，只是刷新标签并不会使记消失。\r\n\r\n前端接口文档编辑主要从sessionStorage获取到记录，用固定格式产生md文本，参数使用百度api翻译一下，再用了marked.js把md转成html文件，md和html分居左右也可以边改边看效果。\r\n\r\n之后又增加了文件保存读取的效果，可以复用上次改下的接口文档。\r\n\r\nhtml的效果就是css，借鉴于<a href=\"http://coolaf.com/tool/md\">http://coolaf.com/tool/md</a>\r\n\r\n就这么多功能，前前后后改了一星期左右，没有很多难点，但有些细节也是实际用了才发现去改，可能功能还能完善，差不多作为一个日常小工具也足够啦。",
            "post_title": "在线接口测试及生成文档",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e5%9c%a8%e7%ba%bf%e6%8e%a5%e5%8f%a3%e6%b5%8b%e8%af%95%e5%8f%8a%e7%94%9f%e6%88%90%e6%96%87%e6%a1%a3",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-3-14 17:31:21",
            "post_modified_gmt": "2018-3-14 09:31:21",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=570",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "571",
            "post_author": "1",
            "post_date": "2018-3-14 17:31:21",
            "post_date_gmt": "2018-3-14 09:31:21",
            "post_content": "由于每次更改后端接口都要经过测试，然后又要去修改接口文档，就想着能不能整合这两步，为了自己能灵活修改，便自己来写个。\r\n\r\n<a href=\"https://github.com/webgjc/ApiTestToMd\">https://github.com/webgjc/ApiTestToMd</a><!--more-->\r\n\r\n这次的代码有点多，就不直接展示了，放在github上，也可方便下载使用。\r\n\r\n&nbsp;\r\n\r\n写写思路及主要用到的工具：\r\n\r\n后端使用flask框架，requests作为接口测试，增加了百度翻译api作为参数翻译，另外写了一些文件的接口。\r\n\r\n前端使用bootstrap4作为测试接口页面的主要ui。测试记录存在sessionStorage里，只是刷新标签并不会使记消失。\r\n\r\n前端接口文档编辑主要从sessionStorage获取到记录，用固定格式产生md文本，参数使用百度api翻译一下，再用了marked.js把md转成html文件，md和html分居左右也可以边改边看效果。\r\n\r\n之后又增加了文件保存读取的效果，可以复用上次改下的接口文档。\r\n\r\nhtml的效果就是css，借鉴于<a href=\"http://coolaf.com/tool/md\">http://coolaf.com/tool/md</a>\r\n\r\n就这么多功能，前前后后改了一星期左右，没有很多难点，但有些细节也是实际用了才发现去改，可能功能还能完善，差不多作为一个日常小工具也足够啦。",
            "post_title": "在线接口测试及生成文档",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "570-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-3-14 17:31:21",
            "post_modified_gmt": "2018-3-14 09:31:21",
            "post_content_filtered": "",
            "post_parent": "570",
            "guid": "http://ganjiacheng.cn/blog/?p=571",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "574",
            "post_author": "1",
            "post_date": "2018-3-31 15:45:20",
            "post_date_gmt": "2018-3-31 07:45:20",
            "post_content": "之前看算法书对于深搜一直是一个坎，有点难以理解或者理解了一些但没法下手写，这回来重新探讨一下个人目前的理解及解决方案。文章从全排入手，到解决八皇后，和尚妖怪过河等问题。<!--more-->\r\n\r\n首先，看一个全排序，传入一个数组（其中有n个可不等长的数组），得到的结果是其中每个数组取一个数组成的新数组的集合，如下\r\n<pre>result=[0]*3\r\narr=[[1,2,3],[4,5],[7,8,9]]\r\nres=[]\r\n#算法部分，遍历其中每个数组，在result保存临时一个数组。\r\n#copy是因为append只是插入了一个类似指针，而result内容会变，因此要用copy换一个地址。\r\ndef dfs(arr, depth):\r\n    global res\r\n    for i in range(len(arr[depth])):\r\n        result[depth] = arr[depth][i]\r\n        if depth != len(arr) - 1:\r\n            dfs(arr, depth + 1)\r\n        else:\r\n            res.append(result.copy())\r\ndfs(arr,0)\r\nprint(res)\r\n#结果为\r\n[[1, 4, 7], [1, 4, 8], [1, 4, 9], [1, 5, 7], [1, 5, 8], [1, 5, 9], [2, 4, 7], [2\r\n, 4, 8], [2, 4, 9], [2, 5, 7], [2, 5, 8], [2, 5, 9], [3, 4, 7], [3, 4, 8], [3, 4\r\n, 9], [3, 5, 7], [3, 5, 8], [3, 5, 9]]</pre>\r\n在来看个升级版，一个数组如[1,2,3,4,5]的全排，这里for中递归的思路则和上次基本不一样，用的是交换，遍历完所有可能的交换值，但因为只有一个数组，所以交换完保存数后还得在交换回来，也就是递归下面一行和上面一行的区别。\r\n<pre>COUNT=0  \r\nres=[]\r\n\r\n#for第一次是0和所有交换，递归后是1和所有的交换\r\n#但运行过程则会0和0换，之后跳到递归中1和1换，直到最后，得到第一情况，也就是没换，这时begin=end\r\n#然后回退一步，那时begin应该是end-1，所以最后两个换下，又得到一种情况。\r\n#就这样回退到最初的for，就可以遍历所有交换情况\r\ndef perm(n,begin,end):  \r\n    global COUNT,res\r\n    if begin&gt;=end:  \r\n        res.append(n)\r\n    else:  \r\n        i=begin  \r\n        for num in range(begin,end):  \r\n            n[num],n[i]=n[i],n[num] \r\n            perm(n.copy(),begin+1,end)\r\n            n[num],n[i]=n[i],n[num]\r\n\r\nN=4\r\nn=[i for i in range(N)]\r\nperm(n,0,len(n))\r\nprint(res)</pre>\r\n然后看几个应用，基本也是自己学了之后用上去！\r\n\r\n第一个，九宫格中文输入得到输入项的所有组合。用到上面第一个全排序，只需要把输入转换成已按按键的字母数组。如\r\n<pre>arr=[[a,b,c],[c,d,e],[g,h,i]]</pre>\r\n第二个，八皇后，也就是8*8棋盘上放8个皇后，每个皇后横竖左斜右斜都不能有其他皇后。总共有92中情况。这里的解法便是先得到长为8的数组的全排，在逐个检验，当然检验是有技巧的。\r\n<pre>#这里把数组如[1,2,3,4,5,6,7,8]下标作为棋盘x，值作为棋盘y\r\n#因为横竖都不在线上，所以求全排\r\n#然后检查的就是左斜右斜便可\r\n#全排，请看前面的讲解\r\nCOUNT=0  \r\ndef perm(n,begin,end):  \r\n    global COUNT,res\r\n    if begin&gt;=end:  \r\n        res.append(n)\r\n    else:  \r\n        i=begin  \r\n        for num in range(begin,end):  \r\n            n[num],n[i]=n[i],n[num] \r\n            perm(n.copy(),begin+1,end)\r\n            n[num],n[i]=n[i],n[num]\r\nres=[]\r\nN=8\r\nn=[i for i in range(N)]\r\nperm(n,0,len(n))\r\n\r\n#检验的是数组中有没有重复值\r\ndef check(l):\r\n    return len(set(l))==len(l)\r\n\r\nresult = []\r\n\r\n#左斜的位置x-y相同的会在一条线上，右斜的位置x+y相同的会在一条线上。\r\n#由此检验\r\nfor i in res:\r\n    s = [i[j]+j for j in range(N)]\r\n    c = [i[j]-j for j in range(N)]\r\n    if check(s) and check(c):\r\n        print(i)\r\n        result.append(i)\r\n#得到92个解\r\nprint(len(result))</pre>\r\n最后一个应用：和尚与妖怪过河问题。\r\n\r\n问题大致是河左岸有三个妖怪三个和尚，要全部过河到右岸，有一条能载两人的船，只要左岸或右岸妖怪数大于和尚数，妖怪就会把和尚吃掉。需得所有简单解法（中间不包括重复循环步骤）。\r\n\r\n关键点和上面的其实是差不多，只是比较难抽象出遍历的东西，一不小心就会死在中间的死循环。\r\n<pre>class River():\r\n    def __init__(self):\r\n        self.ship = 1 #1--左岸，-1--右岸\r\n        self.left = [3,3] #和尚，妖怪\r\n        self.right = [0,0] #和尚，妖怪\r\n        #状态改变只有这五种和取反后的五种\r\n        self.change = [ [-1, -1],\r\n                        [-2, 0],\r\n                        [0, -2],\r\n                        [-1, 0],\r\n                        [0, -1]]\r\n        #保存上一个状态，直接排除一样的来回\r\n        self.lastState = -1\r\n        #如果遍历是一棵树，保存的则根到某个枝条\r\n        self.lineHis = [[3, 3, 0, 0, 1]]\r\n    #改变状态\r\n    def move(self,n):\r\n        self.left = [self.left[i]+self.ship*self.change[n][i] for i in range(2)]\r\n        self.right = [self.right[i]-self.ship*self.change[n][i] for i in range(2)]\r\n        self.ship = -self.ship\r\n        self.lastState = n\r\n    #获取下一步可移动点，比如只有一个怪兽在左岸，就要排除两个妖怪过河的方案，这个剪枝很重要。\r\n    def getState(self):\r\n        states = []\r\n        if self.ship == 1:\r\n            state = self.left\r\n        else:\r\n            state = self.right\r\n        for i in range(len(self.change)):\r\n            if min(state[0]+self.change[i][0],state[1]+self.change[i][1])&gt;=0:\r\n                states.append(i)\r\n        return states\r\n    #主算法部分，断掉妖怪大于和尚的分支。\r\n    #在遍历中，最重要的一步就是在这条支线上，如果这一种状态之前出现过，就不要继续深入。\r\n    def dfs(self):\r\n        if self.left==[0,0] and self.right==[3,3]:\r\n            print(self.lineHis)\r\n            return \r\n        elif (self.left[1]&gt;self.left[0] and self.left[0]!=0) or (self.right[1]&gt;self.right[0] and self.right[0]!=0):\r\n            return\r\n        else:\r\n            states = self.getState()\r\n            for i in states:\r\n                if i != self.lastState:\r\n                    self.move(i)\r\n                    self.lineHis.append(self.left+self.right+[self.ship])\r\n                    if self.lineHis[-1] not in self.lineHis[0:-1]:\r\n                        self.dfs()\r\n                    self.move(i)\r\n                    self.lineHis.pop()\r\n        \r\nif __name__ == \"__main__\":\r\n    s = River()\r\n    s.dfs()\r\n    #可得4个最简解。</pre>\r\n总结：深度优先搜索主要部分是提炼出搜索的树，然后好坏在于剪枝。",
            "post_title": "聊聊深度优先搜索算法及应用",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e8%81%8a%e8%81%8a%e6%b7%b1%e5%ba%a6%e4%bc%98%e5%85%88%e6%90%9c%e7%b4%a2%e7%ae%97%e6%b3%95%e5%8f%8a%e5%ba%94%e7%94%a8",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-3-31 23:10:33",
            "post_modified_gmt": "2018-3-31 15:10:33",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=574",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "575",
            "post_author": "1",
            "post_date": "2018-3-29 12:46:30",
            "post_date_gmt": "2018-3-29 04:46:30",
            "post_content": "",
            "post_title": "看看深搜算法及应用",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "574-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-3-29 12:46:30",
            "post_modified_gmt": "2018-3-29 04:46:30",
            "post_content_filtered": "",
            "post_parent": "574",
            "guid": "http://ganjiacheng.cn/blog/?p=575",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "576",
            "post_author": "1",
            "post_date": "2018-3-29 13:19:58",
            "post_date_gmt": "2018-3-29 05:19:58",
            "post_content": "最近学钢琴，也经常会用到曲谱，但网上大多数曲谱不清晰，或者清晰的要vip。因此研究下某曲谱网站，进行爬取vip才能下载的曲谱并组合为pdf。<!--more-->\r\n\r\n可以在<a href=\"http://123.206.217.190:8888\">http://123.206.217.190:8888</a>试用效果\r\n\r\n下面的是python3.x代码，在window可直接本地运行，在linux做一些注释中的修改。\r\n<pre>#coding:utf-8\r\nimport requests\r\nfrom bs4 import BeautifulSoup\r\nimport os\r\nimport sys\r\nimport io\r\nfrom PIL import Image\r\nfrom reportlab.lib.pagesizes import A4, landscape\r\nfrom reportlab.pdfgen import canvas\r\nimport time\r\nimport random\r\nsys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding='utf-8')\r\n\r\n#输入弹琴吧所需琴谱的网址\r\n#把网址变成手机访问的网址\r\nreq = requests.Session()\r\nurl=\"\"\r\n#url = \"http://www.tan8.com/yuepu-58546.html\"\r\nstate=True\r\n\r\nwhile state:\r\n    url = input(\"输入弹琴吧钢琴曲网址：\\n\")\r\n    if url.find(\"-m.html\")==-1:\r\n        url = url.replace(\".html\",\"-m.html\")\r\n        imgdir = \"tmpimgtan8/\"\r\n\r\n    if url.find(\"-m.html\")==-1:\r\n        print(\"请输入正确网址\")\r\n    else:\r\n        imgdir = \"tmpimgtan8/\"\r\n        state=False\r\n\r\nif not os.path.exists(imgdir):\r\n    os.mkdir(\"tmpimgtan8\")\r\n#爬下来解析出mp3，图片地址\r\n#保存MP3，图片\r\nresp = req.get(url)\r\n\r\nsoup=BeautifulSoup(resp.text,\"lxml\")\r\n\r\n#windows可以用这个中文名做文件名\r\ntitle = soup.find_all(\"title\")[0].text.replace(\" \",\"\").replace(\"/\",\"\")\r\n#linux用下面的随机数做文件名\r\n#title = str(int(random.random()*8999)+1000)\r\n\r\nmp3 = soup.find_all(\"source\")[0][\"src\"]\r\nmreq = req.get(mp3)\r\nprint(title)\r\nwith open(title+\".mp3\",\"wb\") as f:\r\n    f.write(mreq.content)\r\n    f.close()\r\n\r\npicul = soup.find_all(\"ul\",{\"class\":\"swiper-wrapper\"})[0]\r\n\r\nimages = picul.find_all(\"img\")\r\n\r\nfor i in images:\r\n    imgurl = req.get(i['src'])\r\n    with open(imgdir+\".\".join(i['src'].split(\".\")[-2:]),\"wb\") as f:\r\n        f.write(imgurl.content)\r\n        f.close()\r\n\r\nfiles=os.listdir(imgdir)\r\n\r\nif \"Thumbs.db\" in files:\r\n    files.remove(\"Thumbs.db\")\r\n#把图片连接成pdf\r\nf_pdf = title+\".pdf\"\r\n(w, h) = landscape(A4)\r\nc = canvas.Canvas(f_pdf, pagesize = (h,w))\r\n\r\nfor file in files:\r\n    c.drawImage(imgdir+file,0,0,h,w)\r\n    c.showPage()\r\n    os.remove(imgdir+file)\r\nc.save()\r\ntry:\r\n    os.rmdir(\"tmpimgtan8\")\r\nexcept:\r\n    print(\"请手动删除 tmpimgtan8\")</pre>\r\n同时，还顺手写了个web服务的代码。\r\n\r\n可以到<a href=\"https://github.com/webgjc/blog\">https://github.com/webgjc/blog</a>的tan8/查看。",
            "post_title": "爬虫--钢琴曲谱",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e7%88%ac%e8%99%ab-%e9%92%a2%e7%90%b4%e6%9b%b2%e8%b0%b1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-7-6 13:26:51",
            "post_modified_gmt": "2018-7-6 05:26:51",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=576",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "2"
        },
        {
            "ID": "577",
            "post_author": "1",
            "post_date": "2018-3-29 12:53:07",
            "post_date_gmt": "2018-3-29 04:53:07",
            "post_content": "最近学钢琴，也经常会用到曲谱，但网上大多数曲谱不清晰，或者清晰的要vip。因此研究下某曲谱网站，进行爬取vip才能下载的曲谱。\r\n<pre></pre>",
            "post_title": "爬虫--钢琴曲谱",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "576-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-3-29 12:53:07",
            "post_modified_gmt": "2018-3-29 04:53:07",
            "post_content_filtered": "",
            "post_parent": "576",
            "guid": "http://ganjiacheng.cn/blog/?p=577",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "579",
            "post_author": "1",
            "post_date": "2018-3-29 13:19:58",
            "post_date_gmt": "2018-3-29 05:19:58",
            "post_content": "最近学钢琴，也经常会用到曲谱，但网上大多数曲谱不清晰，或者清晰的要vip。因此研究下某曲谱网站，进行爬取vip才能下载的曲谱。<!--more-->\r\n\r\n可以在<a href=\"http://123.206.217.190:8888\">http://123.206.217.190:8888</a>试用效果\r\n\r\n下面的是python3.x代码，在window可直接本地运行，在linux做一些注释中的修改。\r\n<pre>#coding:utf-8\r\nimport requests\r\nfrom bs4 import BeautifulSoup\r\nimport os\r\nimport sys\r\nimport io\r\nfrom PIL import Image\r\nfrom reportlab.lib.pagesizes import A4, landscape\r\nfrom reportlab.pdfgen import canvas\r\nimport time\r\nimport random\r\nsys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding='utf-8')\r\n\r\n#输入弹琴吧所需琴谱的网址\r\n#把网址变成手机访问的网址\r\nreq = requests.Session()\r\nurl=\"\"\r\n#url = \"http://www.tan8.com/yuepu-58546.html\"\r\nstate=True\r\n\r\nwhile state:\r\n    url = input(\"输入弹琴吧钢琴曲网址：\\n\")\r\n    if url.find(\"-m.html\")==-1:\r\n        url = url.replace(\".html\",\"-m.html\")\r\n        imgdir = \"tmpimgtan8/\"\r\n\r\n    if url.find(\"-m.html\")==-1:\r\n        print(\"请输入正确网址\")\r\n    else:\r\n        imgdir = \"tmpimgtan8/\"\r\n        state=False\r\n\r\nif not os.path.exists(imgdir):\r\n    os.mkdir(\"tmpimgtan8\")\r\n#爬下来解析出mp3，图片地址\r\n#保存MP3，图片\r\nresp = req.get(url)\r\n\r\nsoup=BeautifulSoup(resp.text,\"lxml\")\r\n\r\n#windows可以用这个中文名做文件名\r\ntitle = soup.find_all(\"title\")[0].text.replace(\" \",\"\").replace(\"/\",\"\")\r\n#linux用下面的随机数做文件名\r\n#title = str(int(random.random()*8999)+1000)\r\n\r\nmp3 = soup.find_all(\"source\")[0][\"src\"]\r\nmreq = req.get(mp3)\r\nprint(title)\r\nwith open(title+\".mp3\",\"wb\") as f:\r\n    f.write(mreq.content)\r\n    f.close()\r\n\r\npicul = soup.find_all(\"ul\",{\"class\":\"swiper-wrapper\"})[0]\r\n\r\nimages = picul.find_all(\"img\")\r\n\r\nfor i in images:\r\n    imgurl = req.get(i['src'])\r\n    with open(imgdir+\".\".join(i['src'].split(\".\")[-2:]),\"wb\") as f:\r\n        f.write(imgurl.content)\r\n        f.close()\r\n\r\nfiles=os.listdir(imgdir)\r\n\r\nif \"Thumbs.db\" in files:\r\n    files.remove(\"Thumbs.db\")\r\n#把图片连接成pdf\r\nf_pdf = title+\".pdf\"\r\n(w, h) = landscape(A4)\r\nc = canvas.Canvas(f_pdf, pagesize = (h,w))\r\n\r\nfor file in files:\r\n    c.drawImage(imgdir+file,0,0,h,w)\r\n    c.showPage()\r\n    os.remove(imgdir+file)\r\nc.save()\r\ntry:\r\n    os.rmdir(\"tmpimgtan8\")\r\nexcept:\r\n    print(\"请手动删除 tmpimgtan8\")</pre>\r\n同时，还顺手写了个web服务的代码。\r\n\r\n可以到<a href=\"https://github.com/webgjc/blog\">https://github.com/webgjc/blog</a>的tan8/查看。",
            "post_title": "爬虫--钢琴曲谱",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "576-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-3-29 13:19:58",
            "post_modified_gmt": "2018-3-29 05:19:58",
            "post_content_filtered": "",
            "post_parent": "576",
            "guid": "http://ganjiacheng.cn/blog/?p=579",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "580",
            "post_author": "1",
            "post_date": "2018-3-29 13:53:55",
            "post_date_gmt": "2018-3-29 05:53:55",
            "post_content": "最近学钢琴，也经常会用到曲谱，但网上大多数曲谱不清晰，或者清晰的要vip。因此研究下某曲谱网站，进行爬取vip才能下载的曲谱并组合为pdf。<!--more-->\r\n\r\n可以在<a href=\"http://123.206.217.190:8888\">http://123.206.217.190:8888</a>试用效果\r\n\r\n下面的是python3.x代码，在window可直接本地运行，在linux做一些注释中的修改。\r\n<pre>#coding:utf-8\r\nimport requests\r\nfrom bs4 import BeautifulSoup\r\nimport os\r\nimport sys\r\nimport io\r\nfrom PIL import Image\r\nfrom reportlab.lib.pagesizes import A4, landscape\r\nfrom reportlab.pdfgen import canvas\r\nimport time\r\nimport random\r\nsys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding='utf-8')\r\n\r\n#输入弹琴吧所需琴谱的网址\r\n#把网址变成手机访问的网址\r\nreq = requests.Session()\r\nurl=\"\"\r\n#url = \"http://www.tan8.com/yuepu-58546.html\"\r\nstate=True\r\n\r\nwhile state:\r\n    url = input(\"输入弹琴吧钢琴曲网址：\\n\")\r\n    if url.find(\"-m.html\")==-1:\r\n        url = url.replace(\".html\",\"-m.html\")\r\n        imgdir = \"tmpimgtan8/\"\r\n\r\n    if url.find(\"-m.html\")==-1:\r\n        print(\"请输入正确网址\")\r\n    else:\r\n        imgdir = \"tmpimgtan8/\"\r\n        state=False\r\n\r\nif not os.path.exists(imgdir):\r\n    os.mkdir(\"tmpimgtan8\")\r\n#爬下来解析出mp3，图片地址\r\n#保存MP3，图片\r\nresp = req.get(url)\r\n\r\nsoup=BeautifulSoup(resp.text,\"lxml\")\r\n\r\n#windows可以用这个中文名做文件名\r\ntitle = soup.find_all(\"title\")[0].text.replace(\" \",\"\").replace(\"/\",\"\")\r\n#linux用下面的随机数做文件名\r\n#title = str(int(random.random()*8999)+1000)\r\n\r\nmp3 = soup.find_all(\"source\")[0][\"src\"]\r\nmreq = req.get(mp3)\r\nprint(title)\r\nwith open(title+\".mp3\",\"wb\") as f:\r\n    f.write(mreq.content)\r\n    f.close()\r\n\r\npicul = soup.find_all(\"ul\",{\"class\":\"swiper-wrapper\"})[0]\r\n\r\nimages = picul.find_all(\"img\")\r\n\r\nfor i in images:\r\n    imgurl = req.get(i['src'])\r\n    with open(imgdir+\".\".join(i['src'].split(\".\")[-2:]),\"wb\") as f:\r\n        f.write(imgurl.content)\r\n        f.close()\r\n\r\nfiles=os.listdir(imgdir)\r\n\r\nif \"Thumbs.db\" in files:\r\n    files.remove(\"Thumbs.db\")\r\n#把图片连接成pdf\r\nf_pdf = title+\".pdf\"\r\n(w, h) = landscape(A4)\r\nc = canvas.Canvas(f_pdf, pagesize = (h,w))\r\n\r\nfor file in files:\r\n    c.drawImage(imgdir+file,0,0,h,w)\r\n    c.showPage()\r\n    os.remove(imgdir+file)\r\nc.save()\r\ntry:\r\n    os.rmdir(\"tmpimgtan8\")\r\nexcept:\r\n    print(\"请手动删除 tmpimgtan8\")</pre>\r\n同时，还顺手写了个web服务的代码。\r\n\r\n可以到<a href=\"https://github.com/webgjc/blog\">https://github.com/webgjc/blog</a>的tan8/查看。",
            "post_title": "爬虫--钢琴曲谱",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "576-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-3-29 13:53:55",
            "post_modified_gmt": "2018-3-29 05:53:55",
            "post_content_filtered": "",
            "post_parent": "576",
            "guid": "http://ganjiacheng.cn/blog/?p=580",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "582",
            "post_author": "1",
            "post_date": "2018-3-31 14:42:30",
            "post_date_gmt": "2018-3-31 06:42:30",
            "post_content": "之前看算法书对于深搜一直是一个坎，有点难以理解或者理解了一些但没法下手写，这回来重新探讨一下个人目前的理解及解决方案。\r\n\r\n首先，看一个全排序，",
            "post_title": "聊聊深度优先搜索算法及应用",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "574-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-3-31 14:42:30",
            "post_modified_gmt": "2018-3-31 06:42:30",
            "post_content_filtered": "",
            "post_parent": "574",
            "guid": "http://ganjiacheng.cn/blog/?p=582",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "583",
            "post_author": "1",
            "post_date": "2018-3-31 15:45:20",
            "post_date_gmt": "2018-3-31 07:45:20",
            "post_content": "之前看算法书对于深搜一直是一个坎，有点难以理解或者理解了一些但没法下手写，这回来重新探讨一下个人目前的理解及解决方案。文章从全排入手，到解决8皇后，和尚妖怪过河等问题。<!--more-->\r\n\r\n首先，看一个全排序，传入一个数组（其中有n个可不等长的数组），得到的结果是其中每个数组取一个数组成的新数组的集合，如下\r\n<pre>result=[0]*3\r\narr=[[1,2,3],[4,5],[7,8,9]]\r\nres=[]\r\n#算法部分，遍历其中每个数组，在result保存临时一个数组。\r\n#copy是因为append只是插入了一个类似指针，而result内容会变，因此要用copy换一个地址。\r\ndef dfs(arr, depth):\r\n    global res\r\n    for i in range(len(arr[depth])):\r\n        result[depth] = arr[depth][i]\r\n        if depth != len(arr) - 1:\r\n            dfs(arr, depth + 1)\r\n        else:\r\n            res.append(result.copy())\r\ndfs(arr,0)\r\nprint(res)\r\n#结果为\r\n[[1, 4, 7], [1, 4, 8], [1, 4, 9], [1, 5, 7], [1, 5, 8], [1, 5, 9], [2, 4, 7], [2\r\n, 4, 8], [2, 4, 9], [2, 5, 7], [2, 5, 8], [2, 5, 9], [3, 4, 7], [3, 4, 8], [3, 4\r\n, 9], [3, 5, 7], [3, 5, 8], [3, 5, 9]]</pre>\r\n在来看个升级版，一个数组如[1,2,3,4,5]的全排，这里for中递归的思路则和上次基本不一样，用的是交换，遍历完所有可能的交换值，但因为只有一个数组，所以交换完保存数后还得在交换回来，也就是递归下面一行和上面一行的区别。\r\n<pre>COUNT=0  \r\nres=[]\r\n\r\n#for第一次是0和所有交换，递归后是1和所有的交换\r\n#但运行过程则会0和0换，之后跳到递归中1和1换，直到最后，得到第一情况，也就是没换，这时begin=end\r\n#然后回退一步，那时begin应该是end-1，所以最后两个换下，又得到一种情况。\r\n#就这样回退到最初的for，就可以遍历所有交换情况\r\ndef perm(n,begin,end):  \r\n    global COUNT,res\r\n    if begin&gt;=end:  \r\n        res.append(n)\r\n    else:  \r\n        i=begin  \r\n        for num in range(begin,end):  \r\n            n[num],n[i]=n[i],n[num] \r\n            perm(n.copy(),begin+1,end)\r\n            n[num],n[i]=n[i],n[num]\r\n\r\nN=4\r\nn=[i for i in range(N)]\r\nperm(n,0,len(n))\r\nprint(res)</pre>\r\n然后看几个应用，基本也是自己学了之后用上去！\r\n\r\n第一个，八皇后，也就是8*8棋盘上放8个皇后，每个皇后横竖左斜右斜都不能有其他皇后。总共有92中情况。这里的解法便是先得到长为8的数组的全排，在逐个检验，当然检验是有技巧的。\r\n<pre>#这里把数组如[1,2,3,4,5,6,7,8]下标作为棋盘x，值作为棋盘y\r\n#因为横竖都不在线上，所以求全排\r\n#然后检查的就是左斜右斜便可\r\n#全排，请看前面的讲解\r\nCOUNT=0  \r\ndef perm(n,begin,end):  \r\n    global COUNT,res\r\n    if begin&gt;=end:  \r\n        res.append(n)\r\n    else:  \r\n        i=begin  \r\n        for num in range(begin,end):  \r\n            n[num],n[i]=n[i],n[num] \r\n            perm(n.copy(),begin+1,end)\r\n            n[num],n[i]=n[i],n[num]\r\nres=[]\r\nN=8\r\nn=[i for i in range(N)]\r\nperm(n,0,len(n))\r\n\r\n#检验的是数组中有没有重复值\r\ndef check(l):\r\n    return len(set(l))==len(l)\r\n\r\nresult = []\r\n\r\n#左斜的位置x-y相同的会在一条线上，右斜的位置x+y相同的会在一条线上。\r\n#由此检验\r\nfor i in res:\r\n    s = [i[j]+j for j in range(N)]\r\n    c = [i[j]-j for j in range(N)]\r\n    if check(s) and check(c):\r\n        print(i)\r\n        result.append(i)\r\n#得到92个解\r\nprint(len(result))</pre>\r\n最后一个应用：和尚与妖怪过河问题。\r\n\r\n问题大致是河左岸有三个妖怪三个和尚，要全部过河到右岸，有一条能载两人的船，只要左岸或右岸妖怪数大于和尚数，妖怪就会把和尚吃掉。需得所有简单解法（中间不包括重复循环步骤）。\r\n\r\n关键点和上面的其实是差不多，只是比较难抽象出遍历的东西，一不小心就会死在中间的死循环。\r\n<pre>class River():\r\n    def __init__(self):\r\n        self.ship = 1 #1--左岸，-1--右岸\r\n        self.left = [3,3] #和尚，妖怪\r\n        self.right = [0,0] #和尚，妖怪\r\n        #状态改变只有这五种和取反后的五种\r\n        self.change = [ [-1, -1],\r\n                        [-2, 0],\r\n                        [0, -2],\r\n                        [-1, 0],\r\n                        [0, -1]]\r\n        #保存上一个状态，直接排除一样的来回\r\n        self.lastState = -1\r\n        #如果遍历是一棵树，保存的则根到某个枝条\r\n        self.lineHis = [[3, 3, 0, 0, 1]]\r\n    #改变状态\r\n    def move(self,n):\r\n        self.left = [self.left[i]+self.ship*self.change[n][i] for i in range(2)]\r\n        self.right = [self.right[i]-self.ship*self.change[n][i] for i in range(2)]\r\n        self.ship = -self.ship\r\n        self.lastState = n\r\n    #获取下一步可移动点，比如只有一个怪兽在左岸，就要排除两个妖怪过河的方案，这个剪枝很重要。\r\n    def getState(self):\r\n        states = []\r\n        if self.ship == 1:\r\n            state = self.left\r\n        else:\r\n            state = self.right\r\n        for i in range(len(self.change)):\r\n            if min(state[0]+self.change[i][0],state[1]+self.change[i][1])&gt;=0:\r\n                states.append(i)\r\n        return states\r\n    #主算法部分，断掉妖怪大于和尚的分支。\r\n    #在遍历中，最重要的一步就是在这条支线上，如果这一种状态之前出现过，就不要继续深入。\r\n    def dfs(self):\r\n        if self.left==[0,0] and self.right==[3,3]:\r\n            print(self.lineHis)\r\n            return \r\n        elif (self.left[1]&gt;self.left[0] and self.left[0]!=0) or (self.right[1]&gt;self.right[0] and self.right[0]!=0):\r\n            return\r\n        else:\r\n            states = self.getState()\r\n            for i in states:\r\n                if i != self.lastState:\r\n                    self.move(i)\r\n                    self.lineHis.append(self.left+self.right+[self.ship])\r\n                    if self.lineHis[-1] not in self.lineHis[0:-1]:\r\n                        self.dfs()\r\n                    self.move(i)\r\n                    self.lineHis.pop()\r\n        \r\nif __name__ == \"__main__\":\r\n    s = River()\r\n    s.dfs()</pre>\r\n总结：深度优先搜索主要部分是提炼出搜索的树，然后好坏在于剪枝。",
            "post_title": "聊聊深度优先搜索算法及应用",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "574-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-3-31 15:45:20",
            "post_modified_gmt": "2018-3-31 07:45:20",
            "post_content_filtered": "",
            "post_parent": "574",
            "guid": "http://ganjiacheng.cn/blog/?p=583",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "584",
            "post_author": "1",
            "post_date": "2018-3-31 15:49:03",
            "post_date_gmt": "2018-3-31 07:49:03",
            "post_content": "之前看算法书对于深搜一直是一个坎，有点难以理解或者理解了一些但没法下手写，这回来重新探讨一下个人目前的理解及解决方案。文章从全排入手，到解决八皇后，和尚妖怪过河等问题。<!--more-->\r\n\r\n首先，看一个全排序，传入一个数组（其中有n个可不等长的数组），得到的结果是其中每个数组取一个数组成的新数组的集合，如下\r\n<pre>result=[0]*3\r\narr=[[1,2,3],[4,5],[7,8,9]]\r\nres=[]\r\n#算法部分，遍历其中每个数组，在result保存临时一个数组。\r\n#copy是因为append只是插入了一个类似指针，而result内容会变，因此要用copy换一个地址。\r\ndef dfs(arr, depth):\r\n    global res\r\n    for i in range(len(arr[depth])):\r\n        result[depth] = arr[depth][i]\r\n        if depth != len(arr) - 1:\r\n            dfs(arr, depth + 1)\r\n        else:\r\n            res.append(result.copy())\r\ndfs(arr,0)\r\nprint(res)\r\n#结果为\r\n[[1, 4, 7], [1, 4, 8], [1, 4, 9], [1, 5, 7], [1, 5, 8], [1, 5, 9], [2, 4, 7], [2\r\n, 4, 8], [2, 4, 9], [2, 5, 7], [2, 5, 8], [2, 5, 9], [3, 4, 7], [3, 4, 8], [3, 4\r\n, 9], [3, 5, 7], [3, 5, 8], [3, 5, 9]]</pre>\r\n在来看个升级版，一个数组如[1,2,3,4,5]的全排，这里for中递归的思路则和上次基本不一样，用的是交换，遍历完所有可能的交换值，但因为只有一个数组，所以交换完保存数后还得在交换回来，也就是递归下面一行和上面一行的区别。\r\n<pre>COUNT=0  \r\nres=[]\r\n\r\n#for第一次是0和所有交换，递归后是1和所有的交换\r\n#但运行过程则会0和0换，之后跳到递归中1和1换，直到最后，得到第一情况，也就是没换，这时begin=end\r\n#然后回退一步，那时begin应该是end-1，所以最后两个换下，又得到一种情况。\r\n#就这样回退到最初的for，就可以遍历所有交换情况\r\ndef perm(n,begin,end):  \r\n    global COUNT,res\r\n    if begin&gt;=end:  \r\n        res.append(n)\r\n    else:  \r\n        i=begin  \r\n        for num in range(begin,end):  \r\n            n[num],n[i]=n[i],n[num] \r\n            perm(n.copy(),begin+1,end)\r\n            n[num],n[i]=n[i],n[num]\r\n\r\nN=4\r\nn=[i for i in range(N)]\r\nperm(n,0,len(n))\r\nprint(res)</pre>\r\n然后看几个应用，基本也是自己学了之后用上去！\r\n\r\n第一个，八皇后，也就是8*8棋盘上放8个皇后，每个皇后横竖左斜右斜都不能有其他皇后。总共有92中情况。这里的解法便是先得到长为8的数组的全排，在逐个检验，当然检验是有技巧的。\r\n<pre>#这里把数组如[1,2,3,4,5,6,7,8]下标作为棋盘x，值作为棋盘y\r\n#因为横竖都不在线上，所以求全排\r\n#然后检查的就是左斜右斜便可\r\n#全排，请看前面的讲解\r\nCOUNT=0  \r\ndef perm(n,begin,end):  \r\n    global COUNT,res\r\n    if begin&gt;=end:  \r\n        res.append(n)\r\n    else:  \r\n        i=begin  \r\n        for num in range(begin,end):  \r\n            n[num],n[i]=n[i],n[num] \r\n            perm(n.copy(),begin+1,end)\r\n            n[num],n[i]=n[i],n[num]\r\nres=[]\r\nN=8\r\nn=[i for i in range(N)]\r\nperm(n,0,len(n))\r\n\r\n#检验的是数组中有没有重复值\r\ndef check(l):\r\n    return len(set(l))==len(l)\r\n\r\nresult = []\r\n\r\n#左斜的位置x-y相同的会在一条线上，右斜的位置x+y相同的会在一条线上。\r\n#由此检验\r\nfor i in res:\r\n    s = [i[j]+j for j in range(N)]\r\n    c = [i[j]-j for j in range(N)]\r\n    if check(s) and check(c):\r\n        print(i)\r\n        result.append(i)\r\n#得到92个解\r\nprint(len(result))</pre>\r\n最后一个应用：和尚与妖怪过河问题。\r\n\r\n问题大致是河左岸有三个妖怪三个和尚，要全部过河到右岸，有一条能载两人的船，只要左岸或右岸妖怪数大于和尚数，妖怪就会把和尚吃掉。需得所有简单解法（中间不包括重复循环步骤）。\r\n\r\n关键点和上面的其实是差不多，只是比较难抽象出遍历的东西，一不小心就会死在中间的死循环。\r\n<pre>class River():\r\n    def __init__(self):\r\n        self.ship = 1 #1--左岸，-1--右岸\r\n        self.left = [3,3] #和尚，妖怪\r\n        self.right = [0,0] #和尚，妖怪\r\n        #状态改变只有这五种和取反后的五种\r\n        self.change = [ [-1, -1],\r\n                        [-2, 0],\r\n                        [0, -2],\r\n                        [-1, 0],\r\n                        [0, -1]]\r\n        #保存上一个状态，直接排除一样的来回\r\n        self.lastState = -1\r\n        #如果遍历是一棵树，保存的则根到某个枝条\r\n        self.lineHis = [[3, 3, 0, 0, 1]]\r\n    #改变状态\r\n    def move(self,n):\r\n        self.left = [self.left[i]+self.ship*self.change[n][i] for i in range(2)]\r\n        self.right = [self.right[i]-self.ship*self.change[n][i] for i in range(2)]\r\n        self.ship = -self.ship\r\n        self.lastState = n\r\n    #获取下一步可移动点，比如只有一个怪兽在左岸，就要排除两个妖怪过河的方案，这个剪枝很重要。\r\n    def getState(self):\r\n        states = []\r\n        if self.ship == 1:\r\n            state = self.left\r\n        else:\r\n            state = self.right\r\n        for i in range(len(self.change)):\r\n            if min(state[0]+self.change[i][0],state[1]+self.change[i][1])&gt;=0:\r\n                states.append(i)\r\n        return states\r\n    #主算法部分，断掉妖怪大于和尚的分支。\r\n    #在遍历中，最重要的一步就是在这条支线上，如果这一种状态之前出现过，就不要继续深入。\r\n    def dfs(self):\r\n        if self.left==[0,0] and self.right==[3,3]:\r\n            print(self.lineHis)\r\n            return \r\n        elif (self.left[1]&gt;self.left[0] and self.left[0]!=0) or (self.right[1]&gt;self.right[0] and self.right[0]!=0):\r\n            return\r\n        else:\r\n            states = self.getState()\r\n            for i in states:\r\n                if i != self.lastState:\r\n                    self.move(i)\r\n                    self.lineHis.append(self.left+self.right+[self.ship])\r\n                    if self.lineHis[-1] not in self.lineHis[0:-1]:\r\n                        self.dfs()\r\n                    self.move(i)\r\n                    self.lineHis.pop()\r\n        \r\nif __name__ == \"__main__\":\r\n    s = River()\r\n    s.dfs()\r\n    #可得4个最简解。</pre>\r\n总结：深度优先搜索主要部分是提炼出搜索的树，然后好坏在于剪枝。",
            "post_title": "聊聊深度优先搜索算法及应用",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "574-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-3-31 15:49:03",
            "post_modified_gmt": "2018-3-31 07:49:03",
            "post_content_filtered": "",
            "post_parent": "574",
            "guid": "http://ganjiacheng.cn/blog/?p=584",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "585",
            "post_author": "1",
            "post_date": "2018-3-31 23:10:15",
            "post_date_gmt": "2018-3-31 15:10:15",
            "post_content": "之前看算法书对于深搜一直是一个坎，有点难以理解或者理解了一些但没法下手写，这回来重新探讨一下个人目前的理解及解决方案。文章从全排入手，到解决八皇后，和尚妖怪过河等问题。<!--more-->\n\n首先，看一个全排序，传入一个数组（其中有n个可不等长的数组），得到的结果是其中每个数组取一个数组成的新数组的集合，如下\n<pre>result=[0]*3\narr=[[1,2,3],[4,5],[7,8,9]]\nres=[]\n#算法部分，遍历其中每个数组，在result保存临时一个数组。\n#copy是因为append只是插入了一个类似指针，而result内容会变，因此要用copy换一个地址。\ndef dfs(arr, depth):\n    global res\n    for i in range(len(arr[depth])):\n        result[depth] = arr[depth][i]\n        if depth != len(arr) - 1:\n            dfs(arr, depth + 1)\n        else:\n            res.append(result.copy())\ndfs(arr,0)\nprint(res)\n#结果为\n[[1, 4, 7], [1, 4, 8], [1, 4, 9], [1, 5, 7], [1, 5, 8], [1, 5, 9], [2, 4, 7], [2\n, 4, 8], [2, 4, 9], [2, 5, 7], [2, 5, 8], [2, 5, 9], [3, 4, 7], [3, 4, 8], [3, 4\n, 9], [3, 5, 7], [3, 5, 8], [3, 5, 9]]</pre>\n在来看个升级版，一个数组如[1,2,3,4,5]的全排，这里for中递归的思路则和上次基本不一样，用的是交换，遍历完所有可能的交换值，但因为只有一个数组，所以交换完保存数后还得在交换回来，也就是递归下面一行和上面一行的区别。\n<pre>COUNT=0  \nres=[]\n\n#for第一次是0和所有交换，递归后是1和所有的交换\n#但运行过程则会0和0换，之后跳到递归中1和1换，直到最后，得到第一情况，也就是没换，这时begin=end\n#然后回退一步，那时begin应该是end-1，所以最后两个换下，又得到一种情况。\n#就这样回退到最初的for，就可以遍历所有交换情况\ndef perm(n,begin,end):  \n    global COUNT,res\n    if begin&gt;=end:  \n        res.append(n)\n    else:  \n        i=begin  \n        for num in range(begin,end):  \n            n[num],n[i]=n[i],n[num] \n            perm(n.copy(),begin+1,end)\n            n[num],n[i]=n[i],n[num]\n\nN=4\nn=[i for i in range(N)]\nperm(n,0,len(n))\nprint(res)</pre>\n然后看几个应用，基本也是自己学了之后用上去！\n\n第一个，九宫格中文输入得到输入项的所有组合。用到上面第一个全排序，只需要把输入转换成已按按键的字母数组。如\n<pre>arr=[[a,b,c],[c,d,e],[g,h,i]]</pre>\n第二个，八皇后，也就是8*8棋盘上放8个皇后，每个皇后横竖左斜右斜都不能有其他皇后。总共有92中情况。这里的解法便是先得到长为8的数组的全排，在逐个检验，当然检验是有技巧的。\n<pre>#这里把数组如[1,2,3,4,5,6,7,8]下标作为棋盘x，值作为棋盘y\n#因为横竖都不在线上，所以求全排\n#然后检查的就是左斜右斜便可\n#全排，请看前面的讲解\nCOUNT=0  \ndef perm(n,begin,end):  \n    global COUNT,res\n    if begin&gt;=end:  \n        res.append(n)\n    else:  \n        i=begin  \n        for num in range(begin,end):  \n            n[num],n[i]=n[i],n[num] \n            perm(n.copy(),begin+1,end)\n            n[num],n[i]=n[i],n[num]\nres=[]\nN=8\nn=[i for i in range(N)]\nperm(n,0,len(n))\n\n#检验的是数组中有没有重复值\ndef check(l):\n    return len(set(l))==len(l)\n\nresult = []\n\n#左斜的位置x-y相同的会在一条线上，右斜的位置x+y相同的会在一条线上。\n#由此检验\nfor i in res:\n    s = [i[j]+j for j in range(N)]\n    c = [i[j]-j for j in range(N)]\n    if check(s) and check(c):\n        print(i)\n        result.append(i)\n#得到92个解\nprint(len(result))</pre>\n最后一个应用：和尚与妖怪过河问题。\n\n问题大致是河左岸有三个妖怪三个和尚，要全部过河到右岸，有一条能载两人的船，只要左岸或右岸妖怪数大于和尚数，妖怪就会把和尚吃掉。需得所有简单解法（中间不包括重复循环步骤）。\n\n关键点和上面的其实是差不多，只是比较难抽象出遍历的东西，一不小心就会死在中间的死循环。\n<pre>class River():\n    def __init__(self):\n        self.ship = 1 #1--左岸，-1--右岸\n        self.left = [3,3] #和尚，妖怪\n        self.right = [0,0] #和尚，妖怪\n        #状态改变只有这五种和取反后的五种\n        self.change = [ [-1, -1],\n                        [-2, 0],\n                        [0, -2],\n                        [-1, 0],\n                        [0, -1]]\n        #保存上一个状态，直接排除一样的来回\n        self.lastState = -1\n        #如果遍历是一棵树，保存的则根到某个枝条\n        self.lineHis = [[3, 3, 0, 0, 1]]\n    #改变状态\n    def move(self,n):\n        self.left = [self.left[i]+self.ship*self.change[n][i] for i in range(2)]\n        self.right = [self.right[i]-self.ship*self.change[n][i] for i in range(2)]\n        self.ship = -self.ship\n        self.lastState = n\n    #获取下一步可移动点，比如只有一个怪兽在左岸，就要排除两个妖怪过河的方案，这个剪枝很重要。\n    def getState(self):\n        states = []\n        if self.ship == 1:\n            state = self.left\n        else:\n            state = self.right\n        for i in range(len(self.change)):\n            if min(state[0]+self.change[i][0],state[1]+self.change[i][1])&gt;=0:\n                states.append(i)\n        return states\n    #主算法部分，断掉妖怪大于和尚的分支。\n    #在遍历中，最重要的一步就是在这条支线上，如果这一种状态之前出现过，就不要继续深入。\n    def dfs(self):\n        if self.left==[0,0] and self.right==[3,3]:\n            print(self.lineHis)\n            return \n        elif (self.left[1]&gt;self.left[0] and self.left[0]!=0) or (self.right[1]&gt;self.right[0] and self.right[0]!=0):\n            return\n        else:\n            states = self.getState()\n            for i in states:\n                if i != self.lastState:\n                    self.move(i)\n                    self.lineHis.append(self.left+self.right+[self.ship])\n                    if self.lineHis[-1] not in self.lineHis[0:-1]:\n                        self.dfs()\n                    self.move(i)\n                    self.lineHis.pop()\n        \nif __name__ == \"__main__\":\n    s = River()\n    s.dfs()\n    #可得4个最简解。</pre>\n总结：深度优先搜索主要部分是提炼出搜索的树，然后好坏在于剪枝。",
            "post_title": "聊聊深度优先搜索算法及应用",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "574-autosave-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-3-31 23:10:15",
            "post_modified_gmt": "2018-3-31 15:10:15",
            "post_content_filtered": "",
            "post_parent": "574",
            "guid": "http://ganjiacheng.cn/blog/?p=585",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "586",
            "post_author": "1",
            "post_date": "2018-3-31 23:10:33",
            "post_date_gmt": "2018-3-31 15:10:33",
            "post_content": "之前看算法书对于深搜一直是一个坎，有点难以理解或者理解了一些但没法下手写，这回来重新探讨一下个人目前的理解及解决方案。文章从全排入手，到解决八皇后，和尚妖怪过河等问题。<!--more-->\r\n\r\n首先，看一个全排序，传入一个数组（其中有n个可不等长的数组），得到的结果是其中每个数组取一个数组成的新数组的集合，如下\r\n<pre>result=[0]*3\r\narr=[[1,2,3],[4,5],[7,8,9]]\r\nres=[]\r\n#算法部分，遍历其中每个数组，在result保存临时一个数组。\r\n#copy是因为append只是插入了一个类似指针，而result内容会变，因此要用copy换一个地址。\r\ndef dfs(arr, depth):\r\n    global res\r\n    for i in range(len(arr[depth])):\r\n        result[depth] = arr[depth][i]\r\n        if depth != len(arr) - 1:\r\n            dfs(arr, depth + 1)\r\n        else:\r\n            res.append(result.copy())\r\ndfs(arr,0)\r\nprint(res)\r\n#结果为\r\n[[1, 4, 7], [1, 4, 8], [1, 4, 9], [1, 5, 7], [1, 5, 8], [1, 5, 9], [2, 4, 7], [2\r\n, 4, 8], [2, 4, 9], [2, 5, 7], [2, 5, 8], [2, 5, 9], [3, 4, 7], [3, 4, 8], [3, 4\r\n, 9], [3, 5, 7], [3, 5, 8], [3, 5, 9]]</pre>\r\n在来看个升级版，一个数组如[1,2,3,4,5]的全排，这里for中递归的思路则和上次基本不一样，用的是交换，遍历完所有可能的交换值，但因为只有一个数组，所以交换完保存数后还得在交换回来，也就是递归下面一行和上面一行的区别。\r\n<pre>COUNT=0  \r\nres=[]\r\n\r\n#for第一次是0和所有交换，递归后是1和所有的交换\r\n#但运行过程则会0和0换，之后跳到递归中1和1换，直到最后，得到第一情况，也就是没换，这时begin=end\r\n#然后回退一步，那时begin应该是end-1，所以最后两个换下，又得到一种情况。\r\n#就这样回退到最初的for，就可以遍历所有交换情况\r\ndef perm(n,begin,end):  \r\n    global COUNT,res\r\n    if begin&gt;=end:  \r\n        res.append(n)\r\n    else:  \r\n        i=begin  \r\n        for num in range(begin,end):  \r\n            n[num],n[i]=n[i],n[num] \r\n            perm(n.copy(),begin+1,end)\r\n            n[num],n[i]=n[i],n[num]\r\n\r\nN=4\r\nn=[i for i in range(N)]\r\nperm(n,0,len(n))\r\nprint(res)</pre>\r\n然后看几个应用，基本也是自己学了之后用上去！\r\n\r\n第一个，九宫格中文输入得到输入项的所有组合。用到上面第一个全排序，只需要把输入转换成已按按键的字母数组。如\r\n<pre>arr=[[a,b,c],[c,d,e],[g,h,i]]</pre>\r\n第二个，八皇后，也就是8*8棋盘上放8个皇后，每个皇后横竖左斜右斜都不能有其他皇后。总共有92中情况。这里的解法便是先得到长为8的数组的全排，在逐个检验，当然检验是有技巧的。\r\n<pre>#这里把数组如[1,2,3,4,5,6,7,8]下标作为棋盘x，值作为棋盘y\r\n#因为横竖都不在线上，所以求全排\r\n#然后检查的就是左斜右斜便可\r\n#全排，请看前面的讲解\r\nCOUNT=0  \r\ndef perm(n,begin,end):  \r\n    global COUNT,res\r\n    if begin&gt;=end:  \r\n        res.append(n)\r\n    else:  \r\n        i=begin  \r\n        for num in range(begin,end):  \r\n            n[num],n[i]=n[i],n[num] \r\n            perm(n.copy(),begin+1,end)\r\n            n[num],n[i]=n[i],n[num]\r\nres=[]\r\nN=8\r\nn=[i for i in range(N)]\r\nperm(n,0,len(n))\r\n\r\n#检验的是数组中有没有重复值\r\ndef check(l):\r\n    return len(set(l))==len(l)\r\n\r\nresult = []\r\n\r\n#左斜的位置x-y相同的会在一条线上，右斜的位置x+y相同的会在一条线上。\r\n#由此检验\r\nfor i in res:\r\n    s = [i[j]+j for j in range(N)]\r\n    c = [i[j]-j for j in range(N)]\r\n    if check(s) and check(c):\r\n        print(i)\r\n        result.append(i)\r\n#得到92个解\r\nprint(len(result))</pre>\r\n最后一个应用：和尚与妖怪过河问题。\r\n\r\n问题大致是河左岸有三个妖怪三个和尚，要全部过河到右岸，有一条能载两人的船，只要左岸或右岸妖怪数大于和尚数，妖怪就会把和尚吃掉。需得所有简单解法（中间不包括重复循环步骤）。\r\n\r\n关键点和上面的其实是差不多，只是比较难抽象出遍历的东西，一不小心就会死在中间的死循环。\r\n<pre>class River():\r\n    def __init__(self):\r\n        self.ship = 1 #1--左岸，-1--右岸\r\n        self.left = [3,3] #和尚，妖怪\r\n        self.right = [0,0] #和尚，妖怪\r\n        #状态改变只有这五种和取反后的五种\r\n        self.change = [ [-1, -1],\r\n                        [-2, 0],\r\n                        [0, -2],\r\n                        [-1, 0],\r\n                        [0, -1]]\r\n        #保存上一个状态，直接排除一样的来回\r\n        self.lastState = -1\r\n        #如果遍历是一棵树，保存的则根到某个枝条\r\n        self.lineHis = [[3, 3, 0, 0, 1]]\r\n    #改变状态\r\n    def move(self,n):\r\n        self.left = [self.left[i]+self.ship*self.change[n][i] for i in range(2)]\r\n        self.right = [self.right[i]-self.ship*self.change[n][i] for i in range(2)]\r\n        self.ship = -self.ship\r\n        self.lastState = n\r\n    #获取下一步可移动点，比如只有一个怪兽在左岸，就要排除两个妖怪过河的方案，这个剪枝很重要。\r\n    def getState(self):\r\n        states = []\r\n        if self.ship == 1:\r\n            state = self.left\r\n        else:\r\n            state = self.right\r\n        for i in range(len(self.change)):\r\n            if min(state[0]+self.change[i][0],state[1]+self.change[i][1])&gt;=0:\r\n                states.append(i)\r\n        return states\r\n    #主算法部分，断掉妖怪大于和尚的分支。\r\n    #在遍历中，最重要的一步就是在这条支线上，如果这一种状态之前出现过，就不要继续深入。\r\n    def dfs(self):\r\n        if self.left==[0,0] and self.right==[3,3]:\r\n            print(self.lineHis)\r\n            return \r\n        elif (self.left[1]&gt;self.left[0] and self.left[0]!=0) or (self.right[1]&gt;self.right[0] and self.right[0]!=0):\r\n            return\r\n        else:\r\n            states = self.getState()\r\n            for i in states:\r\n                if i != self.lastState:\r\n                    self.move(i)\r\n                    self.lineHis.append(self.left+self.right+[self.ship])\r\n                    if self.lineHis[-1] not in self.lineHis[0:-1]:\r\n                        self.dfs()\r\n                    self.move(i)\r\n                    self.lineHis.pop()\r\n        \r\nif __name__ == \"__main__\":\r\n    s = River()\r\n    s.dfs()\r\n    #可得4个最简解。</pre>\r\n总结：深度优先搜索主要部分是提炼出搜索的树，然后好坏在于剪枝。",
            "post_title": "聊聊深度优先搜索算法及应用",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "574-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-3-31 23:10:33",
            "post_modified_gmt": "2018-3-31 15:10:33",
            "post_content_filtered": "",
            "post_parent": "574",
            "guid": "http://ganjiacheng.cn/blog/?p=586",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "587",
            "post_author": "1",
            "post_date": "2018-4-2 09:29:14",
            "post_date_gmt": "2018-4-2 01:29:14",
            "post_content": "还记得以前高中默默盯着数独的能看半天，然后还一个个凑，这回来彻底解决一下这个问题。顺便理清一下深度优先搜索的设计流程。<!--more-->\r\n\r\n首先数独规则自行了解，这里做最基础的9宫格数独。\r\n\r\n拿到数独题，分一部分已知点和一部分未知点，未知点的状态是有限的，每个点都不能与横竖加九宫格内的数重复，因此可以根据这个遍历所有状态。\r\n<pre>深度优先搜索设计\r\nfor 上一个点的可用状态：\r\n    尝试下点\r\n    进入下一个点（递归）\r\n    还原下点(回溯)</pre>\r\n<pre>剪枝过程\r\n一大部分都在获取可用状态中去掉了（上一步下错的话，总有下一步会出现无可用状态）\r\n然后还要限制的是到最终点停止</pre>\r\n<pre>判断成功\r\n只要数独状态中全部下满了，就是成功了</pre>\r\n<pre>class ShuDu():\r\n    #初始化数独长度，数独空点位置\r\n    def __init__(self,state):\r\n        self.STATE = state\r\n        self.N = len(self.STATE[0])\r\n        self.ZERO = [[i,j] for i in range(self.N) for j in range(self.N) if self.STATE[i][j] == 0]\r\n        self.hasAnswer = 0\r\n    #获取空点的可用状态\r\n    def get_state(self,n):\r\n        tmp_state = []\r\n        for i in range(self.N):\r\n            tmp_state.append(self.STATE[self.ZERO[n][0]][i])\r\n            tmp_state.append(self.STATE[i][self.ZERO[n][1]])\r\n        tmp_ny = int(self.ZERO[n][0] / 3)\r\n        tmp_nx = int(self.ZERO[n][1] / 3)\r\n        for i in range(tmp_ny * 3, tmp_ny * 3 + 3):\r\n            for j in range(tmp_nx * 3, tmp_nx * 3 + 3):\r\n                tmp_state.append(self.STATE[i][j])\r\n        '''\r\n        if self.ZERO[n][0] == self.ZERO[n][1]:\r\n            for i in range(self.N):\r\n                tmp_state.append(self.STATE[i][i])\r\n        if self.ZERO[n][0] + self.ZERO[n][1] == 8:\r\n            for i in range(self.N):\r\n                tmp_state.append(self.STATE[i][self.N-1-i])\r\n        '''\r\n        return [i for i in range(1,self.N+1) if i not in list(set(tmp_state))]\r\n    #深度优先搜索部分\r\n    def dfs(self,k=0):\r\n        if \"0\" not in str(self.STATE):\r\n            self.hasAnswer = 1\r\n            for i in range(self.N):\r\n                print(self.STATE[i])\r\n        if k &gt;= len(self.ZERO) or self.hasAnswer == 1:\r\n            return\r\n        for i in self.get_state(k):\r\n            self.STATE[self.ZERO[k][0]][self.ZERO[k][1]] = i\r\n            self.dfs(k+1)\r\n            self.STATE[self.ZERO[k][0]][self.ZERO[k][1]] = 0\r\n\r\nif __name__ == \"__main__\":\r\n    #据说是最难数独，0代表空的点\r\n    state = [[8,0,0,0,0,0,0,0,0],\r\n             [0,0,3,6,0,0,0,0,0],\r\n             [0,7,0,0,9,0,2,0,0],\r\n             [0,5,0,0,0,7,0,0,0],\r\n             [0,0,0,0,4,5,7,0,0],\r\n             [0,0,0,1,0,0,0,3,0],\r\n             [0,0,1,0,0,0,0,6,8],\r\n             [0,0,8,5,0,0,0,1,0],\r\n             [0,9,0,0,0,0,4,0,0]]\r\n    s = ShuDu(state)\r\n    #秒秒钟解出来\r\n    s.dfs()</pre>\r\n<pre>结果为：\r\n[8, 1, 2, 7, 5, 3, 6, 4, 9]\r\n[9, 4, 3, 6, 8, 2, 1, 7, 5]\r\n[6, 7, 5, 4, 9, 1, 2, 8, 3]\r\n[1, 5, 4, 2, 3, 7, 8, 9, 6]\r\n[3, 6, 9, 8, 4, 5, 7, 2, 1]\r\n[2, 8, 7, 1, 6, 9, 5, 3, 4]\r\n[5, 2, 1, 9, 7, 4, 3, 6, 8]\r\n[4, 3, 8, 5, 2, 6, 9, 1, 7]\r\n[7, 9, 6, 3, 1, 8, 4, 5, 2]</pre>",
            "post_title": "沉迷深搜，来做个解数独的",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e6%b2%89%e8%bf%b7%e6%b7%b1%e6%90%9c%ef%bc%8c%e6%9d%a5%e5%81%9a%e4%b8%aa%e8%a7%a3%e6%95%b0%e7%8b%ac%e7%9a%84",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-4-2 13:39:59",
            "post_modified_gmt": "2018-4-2 05:39:59",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=587",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "588",
            "post_author": "1",
            "post_date": "2018-4-2 09:19:21",
            "post_date_gmt": "2018-4-2 01:19:21",
            "post_content": "还记得以前高中默默盯着数独的能看半天，然后还一个个凑，这回来彻底解决一下这个问题。顺便理清一下深搜的设计流程。\r\n\r\n首先数独规则自行了解，这里做最基础的9宫格数独。\r\n\r\n拿到数独题，分一部分已知点和一部分未知点，未知点的状态是有限的，每个点都不能与横竖加九宫格内的数重复，因此可以根据这个遍历所有状态。\r\n<pre>深度优先搜索设计\r\nfor 上一个点的可用状态：\r\n    尝试下点\r\n    进入下一个点（递归）\r\n    还原下点(回溯)</pre>\r\n<pre>剪枝过程\r\n一大部分都在获取可用状态中去掉了（上一步下错的话，总有下一步会出现无可用状态）\r\n然后还要限制的是到最终点停止</pre>\r\n<pre>判断成功\r\n只要数独状态中全部下满了，就是成功了。</pre>\r\n<pre></pre>",
            "post_title": "沉迷深搜，来做个解数独的",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "587-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-4-2 09:19:21",
            "post_modified_gmt": "2018-4-2 01:19:21",
            "post_content_filtered": "",
            "post_parent": "587",
            "guid": "http://ganjiacheng.cn/blog/?p=588",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "589",
            "post_author": "1",
            "post_date": "2018-4-2 09:29:14",
            "post_date_gmt": "2018-4-2 01:29:14",
            "post_content": "还记得以前高中默默盯着数独的能看半天，然后还一个个凑，这回来彻底解决一下这个问题。顺便理清一下深度优先搜索的设计流程。<!--more-->\r\n\r\n首先数独规则自行了解，这里做最基础的9宫格数独。\r\n\r\n拿到数独题，分一部分已知点和一部分未知点，未知点的状态是有限的，每个点都不能与横竖加九宫格内的数重复，因此可以根据这个遍历所有状态。\r\n<pre>深度优先搜索设计\r\nfor 上一个点的可用状态：\r\n    尝试下点\r\n    进入下一个点（递归）\r\n    还原下点(回溯)</pre>\r\n<pre>剪枝过程\r\n一大部分都在获取可用状态中去掉了（上一步下错的话，总有下一步会出现无可用状态）\r\n然后还要限制的是到最终点停止</pre>\r\n<pre>判断成功\r\n只要数独状态中全部下满了，就是成功了</pre>\r\n<pre>class ShuDu():\r\n    #初始化数独长度，数独空点位置\r\n    def __init__(self,state):\r\n        self.STATE = state\r\n        self.N = len(self.STATE[0])\r\n        self.ZERO = [[i,j] for i in range(self.N) for j in range(self.N) if self.STATE[i][j]==0]\r\n        self.hasAnswer = 0\r\n    #获取空点的可用状态\r\n    def get_state(self,n):\r\n        tmp_state = []\r\n        for i in range(self.N):\r\n            tmp_state.append(self.STATE[self.ZERO[n][0]][i])\r\n            tmp_state.append(self.STATE[i][self.ZERO[n][1]])\r\n        tmp_ny = int(self.ZERO[n][0]/3)\r\n        tmp_nx = int(self.ZERO[n][1]/3)\r\n        for i in range(tmp_ny*3,tmp_ny*3+3):\r\n            for j in range(tmp_nx*3,tmp_nx*3+3):\r\n                tmp_state.append(self.STATE[i][j])\r\n        '''\r\n        if self.ZERO[n][0] == self.ZERO[n][1]:\r\n            for i in range(self.N):\r\n                tmp_state.append(self.STATE[i][i])\r\n        if self.ZERO[n][0] + self.ZERO[n][1] == 8:\r\n            for i in range(self.N):\r\n                tmp_state.append(self.STATE[i][self.N-1-i])\r\n        '''\r\n        return [i for i in range(1,self.N+1) if i not in list(set(tmp_state))]\r\n    #深度优先搜索部分\r\n    def dfs(self,k=0):\r\n        if \"0\" not in str(self.STATE):\r\n            self.hasAnswer = 1\r\n            for i in range(self.N):\r\n                print(self.STATE[i])\r\n        if k &gt;= len(self.ZERO) or self.hasAnswer == 1:\r\n            return\r\n        for i in self.get_state(k):\r\n            self.STATE[self.ZERO[k][0]][self.ZERO[k][1]] = i\r\n            self.dfs(k+1)\r\n            self.STATE[self.ZERO[k][0]][self.ZERO[k][1]] = 0\r\n\r\nif __name__ == \"__main__\":\r\n    #据说是最难数独，0代表空的点\r\n    state = [[8,0,0,0,0,0,0,0,0],\r\n             [0,0,3,6,0,0,0,0,0],\r\n             [0,7,0,0,9,0,2,0,0],\r\n             [0,5,0,0,0,7,0,0,0],\r\n             [0,0,0,0,4,5,7,0,0],\r\n             [0,0,0,1,0,0,0,3,0],\r\n             [0,0,1,0,0,0,0,6,8],\r\n             [0,0,8,5,0,0,0,1,0],\r\n             [0,9,0,0,0,0,4,0,0]]\r\n    s = ShuDu(state)\r\n    #秒秒钟解出来\r\n    s.dfs()</pre>\r\n<pre>结果为：\r\n[8, 1, 2, 7, 5, 3, 6, 4, 9]\r\n[9, 4, 3, 6, 8, 2, 1, 7, 5]\r\n[6, 7, 5, 4, 9, 1, 2, 8, 3]\r\n[1, 5, 4, 2, 3, 7, 8, 9, 6]\r\n[3, 6, 9, 8, 4, 5, 7, 2, 1]\r\n[2, 8, 7, 1, 6, 9, 5, 3, 4]\r\n[5, 2, 1, 9, 7, 4, 3, 6, 8]\r\n[4, 3, 8, 5, 2, 6, 9, 1, 7]\r\n[7, 9, 6, 3, 1, 8, 4, 5, 2]</pre>",
            "post_title": "沉迷深搜，来做个解数独的",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "587-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-4-2 09:29:14",
            "post_modified_gmt": "2018-4-2 01:29:14",
            "post_content_filtered": "",
            "post_parent": "587",
            "guid": "http://ganjiacheng.cn/blog/?p=589",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "590",
            "post_author": "1",
            "post_date": "2018-4-2 13:39:59",
            "post_date_gmt": "2018-4-2 05:39:59",
            "post_content": "还记得以前高中默默盯着数独的能看半天，然后还一个个凑，这回来彻底解决一下这个问题。顺便理清一下深度优先搜索的设计流程。<!--more-->\r\n\r\n首先数独规则自行了解，这里做最基础的9宫格数独。\r\n\r\n拿到数独题，分一部分已知点和一部分未知点，未知点的状态是有限的，每个点都不能与横竖加九宫格内的数重复，因此可以根据这个遍历所有状态。\r\n<pre>深度优先搜索设计\r\nfor 上一个点的可用状态：\r\n    尝试下点\r\n    进入下一个点（递归）\r\n    还原下点(回溯)</pre>\r\n<pre>剪枝过程\r\n一大部分都在获取可用状态中去掉了（上一步下错的话，总有下一步会出现无可用状态）\r\n然后还要限制的是到最终点停止</pre>\r\n<pre>判断成功\r\n只要数独状态中全部下满了，就是成功了</pre>\r\n<pre>class ShuDu():\r\n    #初始化数独长度，数独空点位置\r\n    def __init__(self,state):\r\n        self.STATE = state\r\n        self.N = len(self.STATE[0])\r\n        self.ZERO = [[i,j] for i in range(self.N) for j in range(self.N) if self.STATE[i][j] == 0]\r\n        self.hasAnswer = 0\r\n    #获取空点的可用状态\r\n    def get_state(self,n):\r\n        tmp_state = []\r\n        for i in range(self.N):\r\n            tmp_state.append(self.STATE[self.ZERO[n][0]][i])\r\n            tmp_state.append(self.STATE[i][self.ZERO[n][1]])\r\n        tmp_ny = int(self.ZERO[n][0] / 3)\r\n        tmp_nx = int(self.ZERO[n][1] / 3)\r\n        for i in range(tmp_ny * 3, tmp_ny * 3 + 3):\r\n            for j in range(tmp_nx * 3, tmp_nx * 3 + 3):\r\n                tmp_state.append(self.STATE[i][j])\r\n        '''\r\n        if self.ZERO[n][0] == self.ZERO[n][1]:\r\n            for i in range(self.N):\r\n                tmp_state.append(self.STATE[i][i])\r\n        if self.ZERO[n][0] + self.ZERO[n][1] == 8:\r\n            for i in range(self.N):\r\n                tmp_state.append(self.STATE[i][self.N-1-i])\r\n        '''\r\n        return [i for i in range(1,self.N+1) if i not in list(set(tmp_state))]\r\n    #深度优先搜索部分\r\n    def dfs(self,k=0):\r\n        if \"0\" not in str(self.STATE):\r\n            self.hasAnswer = 1\r\n            for i in range(self.N):\r\n                print(self.STATE[i])\r\n        if k &gt;= len(self.ZERO) or self.hasAnswer == 1:\r\n            return\r\n        for i in self.get_state(k):\r\n            self.STATE[self.ZERO[k][0]][self.ZERO[k][1]] = i\r\n            self.dfs(k+1)\r\n            self.STATE[self.ZERO[k][0]][self.ZERO[k][1]] = 0\r\n\r\nif __name__ == \"__main__\":\r\n    #据说是最难数独，0代表空的点\r\n    state = [[8,0,0,0,0,0,0,0,0],\r\n             [0,0,3,6,0,0,0,0,0],\r\n             [0,7,0,0,9,0,2,0,0],\r\n             [0,5,0,0,0,7,0,0,0],\r\n             [0,0,0,0,4,5,7,0,0],\r\n             [0,0,0,1,0,0,0,3,0],\r\n             [0,0,1,0,0,0,0,6,8],\r\n             [0,0,8,5,0,0,0,1,0],\r\n             [0,9,0,0,0,0,4,0,0]]\r\n    s = ShuDu(state)\r\n    #秒秒钟解出来\r\n    s.dfs()</pre>\r\n<pre>结果为：\r\n[8, 1, 2, 7, 5, 3, 6, 4, 9]\r\n[9, 4, 3, 6, 8, 2, 1, 7, 5]\r\n[6, 7, 5, 4, 9, 1, 2, 8, 3]\r\n[1, 5, 4, 2, 3, 7, 8, 9, 6]\r\n[3, 6, 9, 8, 4, 5, 7, 2, 1]\r\n[2, 8, 7, 1, 6, 9, 5, 3, 4]\r\n[5, 2, 1, 9, 7, 4, 3, 6, 8]\r\n[4, 3, 8, 5, 2, 6, 9, 1, 7]\r\n[7, 9, 6, 3, 1, 8, 4, 5, 2]</pre>",
            "post_title": "沉迷深搜，来做个解数独的",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "587-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-4-2 13:39:59",
            "post_modified_gmt": "2018-4-2 05:39:59",
            "post_content_filtered": "",
            "post_parent": "587",
            "guid": "http://ganjiacheng.cn/blog/?p=590",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "591",
            "post_author": "1",
            "post_date": "2018-4-2 18:08:08",
            "post_date_gmt": "2018-4-2 10:08:08",
            "post_content": "包括，批量重命名，待更新。。。\r\n\r\n1.批量重命名  changeName.py\r\n<pre>import os\r\nf=os.listdir(\"./\")\r\nf.remove(\"changeName.py\")\r\nj=0\r\nfor i in f:\r\n os.renames(i,str(j)+\".jpg\")\r\n j+=1</pre>\r\n2.实现数组next并循环---js版\r\n<pre>(now+1)%array.length</pre>\r\n3.python字典自动初始化为0\r\n<pre>from collections import defaultdict\r\nd=defaultdict(int)\r\nd['count']+=1</pre>\r\n4.linux+windows 查看端口监听并kill\r\n<pre>#linux\r\nnetstat -apn|grep 8000\r\n或者\r\nps -aux|grep 8000\r\nkill -9 pid\r\n\r\n#windows\r\nnetstat -ano|findstr 3000\r\nnetstat -ano</pre>\r\n5.linux开启防火墙\r\n<pre>firewall-cmd --zone=public --add-port=8892/tcp --permanent\r\nsystemctl restart firewalld</pre>\r\n6.linux下python后台运行\r\n<pre>nohup python -u filename.py &gt; filename.out 2&gt;&amp;1 &amp;\r\ntail -f filename.out</pre>",
            "post_title": "常用编程小操作",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "132-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-4-2 18:08:08",
            "post_modified_gmt": "2018-4-2 10:08:08",
            "post_content_filtered": "",
            "post_parent": "132",
            "guid": "http://ganjiacheng.cn/blog/?p=591",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "592",
            "post_author": "1",
            "post_date": "2018-4-6 10:39:27",
            "post_date_gmt": "2018-4-6 02:39:27",
            "post_content": "看到抖音上手持弹幕的效果，想想应该不复杂，也可以自己在浏览器实现一个。主要问题在于怎么把浏览器上面的搜索框去掉而实现一种伪全屏。结尾有彩蛋。<!--more-->\r\n\r\n效果暂时可以在<a href=\"https://ganjiacheng.cn/danmu.html\">https://ganjiacheng.cn/danmu.html</a> 查看。\r\n\r\n直接上代码，在其中论述方法。\r\n<pre> &lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"utf-8\"&gt;\r\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"&gt;\r\n    &lt;title&gt;手持弹幕&lt;/title&gt;\r\n    &lt;style type=\"text/css\"&gt;\r\n        *{\r\n            margin: 0px;\r\n            padding: 0px;\r\n        }\r\n        html,body{\r\n            height: 100%;\r\n            width: 100%;\r\n            overflow: hidden;\r\n            background: #000;\r\n        }\r\n        #txt{\r\n            overflow: visible;\r\n            white-space: nowrap;\r\n            transform-origin: 0% 0%;\r\n            transform: rotate(90deg);\r\n        }\r\n        #config{\r\n            position: absolute;\r\n            bottom: 0px;\r\n            width: 100%;\r\n        }\r\n        #config input{\r\n            display: block;\r\n            width: 100%;\r\n            padding: .375rem .75rem;\r\n            font-size: 1rem;\r\n            line-height: 1.5;\r\n            color: #495057;\r\n            background-color: #fff;\r\n            background-clip: padding-box;\r\n            border: 1px solid #ced4da;\r\n            border-radius: .25rem;\r\n            transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;\r\n        }\r\n        #config button{\r\n            width: 23.5%;\r\n            display: inline-block;\r\n            font-weight: 400;\r\n            text-align: center;\r\n            white-space: nowrap;\r\n            vertical-align: middle;\r\n            -webkit-user-select: none;\r\n            -moz-user-select: none;\r\n            -ms-user-select: none;\r\n            user-select: none;\r\n            border: 1px solid transparent;\r\n            padding: .375rem .75rem;\r\n            font-size: 1rem;\r\n            line-height: 1.5;\r\n            border-radius: .25rem;\r\n            transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;\r\n            color: #fff;\r\n            background-color: transparent;\r\n            background-image: none;\r\n            border-color: #343a40;\r\n        }\r\n    &lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;div id=\"txt\"&gt;点一下屏幕进入设置&lt;/div&gt;\r\n    &lt;div id=\"config\" style=\"display:none;\"&gt;\r\n        &lt;input type=\"text\" placeholder=\"输入文本,tip:上拉一下就可全屏\" id=\"txtContent\"&gt;\r\n        &lt;input type=\"text\" placeholder=\"输入颜色rgb，格式如:125 125 125\" id=\"color\"&gt;\r\n        &lt;button id=\"turnLeft\"&gt;左移&lt;/button&gt;\r\n        &lt;button id=\"turnRight\"&gt;右移&lt;/button&gt;\r\n        &lt;button id=\"bigger\"&gt;增大&lt;/button&gt;\r\n        &lt;button id=\"smaller\"&gt;减小&lt;/button&gt;\r\n        &lt;button id=\"quicker\"&gt;加快&lt;/button&gt;\r\n        &lt;button id=\"slower\"&gt;减慢&lt;/button&gt;\r\n        &lt;button id=\"changeFont\"&gt;字体&lt;/button&gt;\r\n        &lt;button id=\"stunt\"&gt;特技&lt;/button&gt;\r\n    &lt;/div&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        //获取到所需dom\r\n        var txt = document.getElementById(\"txt\");\r\n        var config = document.getElementById(\"config\");\r\n        var txtContent = document.getElementById(\"txtContent\");\r\n        var color = document.getElementById(\"color\");\r\n        var turnLeft = document.getElementById(\"turnLeft\");\r\n        var turnRight = document.getElementById(\"turnRight\");\r\n        var bigger = document.getElementById(\"bigger\");\r\n        var smaller = document.getElementById(\"smaller\");\r\n        var quicker = document.getElementById(\"quicker\");\r\n        var slower = document.getElementById(\"slower\");\r\n        var changeFont = document.getElementById(\"changeFont\");\r\n        var stunt = document.getElementById(\"stunt\");\r\n        var height = document.body.clientHeight;\r\n        var width = document.body.clientWidth;\r\n        var state = 0;\r\n        var v = 10;\r\n        var k = 0;\r\n        //初始化设置，下面改起来方便些\r\n        txt.style.marginTop = height+\"px\";\r\n        txt.style.fontSize = \"380px\";\r\n        txt.style.marginLeft = \"450px\";\r\n        txt.style.color = \"rgba(255,255,255,1)\"\r\n\r\n        config.onclick = function(){\r\n            state = 1;\r\n        }\r\n        //显隐设置栏，消除搜索框也是无意间发现。\r\n        //由于加了设置栏大于一屏然后可以上拉，上拉后搜索框会折叠。\r\n        //然后在点击消除设置栏，一些浏览器就会自动占满屏，有些浏览器好像下面会有一栏空。\r\n        document.body.onclick = function(e){\r\n            if(state != 1){\r\n                config.style.display = config.style.display == \"none\" ? \"block\" : \"none\";\r\n            }\r\n            state = 0;\r\n        }\r\n        //绑定设置输入框和按钮操作\r\n        txtContent.onchange = function(){\r\n            txt.innerHTML = this.value\r\n            txt.style.marginTop = height + \"px\";\r\n        }\r\n\r\n        color.onchange = function(){\r\n            colors = this.value.split(\" \");\r\n            txt.style.color = \"rgba(\"+colors[0]+\",\"+colors[1]+\",\"+colors[2]+\",1)\";\r\n            txt.style.marginTop = height + \"px\";\r\n        }\r\n\r\n        turnLeft.onclick = function(){\r\n            txt.style.marginLeft = parseInt(txt.style.marginLeft) - 10 + \"px\";\r\n        }\r\n\r\n        turnRight.onclick = function(){\r\n            txt.style.marginLeft = parseInt(txt.style.marginLeft) + 10 + \"px\";\r\n        }\r\n\r\n        bigger.onclick = function(){\r\n            txt.style.fontSize = parseInt(txt.style.fontSize) + 10 + \"px\";\r\n        }\r\n\r\n        smaller.onclick = function(){\r\n            console.log(txt.style.fontSize)\r\n            txt.style.fontSize = parseInt(txt.style.fontSize) - 10 + \"px\";\r\n            console.log(txt.style.fontSize)\r\n        }\r\n\r\n        quicker.onclick = function(){\r\n            v += 2\r\n        }\r\n\r\n        slower.onclick = function(){\r\n            v -= 2\r\n        }\r\n\r\n        changeFont.onclick = function(){\r\n            fonts = [\"SimSun\",\"SimHei\",\"Microsoft YaHei\",\"Microsoft JhengHei\",\"NSimSun\",\"PMingLiU\",\"MingLiU\",\"DFKai-SB\",\"FangSong\",\"KaiTi\",\"FangSong_GB2312\",\"KaiTi_GB2312\",\"：STHeiti\",\"STKaiti\",\"STSong\",\"STFangsong\",\"LiSu\",\"YouYuan\",\"STXihei\",\"STKaiti\",\"STKaiti\",\"STSong\",\"STZhongsong\",\"STZhongsong\",\"STFangsong\",\"FZYaoti\",\"STZhongsong\",\"STCaiyun\",\"STHupo\",\"STLiti\",\"STXingkai\",\"STXinwei\"]\r\n            txt.style.fontFamily = fonts[k];\r\n            k+=1;\r\n        }\r\n\r\n        stunt.onclick = function(){\r\n            alert(\"要什么特技呢\");\r\n            return\r\n        }\r\n        //设置字体移动\r\n        function move(){\r\n            txt.style.marginTop = parseInt(txt.style.marginTop) - v + \"px\";\r\n            if(parseInt(txt.style.marginTop) &lt;= -parseInt(txt.style.fontSize)*txt.innerHTML.length) txt.style.marginTop = height + \"px\";\r\n            window.requestAnimationFrame(move);\r\n        }\r\n        window.requestAnimationFrame(move);\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n效果展示：<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/04/微信图片_20180406103608.png\"><img class=\"alignnone wp-image-595 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/04/微信图片_20180406103608-150x300.png\" alt=\"\" width=\"150\" height=\"300\" /></a>\r\n\r\n再来聊聊我对于自身前端的发展意向；\r\n\r\n自身没有太多精力去看一些工程上的问题（比如浏览器适配，框架，css预处理等），所以大部分我会专注于效果的实现（由于网页展示起来比较方便）。\r\n\r\n使用的多数也会在原生js行列，偶尔用个jquery，必要时看一些包的使用（如之前markdown解析器）。\r\n\r\n随性写些启发性前端代码，可能是逻辑上的sao操作，可能是效果上的模仿或涂鸦，，可能是我未知新技术上的demo，and so on；我自己的手机跑的动就好啦。\r\n\r\n就这样了吗，恩，然后就没有然后了。",
            "post_title": "手持弹幕效果--网页版",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e6%89%8b%e6%8c%81%e5%bc%b9%e5%b9%95%e6%95%88%e6%9e%9c-%e7%bd%91%e9%a1%b5%e7%89%88",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-4-6 10:39:27",
            "post_modified_gmt": "2018-4-6 02:39:27",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=592",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "593",
            "post_author": "1",
            "post_date": "2018-4-6 10:06:29",
            "post_date_gmt": "2018-4-6 02:06:29",
            "post_content": "看到抖音上手持弹幕的效果，想想应该不复杂，也可以自己在浏览器实现一个。主要问题在于怎么把浏览器上面的搜索框去掉而实现一种伪全屏。\r\n\r\n直接上代码，在其中论述方法。\r\n<pre></pre>",
            "post_title": "手持弹幕效果--网页版",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "592-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-4-6 10:06:29",
            "post_modified_gmt": "2018-4-6 02:06:29",
            "post_content_filtered": "",
            "post_parent": "592",
            "guid": "http://ganjiacheng.cn/blog/?p=593",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "594",
            "post_author": "1",
            "post_date": "2018-4-6 10:37:22",
            "post_date_gmt": "2018-4-6 02:37:22",
            "post_content": "看到抖音上手持弹幕的效果，想想应该不复杂，也可以自己在浏览器实现一个。主要问题在于怎么把浏览器上面的搜索框去掉而实现一种伪全屏。结尾有彩蛋。<!--more-->\r\n\r\n效果暂时可以在<a href=\"https://ganjiacheng.cn/danmu.html\">https://ganjiacheng.cn/danmu.html</a> 查看。\r\n\r\n直接上代码，在其中论述方法。\r\n<pre> &lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"utf-8\"&gt;\r\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"&gt;\r\n    &lt;title&gt;手持弹幕&lt;/title&gt;\r\n    &lt;style type=\"text/css\"&gt;\r\n        *{\r\n            margin: 0px;\r\n            padding: 0px;\r\n        }\r\n        html,body{\r\n            height: 100%;\r\n            width: 100%;\r\n            overflow: hidden;\r\n            background: #000;\r\n        }\r\n        #txt{\r\n            overflow: visible;\r\n            white-space: nowrap;\r\n            transform-origin: 0% 0%;\r\n            transform: rotate(90deg);\r\n        }\r\n        #config{\r\n            position: absolute;\r\n            bottom: 0px;\r\n            width: 100%;\r\n        }\r\n        #config input{\r\n            display: block;\r\n            width: 100%;\r\n            padding: .375rem .75rem;\r\n            font-size: 1rem;\r\n            line-height: 1.5;\r\n            color: #495057;\r\n            background-color: #fff;\r\n            background-clip: padding-box;\r\n            border: 1px solid #ced4da;\r\n            border-radius: .25rem;\r\n            transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;\r\n        }\r\n        #config button{\r\n            width: 23.5%;\r\n            display: inline-block;\r\n            font-weight: 400;\r\n            text-align: center;\r\n            white-space: nowrap;\r\n            vertical-align: middle;\r\n            -webkit-user-select: none;\r\n            -moz-user-select: none;\r\n            -ms-user-select: none;\r\n            user-select: none;\r\n            border: 1px solid transparent;\r\n            padding: .375rem .75rem;\r\n            font-size: 1rem;\r\n            line-height: 1.5;\r\n            border-radius: .25rem;\r\n            transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;\r\n            color: #fff;\r\n            background-color: transparent;\r\n            background-image: none;\r\n            border-color: #343a40;\r\n        }\r\n    &lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;div id=\"txt\"&gt;点一下屏幕进入设置&lt;/div&gt;\r\n    &lt;div id=\"config\" style=\"display:none;\"&gt;\r\n        &lt;input type=\"text\" placeholder=\"输入文本,tip:上拉一下就可全屏\" id=\"txtContent\"&gt;\r\n        &lt;input type=\"text\" placeholder=\"输入颜色rgb，格式如:125 125 125\" id=\"color\"&gt;\r\n        &lt;button id=\"turnLeft\"&gt;左移&lt;/button&gt;\r\n        &lt;button id=\"turnRight\"&gt;右移&lt;/button&gt;\r\n        &lt;button id=\"bigger\"&gt;增大&lt;/button&gt;\r\n        &lt;button id=\"smaller\"&gt;减小&lt;/button&gt;\r\n        &lt;button id=\"quicker\"&gt;加快&lt;/button&gt;\r\n        &lt;button id=\"slower\"&gt;减慢&lt;/button&gt;\r\n        &lt;button id=\"changeFont\"&gt;字体&lt;/button&gt;\r\n        &lt;button id=\"stunt\"&gt;特技&lt;/button&gt;\r\n    &lt;/div&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        //获取到所需dom\r\n        var txt = document.getElementById(\"txt\");\r\n        var config = document.getElementById(\"config\");\r\n        var txtContent = document.getElementById(\"txtContent\");\r\n        var color = document.getElementById(\"color\");\r\n        var turnLeft = document.getElementById(\"turnLeft\");\r\n        var turnRight = document.getElementById(\"turnRight\");\r\n        var bigger = document.getElementById(\"bigger\");\r\n        var smaller = document.getElementById(\"smaller\");\r\n        var quicker = document.getElementById(\"quicker\");\r\n        var slower = document.getElementById(\"slower\");\r\n        var changeFont = document.getElementById(\"changeFont\");\r\n        var stunt = document.getElementById(\"stunt\");\r\n        var height = document.body.clientHeight;\r\n        var width = document.body.clientWidth;\r\n        var state = 0;\r\n        var v = 10;\r\n        var k = 0;\r\n        //初始化设置，下面改起来方便些\r\n        txt.style.marginTop = height+\"px\";\r\n        txt.style.fontSize = \"380px\";\r\n        txt.style.marginLeft = \"450px\";\r\n        txt.style.color = \"rgba(255,255,255,1)\"\r\n\r\n        config.onclick = function(){\r\n            state = 1;\r\n        }\r\n        //显隐设置栏，消除搜索框也是无意间发现。\r\n        //由于加了设置栏大于一屏然后可以上拉，上拉后搜索框会折叠。\r\n        //然后在点击消除设置栏，一些浏览器就会自动占满屏，有些浏览器好像下面会有一栏空。\r\n        document.body.onclick = function(e){\r\n            if(state != 1){\r\n                config.style.display = config.style.display == \"none\" ? \"block\" : \"none\";\r\n            }\r\n            state = 0;\r\n        }\r\n        //绑定设置输入框和按钮操作\r\n        txtContent.onchange = function(){\r\n            txt.innerHTML = this.value\r\n            txt.style.marginTop = height + \"px\";\r\n        }\r\n\r\n        color.onchange = function(){\r\n            colors = this.value.split(\" \");\r\n            txt.style.color = \"rgba(\"+colors[0]+\",\"+colors[1]+\",\"+colors[2]+\",1)\";\r\n            txt.style.marginTop = height + \"px\";\r\n        }\r\n\r\n        turnLeft.onclick = function(){\r\n            txt.style.marginLeft = parseInt(txt.style.marginLeft) - 10 + \"px\";\r\n        }\r\n\r\n        turnRight.onclick = function(){\r\n            txt.style.marginLeft = parseInt(txt.style.marginLeft) + 10 + \"px\";\r\n        }\r\n\r\n        bigger.onclick = function(){\r\n            txt.style.fontSize = parseInt(txt.style.fontSize) + 10 + \"px\";\r\n        }\r\n\r\n        smaller.onclick = function(){\r\n            console.log(txt.style.fontSize)\r\n            txt.style.fontSize = parseInt(txt.style.fontSize) - 10 + \"px\";\r\n            console.log(txt.style.fontSize)\r\n        }\r\n\r\n        quicker.onclick = function(){\r\n            v += 2\r\n        }\r\n\r\n        slower.onclick = function(){\r\n            v -= 2\r\n        }\r\n\r\n        changeFont.onclick = function(){\r\n            fonts = [\"SimSun\",\"SimHei\",\"Microsoft YaHei\",\"Microsoft JhengHei\",\"NSimSun\",\"PMingLiU\",\"MingLiU\",\"DFKai-SB\",\"FangSong\",\"KaiTi\",\"FangSong_GB2312\",\"KaiTi_GB2312\",\"：STHeiti\",\"STKaiti\",\"STSong\",\"STFangsong\",\"LiSu\",\"YouYuan\",\"STXihei\",\"STKaiti\",\"STKaiti\",\"STSong\",\"STZhongsong\",\"STZhongsong\",\"STFangsong\",\"FZYaoti\",\"STZhongsong\",\"STCaiyun\",\"STHupo\",\"STLiti\",\"STXingkai\",\"STXinwei\"]\r\n            txt.style.fontFamily = fonts[k];\r\n            k+=1;\r\n        }\r\n\r\n        stunt.onclick = function(){\r\n            alert(\"要什么特技呢\");\r\n            return\r\n        }\r\n        //设置字体移动\r\n        function move(){\r\n            txt.style.marginTop = parseInt(txt.style.marginTop) - v + \"px\";\r\n            if(parseInt(txt.style.marginTop) &lt;= -parseInt(txt.style.fontSize)*txt.innerHTML.length) txt.style.marginTop = height + \"px\";\r\n            window.requestAnimationFrame(move);\r\n        }\r\n        window.requestAnimationFrame(move);\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n效果展示：\r\n\r\n再来聊聊我对于自身前端的发展意向；\r\n\r\n自身没有太多精力去看一些工程上的问题（比如浏览器适配，框架，css预处理等），所以大部分我会专注于效果的实现（由于网页展示起来比较方便）。\r\n\r\n使用的多数也会在原生js行列，偶尔用个jquery，必要时看一些包的使用（如之前markdown解析器）。\r\n\r\n随性写些启发性前端代码，可能是逻辑上的sao操作，可能是效果上的模仿或涂鸦，，可能是我未知新技术上的demo，and so on；我自己的手机跑的动就好啦。\r\n\r\n就这样了吗，恩，然后就没有然后了。",
            "post_title": "手持弹幕效果--网页版",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "592-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-4-6 10:37:22",
            "post_modified_gmt": "2018-4-6 02:37:22",
            "post_content_filtered": "",
            "post_parent": "592",
            "guid": "http://ganjiacheng.cn/blog/?p=594",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "595",
            "post_author": "1",
            "post_date": "2018-4-6 10:38:42",
            "post_date_gmt": "2018-4-6 02:38:42",
            "post_content": "",
            "post_title": "微信图片_20180406103608",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "%e5%be%ae%e4%bf%a1%e5%9b%be%e7%89%87_20180406103608",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-4-6 10:38:42",
            "post_modified_gmt": "2018-4-6 02:38:42",
            "post_content_filtered": "",
            "post_parent": "592",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2018/04/微信图片_20180406103608.png",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/png",
            "comment_count": "0"
        },
        {
            "ID": "596",
            "post_author": "1",
            "post_date": "2018-4-6 10:39:27",
            "post_date_gmt": "2018-4-6 02:39:27",
            "post_content": "看到抖音上手持弹幕的效果，想想应该不复杂，也可以自己在浏览器实现一个。主要问题在于怎么把浏览器上面的搜索框去掉而实现一种伪全屏。结尾有彩蛋。<!--more-->\r\n\r\n效果暂时可以在<a href=\"https://ganjiacheng.cn/danmu.html\">https://ganjiacheng.cn/danmu.html</a> 查看。\r\n\r\n直接上代码，在其中论述方法。\r\n<pre> &lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"utf-8\"&gt;\r\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"&gt;\r\n    &lt;title&gt;手持弹幕&lt;/title&gt;\r\n    &lt;style type=\"text/css\"&gt;\r\n        *{\r\n            margin: 0px;\r\n            padding: 0px;\r\n        }\r\n        html,body{\r\n            height: 100%;\r\n            width: 100%;\r\n            overflow: hidden;\r\n            background: #000;\r\n        }\r\n        #txt{\r\n            overflow: visible;\r\n            white-space: nowrap;\r\n            transform-origin: 0% 0%;\r\n            transform: rotate(90deg);\r\n        }\r\n        #config{\r\n            position: absolute;\r\n            bottom: 0px;\r\n            width: 100%;\r\n        }\r\n        #config input{\r\n            display: block;\r\n            width: 100%;\r\n            padding: .375rem .75rem;\r\n            font-size: 1rem;\r\n            line-height: 1.5;\r\n            color: #495057;\r\n            background-color: #fff;\r\n            background-clip: padding-box;\r\n            border: 1px solid #ced4da;\r\n            border-radius: .25rem;\r\n            transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;\r\n        }\r\n        #config button{\r\n            width: 23.5%;\r\n            display: inline-block;\r\n            font-weight: 400;\r\n            text-align: center;\r\n            white-space: nowrap;\r\n            vertical-align: middle;\r\n            -webkit-user-select: none;\r\n            -moz-user-select: none;\r\n            -ms-user-select: none;\r\n            user-select: none;\r\n            border: 1px solid transparent;\r\n            padding: .375rem .75rem;\r\n            font-size: 1rem;\r\n            line-height: 1.5;\r\n            border-radius: .25rem;\r\n            transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;\r\n            color: #fff;\r\n            background-color: transparent;\r\n            background-image: none;\r\n            border-color: #343a40;\r\n        }\r\n    &lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;div id=\"txt\"&gt;点一下屏幕进入设置&lt;/div&gt;\r\n    &lt;div id=\"config\" style=\"display:none;\"&gt;\r\n        &lt;input type=\"text\" placeholder=\"输入文本,tip:上拉一下就可全屏\" id=\"txtContent\"&gt;\r\n        &lt;input type=\"text\" placeholder=\"输入颜色rgb，格式如:125 125 125\" id=\"color\"&gt;\r\n        &lt;button id=\"turnLeft\"&gt;左移&lt;/button&gt;\r\n        &lt;button id=\"turnRight\"&gt;右移&lt;/button&gt;\r\n        &lt;button id=\"bigger\"&gt;增大&lt;/button&gt;\r\n        &lt;button id=\"smaller\"&gt;减小&lt;/button&gt;\r\n        &lt;button id=\"quicker\"&gt;加快&lt;/button&gt;\r\n        &lt;button id=\"slower\"&gt;减慢&lt;/button&gt;\r\n        &lt;button id=\"changeFont\"&gt;字体&lt;/button&gt;\r\n        &lt;button id=\"stunt\"&gt;特技&lt;/button&gt;\r\n    &lt;/div&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        //获取到所需dom\r\n        var txt = document.getElementById(\"txt\");\r\n        var config = document.getElementById(\"config\");\r\n        var txtContent = document.getElementById(\"txtContent\");\r\n        var color = document.getElementById(\"color\");\r\n        var turnLeft = document.getElementById(\"turnLeft\");\r\n        var turnRight = document.getElementById(\"turnRight\");\r\n        var bigger = document.getElementById(\"bigger\");\r\n        var smaller = document.getElementById(\"smaller\");\r\n        var quicker = document.getElementById(\"quicker\");\r\n        var slower = document.getElementById(\"slower\");\r\n        var changeFont = document.getElementById(\"changeFont\");\r\n        var stunt = document.getElementById(\"stunt\");\r\n        var height = document.body.clientHeight;\r\n        var width = document.body.clientWidth;\r\n        var state = 0;\r\n        var v = 10;\r\n        var k = 0;\r\n        //初始化设置，下面改起来方便些\r\n        txt.style.marginTop = height+\"px\";\r\n        txt.style.fontSize = \"380px\";\r\n        txt.style.marginLeft = \"450px\";\r\n        txt.style.color = \"rgba(255,255,255,1)\"\r\n\r\n        config.onclick = function(){\r\n            state = 1;\r\n        }\r\n        //显隐设置栏，消除搜索框也是无意间发现。\r\n        //由于加了设置栏大于一屏然后可以上拉，上拉后搜索框会折叠。\r\n        //然后在点击消除设置栏，一些浏览器就会自动占满屏，有些浏览器好像下面会有一栏空。\r\n        document.body.onclick = function(e){\r\n            if(state != 1){\r\n                config.style.display = config.style.display == \"none\" ? \"block\" : \"none\";\r\n            }\r\n            state = 0;\r\n        }\r\n        //绑定设置输入框和按钮操作\r\n        txtContent.onchange = function(){\r\n            txt.innerHTML = this.value\r\n            txt.style.marginTop = height + \"px\";\r\n        }\r\n\r\n        color.onchange = function(){\r\n            colors = this.value.split(\" \");\r\n            txt.style.color = \"rgba(\"+colors[0]+\",\"+colors[1]+\",\"+colors[2]+\",1)\";\r\n            txt.style.marginTop = height + \"px\";\r\n        }\r\n\r\n        turnLeft.onclick = function(){\r\n            txt.style.marginLeft = parseInt(txt.style.marginLeft) - 10 + \"px\";\r\n        }\r\n\r\n        turnRight.onclick = function(){\r\n            txt.style.marginLeft = parseInt(txt.style.marginLeft) + 10 + \"px\";\r\n        }\r\n\r\n        bigger.onclick = function(){\r\n            txt.style.fontSize = parseInt(txt.style.fontSize) + 10 + \"px\";\r\n        }\r\n\r\n        smaller.onclick = function(){\r\n            console.log(txt.style.fontSize)\r\n            txt.style.fontSize = parseInt(txt.style.fontSize) - 10 + \"px\";\r\n            console.log(txt.style.fontSize)\r\n        }\r\n\r\n        quicker.onclick = function(){\r\n            v += 2\r\n        }\r\n\r\n        slower.onclick = function(){\r\n            v -= 2\r\n        }\r\n\r\n        changeFont.onclick = function(){\r\n            fonts = [\"SimSun\",\"SimHei\",\"Microsoft YaHei\",\"Microsoft JhengHei\",\"NSimSun\",\"PMingLiU\",\"MingLiU\",\"DFKai-SB\",\"FangSong\",\"KaiTi\",\"FangSong_GB2312\",\"KaiTi_GB2312\",\"：STHeiti\",\"STKaiti\",\"STSong\",\"STFangsong\",\"LiSu\",\"YouYuan\",\"STXihei\",\"STKaiti\",\"STKaiti\",\"STSong\",\"STZhongsong\",\"STZhongsong\",\"STFangsong\",\"FZYaoti\",\"STZhongsong\",\"STCaiyun\",\"STHupo\",\"STLiti\",\"STXingkai\",\"STXinwei\"]\r\n            txt.style.fontFamily = fonts[k];\r\n            k+=1;\r\n        }\r\n\r\n        stunt.onclick = function(){\r\n            alert(\"要什么特技呢\");\r\n            return\r\n        }\r\n        //设置字体移动\r\n        function move(){\r\n            txt.style.marginTop = parseInt(txt.style.marginTop) - v + \"px\";\r\n            if(parseInt(txt.style.marginTop) &lt;= -parseInt(txt.style.fontSize)*txt.innerHTML.length) txt.style.marginTop = height + \"px\";\r\n            window.requestAnimationFrame(move);\r\n        }\r\n        window.requestAnimationFrame(move);\r\n    &lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n效果展示：<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/04/微信图片_20180406103608.png\"><img class=\"alignnone wp-image-595 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/04/微信图片_20180406103608-150x300.png\" alt=\"\" width=\"150\" height=\"300\" /></a>\r\n\r\n再来聊聊我对于自身前端的发展意向；\r\n\r\n自身没有太多精力去看一些工程上的问题（比如浏览器适配，框架，css预处理等），所以大部分我会专注于效果的实现（由于网页展示起来比较方便）。\r\n\r\n使用的多数也会在原生js行列，偶尔用个jquery，必要时看一些包的使用（如之前markdown解析器）。\r\n\r\n随性写些启发性前端代码，可能是逻辑上的sao操作，可能是效果上的模仿或涂鸦，，可能是我未知新技术上的demo，and so on；我自己的手机跑的动就好啦。\r\n\r\n就这样了吗，恩，然后就没有然后了。",
            "post_title": "手持弹幕效果--网页版",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "592-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-4-6 10:39:27",
            "post_modified_gmt": "2018-4-6 02:39:27",
            "post_content_filtered": "",
            "post_parent": "592",
            "guid": "http://ganjiacheng.cn/blog/?p=596",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "597",
            "post_author": "1",
            "post_date": "2018-4-7 12:13:28",
            "post_date_gmt": "2018-4-7 04:13:28",
            "post_content": "包括，批量重命名，待更新。。。\r\n\r\n1.批量重命名  changeName.py\r\n<pre>import os\r\nf=os.listdir(\"./\")\r\nf.remove(\"changeName.py\")\r\nj=0\r\nfor i in f:\r\n os.renames(i,str(j)+\".jpg\")\r\n j+=1</pre>\r\n2.实现数组next并循环---js版\r\n<pre>(now+1)%array.length</pre>\r\n3.python字典自动初始化为0\r\n<pre>from collections import defaultdict\r\nd=defaultdict(int)\r\nd['count']+=1</pre>\r\n4.linux+windows 查看端口监听并kill\r\n<pre>#linux\r\nnetstat -apn|grep 8000\r\n或者\r\nps -aux|grep 8000\r\nkill -9 pid\r\n\r\n#windows\r\nnetstat -ano|findstr 3000\r\nnetstat -ano</pre>\r\n5.linux开启防火墙\r\n<pre>firewall-cmd --zone=public --add-port=8892/tcp --permanent\r\nsystemctl restart firewalld</pre>\r\n6.linux下python后台运行\r\n<pre>nohup python -u filename.py &gt; filename.out 2&gt;&amp;1 &amp;\r\ntail -f filename.out</pre>\r\n7.git add，git commit提交错误\r\n<pre>git status\r\ngit reset HEAD</pre>\r\n<pre>git log\r\ngit reset --soft commit_id</pre>\r\n如果使用hard reset 了\r\n<pre>git reflog\r\ngit reset --hard 前面的id</pre>",
            "post_title": "常用编程小操作",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "132-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-4-7 12:13:28",
            "post_modified_gmt": "2018-4-7 04:13:28",
            "post_content_filtered": "",
            "post_parent": "132",
            "guid": "http://ganjiacheng.cn/blog/?p=597",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "599",
            "post_author": "1",
            "post_date": "2018-4-11 14:05:33",
            "post_date_gmt": "2018-4-11 06:05:33",
            "post_content": "起意是在看一些招聘算法机器学习面经的时候有看到好几次让直接写一个kmeans。之前用sklearn试过这个聚类算法，这次也来手写实现一下。<!--more-->\r\n<pre>import random\r\nimport matplotlib.pyplot as plt\r\n\r\n#生成点\r\ndef make_points():\r\n    points = []\r\n    for i in range(100):\r\n        points.append([random.random()*10,random.random()*10])\r\n        points.append([random.random()*-10,random.random()*-10])\r\n        points.append([random.random()*10,random.random()*-10])\r\n        points.append([random.random()*-10,random.random()*10])\r\n    return points\r\n\r\n#计算距离，这里用欧式距离，也可以换其他距离\r\ndef calc_distance(p1,p2):\r\n    return ((p1[0]-p2[0])**2+(p1[1]-p2[1])**2)**0.5\r\n\r\n#转置\r\ndef listT(arr):\r\n    return list(map(list, zip(*arr)))\r\n\r\n#主算法部分，递归实现\r\ndef kmeans(points,cate_num,cate_mid=None,n=0,nmax=100):\r\n    #初始化中心点\r\n    if cate_mid == None:\r\n        cate_mid = [points[i] for i in range(cate_num)]\r\n    category = {}\r\n    #初始化类别\r\n    for i in range(cate_num):\r\n        category[i] = []\r\n    #计算每个点与中心点的距离，去最小值，划入那个中心点的类中\r\n    for point in points:\r\n        dis = [calc_distance(point,i) for i in cate_mid]\r\n        category[dis.index(min(dis))].append(point)\r\n    #转置得到每类点的x和y，并求平均。\r\n    ch_cate_mid = []\r\n    for i in category:\r\n        tmpx,tmpy = listT(category[i])\r\n        count = len(tmpx)\r\n        ch_cate_mid.append([sum(tmpx)/count,sum(tmpy)/count])\r\n    #n为次数，次数达到后返回类别与点\r\n    if n &gt;= nmax:\r\n        return category\r\n    else:\r\n        return kmeans(points,cate_num,ch_cate_mid,n+1)\r\n\r\nif __name__ == \"__main__\":\r\n    #运行kmeans\r\n    points = make_points()\r\n    cate_num = 4\r\n    category = kmeans(points,cate_num)\r\n\r\n    #画图部分\r\n    color = ['b', 'g', 'r', 'c', 'm', 'y', 'k', 'w']\r\n    for i in category:\r\n        xy = listT(category[i])\r\n        plt.plot(xy[0],xy[1],color[i]+\".\")\r\n    #plt.show()\r\n    plt.savefig(\"kmeans.png\")</pre>\r\n效果展示：\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/04/test.png\"><img class=\"alignnone wp-image-601 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/04/test-300x225.png\" alt=\"\" width=\"300\" height=\"225\" /></a>",
            "post_title": "手搓一个kmeans聚类",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e6%89%8b%e6%90%93%e4%b8%80%e4%b8%aakmeans%e8%81%9a%e7%b1%bb",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-4-11 14:05:33",
            "post_modified_gmt": "2018-4-11 06:05:33",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=599",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "600",
            "post_author": "1",
            "post_date": "2018-4-11 10:40:20",
            "post_date_gmt": "2018-4-11 02:40:20",
            "post_content": "起意是在一些招聘算法机器学习面经的时候有看到好几次让直接写一个kmeans。之前用sklearn试过，这次也来手写实现一下。\r\n<pre></pre>",
            "post_title": "手搓一个kmeans聚类",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "599-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-4-11 10:40:20",
            "post_modified_gmt": "2018-4-11 02:40:20",
            "post_content_filtered": "",
            "post_parent": "599",
            "guid": "http://ganjiacheng.cn/blog/?p=600",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "601",
            "post_author": "1",
            "post_date": "2018-4-11 14:04:08",
            "post_date_gmt": "2018-4-11 06:04:08",
            "post_content": "",
            "post_title": "test",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "test",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-4-11 14:04:08",
            "post_modified_gmt": "2018-4-11 06:04:08",
            "post_content_filtered": "",
            "post_parent": "599",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2018/04/test.png",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/png",
            "comment_count": "0"
        },
        {
            "ID": "602",
            "post_author": "1",
            "post_date": "2018-4-11 14:05:33",
            "post_date_gmt": "2018-4-11 06:05:33",
            "post_content": "起意是在看一些招聘算法机器学习面经的时候有看到好几次让直接写一个kmeans。之前用sklearn试过这个聚类算法，这次也来手写实现一下。<!--more-->\r\n<pre>import random\r\nimport matplotlib.pyplot as plt\r\n\r\n#生成点\r\ndef make_points():\r\n    points = []\r\n    for i in range(100):\r\n        points.append([random.random()*10,random.random()*10])\r\n        points.append([random.random()*-10,random.random()*-10])\r\n        points.append([random.random()*10,random.random()*-10])\r\n        points.append([random.random()*-10,random.random()*10])\r\n    return points\r\n\r\n#计算距离，这里用欧式距离，也可以换其他距离\r\ndef calc_distance(p1,p2):\r\n    return ((p1[0]-p2[0])**2+(p1[1]-p2[1])**2)**0.5\r\n\r\n#转置\r\ndef listT(arr):\r\n    return list(map(list, zip(*arr)))\r\n\r\n#主算法部分，递归实现\r\ndef kmeans(points,cate_num,cate_mid=None,n=0,nmax=100):\r\n    #初始化中心点\r\n    if cate_mid == None:\r\n        cate_mid = [points[i] for i in range(cate_num)]\r\n    category = {}\r\n    #初始化类别\r\n    for i in range(cate_num):\r\n        category[i] = []\r\n    #计算每个点与中心点的距离，去最小值，划入那个中心点的类中\r\n    for point in points:\r\n        dis = [calc_distance(point,i) for i in cate_mid]\r\n        category[dis.index(min(dis))].append(point)\r\n    #转置得到每类点的x和y，并求平均。\r\n    ch_cate_mid = []\r\n    for i in category:\r\n        tmpx,tmpy = listT(category[i])\r\n        count = len(tmpx)\r\n        ch_cate_mid.append([sum(tmpx)/count,sum(tmpy)/count])\r\n    #n为次数，次数达到后返回类别与点\r\n    if n &gt;= nmax:\r\n        return category\r\n    else:\r\n        return kmeans(points,cate_num,ch_cate_mid,n+1)\r\n\r\nif __name__ == \"__main__\":\r\n    #运行kmeans\r\n    points = make_points()\r\n    cate_num = 4\r\n    category = kmeans(points,cate_num)\r\n\r\n    #画图部分\r\n    color = ['b', 'g', 'r', 'c', 'm', 'y', 'k', 'w']\r\n    for i in category:\r\n        xy = listT(category[i])\r\n        plt.plot(xy[0],xy[1],color[i]+\".\")\r\n    #plt.show()\r\n    plt.savefig(\"kmeans.png\")</pre>\r\n效果展示：\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/04/test.png\"><img class=\"alignnone wp-image-601 size-medium\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/04/test-300x225.png\" alt=\"\" width=\"300\" height=\"225\" /></a>",
            "post_title": "手搓一个kmeans聚类",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "599-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-4-11 14:05:33",
            "post_modified_gmt": "2018-4-11 06:05:33",
            "post_content_filtered": "",
            "post_parent": "599",
            "guid": "http://ganjiacheng.cn/blog/?p=602",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "605",
            "post_author": "1",
            "post_date": "2018-6-4 16:29:50",
            "post_date_gmt": "2018-6-4 08:29:50",
            "post_content": "如有雷同，纯属巧合。\r\n\r\n<!--more-->\r\n<ul>\r\n \t<li>封闭的修炼 与 随性的创作</li>\r\n</ul>\r\n常常想着要提升自己，又由很多闭门修炼的别人家的故事的影响，也想尝试一把。\r\n\r\n常常会憋出病来，或许就是前者的一般结局，主要由于不太规律的饮食习惯和作息，一个人常常就会如此。\r\n\r\n随性创作则是在日常生活的基础上有空便随性的想一些事情，有时候便会有特别的灵感。然后在对此进行特别的记录与操作。\r\n\r\n本人较为喜欢走走路然后想着事情，或许就会得到最佳的解决方案。\r\n<ul>\r\n \t<li>所谓的原则 与 我可以将就</li>\r\n</ul>\r\n主要还是本人租房时的一些所遇，如果你不准确的定一个上线和下线，你将难以租到想要的房子，因为总会有更好看的价格贵些，更便宜的设施差些，而那些推荐你的人总会推荐更贵的，一次次下压你的底线。\r\n\r\n如果这时候你讲一句 我可以将就，那相当于你的底线进一步得到了下降，他还可以推荐给你更好一些的，价格也就贵一丢丢。然后你又要考虑将就不将就呢。\r\n\r\n而定下原则即对于各种指标定好上下限，无论怎么诱惑你也不能超过这个原则，则你马上就能找到与原则相应的目标。\r\n<ul>\r\n \t<li>有车 与 没车</li>\r\n</ul>\r\n看到一个说法：有说有车没车是完全不一样的人生，而豪车和二手车对人生来说差不了多少。暂时接纳这个观点，虽然还没到买车的地步。公共交通出行对于我一个人来说是没什么，但身边总不止我一个人，还有我家人，甚至未来的女友孩子。我想在路上有一个独立的小空间供聊聊天，出门再也不用看天气，说旅行就旅行等都是车带来的享受。暂定个小目标买车！\r\n<ul>\r\n \t<li>规划的是 与 非</li>\r\n</ul>\r\n规划真是个奇妙的东西，之前我还一直觉得规划好的事情做起来比较顺手，可以去除自身的焦虑，如每天要干什么（如今天规划明天，上午的我有课，下午弹会琴，晚上看直播，随机写代码）。\r\n\r\n没想到心内的焦虑也有一部分是规划产生的。就比如我大学的6月份，找着实习的机会，但只能暑假才开始入职，这个本是对暑假以及日后的一种规划，没想到很快找着了，但想着一个月后一定会去那里工作反而产生一种既想去又想去后会发生的事情的焦虑，所以这个我觉得在我入职前都会伴随着这种心绪，影响肯定是坏的，至少在一个月里坏了我不少心情与增加了不少压力。\r\n\r\n猜测可能日常的你可调的规划是好的（如你要看一本书，你可以规划这周看完，但你看不完也没人管），带压力的强制的规划是自己给自己找麻烦（如你想着去考个英语46级，考试临近你的焦虑自然便产生了，而且是递增的）。或许：船到桥头自然直才是最好的。",
            "post_title": "花 与 字 （持续更新）",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e8%8a%b1-%e4%b8%8e-%e5%ad%97",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-6-4 16:34:42",
            "post_modified_gmt": "2018-6-4 08:34:42",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=605",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "606",
            "post_author": "1",
            "post_date": "2018-4-20 22:25:31",
            "post_date_gmt": "2018-4-20 14:25:31",
            "post_content": "最近的一段时间，常常想着要提升自己，又由很多闭门修炼的别人家的故事的影响，我也尝试一下这个滋味。\r\n\r\n&nbsp;",
            "post_title": "封闭的修炼与随性的创作",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "605-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-4-20 22:25:31",
            "post_modified_gmt": "2018-4-20 14:25:31",
            "post_content_filtered": "",
            "post_parent": "605",
            "guid": "http://ganjiacheng.cn/blog/?p=606",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "608",
            "post_author": "1",
            "post_date": "2018-4-20 23:08:40",
            "post_date_gmt": "2018-4-20 15:08:40",
            "post_content": "<ul>\r\n \t<li>封闭的修炼 与 随性的创作</li>\r\n</ul>\r\n常常想着要提升自己，又由很多闭门修炼的别人家的故事的影响，也想尝试一把。\r\n\r\n常常会憋出病来，或许就是前者的一般结局，主要由于不太规律的饮食习惯和作息，一个人常常就会如此。\r\n\r\n随性创作则是在日常生活的基础上有空便随性的想一些事情，有时候便会有特别的灵感。然后在对此进行特别的记录与操作。\r\n\r\n本人较为喜欢走走路然后想着事情，或许就会得到最佳的解决方案。\r\n<ul>\r\n \t<li>所谓的原则 与 我可以将就</li>\r\n</ul>\r\n主要还是本人租房时的一些所遇，如果你不准确的定一个上线和下线，你将难以租到想要的房子，因为总会有更好看的价格贵些，更便宜的设施差些，而那些推荐你的人总会推荐更贵的，一次次下压你的底线。\r\n\r\n如果这时候你讲一句 我可以将就，那相当于你的底线进一步得到了下降，他还可以推荐给你更好一些的，价格也就贵一丢丢。然后你又要考虑将就不将就呢。\r\n\r\n而定下原则即对于各种指标定好上下限，无论怎么诱惑你也不能超过这个原则，则你马上就能找到与原则相应的目标。\r\n<ul>\r\n \t<li> 与 我只是个过客</li>\r\n</ul>\r\n&nbsp;\r\n<ul>\r\n \t<li>这儿是我的底线，等待更新哦！</li>\r\n</ul>",
            "post_title": "花还是字？（人生选择篇）--持续更新",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "605-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-4-20 23:08:40",
            "post_modified_gmt": "2018-4-20 15:08:40",
            "post_content_filtered": "",
            "post_parent": "605",
            "guid": "http://ganjiacheng.cn/blog/?p=608",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "609",
            "post_author": "1",
            "post_date": "2018-4-22 13:16:24",
            "post_date_gmt": "2018-4-22 05:16:24",
            "post_content": "在leetcode遇到二叉树就卡机，恶补下这种数据结构，想想都难。<!--more-->\r\n\r\n首先是节点构建和插入，这里的插入形式用来下面排序，小的在左，大的在右。\r\n<pre>class Node():\r\n    def __init__(self, val=None, left= None, right=None):\r\n        self.val = val\r\n        self.left = left\r\n        self.right = right\r\n\r\n    def add(self, val):\r\n        if val &lt; self.val:\r\n            if self.left is None:\r\n                self.left = Node(val)\r\n            else:\r\n                self.left.add(val)\r\n        else:\r\n            if self.right is None:\r\n                self.right = Node(val)\r\n            else:\r\n                self.right.add(val)</pre>\r\n然后是三种遍历方式\r\n<pre>#先序\r\ndef front(root,res=[]):\r\n    if root == None:\r\n        return\r\n    res.append(root.val)\r\n    front(root.left,res)\r\n    front(root.right,res)\r\n    return res\r\n#中序（这个的得到的便是排序后的数组）\r\ndef middle(root,res=[]):\r\n    if root == None:\r\n        return\r\n    front(root.left,res)\r\n    res.append(root.val)\r\n    front(root.right,res)\r\n    return res\r\n#后序\r\ndef end(root,res=[]):\r\n    if root == None:\r\n        return\r\n    front(root.left,res)\r\n    front(root.right,res)\r\n    res.append(root.val)\r\n    return res</pre>\r\n下面是一些应用\r\n\r\n1.判断二叉树是否是左右镜像的\r\n\r\n思路：输入根节点左右两个节点，判断两节点是否相同，然后递归判断左节点的左节点和右节点的右节点 以及 左节点的右节点和右节点的左节点。\r\n<pre>def judge(left,right):\r\n    if left is None and right is None:\r\n        return True\r\n    if (left is None and right is not None) or (right is None and left is not None) or right.val != left.val:\r\n        return False\r\n    return judge(left.left,right.right) and judge(left.right,right.left)</pre>\r\n2.二叉树最大深度\r\n\r\n思路：左右节点分别设一个长度，进入深一层长度就加一，返回的是两者之间大的一方，也就的到所有路径深度中最大的一个。\r\n<pre>def depth(root):\r\n    if root is None:\r\n        return 0\r\n    l = depth(root.left)\r\n    r = depth(root.right)\r\n    return max([l,r])+1</pre>\r\n3.左右翻转二叉树\r\n\r\n思路：也就是把二叉树中所有的左右节点都换一下便可。\r\n<pre>def invertTree(root):\r\n    if root is None:\r\n        return None\r\n    if root.left:\r\n        invertTree(root.left)\r\n    if root.right:\r\n        invertTree(root.right)\r\n    root.left,root.right = root.right,root.left\r\n    return root</pre>\r\n4.二叉树右往左的叠加和\r\n\r\n思路：设立一个全局的和，对于每个节点都加上这个和，然后更新和，把节点从右往左遍历便是把中序遍历反一下。\r\n<pre>sum = 0\r\ndef bst(self,root):\r\n    if root is None:\r\n        return\r\n    self.bst(root.right)\r\n    root.val += sum\r\n    sum = root.val\r\n    self.bst(root.left)</pre>\r\n5.最长子树长度，可不过根节点\r\n\r\n思路：在最大深度的基础上，添加一个变量来计算每次的左右子树和。\r\n<pre>res = 0\r\ndef depth(self,root):\r\n    if root is None:\r\n        return 0\r\n    l = self.depth(root.left)\r\n    r = self.depth(root.right)\r\n    res = max(res,l+r)\r\n    return max([l,r])+1</pre>\r\n6.判断一个树是否是另一个的子树\r\n\r\n思路：对主树递归所有节点，只要有一个是子树成立便可。每次在递归检查子树与主树是否相同，这里所有节点都要一样。\r\n<pre>class Solution(object):\r\n    def isSubtree(self, s, t):\r\n        if not s or not t:\r\n            return not s and not t\r\n        if self.check(s,t):\r\n            return True\r\n        return self.isSubtree(s.left,t) or self.isSubtree(s.right,t)\r\n    \r\n    def check(self,s,t):\r\n        if not s or not t:\r\n            return not s and not t\r\n        if s.val != t.val:\r\n            return False\r\n        return self.check(s.left,t.left) and self.check(s.right,t.right)</pre>\r\n7.合并二叉树\r\n\r\n思路：遍历两个二叉树的节点，把和加到一个二叉树上\r\n<pre>def mergeTrees(self, t1, t2):\r\n    if t1 is not None and t2 is not None:\r\n        t1.left = self.mergeTrees(t1.left,t2.left)\r\n        t1.right = self.mergeTrees(t1.right,t2.right)\r\n        t1.val += t2.val\r\n        return t1\r\n    return t1 if t2 is None else t2</pre>",
            "post_title": "整理下二叉树",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e6%95%b4%e7%90%86%e4%b8%8b%e4%ba%8c%e5%8f%89%e6%a0%91",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-4-22 13:16:24",
            "post_modified_gmt": "2018-4-22 05:16:24",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=609",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "610",
            "post_author": "1",
            "post_date": "2018-4-21 10:24:26",
            "post_date_gmt": "2018-4-21 02:24:26",
            "post_content": "",
            "post_title": "整理下二叉树",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "609-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-4-21 10:24:26",
            "post_modified_gmt": "2018-4-21 02:24:26",
            "post_content_filtered": "",
            "post_parent": "609",
            "guid": "http://ganjiacheng.cn/blog/?p=610",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "611",
            "post_author": "1",
            "post_date": "2018-4-22 06:29:51",
            "post_date_gmt": "2018-4-21 22:29:51",
            "post_content": "在leetcode遇到二叉树就卡机，恶补下这种数据结构，想想都难。\r\n\r\n首先是节点构建和插入，这里的插入形式用来下面排序\r\n\r\n&nbsp;",
            "post_title": "整理下二叉树",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "609-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-4-22 06:29:51",
            "post_modified_gmt": "2018-4-21 22:29:51",
            "post_content_filtered": "",
            "post_parent": "609",
            "guid": "http://ganjiacheng.cn/blog/?p=611",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "612",
            "post_author": "1",
            "post_date": "2018-4-22 07:12:51",
            "post_date_gmt": "2018-4-21 23:12:51",
            "post_content": "在leetcode遇到二叉树就卡机，恶补下这种数据结构，想想都难。\r\n\r\n首先是节点构建和插入，这里的插入形式用来下面排序，小的在左，大的在右。\r\n<pre>class Node():\r\n    def __init__(self, val=None, left= None, right=None):\r\n        self.val = val\r\n        self.left = left\r\n        self.right = right\r\n\r\n    def add(self, val):\r\n        if val &lt; self.val:\r\n            if self.left is None:\r\n                self.left = Node(val)\r\n            else:\r\n                self.left.add(val)\r\n        else:\r\n            if self.right is None:\r\n                self.right = Node(val)\r\n            else:\r\n                self.right.add(val)</pre>\r\n然后是三种遍历方式\r\n<pre>#先序\r\ndef front(root,res=[]):\r\n    if root == None:\r\n        return\r\n    res.append(root.val)\r\n    front(root.left,res)\r\n    front(root.right,res)\r\n    return res\r\n#中序（这个的得到的便是排序后的数组）\r\ndef middle(root,res=[]):\r\n    if root == None:\r\n        return\r\n    front(root.left,res)\r\n    res.append(root.val)\r\n    front(root.right,res)\r\n    return res\r\n#后序\r\ndef end(root,res=[]):\r\n    if root == None:\r\n        return\r\n    front(root.left,res)\r\n    front(root.right,res)\r\n    res.append(root.val)\r\n    return res</pre>\r\n下面是一些应用\r\n\r\n1.判断二叉树是否是左右镜像的\r\n\r\n思路：输入根节点左右两个节点，判断两节点是否相同，然后递归判断左节点的左节点和右节点的右节点 以及 左节点的右节点和右节点的左节点。\r\n<pre>def judge(left,right):\r\n    if left is None and right is None:\r\n        return True\r\n    if (left is None and right is not None) or (right is None and left is not None) or right.val != left.val:\r\n        return False\r\n    return judge(left.left,right.right) and judge(left.right,right.left)</pre>\r\n2.二叉树最大深度\r\n\r\n思路：左右节点分别设一个长度，进入深一层长度就加一，返回的是两者之间大的一方，也就的到所有路径深度中最大的一个。\r\n<pre>def depth(root):\r\n    if root is None:\r\n        return 0\r\n    l = depth(root.left)\r\n    r = depth(root.right)\r\n    return max([l,r])+1</pre>\r\n3.左右翻转二叉树\r\n\r\n思路：也就是把二叉树中所有的左右节点都换一下便可。\r\n<pre>def invertTree(root):\r\n    if root is None:\r\n        return None\r\n    if root.left:\r\n        invertTree(root.left)\r\n    if root.right:\r\n        invertTree(root.right)\r\n    root.left,root.right = root.right,root.left\r\n    return root</pre>\r\n4.二叉树右往左的叠加和\r\n\r\n思路：设立一个全局的和，对于每个节点都加上这个和，然后更新和，把节点从右往左遍历便是把中序遍历反一下。\r\n<pre>sum = 0\r\ndef bst(self,root):\r\n    if root is None:\r\n        return\r\n    self.bst(root.right)\r\n    root.val += sum\r\n    sum = root.val\r\n    self.bst(root.left)</pre>\r\n5.最长子树长度，可不过根节点\r\n\r\n思路：在最大深度的基础上，添加一个变量来计算每次的左右子树和。\r\n<pre>res = 0\r\ndef depth(self,root):\r\n    if root is None:\r\n        return 0\r\n    l = self.depth(root.left)\r\n    r = self.depth(root.right)\r\n    res = max(res,l+r)\r\n    return max([l,r])+1</pre>",
            "post_title": "整理下二叉树",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "609-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-4-22 07:12:51",
            "post_modified_gmt": "2018-4-21 23:12:51",
            "post_content_filtered": "",
            "post_parent": "609",
            "guid": "http://ganjiacheng.cn/blog/?p=612",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "613",
            "post_author": "1",
            "post_date": "2018-4-22 13:16:24",
            "post_date_gmt": "2018-4-22 05:16:24",
            "post_content": "在leetcode遇到二叉树就卡机，恶补下这种数据结构，想想都难。<!--more-->\r\n\r\n首先是节点构建和插入，这里的插入形式用来下面排序，小的在左，大的在右。\r\n<pre>class Node():\r\n    def __init__(self, val=None, left= None, right=None):\r\n        self.val = val\r\n        self.left = left\r\n        self.right = right\r\n\r\n    def add(self, val):\r\n        if val &lt; self.val:\r\n            if self.left is None:\r\n                self.left = Node(val)\r\n            else:\r\n                self.left.add(val)\r\n        else:\r\n            if self.right is None:\r\n                self.right = Node(val)\r\n            else:\r\n                self.right.add(val)</pre>\r\n然后是三种遍历方式\r\n<pre>#先序\r\ndef front(root,res=[]):\r\n    if root == None:\r\n        return\r\n    res.append(root.val)\r\n    front(root.left,res)\r\n    front(root.right,res)\r\n    return res\r\n#中序（这个的得到的便是排序后的数组）\r\ndef middle(root,res=[]):\r\n    if root == None:\r\n        return\r\n    front(root.left,res)\r\n    res.append(root.val)\r\n    front(root.right,res)\r\n    return res\r\n#后序\r\ndef end(root,res=[]):\r\n    if root == None:\r\n        return\r\n    front(root.left,res)\r\n    front(root.right,res)\r\n    res.append(root.val)\r\n    return res</pre>\r\n下面是一些应用\r\n\r\n1.判断二叉树是否是左右镜像的\r\n\r\n思路：输入根节点左右两个节点，判断两节点是否相同，然后递归判断左节点的左节点和右节点的右节点 以及 左节点的右节点和右节点的左节点。\r\n<pre>def judge(left,right):\r\n    if left is None and right is None:\r\n        return True\r\n    if (left is None and right is not None) or (right is None and left is not None) or right.val != left.val:\r\n        return False\r\n    return judge(left.left,right.right) and judge(left.right,right.left)</pre>\r\n2.二叉树最大深度\r\n\r\n思路：左右节点分别设一个长度，进入深一层长度就加一，返回的是两者之间大的一方，也就的到所有路径深度中最大的一个。\r\n<pre>def depth(root):\r\n    if root is None:\r\n        return 0\r\n    l = depth(root.left)\r\n    r = depth(root.right)\r\n    return max([l,r])+1</pre>\r\n3.左右翻转二叉树\r\n\r\n思路：也就是把二叉树中所有的左右节点都换一下便可。\r\n<pre>def invertTree(root):\r\n    if root is None:\r\n        return None\r\n    if root.left:\r\n        invertTree(root.left)\r\n    if root.right:\r\n        invertTree(root.right)\r\n    root.left,root.right = root.right,root.left\r\n    return root</pre>\r\n4.二叉树右往左的叠加和\r\n\r\n思路：设立一个全局的和，对于每个节点都加上这个和，然后更新和，把节点从右往左遍历便是把中序遍历反一下。\r\n<pre>sum = 0\r\ndef bst(self,root):\r\n    if root is None:\r\n        return\r\n    self.bst(root.right)\r\n    root.val += sum\r\n    sum = root.val\r\n    self.bst(root.left)</pre>\r\n5.最长子树长度，可不过根节点\r\n\r\n思路：在最大深度的基础上，添加一个变量来计算每次的左右子树和。\r\n<pre>res = 0\r\ndef depth(self,root):\r\n    if root is None:\r\n        return 0\r\n    l = self.depth(root.left)\r\n    r = self.depth(root.right)\r\n    res = max(res,l+r)\r\n    return max([l,r])+1</pre>\r\n6.判断一个树是否是另一个的子树\r\n\r\n思路：对主树递归所有节点，只要有一个是子树成立便可。每次在递归检查子树与主树是否相同，这里所有节点都要一样。\r\n<pre>class Solution(object):\r\n    def isSubtree(self, s, t):\r\n        if not s or not t:\r\n            return not s and not t\r\n        if self.check(s,t):\r\n            return True\r\n        return self.isSubtree(s.left,t) or self.isSubtree(s.right,t)\r\n    \r\n    def check(self,s,t):\r\n        if not s or not t:\r\n            return not s and not t\r\n        if s.val != t.val:\r\n            return False\r\n        return self.check(s.left,t.left) and self.check(s.right,t.right)</pre>\r\n7.合并二叉树\r\n\r\n思路：遍历两个二叉树的节点，把和加到一个二叉树上\r\n<pre>def mergeTrees(self, t1, t2):\r\n    if t1 is not None and t2 is not None:\r\n        t1.left = self.mergeTrees(t1.left,t2.left)\r\n        t1.right = self.mergeTrees(t1.right,t2.right)\r\n        t1.val += t2.val\r\n        return t1\r\n    return t1 if t2 is None else t2</pre>",
            "post_title": "整理下二叉树",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "609-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-4-22 13:16:24",
            "post_modified_gmt": "2018-4-22 05:16:24",
            "post_content_filtered": "",
            "post_parent": "609",
            "guid": "http://ganjiacheng.cn/blog/?p=613",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "615",
            "post_author": "1",
            "post_date": "2018-4-25 23:03:50",
            "post_date_gmt": "2018-4-25 15:03:50",
            "post_content": "包括，批量重命名，待更新。。。\r\n\r\n1.批量重命名  changeName.py\r\n<pre>import os\r\nf=os.listdir(\"./\")\r\nf.remove(\"changeName.py\")\r\nj=0\r\nfor i in f:\r\n os.renames(i,str(j)+\".jpg\")\r\n j+=1</pre>\r\n2.实现数组next并循环---js版\r\n<pre>(now+1)%array.length</pre>\r\n3.python字典自动初始化为0\r\n<pre>from collections import defaultdict\r\nd=defaultdict(int)\r\nd['count']+=1</pre>\r\n4.linux+windows 查看端口监听并kill\r\n<pre>#linux\r\nnetstat -apn|grep 8000\r\n或者\r\nps -aux|grep 8000\r\nkill -9 pid\r\n\r\n#windows\r\nnetstat -ano|findstr 3000\r\nnetstat -ano</pre>\r\n5.linux开启防火墙\r\n<pre>firewall-cmd --zone=public --add-port=8892/tcp --permanent\r\nsystemctl restart firewalld</pre>\r\n6.linux下python后台运行\r\n<pre>nohup python -u filename.py &gt; filename.out 2&gt;&amp;1 &amp;\r\ntail -f filename.out</pre>\r\n7.git add，git commit提交错误\r\n<pre>git status\r\ngit reset HEAD</pre>\r\n<pre>git log\r\ngit reset --soft commit_id</pre>\r\n如果使用hard reset 了\r\n<pre>git reflog\r\ngit reset --hard 前面的id</pre>\r\n8.查看文件行数\r\n<pre>cat code.py | wc -l</pre>",
            "post_title": "常用编程小操作",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "132-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-4-25 23:03:50",
            "post_modified_gmt": "2018-4-25 15:03:50",
            "post_content_filtered": "",
            "post_parent": "132",
            "guid": "http://ganjiacheng.cn/blog/?p=615",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "616",
            "post_author": "1",
            "post_date": "2018-4-25 23:04:30",
            "post_date_gmt": "2018-4-25 15:04:30",
            "post_content": "包括，批量重命名，待更新。。。\r\n\r\n1.批量重命名  changeName.py\r\n<pre>import os\r\nf=os.listdir(\"./\")\r\nf.remove(\"changeName.py\")\r\nj=0\r\nfor i in f:\r\n os.renames(i,str(j)+\".jpg\")\r\n j+=1</pre>\r\n2.实现数组next并循环---js版\r\n<pre>(now+1)%array.length</pre>\r\n3.python字典自动初始化为0\r\n<pre>from collections import defaultdict\r\nd=defaultdict(int)\r\nd['count']+=1</pre>\r\n4.linux+windows 查看端口监听并kill\r\n<pre>#linux\r\nnetstat -apn|grep 8000\r\n或者\r\nps -aux|grep 8000\r\nkill -9 pid\r\n\r\n#windows\r\nnetstat -ano|findstr 3000\r\nnetstat -ano</pre>\r\n5.linux开启防火墙\r\n<pre>firewall-cmd --zone=public --add-port=8892/tcp --permanent\r\nsystemctl restart firewalld</pre>\r\n6.linux下python后台运行\r\n<pre>nohup python -u filename.py &gt; filename.out 2&gt;&amp;1 &amp;\r\ntail -f filename.out</pre>\r\n7.git add，git commit提交错误\r\n<pre>git status\r\ngit reset HEAD</pre>\r\n<pre>git log\r\ngit reset --soft commit_id</pre>\r\n如果使用hard reset 了\r\n<pre>git reflog\r\ngit reset --hard 前面的id</pre>\r\n8.linux查看文件行数（windows可用git bash）\r\n<pre>cat code.py | wc -l</pre>",
            "post_title": "常用编程小操作",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "132-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-4-25 23:04:30",
            "post_modified_gmt": "2018-4-25 15:04:30",
            "post_content_filtered": "",
            "post_parent": "132",
            "guid": "http://ganjiacheng.cn/blog/?p=616",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "621",
            "post_author": "1",
            "post_date": "2018-5-6 11:53:07",
            "post_date_gmt": "2018-5-6 03:53:07",
            "post_content": "大华2018年软件挑战赛初赛题\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/05/%E5%88%9D%E8%B5%9B.xlsx\">初赛　十道题，题目此在</a>，主要讲讲自己的思路，这里是前五题。<!--more-->\r\n\r\n１.不相邻最大子序和。不相邻所以奇偶分开写状态转移，然后取两者较大值。类似于leetcode中house robber。\r\n<pre>#include \"stdio.h\"\r\n#define max(a,b) ((a)&gt;(b)?(a):(b))\r\n\r\nint calc(int *nums,int n){\r\n    int a=0,b=0,i;\r\n    for(i=0;i&lt;n;i++){\r\n        if(i%2 == 0){\r\n            a = max(b,a+nums[i]);\r\n        }else{\r\n            b = max(a,b+nums[i]);\r\n        }\r\n    }\r\n    return max(a,b);\r\n}\r\n\r\nint main(){\r\n    int T,i,n,j;\r\n    scanf(\"%d\",&amp;T);\r\n    int res[T];\r\n    for(i=0;i&lt;T;i++){\r\n        scanf(\"%d\",&amp;n);\r\n        int nums[n];\r\n        for(j=0;j&lt;n;j++){\r\n            scanf(\"%d\",&amp;nums[j]);\r\n        }\r\n        res[i] = calc(nums,n);\r\n    }\r\n    for(i=0;i&lt;T;i++){\r\n        printf(\"%d\\n\",res[i]);\r\n    }\r\n}</pre>\r\n2.链表部分翻转。我还是用数组实现的，翻转就是遍历前一半的长度，和后一半换一下。然后在数组分割的每部分调用这个翻转完成。\r\n<pre>#include \"stdio.h\"\r\n\r\nvoid reverse(int *arr,int n,int start){\r\n    int m=(n+1)/2+start,i,j,tmp;\r\n    for(i=start;i&lt;m;i++){\r\n        j=n+2*start-i-1;\r\n        tmp=arr[i];\r\n        arr[i]=arr[j];\r\n        arr[j]=tmp;\r\n    }\r\n}\r\n\r\nint main(){\r\n    int n,i,j,k,l,T,z=0,tmp=0;\r\n    scanf(\"%d\",&amp;T);\r\n    int res[1000],kk[10];\r\n    for(k=0;k&lt;T;k++){\r\n        j=0;\r\n        scanf(\"%d\",&amp;n);\r\n        kk[k] = n;\r\n        int nums[n];\r\n        for(i=0;i&lt;n;i++){\r\n            scanf(\"%d\",&amp;nums[i]);\r\n        }\r\n        scanf(\"%d\",&amp;l);\r\n        while(j+l&lt;=n){\r\n            reverse(nums,l,j);\r\n            j+=l;\r\n        }\r\n        reverse(nums,n-j,j);\r\n        for(i=0;i&lt;n;i++){\r\n            res[z+i]=nums[i];\r\n        }\r\n        z+=n;\r\n    }\r\n    for(k=0;k&lt;T;k++){\r\n        for(i=tmp;i&lt;kk[k]+tmp;i++){\r\n            printf(\"%d \",res[i]);\r\n        }\r\n        tmp+=kk[k];\r\n        printf(\"\\n\");\r\n    }\r\n}</pre>\r\n3.霍夫曼编码，这里有参考网上的算法代码，<a href=\"https://blog.csdn.net/wtfmonking/article/details/17150499\">参考地址</a>，也不用造轮子啦。\r\n<pre>#include&lt;stdio.h&gt;\r\n#include&lt;stdlib.h&gt;\r\n\r\ntypedef int ElemType;\r\nstruct BTreeNode\r\n{\r\n    struct BTreeNode* left;\r\n    struct BTreeNode* right;\r\n    ElemType data;\r\n};\r\n\r\nvoid PrintBTree_int(struct BTreeNode* BT)\r\n{\r\n    if (BT != NULL)\r\n    {\r\n        printf(\"%d\", BT-&gt;data);\r\n        if (BT-&gt;left != NULL || BT-&gt;right != NULL)\r\n        {\r\n            printf(\"(\");\r\n            PrintBTree_int(BT-&gt;left);\r\n            if (BT-&gt;right != NULL)\r\n                printf(\",\");\r\n            PrintBTree_int(BT-&gt;right);\r\n            printf(\")\");\r\n        }\r\n    }\r\n}\r\n\r\nstruct BTreeNode* CreateHuffman(ElemType a[], int n)\r\n{\r\n    int i, j;\r\n    struct BTreeNode **b, *q;\r\n    b = malloc(n*sizeof(struct BTreeNode));\r\n    for (i = 0; i &lt; n; i++)\r\n    {\r\n        b[i] = malloc(sizeof(struct BTreeNode));\r\n        b[i]-&gt;data = a[i];\r\n        b[i]-&gt;left = b[i]-&gt;right = NULL;\r\n    }\r\n    for (i = 1; i &lt; n; i++)\r\n    {\r\n        int k1 = -1, k2;\r\n        for (j = 0; j &lt; n; j++)\r\n        {\r\n            if (b[j] != NULL &amp;&amp; k1 == -1)\r\n            {\r\n                k1 = j;\r\n                continue;\r\n            }\r\n            if (b[j] != NULL)\r\n            {\r\n                k2 = j;\r\n                break;\r\n            }\r\n        }\r\n        for (j = k2; j &lt; n; j++)\r\n        {\r\n            if (b[j] != NULL)\r\n            {\r\n                if (b[j]-&gt;data &lt; b[k1]-&gt;data)\r\n                {\r\n                    k2 = k1;\r\n                    k1 = j;\r\n                }\r\n                else if (b[j]-&gt;data &lt; b[k2]-&gt;data)\r\n                    k2 = j;\r\n            }\r\n        }\r\n        q = malloc(sizeof(struct BTreeNode));\r\n        q-&gt;data = b[k1]-&gt;data + b[k2]-&gt;data;\r\n        q-&gt;left = b[k1];\r\n        q-&gt;right = b[k2];\r\n\r\n        b[k1] = q;\r\n        b[k2] = NULL;\r\n    }\r\n    free(b);\r\n    return q;\r\n}\r\n\r\nElemType WeightPathLength(struct BTreeNode* FBT, int len)\r\n{\r\n    if (FBT == NULL)\r\n        return 0;\r\n    else\r\n    {\r\n        if (FBT-&gt;left == NULL &amp;&amp; FBT-&gt;right == NULL)\r\n            return FBT-&gt;data * len;\r\n        else\r\n            return WeightPathLength(FBT-&gt;left,len+1)+WeightPathLength(FBT-&gt;right,len+1);\r\n    }\r\n}\r\n\r\nint res[26][100];\r\n\r\nvoid HuffManCoding(struct BTreeNode* FBT, int len,int n,int *idx)\r\n{\r\n    static int a[10];\r\n    if (FBT != NULL)\r\n    {\r\n        if (FBT-&gt;left == NULL &amp;&amp; FBT-&gt;right == NULL)\r\n        {\r\n            int i;\r\n            res[idx[n-FBT-&gt;data]][0]=len;\r\n            for (i = 0; i &lt; len; i++)\r\n                res[idx[n-FBT-&gt;data]][i+1]=a[i];\r\n        }\r\n        else{\r\n            a[len] = 0;\r\n            HuffManCoding(FBT-&gt;left, len + 1,n,idx);\r\n            a[len] = 1;\r\n            HuffManCoding(FBT-&gt;right, len + 1,n,idx);\r\n        }\r\n    }\r\n}\r\n\r\nconst int* par = 0;\r\n\r\nint compare(const void* p1, const void* p2)\r\n{\r\n    int a = *(int*)p1;\r\n    int b = *(int*)p2;\r\n\r\n    if (par[a] &gt; par[b])\r\n        return 1;\r\n    else if (par[a] == par[b])\r\n        return 0;\r\n    else\r\n        return -1;\r\n}\r\n\r\nvoid sort_index(const int ar[], int index[], int num)\r\n{\r\n    par = ar;\r\n    qsort(index, num, sizeof(int), &amp;compare);\r\n}\r\n\r\n\r\nint main()\r\n{\r\n    int T,k,kl=0,z=0;\r\n    scanf(\"%d\",&amp;T);\r\n    int rrr[10000],lll[T];\r\n    for(k=0;k&lt;T;k++){\r\n        int i,l,n=0,j,tmp,midx=0,mm=0,ll=0;\r\n        int asc[26]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};\r\n        char s[100];\r\n        scanf(\"%s\",s);\r\n        for(l=0;s[l]!='\\0';++l);\r\n        for(i=0;i&lt;l;i++){\r\n            asc[s[i]-65]++;\r\n        }\r\n\r\n        ElemType* a;\r\n        struct BTreeNode* fbt;\r\n        for(i=0;i&lt;26;i++){\r\n            if(asc[i]!=0){\r\n                n++;\r\n            }\r\n        }\r\n        int idxs[n];\r\n        for(j=0;j&lt;n;j++){\r\n            mm=0;\r\n            midx=0;\r\n            for(i=0;i&lt;26;i++){\r\n                if(asc[i]&gt;mm){\r\n                    mm=asc[i];\r\n                    midx=i;\r\n                }\r\n            }\r\n            idxs[j]=midx;\r\n            asc[midx]=0;\r\n        }\r\n\r\n        a = malloc(n*sizeof(ElemType));\r\n        for (i = 0; i &lt; n; i++)\r\n            a[i]=n-i;\r\n        fbt = CreateHuffman(a, n);\r\n        HuffManCoding(fbt, 0, n, idxs);\r\n        for(i=0;i&lt;l;i++){\r\n            tmp = s[i]-65;\r\n            for(j=1;j&lt;res[tmp][0]+1;j++){\r\n                rrr[kl] = res[tmp][j];\r\n                kl++;\r\n                ll++;\r\n            }\r\n        }\r\n        lll[k] = ll;\r\n    }\r\n    kl=0;\r\n    for(k=0;k&lt;T;k++){\r\n        for(z=0;z&lt;lll[k];z++){\r\n            printf(\"%d\",rrr[z+kl]);\r\n        }\r\n        kl+=lll[k];\r\n        printf(\"\\n\");\r\n    }\r\n}</pre>\r\n４.子串出现次数。也就用比较老土的办法一个个比较过去，如果对应上count+1，对不上就再回到原来后一个位置继续比较。\r\n<pre>#include \"stdio.h\"\r\n\r\nint pp(char *s1,char *s2,int l1,int l2){\r\n    int count=0,i,j=0;\r\n    for(i=0;i&lt;l1;i++){\r\n        if(s1[i]==s2[j]){\r\n            j++;\r\n            if(j==l2){\r\n                count++;\r\n                i=i-j+1;\r\n                j=0;\r\n            }\r\n        }else{\r\n            i=i-j;\r\n            j=0;\r\n        }\r\n    }\r\n    return count;\r\n}\r\n\r\nint main(){\r\n    int T,k;\r\n    scanf(\"%d\",&amp;T);\r\n    int res[T];\r\n    for(k=0;k&lt;T;k++){\r\n        int count = 0,i,l1,l2;\r\n        char s1[100],s2[100];\r\n        scanf(\"%s\",&amp;s1);\r\n        scanf(\"%s\",&amp;s2);\r\n        for(l1=0;s1[l1]!='\\0';++l1);\r\n        for(l2=0;s2[l2]!='\\0';++l2);\r\n        res[k] = pp(s1,s2,l1,l2);\r\n    }\r\n    for(k=0;k&lt;T;k++){\r\n        printf(\"%d\\n\",res[k]);\r\n    }\r\n}</pre>\r\n5.吃金币游戏。这个我也没通过。本人思路是先找第一个点，然后遍历和它连接的下一步可行点，然后每个点在递归运行，这个是dfs主要部分。剪枝的话：如果在两步以外又回到走过的点就是形成环舍去，两步以内或没走过可行；同一路同方向不重复走（考虑他下一个递归讲将和之前完全一模一样）。结果：每次求该路径的金币数，取最大值。\r\n<pre>#include \"stdio.h\"\r\n#define max(a,b) ((a)&gt;(b)?(a):(b))\r\n\r\nint x=1;\r\nint line_his[10000]={0};\r\nint line_dir[10000];\r\nint maxV=0;\r\n\r\nint check(int n){\r\n    int i;\r\n    for(i=x-2;i&gt;=x-3;i--){\r\n        if(line_his[i]==n){\r\n            return 1;\r\n        }\r\n    }\r\n    for(i=x-4;i&gt;=0;i--){\r\n        if(line_his[i]==n){\r\n            return 0;\r\n        }\r\n    }\r\n    return 1;\r\n}\r\n\r\nint get_road(int *arr,int r,int n,int *tmp){\r\n    int t=0,i;\r\n    for(i=0;i&lt;r*3;i+=3){\r\n        if(arr[i]==n || arr[i+1]==n){\r\n            tmp[t]=arr[i]==n?arr[i+1]:arr[i];\r\n            t++;\r\n        }\r\n    }\r\n    return t;\r\n}\r\n\r\nint get_value(int *arr,int r,int n1,int n2){\r\n    int i;\r\n    for(i=0;i&lt;r*3;i+=3){\r\n        if(arr[i]==n1 &amp;&amp; arr[i+1]==n2){\r\n            return arr[i+2];\r\n        }\r\n        if(arr[i]==n2 &amp;&amp; arr[i+1]==n1){\r\n            return arr[i+2];\r\n        }\r\n    }\r\n}\r\n\r\nint calc_v(int *arr,int r,int p){\r\n    int tmp = 0,i;\r\n    int his[10000]={};\r\n    for(i=0;i&lt;x-1;i++){\r\n        if(his[line_his[i]*p+line_his[i+1]]!=1){\r\n            tmp+=get_value(arr,r,line_his[i],line_his[i+1]);\r\n        }\r\n        his[line_his[i]*p+line_his[i+1]]=1;\r\n        his[line_his[i]+line_his[i+1]*p]=1;\r\n    }\r\n    return tmp;\r\n}\r\n\r\n/*int check_all(int p){\r\n    int i,j,in=0;\r\n    for(i=0;i&lt;p;i++){\r\n        for(j=0;j&lt;x;j++){\r\n            if(i==line_his[j]){\r\n                in++;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    if(in==p){\r\n        return 1;\r\n    }else{\r\n        return 0;\r\n    }\r\n}*/\r\n\r\nint dfs(int *arr,int r,int p,int n){\r\n    int i,t,tt;\r\n    int tmp[10000];\r\n    //if(check_all(p)){\r\n    tt = calc_v(arr,r,p);\r\n    maxV = max(maxV,tt);\r\n    t = get_road(arr,r,n,tmp);\r\n    for(i=0;i&lt;t;i++){\r\n        if(line_dir[n*p+tmp[i]]==1){\r\n            continue;\r\n        }\r\n        line_his[x]=tmp[i];\r\n        line_dir[n*p+tmp[i]]=1;\r\n        x++;\r\n        if(check(tmp[i]))\r\n            dfs(arr,r,p,tmp[i]);\r\n        line_his[x]=-1;\r\n        line_dir[n*p+tmp[i]]=-1;\r\n        x--;\r\n    }\r\n    return maxV;\r\n}\r\n\r\nint main(){\r\n    int T,k;\r\n    scanf(\"%d\",&amp;T);\r\n    int result[T];\r\n    for(k=0;k&lt;T;k++){\r\n        maxV=0;\r\n        x=1;\r\n        int p,r,i,t;\r\n        scanf(\"%d\",&amp;p);\r\n        scanf(\"%d\",&amp;r);\r\n        int arr[r*3];\r\n        for(i=0;i&lt;r*3;i++){\r\n            scanf(\"%d\",&amp;arr[i]);\r\n        }\r\n        result[k] = dfs(arr,r,p,0);\r\n    }\r\n    for(k=0;k&lt;T;k++){\r\n        printf(\"%d\\n\",result[k]);\r\n    }\r\n}</pre>",
            "post_title": "练手c语言算法一",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e7%bb%83%e6%89%8bc%e8%af%ad%e8%a8%80%e7%ae%97%e6%b3%95",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-5-6 11:55:26",
            "post_modified_gmt": "2018-5-6 03:55:26",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=621",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "622",
            "post_author": "1",
            "post_date": "2018-5-6 10:56:59",
            "post_date_gmt": "2018-5-6 02:56:59",
            "post_content": "",
            "post_title": "练手c语言",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "621-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-5-6 10:56:59",
            "post_modified_gmt": "2018-5-6 02:56:59",
            "post_content_filtered": "",
            "post_parent": "621",
            "guid": "http://ganjiacheng.cn/blog/?p=622",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "623",
            "post_author": "1",
            "post_date": "2018-5-6 10:58:25",
            "post_date_gmt": "2018-5-6 02:58:25",
            "post_content": "",
            "post_title": "初赛",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "%e5%88%9d%e8%b5%9b",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-5-6 10:58:25",
            "post_modified_gmt": "2018-5-6 02:58:25",
            "post_content_filtered": "",
            "post_parent": "621",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2018/05/初赛.xlsx",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
            "comment_count": "0"
        },
        {
            "ID": "624",
            "post_author": "1",
            "post_date": "2018-5-6 11:00:23",
            "post_date_gmt": "2018-5-6 03:00:23",
            "post_content": "大华2018年软件挑战赛初赛题\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/05/初赛.xlsx\">初赛</a>　十道题，题目此在，主要讲讲自己的思路。\r\n\r\n１.\r\n<pre></pre>",
            "post_title": "练手c语言",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "621-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-5-6 11:00:23",
            "post_modified_gmt": "2018-5-6 03:00:23",
            "post_content_filtered": "",
            "post_parent": "621",
            "guid": "http://ganjiacheng.cn/blog/?p=624",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "625",
            "post_author": "1",
            "post_date": "2018-5-6 11:30:41",
            "post_date_gmt": "2018-5-6 03:30:41",
            "post_content": "大华2018年软件挑战赛初赛题\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/05/初赛.xlsx\">初赛</a>　<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/05/%E5%88%9D%E8%B5%9B.xlsx\">十道题，题目此在</a>，主要讲讲自己的思路，这里是前五题。<!--more-->\r\n\r\n１.不相邻最大子序和。不相邻所以奇偶分开写状态转移，然后取两者较大值。类似于leetcode中house robber。\r\n<pre>#include \"stdio.h\"\r\n#define max(a,b) ((a)&gt;(b)?(a):(b))\r\n\r\nint calc(int *nums,int n){\r\n    int a=0,b=0,i;\r\n    for(i=0;i&lt;n;i++){\r\n        if(i%2 == 0){\r\n            a = max(b,a+nums[i]);\r\n        }else{\r\n            b = max(a,b+nums[i]);\r\n        }\r\n    }\r\n    return max(a,b);\r\n}\r\n\r\nint main(){\r\n    int T,i,n,j;\r\n    scanf(\"%d\",&amp;T);\r\n    int res[T];\r\n    for(i=0;i&lt;T;i++){\r\n        scanf(\"%d\",&amp;n);\r\n        int nums[n];\r\n        for(j=0;j&lt;n;j++){\r\n            scanf(\"%d\",&amp;nums[j]);\r\n        }\r\n        res[i] = calc(nums,n);\r\n    }\r\n    for(i=0;i&lt;T;i++){\r\n        printf(\"%d\\n\",res[i]);\r\n    }\r\n}</pre>\r\n2.链表部分翻转。我还是用数组实现的，翻转就是遍历前一半的长度，和后一半换一下。然后在数组分割的每部分调用这个翻转完成。\r\n<pre>#include \"stdio.h\"\r\n\r\nvoid reverse(int *arr,int n,int start){\r\n    int m=(n+1)/2+start,i,j,tmp;\r\n    for(i=start;i&lt;m;i++){\r\n        j=n+2*start-i-1;\r\n        tmp=arr[i];\r\n        arr[i]=arr[j];\r\n        arr[j]=tmp;\r\n    }\r\n}\r\n\r\nint main(){\r\n    int n,i,j,k,l,T,z=0,tmp=0;\r\n    scanf(\"%d\",&amp;T);\r\n    int res[1000],kk[10];\r\n    for(k=0;k&lt;T;k++){\r\n        j=0;\r\n        scanf(\"%d\",&amp;n);\r\n        kk[k] = n;\r\n        int nums[n];\r\n        for(i=0;i&lt;n;i++){\r\n            scanf(\"%d\",&amp;nums[i]);\r\n        }\r\n        scanf(\"%d\",&amp;l);\r\n        while(j+l&lt;=n){\r\n            reverse(nums,l,j);\r\n            j+=l;\r\n        }\r\n        reverse(nums,n-j,j);\r\n        for(i=0;i&lt;n;i++){\r\n            res[z+i]=nums[i];\r\n        }\r\n        z+=n;\r\n    }\r\n    for(k=0;k&lt;T;k++){\r\n        for(i=tmp;i&lt;kk[k]+tmp;i++){\r\n            printf(\"%d \",res[i]);\r\n        }\r\n        tmp+=kk[k];\r\n        printf(\"\\n\");\r\n    }\r\n}</pre>\r\n3.霍夫曼编码，这里有参考网上的算法代码，<a href=\"https://blog.csdn.net/wtfmonking/article/details/17150499\">参考地址</a>，也不用造轮子啦。\r\n<pre>#include&lt;stdio.h&gt;\r\n#include&lt;stdlib.h&gt;\r\n\r\ntypedef int ElemType;\r\nstruct BTreeNode\r\n{\r\n    struct BTreeNode* left;\r\n    struct BTreeNode* right;\r\n    ElemType data;\r\n};\r\n\r\nvoid PrintBTree_int(struct BTreeNode* BT)\r\n{\r\n    if (BT != NULL)\r\n    {\r\n        printf(\"%d\", BT-&gt;data);\r\n        if (BT-&gt;left != NULL || BT-&gt;right != NULL)\r\n        {\r\n            printf(\"(\");\r\n            PrintBTree_int(BT-&gt;left);\r\n            if (BT-&gt;right != NULL)\r\n                printf(\",\");\r\n            PrintBTree_int(BT-&gt;right);\r\n            printf(\")\");\r\n        }\r\n    }\r\n}\r\n\r\nstruct BTreeNode* CreateHuffman(ElemType a[], int n)\r\n{\r\n    int i, j;\r\n    struct BTreeNode **b, *q;\r\n    b = malloc(n*sizeof(struct BTreeNode));\r\n    for (i = 0; i &lt; n; i++)\r\n    {\r\n        b[i] = malloc(sizeof(struct BTreeNode));\r\n        b[i]-&gt;data = a[i];\r\n        b[i]-&gt;left = b[i]-&gt;right = NULL;\r\n    }\r\n    for (i = 1; i &lt; n; i++)\r\n    {\r\n        int k1 = -1, k2;\r\n        for (j = 0; j &lt; n; j++)\r\n        {\r\n            if (b[j] != NULL &amp;&amp; k1 == -1)\r\n            {\r\n                k1 = j;\r\n                continue;\r\n            }\r\n            if (b[j] != NULL)\r\n            {\r\n                k2 = j;\r\n                break;\r\n            }\r\n        }\r\n        for (j = k2; j &lt; n; j++)\r\n        {\r\n            if (b[j] != NULL)\r\n            {\r\n                if (b[j]-&gt;data &lt; b[k1]-&gt;data)\r\n                {\r\n                    k2 = k1;\r\n                    k1 = j;\r\n                }\r\n                else if (b[j]-&gt;data &lt; b[k2]-&gt;data)\r\n                    k2 = j;\r\n            }\r\n        }\r\n        q = malloc(sizeof(struct BTreeNode));\r\n        q-&gt;data = b[k1]-&gt;data + b[k2]-&gt;data;\r\n        q-&gt;left = b[k1];\r\n        q-&gt;right = b[k2];\r\n\r\n        b[k1] = q;\r\n        b[k2] = NULL;\r\n    }\r\n    free(b);\r\n    return q;\r\n}\r\n\r\nElemType WeightPathLength(struct BTreeNode* FBT, int len)\r\n{\r\n    if (FBT == NULL)\r\n        return 0;\r\n    else\r\n    {\r\n        if (FBT-&gt;left == NULL &amp;&amp; FBT-&gt;right == NULL)\r\n            return FBT-&gt;data * len;\r\n        else\r\n            return WeightPathLength(FBT-&gt;left,len+1)+WeightPathLength(FBT-&gt;right,len+1);\r\n    }\r\n}\r\n\r\nint res[26][100];\r\n\r\nvoid HuffManCoding(struct BTreeNode* FBT, int len,int n,int *idx)\r\n{\r\n    static int a[10];\r\n    if (FBT != NULL)\r\n    {\r\n        if (FBT-&gt;left == NULL &amp;&amp; FBT-&gt;right == NULL)\r\n        {\r\n            int i;\r\n            res[idx[n-FBT-&gt;data]][0]=len;\r\n            for (i = 0; i &lt; len; i++)\r\n                res[idx[n-FBT-&gt;data]][i+1]=a[i];\r\n        }\r\n        else{\r\n            a[len] = 0;\r\n            HuffManCoding(FBT-&gt;left, len + 1,n,idx);\r\n            a[len] = 1;\r\n            HuffManCoding(FBT-&gt;right, len + 1,n,idx);\r\n        }\r\n    }\r\n}\r\n\r\nconst int* par = 0;\r\n\r\nint compare(const void* p1, const void* p2)\r\n{\r\n    int a = *(int*)p1;\r\n    int b = *(int*)p2;\r\n\r\n    if (par[a] &gt; par[b])\r\n        return 1;\r\n    else if (par[a] == par[b])\r\n        return 0;\r\n    else\r\n        return -1;\r\n}\r\n\r\nvoid sort_index(const int ar[], int index[], int num)\r\n{\r\n    par = ar;\r\n    qsort(index, num, sizeof(int), &amp;compare);\r\n}\r\n\r\n\r\nint main()\r\n{\r\n    int T,k,kl=0,z=0;\r\n    scanf(\"%d\",&amp;T);\r\n    int rrr[10000],lll[T];\r\n    for(k=0;k&lt;T;k++){\r\n        int i,l,n=0,j,tmp,midx=0,mm=0,ll=0;\r\n        int asc[26]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};\r\n        char s[100];\r\n        scanf(\"%s\",s);\r\n        for(l=0;s[l]!='\\0';++l);\r\n        for(i=0;i&lt;l;i++){\r\n            asc[s[i]-65]++;\r\n        }\r\n\r\n        ElemType* a;\r\n        struct BTreeNode* fbt;\r\n        for(i=0;i&lt;26;i++){\r\n            if(asc[i]!=0){\r\n                n++;\r\n            }\r\n        }\r\n        int idxs[n];\r\n        for(j=0;j&lt;n;j++){\r\n            mm=0;\r\n            midx=0;\r\n            for(i=0;i&lt;26;i++){\r\n                if(asc[i]&gt;mm){\r\n                    mm=asc[i];\r\n                    midx=i;\r\n                }\r\n            }\r\n            idxs[j]=midx;\r\n            asc[midx]=0;\r\n        }\r\n\r\n        a = malloc(n*sizeof(ElemType));\r\n        for (i = 0; i &lt; n; i++)\r\n            a[i]=n-i;\r\n        fbt = CreateHuffman(a, n);\r\n        HuffManCoding(fbt, 0, n, idxs);\r\n        for(i=0;i&lt;l;i++){\r\n            tmp = s[i]-65;\r\n            for(j=1;j&lt;res[tmp][0]+1;j++){\r\n                rrr[kl] = res[tmp][j];\r\n                kl++;\r\n                ll++;\r\n            }\r\n        }\r\n        lll[k] = ll;\r\n    }\r\n    kl=0;\r\n    for(k=0;k&lt;T;k++){\r\n        for(z=0;z&lt;lll[k];z++){\r\n            printf(\"%d\",rrr[z+kl]);\r\n        }\r\n        kl+=lll[k];\r\n        printf(\"\\n\");\r\n    }\r\n}</pre>\r\n４.子串出现次数。也就用比较老土的办法一个个比较过去，如果对应上count+1，对不上就再回到原来后一个位置继续比较。\r\n<pre>#include \"stdio.h\"\r\n\r\nint pp(char *s1,char *s2,int l1,int l2){\r\n    int count=0,i,j=0;\r\n    for(i=0;i&lt;l1;i++){\r\n        if(s1[i]==s2[j]){\r\n            j++;\r\n            if(j==l2){\r\n                count++;\r\n                i=i-j+1;\r\n                j=0;\r\n            }\r\n        }else{\r\n            i=i-j;\r\n            j=0;\r\n        }\r\n    }\r\n    return count;\r\n}\r\n\r\nint main(){\r\n    int T,k;\r\n    scanf(\"%d\",&amp;T);\r\n    int res[T];\r\n    for(k=0;k&lt;T;k++){\r\n        int count = 0,i,l1,l2;\r\n        char s1[100],s2[100];\r\n        scanf(\"%s\",&amp;s1);\r\n        scanf(\"%s\",&amp;s2);\r\n        for(l1=0;s1[l1]!='\\0';++l1);\r\n        for(l2=0;s2[l2]!='\\0';++l2);\r\n        res[k] = pp(s1,s2,l1,l2);\r\n    }\r\n    for(k=0;k&lt;T;k++){\r\n        printf(\"%d\\n\",res[k]);\r\n    }\r\n}</pre>\r\n5.吃金币游戏。这个我也没通过。本人思路是先找第一个点，然后遍历和它连接的下一步可行点，然后每个点在递归运行，这个是dfs主要部分。剪枝的话：如果在两步以外又回到走过的点就是形成环舍去，两步以内或没走过可行；同一路同方向不重复走（考虑他下一个递归讲将和之前完全一模一样）。结果：每次求该路径的金币数，取最大值。\r\n<pre>#include \"stdio.h\"\r\n#define max(a,b) ((a)&gt;(b)?(a):(b))\r\n\r\nint x=1;\r\nint line_his[10000]={0};\r\nint line_dir[10000];\r\nint maxV=0;\r\n\r\nint check(int n){\r\n    int i;\r\n    for(i=x-2;i&gt;=x-3;i--){\r\n        if(line_his[i]==n){\r\n            return 1;\r\n        }\r\n    }\r\n    for(i=x-4;i&gt;=0;i--){\r\n        if(line_his[i]==n){\r\n            return 0;\r\n        }\r\n    }\r\n    return 1;\r\n}\r\n\r\nint get_road(int *arr,int r,int n,int *tmp){\r\n    int t=0,i;\r\n    for(i=0;i&lt;r*3;i+=3){\r\n        if(arr[i]==n || arr[i+1]==n){\r\n            tmp[t]=arr[i]==n?arr[i+1]:arr[i];\r\n            t++;\r\n        }\r\n    }\r\n    return t;\r\n}\r\n\r\nint get_value(int *arr,int r,int n1,int n2){\r\n    int i;\r\n    for(i=0;i&lt;r*3;i+=3){\r\n        if(arr[i]==n1 &amp;&amp; arr[i+1]==n2){\r\n            return arr[i+2];\r\n        }\r\n        if(arr[i]==n2 &amp;&amp; arr[i+1]==n1){\r\n            return arr[i+2];\r\n        }\r\n    }\r\n}\r\n\r\nint calc_v(int *arr,int r,int p){\r\n    int tmp = 0,i;\r\n    int his[10000]={};\r\n    for(i=0;i&lt;x-1;i++){\r\n        if(his[line_his[i]*p+line_his[i+1]]!=1){\r\n            tmp+=get_value(arr,r,line_his[i],line_his[i+1]);\r\n        }\r\n        his[line_his[i]*p+line_his[i+1]]=1;\r\n        his[line_his[i]+line_his[i+1]*p]=1;\r\n    }\r\n    return tmp;\r\n}\r\n\r\n/*int check_all(int p){\r\n    int i,j,in=0;\r\n    for(i=0;i&lt;p;i++){\r\n        for(j=0;j&lt;x;j++){\r\n            if(i==line_his[j]){\r\n                in++;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    if(in==p){\r\n        return 1;\r\n    }else{\r\n        return 0;\r\n    }\r\n}*/\r\n\r\nint dfs(int *arr,int r,int p,int n){\r\n    int i,t,tt;\r\n    int tmp[10000];\r\n    //if(check_all(p)){\r\n    tt = calc_v(arr,r,p);\r\n    maxV = max(maxV,tt);\r\n    t = get_road(arr,r,n,tmp);\r\n    for(i=0;i&lt;t;i++){\r\n        if(line_dir[n*p+tmp[i]]==1){\r\n            continue;\r\n        }\r\n        line_his[x]=tmp[i];\r\n        line_dir[n*p+tmp[i]]=1;\r\n        x++;\r\n        if(check(tmp[i]))\r\n            dfs(arr,r,p,tmp[i]);\r\n        line_his[x]=-1;\r\n        line_dir[n*p+tmp[i]]=-1;\r\n        x--;\r\n    }\r\n    return maxV;\r\n}\r\n\r\nint main(){\r\n    int T,k;\r\n    scanf(\"%d\",&amp;T);\r\n    int result[T];\r\n    for(k=0;k&lt;T;k++){\r\n        maxV=0;\r\n        x=1;\r\n        int p,r,i,t;\r\n        scanf(\"%d\",&amp;p);\r\n        scanf(\"%d\",&amp;r);\r\n        int arr[r*3];\r\n        for(i=0;i&lt;r*3;i++){\r\n            scanf(\"%d\",&amp;arr[i]);\r\n        }\r\n        result[k] = dfs(arr,r,p,0);\r\n    }\r\n    for(k=0;k&lt;T;k++){\r\n        printf(\"%d\\n\",result[k]);\r\n    }\r\n}</pre>",
            "post_title": "练手c语言算法",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "621-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-5-6 11:30:41",
            "post_modified_gmt": "2018-5-6 03:30:41",
            "post_content_filtered": "",
            "post_parent": "621",
            "guid": "http://ganjiacheng.cn/blog/?p=625",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "626",
            "post_author": "1",
            "post_date": "2018-5-6 11:53:42",
            "post_date_gmt": "2018-5-6 03:53:42",
            "post_content": "大华2018软件挑战赛，这里是后五题。<!--more-->\r\n\r\n6.视频编解码。16进制的数存储，加些简单的判断（开头判断，结尾判断，中间舍去部分判断）。\r\n<pre>#include \"stdio.h\"\r\n\r\nint main(){\r\n    int T,k,x=0,y=0,tmp=0;\r\n    scanf(\"%d\",&amp;T);\r\n    int res[10000],ns[T];\r\n    for(k=0;k&lt;T;k++){\r\n        int n,i,start=0,t=0;\r\n        scanf(\"%d\",&amp;n);\r\n        int nums[n];\r\n        for(i=0;i&lt;n;i++){\r\n            scanf(\"%x\",&amp;nums[i]);\r\n        }\r\n        for(i=0;i&lt;n-3;i++){\r\n            if(start==5 &amp;&amp; nums[i-2]==0 &amp;&amp; nums[i-1]==0 &amp;&amp; nums[i]==03 &amp;&amp; nums[i+1]==0){\r\n                continue;\r\n            }\r\n            if(nums[i]==0 &amp;&amp; nums[i+1]==0 &amp;&amp; nums[i+2]==01 &amp;&amp; start==0){\r\n                start=1;\r\n            }\r\n            if(nums[i]==0 &amp;&amp; nums[i+1]==0 &amp;&amp; nums[i+2]==01 &amp;&amp; start==5){\r\n                start=0;\r\n            }\r\n            if(start&gt;=1 &amp;&amp; start&lt;=4){\r\n                start++;\r\n            }\r\n            if(start==5){\r\n                res[x]=nums[i];\r\n                x++;\r\n                t++;\r\n            }\r\n        }\r\n        ns[k] = t;\r\n    }\r\n    for(k=0;k&lt;T;k++){\r\n        for(y=0;y&lt;ns[k];y++){\r\n            printf(\"%x \",res[y+tmp]);\r\n        }\r\n        tmp += ns[k];\r\n        printf(\"\\n\");\r\n    }\r\n}</pre>\r\n7.不重复最长子串长度。也是状态转移，一个变量指在子串左边，一个在右边移动。另外用一个数组存位置和判断值是否存在。\r\n<pre>#include \"stdio.h\"\r\n#define max(a,b) ((a)&gt;(b)?(a):(b))\r\n\r\nint main(){\r\n    int T,k;\r\n    scanf(\"%d\",&amp;T);\r\n    int res[T];\r\n    for(k=0;k&lt;T;k++){\r\n        int l1,i,tmp,ml=0,left=0,m=0;\r\n        char s[100],asc[26];\r\n        scanf(\"%s\",&amp;s);\r\n        for(l1=0;s[l1]!='\\0';++l1);\r\n        for(i=0;i&lt;26;i++){\r\n            asc[i]=-1;\r\n        }\r\n        for(i=0;i&lt;l1;i++){\r\n            tmp = s[i]-97;\r\n            if(asc[tmp]==-1 || asc[tmp]&lt;left){\r\n                asc[tmp]=i;\r\n            }else{\r\n                left=asc[tmp]+1;\r\n                asc[tmp]=i;\r\n            }\r\n            m = max(i-left+1,m);\r\n        }\r\n        res[k]=m;\r\n    }\r\n    for(k=0;k&lt;T;k++){\r\n        printf(\"%d\\n\",res[k]);\r\n    }\r\n}</pre>\r\n8.二进制位数和等于十进制位数和。这边就暴力的每个算过来判断是不是这种数。\r\n<pre>#include \"stdio.h\"\r\n\r\nint judge(n){\r\n    int b=n,tmp=0;\r\n    while(b!=0)\r\n    {\r\n        tmp+=b%2;\r\n        b=b/2;\r\n    }\r\n    b=n;\r\n    while(b!=0){\r\n        tmp-=b%10;\r\n        b=b/10;\r\n    }\r\n    if(tmp==0){\r\n        return 1;\r\n    }else{\r\n        return 0;\r\n    }\r\n}\r\n\r\nint main(){\r\n    int T,k;\r\n    scanf(\"%d\",&amp;T);\r\n    int result[T];\r\n    for(k=0;k&lt;T;k++){\r\n        int n,i,res=0;\r\n        scanf(\"%d\",&amp;n);\r\n        for(i=1;i&lt;=n;i++){\r\n            res+=judge(i);\r\n        }\r\n        result[k]=res;\r\n    }\r\n    for(k=0;k&lt;T;k++){\r\n        printf(\"%d\\n\",result[k]);\r\n    }\r\n}</pre>\r\n9.买卖交易。这个和leetcode上有个讲股票买卖的差不多，就每次后面比前面大的话就卖出买入就可以。\r\n<pre>#include \"stdio.h\"\r\n\r\nint calc(int *nums,int n){\r\n    int i,res=0;\r\n    for(i=0;i&lt;n-1;i++){\r\n        res += nums[i+1]&gt;nums[i]?nums[i+1]-nums[i]:0;\r\n    }\r\n    return res;\r\n}\r\n\r\nint main(){\r\n    int T,k,n,i;\r\n    scanf(\"%d\",&amp;T);\r\n    int res[T];\r\n    scanf(\"%d\",&amp;n);\r\n    int nums[n];\r\n    for(k=0;k&lt;T;k++){\r\n        for(i=0;i&lt;n;i++){\r\n            scanf(\"%d\",&amp;nums[i]);\r\n        }\r\n        res[k] = calc(nums,n);\r\n    }\r\n    for(k=0;k&lt;T;k++){\r\n        printf(\"%d\\n\",res[k]);\r\n    }\r\n}</pre>\r\n10.二叉树右视图，主要还是用先序构建二叉树，右视图的话就是右子树优先遍历即可。\r\n<pre>#include &lt;stdio.h&gt;\r\n#include &lt;stdlib.h&gt;\r\n#include &lt;malloc.h&gt;\r\n\r\ntypedef int   ElemType;\r\ntypedef struct BiTNode{\r\n    ElemType   data;\r\n    struct BiTNode*lChild, *rChild;\r\n}BiTNode, *BiTree;\r\n\r\nint i=0,maxdepth=0,al=0;\r\nint res[100],nums[100];\r\n\r\nint CreateBiTree(BiTree *T,char *s)\r\n{\r\n    ElemType ch;\r\n    ch = s[i];\r\n    i++;\r\n\r\n    if(ch=='#'){\r\n        *T = NULL;\r\n    }else{\r\n        *T = (BiTree)malloc(sizeof(BiTNode));\r\n        if (!(*T)) exit(-1);\r\n\r\n        (*T)-&gt;data = ch-'0';\r\n        CreateBiTree(&amp;(*T)-&gt;lChild,s);\r\n        CreateBiTree(&amp;(*T)-&gt;rChild,s);\r\n    }\r\n    return 1;\r\n}\r\n\r\nvoid calc(BiTree T, int depth){\r\n    if(depth&gt;maxdepth){\r\n        res[maxdepth+al] = T-&gt;data;\r\n        maxdepth = depth;\r\n    }\r\n    if(T-&gt;rChild!=NULL) calc(T-&gt;rChild, depth+1);\r\n    if(T-&gt;lChild!=NULL) calc(T-&gt;lChild, depth+1);\r\n}\r\n\r\nint main(void)\r\n{\r\n    int t,k,all=0;\r\n    scanf(\"%d\",&amp;t);\r\n    BiTree T;\r\n    for(k=0;k&lt;t;k++){\r\n        i=0;\r\n        T = NULL;\r\n        maxdepth=0;\r\n        char s[1000];\r\n        scanf(\"%s\",&amp;s);\r\n        CreateBiTree(&amp;T,s);\r\n        calc(T,1);\r\n        al+=maxdepth;\r\n        nums[k]=maxdepth;\r\n    }\r\n    for(i=0;i&lt;t;i++){\r\n        for(k=0;k&lt;nums[i];k++){\r\n            printf(\"%d\",res[k+all]);\r\n        }\r\n        all+=nums[i];\r\n        printf(\"\\n\");\r\n    }\r\n}</pre>",
            "post_title": "练手c语言算法二",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e7%bb%83%e6%89%8bc%e8%af%ad%e8%a8%80%e7%ae%97%e6%b3%95%e4%ba%8c",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-5-6 11:53:42",
            "post_modified_gmt": "2018-5-6 03:53:42",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=626",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "627",
            "post_author": "1",
            "post_date": "2018-5-6 11:51:05",
            "post_date_gmt": "2018-5-6 03:51:05",
            "post_content": "大华2018软件挑战赛，这里是后五题。<!--more-->\r\n\r\n6.视频编解码。16进制的数存储，加些简单的判断（开头判断，结尾判断，中间舍去部分判断）。\r\n<pre>#include \"stdio.h\"\r\n\r\nint main(){\r\n    int T,k,x=0,y=0,tmp=0;\r\n    scanf(\"%d\",&amp;T);\r\n    int res[10000],ns[T];\r\n    for(k=0;k&lt;T;k++){\r\n        int n,i,start=0,t=0;\r\n        scanf(\"%d\",&amp;n);\r\n        int nums[n];\r\n        for(i=0;i&lt;n;i++){\r\n            scanf(\"%x\",&amp;nums[i]);\r\n        }\r\n        for(i=0;i&lt;n-3;i++){\r\n            if(start==5 &amp;&amp; nums[i-2]==0 &amp;&amp; nums[i-1]==0 &amp;&amp; nums[i]==03 &amp;&amp; nums[i+1]==0){\r\n                continue;\r\n            }\r\n            if(nums[i]==0 &amp;&amp; nums[i+1]==0 &amp;&amp; nums[i+2]==01 &amp;&amp; start==0){\r\n                start=1;\r\n            }\r\n            if(nums[i]==0 &amp;&amp; nums[i+1]==0 &amp;&amp; nums[i+2]==01 &amp;&amp; start==5){\r\n                start=0;\r\n            }\r\n            if(start&gt;=1 &amp;&amp; start&lt;=4){\r\n                start++;\r\n            }\r\n            if(start==5){\r\n                res[x]=nums[i];\r\n                x++;\r\n                t++;\r\n            }\r\n        }\r\n        ns[k] = t;\r\n    }\r\n    for(k=0;k&lt;T;k++){\r\n        for(y=0;y&lt;ns[k];y++){\r\n            printf(\"%x \",res[y+tmp]);\r\n        }\r\n        tmp += ns[k];\r\n        printf(\"\\n\");\r\n    }\r\n}</pre>\r\n7.不重复最长子串长度。也是状态转移，一个变量指在子串左边，一个在右边移动。另外用一个数组存位置和判断值是否存在。\r\n<pre>#include \"stdio.h\"\r\n#define max(a,b) ((a)&gt;(b)?(a):(b))\r\n\r\nint main(){\r\n    int T,k;\r\n    scanf(\"%d\",&amp;T);\r\n    int res[T];\r\n    for(k=0;k&lt;T;k++){\r\n        int l1,i,tmp,ml=0,left=0,m=0;\r\n        char s[100],asc[26];\r\n        scanf(\"%s\",&amp;s);\r\n        for(l1=0;s[l1]!='\\0';++l1);\r\n        for(i=0;i&lt;26;i++){\r\n            asc[i]=-1;\r\n        }\r\n        for(i=0;i&lt;l1;i++){\r\n            tmp = s[i]-97;\r\n            if(asc[tmp]==-1 || asc[tmp]&lt;left){\r\n                asc[tmp]=i;\r\n            }else{\r\n                left=asc[tmp]+1;\r\n                asc[tmp]=i;\r\n            }\r\n            m = max(i-left+1,m);\r\n        }\r\n        res[k]=m;\r\n    }\r\n    for(k=0;k&lt;T;k++){\r\n        printf(\"%d\\n\",res[k]);\r\n    }\r\n}</pre>\r\n8.二进制位数和等于十进制位数和。这边就暴力的每个算过来判断是不是这种数。\r\n<pre>#include \"stdio.h\"\r\n\r\nint judge(n){\r\n    int b=n,tmp=0;\r\n    while(b!=0)\r\n    {\r\n        tmp+=b%2;\r\n        b=b/2;\r\n    }\r\n    b=n;\r\n    while(b!=0){\r\n        tmp-=b%10;\r\n        b=b/10;\r\n    }\r\n    if(tmp==0){\r\n        return 1;\r\n    }else{\r\n        return 0;\r\n    }\r\n}\r\n\r\nint main(){\r\n    int T,k;\r\n    scanf(\"%d\",&amp;T);\r\n    int result[T];\r\n    for(k=0;k&lt;T;k++){\r\n        int n,i,res=0;\r\n        scanf(\"%d\",&amp;n);\r\n        for(i=1;i&lt;=n;i++){\r\n            res+=judge(i);\r\n        }\r\n        result[k]=res;\r\n    }\r\n    for(k=0;k&lt;T;k++){\r\n        printf(\"%d\\n\",result[k]);\r\n    }\r\n}</pre>\r\n9.买卖交易。这个和leetcode上有个讲股票买卖的差不多，就每次后面比前面大的话就卖出买入就可以。\r\n<pre>#include \"stdio.h\"\r\n\r\nint calc(int *nums,int n){\r\n    int i,res=0;\r\n    for(i=0;i&lt;n-1;i++){\r\n        res += nums[i+1]&gt;nums[i]?nums[i+1]-nums[i]:0;\r\n    }\r\n    return res;\r\n}\r\n\r\nint main(){\r\n    int T,k,n,i;\r\n    scanf(\"%d\",&amp;T);\r\n    int res[T];\r\n    scanf(\"%d\",&amp;n);\r\n    int nums[n];\r\n    for(k=0;k&lt;T;k++){\r\n        for(i=0;i&lt;n;i++){\r\n            scanf(\"%d\",&amp;nums[i]);\r\n        }\r\n        res[k] = calc(nums,n);\r\n    }\r\n    for(k=0;k&lt;T;k++){\r\n        printf(\"%d\\n\",res[k]);\r\n    }\r\n}</pre>\r\n10.二叉树右视图，主要还是用先序构建二叉树，右视图的话就是右子树优先遍历即可。\r\n<pre>#include &lt;stdio.h&gt;\r\n#include &lt;stdlib.h&gt;\r\n#include &lt;malloc.h&gt;\r\n\r\ntypedef int   ElemType;\r\ntypedef struct BiTNode{\r\n    ElemType   data;\r\n    struct BiTNode*lChild, *rChild;\r\n}BiTNode, *BiTree;\r\n\r\nint i=0,maxdepth=0,al=0;\r\nint res[100],nums[100];\r\n\r\nint CreateBiTree(BiTree *T,char *s)\r\n{\r\n    ElemType ch;\r\n    ch = s[i];\r\n    i++;\r\n\r\n    if(ch=='#'){\r\n        *T = NULL;\r\n    }else{\r\n        *T = (BiTree)malloc(sizeof(BiTNode));\r\n        if (!(*T)) exit(-1);\r\n\r\n        (*T)-&gt;data = ch-'0';\r\n        CreateBiTree(&amp;(*T)-&gt;lChild,s);\r\n        CreateBiTree(&amp;(*T)-&gt;rChild,s);\r\n    }\r\n    return 1;\r\n}\r\n\r\nvoid calc(BiTree T, int depth){\r\n    if(depth&gt;maxdepth){\r\n        res[maxdepth+al] = T-&gt;data;\r\n        maxdepth = depth;\r\n    }\r\n    if(T-&gt;rChild!=NULL) calc(T-&gt;rChild, depth+1);\r\n    if(T-&gt;lChild!=NULL) calc(T-&gt;lChild, depth+1);\r\n}\r\n\r\nint main(void)\r\n{\r\n    int t,k,all=0;\r\n    scanf(\"%d\",&amp;t);\r\n    BiTree T;\r\n    for(k=0;k&lt;t;k++){\r\n        i=0;\r\n        T = NULL;\r\n        maxdepth=0;\r\n        char s[1000];\r\n        scanf(\"%s\",&amp;s);\r\n        CreateBiTree(&amp;T,s);\r\n        calc(T,1);\r\n        al+=maxdepth;\r\n        nums[k]=maxdepth;\r\n    }\r\n    for(i=0;i&lt;t;i++){\r\n        for(k=0;k&lt;nums[i];k++){\r\n            printf(\"%d\",res[k+all]);\r\n        }\r\n        all+=nums[i];\r\n        printf(\"\\n\");\r\n    }\r\n}</pre>",
            "post_title": "练手c语言算法二",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "626-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-5-6 11:51:05",
            "post_modified_gmt": "2018-5-6 03:51:05",
            "post_content_filtered": "",
            "post_parent": "626",
            "guid": "http://ganjiacheng.cn/blog/?p=627",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "628",
            "post_author": "1",
            "post_date": "2018-5-6 11:54:25",
            "post_date_gmt": "2018-5-6 03:54:25",
            "post_content": "大华2018年软件挑战赛初赛题\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/05/初赛.xlsx\">初赛</a>　<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/05/%E5%88%9D%E8%B5%9B.xlsx\">十道题，题目此在</a>，主要讲讲自己的思路，这里是前五题。<!--more-->\r\n\r\n１.不相邻最大子序和。不相邻所以奇偶分开写状态转移，然后取两者较大值。类似于leetcode中house robber。\r\n<pre>#include \"stdio.h\"\r\n#define max(a,b) ((a)&gt;(b)?(a):(b))\r\n\r\nint calc(int *nums,int n){\r\n    int a=0,b=0,i;\r\n    for(i=0;i&lt;n;i++){\r\n        if(i%2 == 0){\r\n            a = max(b,a+nums[i]);\r\n        }else{\r\n            b = max(a,b+nums[i]);\r\n        }\r\n    }\r\n    return max(a,b);\r\n}\r\n\r\nint main(){\r\n    int T,i,n,j;\r\n    scanf(\"%d\",&amp;T);\r\n    int res[T];\r\n    for(i=0;i&lt;T;i++){\r\n        scanf(\"%d\",&amp;n);\r\n        int nums[n];\r\n        for(j=0;j&lt;n;j++){\r\n            scanf(\"%d\",&amp;nums[j]);\r\n        }\r\n        res[i] = calc(nums,n);\r\n    }\r\n    for(i=0;i&lt;T;i++){\r\n        printf(\"%d\\n\",res[i]);\r\n    }\r\n}</pre>\r\n2.链表部分翻转。我还是用数组实现的，翻转就是遍历前一半的长度，和后一半换一下。然后在数组分割的每部分调用这个翻转完成。\r\n<pre>#include \"stdio.h\"\r\n\r\nvoid reverse(int *arr,int n,int start){\r\n    int m=(n+1)/2+start,i,j,tmp;\r\n    for(i=start;i&lt;m;i++){\r\n        j=n+2*start-i-1;\r\n        tmp=arr[i];\r\n        arr[i]=arr[j];\r\n        arr[j]=tmp;\r\n    }\r\n}\r\n\r\nint main(){\r\n    int n,i,j,k,l,T,z=0,tmp=0;\r\n    scanf(\"%d\",&amp;T);\r\n    int res[1000],kk[10];\r\n    for(k=0;k&lt;T;k++){\r\n        j=0;\r\n        scanf(\"%d\",&amp;n);\r\n        kk[k] = n;\r\n        int nums[n];\r\n        for(i=0;i&lt;n;i++){\r\n            scanf(\"%d\",&amp;nums[i]);\r\n        }\r\n        scanf(\"%d\",&amp;l);\r\n        while(j+l&lt;=n){\r\n            reverse(nums,l,j);\r\n            j+=l;\r\n        }\r\n        reverse(nums,n-j,j);\r\n        for(i=0;i&lt;n;i++){\r\n            res[z+i]=nums[i];\r\n        }\r\n        z+=n;\r\n    }\r\n    for(k=0;k&lt;T;k++){\r\n        for(i=tmp;i&lt;kk[k]+tmp;i++){\r\n            printf(\"%d \",res[i]);\r\n        }\r\n        tmp+=kk[k];\r\n        printf(\"\\n\");\r\n    }\r\n}</pre>\r\n3.霍夫曼编码，这里有参考网上的算法代码，<a href=\"https://blog.csdn.net/wtfmonking/article/details/17150499\">参考地址</a>，也不用造轮子啦。\r\n<pre>#include&lt;stdio.h&gt;\r\n#include&lt;stdlib.h&gt;\r\n\r\ntypedef int ElemType;\r\nstruct BTreeNode\r\n{\r\n    struct BTreeNode* left;\r\n    struct BTreeNode* right;\r\n    ElemType data;\r\n};\r\n\r\nvoid PrintBTree_int(struct BTreeNode* BT)\r\n{\r\n    if (BT != NULL)\r\n    {\r\n        printf(\"%d\", BT-&gt;data);\r\n        if (BT-&gt;left != NULL || BT-&gt;right != NULL)\r\n        {\r\n            printf(\"(\");\r\n            PrintBTree_int(BT-&gt;left);\r\n            if (BT-&gt;right != NULL)\r\n                printf(\",\");\r\n            PrintBTree_int(BT-&gt;right);\r\n            printf(\")\");\r\n        }\r\n    }\r\n}\r\n\r\nstruct BTreeNode* CreateHuffman(ElemType a[], int n)\r\n{\r\n    int i, j;\r\n    struct BTreeNode **b, *q;\r\n    b = malloc(n*sizeof(struct BTreeNode));\r\n    for (i = 0; i &lt; n; i++)\r\n    {\r\n        b[i] = malloc(sizeof(struct BTreeNode));\r\n        b[i]-&gt;data = a[i];\r\n        b[i]-&gt;left = b[i]-&gt;right = NULL;\r\n    }\r\n    for (i = 1; i &lt; n; i++)\r\n    {\r\n        int k1 = -1, k2;\r\n        for (j = 0; j &lt; n; j++)\r\n        {\r\n            if (b[j] != NULL &amp;&amp; k1 == -1)\r\n            {\r\n                k1 = j;\r\n                continue;\r\n            }\r\n            if (b[j] != NULL)\r\n            {\r\n                k2 = j;\r\n                break;\r\n            }\r\n        }\r\n        for (j = k2; j &lt; n; j++)\r\n        {\r\n            if (b[j] != NULL)\r\n            {\r\n                if (b[j]-&gt;data &lt; b[k1]-&gt;data)\r\n                {\r\n                    k2 = k1;\r\n                    k1 = j;\r\n                }\r\n                else if (b[j]-&gt;data &lt; b[k2]-&gt;data)\r\n                    k2 = j;\r\n            }\r\n        }\r\n        q = malloc(sizeof(struct BTreeNode));\r\n        q-&gt;data = b[k1]-&gt;data + b[k2]-&gt;data;\r\n        q-&gt;left = b[k1];\r\n        q-&gt;right = b[k2];\r\n\r\n        b[k1] = q;\r\n        b[k2] = NULL;\r\n    }\r\n    free(b);\r\n    return q;\r\n}\r\n\r\nElemType WeightPathLength(struct BTreeNode* FBT, int len)\r\n{\r\n    if (FBT == NULL)\r\n        return 0;\r\n    else\r\n    {\r\n        if (FBT-&gt;left == NULL &amp;&amp; FBT-&gt;right == NULL)\r\n            return FBT-&gt;data * len;\r\n        else\r\n            return WeightPathLength(FBT-&gt;left,len+1)+WeightPathLength(FBT-&gt;right,len+1);\r\n    }\r\n}\r\n\r\nint res[26][100];\r\n\r\nvoid HuffManCoding(struct BTreeNode* FBT, int len,int n,int *idx)\r\n{\r\n    static int a[10];\r\n    if (FBT != NULL)\r\n    {\r\n        if (FBT-&gt;left == NULL &amp;&amp; FBT-&gt;right == NULL)\r\n        {\r\n            int i;\r\n            res[idx[n-FBT-&gt;data]][0]=len;\r\n            for (i = 0; i &lt; len; i++)\r\n                res[idx[n-FBT-&gt;data]][i+1]=a[i];\r\n        }\r\n        else{\r\n            a[len] = 0;\r\n            HuffManCoding(FBT-&gt;left, len + 1,n,idx);\r\n            a[len] = 1;\r\n            HuffManCoding(FBT-&gt;right, len + 1,n,idx);\r\n        }\r\n    }\r\n}\r\n\r\nconst int* par = 0;\r\n\r\nint compare(const void* p1, const void* p2)\r\n{\r\n    int a = *(int*)p1;\r\n    int b = *(int*)p2;\r\n\r\n    if (par[a] &gt; par[b])\r\n        return 1;\r\n    else if (par[a] == par[b])\r\n        return 0;\r\n    else\r\n        return -1;\r\n}\r\n\r\nvoid sort_index(const int ar[], int index[], int num)\r\n{\r\n    par = ar;\r\n    qsort(index, num, sizeof(int), &amp;compare);\r\n}\r\n\r\n\r\nint main()\r\n{\r\n    int T,k,kl=0,z=0;\r\n    scanf(\"%d\",&amp;T);\r\n    int rrr[10000],lll[T];\r\n    for(k=0;k&lt;T;k++){\r\n        int i,l,n=0,j,tmp,midx=0,mm=0,ll=0;\r\n        int asc[26]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};\r\n        char s[100];\r\n        scanf(\"%s\",s);\r\n        for(l=0;s[l]!='\\0';++l);\r\n        for(i=0;i&lt;l;i++){\r\n            asc[s[i]-65]++;\r\n        }\r\n\r\n        ElemType* a;\r\n        struct BTreeNode* fbt;\r\n        for(i=0;i&lt;26;i++){\r\n            if(asc[i]!=0){\r\n                n++;\r\n            }\r\n        }\r\n        int idxs[n];\r\n        for(j=0;j&lt;n;j++){\r\n            mm=0;\r\n            midx=0;\r\n            for(i=0;i&lt;26;i++){\r\n                if(asc[i]&gt;mm){\r\n                    mm=asc[i];\r\n                    midx=i;\r\n                }\r\n            }\r\n            idxs[j]=midx;\r\n            asc[midx]=0;\r\n        }\r\n\r\n        a = malloc(n*sizeof(ElemType));\r\n        for (i = 0; i &lt; n; i++)\r\n            a[i]=n-i;\r\n        fbt = CreateHuffman(a, n);\r\n        HuffManCoding(fbt, 0, n, idxs);\r\n        for(i=0;i&lt;l;i++){\r\n            tmp = s[i]-65;\r\n            for(j=1;j&lt;res[tmp][0]+1;j++){\r\n                rrr[kl] = res[tmp][j];\r\n                kl++;\r\n                ll++;\r\n            }\r\n        }\r\n        lll[k] = ll;\r\n    }\r\n    kl=0;\r\n    for(k=0;k&lt;T;k++){\r\n        for(z=0;z&lt;lll[k];z++){\r\n            printf(\"%d\",rrr[z+kl]);\r\n        }\r\n        kl+=lll[k];\r\n        printf(\"\\n\");\r\n    }\r\n}</pre>\r\n４.子串出现次数。也就用比较老土的办法一个个比较过去，如果对应上count+1，对不上就再回到原来后一个位置继续比较。\r\n<pre>#include \"stdio.h\"\r\n\r\nint pp(char *s1,char *s2,int l1,int l2){\r\n    int count=0,i,j=0;\r\n    for(i=0;i&lt;l1;i++){\r\n        if(s1[i]==s2[j]){\r\n            j++;\r\n            if(j==l2){\r\n                count++;\r\n                i=i-j+1;\r\n                j=0;\r\n            }\r\n        }else{\r\n            i=i-j;\r\n            j=0;\r\n        }\r\n    }\r\n    return count;\r\n}\r\n\r\nint main(){\r\n    int T,k;\r\n    scanf(\"%d\",&amp;T);\r\n    int res[T];\r\n    for(k=0;k&lt;T;k++){\r\n        int count = 0,i,l1,l2;\r\n        char s1[100],s2[100];\r\n        scanf(\"%s\",&amp;s1);\r\n        scanf(\"%s\",&amp;s2);\r\n        for(l1=0;s1[l1]!='\\0';++l1);\r\n        for(l2=0;s2[l2]!='\\0';++l2);\r\n        res[k] = pp(s1,s2,l1,l2);\r\n    }\r\n    for(k=0;k&lt;T;k++){\r\n        printf(\"%d\\n\",res[k]);\r\n    }\r\n}</pre>\r\n5.吃金币游戏。这个我也没通过。本人思路是先找第一个点，然后遍历和它连接的下一步可行点，然后每个点在递归运行，这个是dfs主要部分。剪枝的话：如果在两步以外又回到走过的点就是形成环舍去，两步以内或没走过可行；同一路同方向不重复走（考虑他下一个递归讲将和之前完全一模一样）。结果：每次求该路径的金币数，取最大值。\r\n<pre>#include \"stdio.h\"\r\n#define max(a,b) ((a)&gt;(b)?(a):(b))\r\n\r\nint x=1;\r\nint line_his[10000]={0};\r\nint line_dir[10000];\r\nint maxV=0;\r\n\r\nint check(int n){\r\n    int i;\r\n    for(i=x-2;i&gt;=x-3;i--){\r\n        if(line_his[i]==n){\r\n            return 1;\r\n        }\r\n    }\r\n    for(i=x-4;i&gt;=0;i--){\r\n        if(line_his[i]==n){\r\n            return 0;\r\n        }\r\n    }\r\n    return 1;\r\n}\r\n\r\nint get_road(int *arr,int r,int n,int *tmp){\r\n    int t=0,i;\r\n    for(i=0;i&lt;r*3;i+=3){\r\n        if(arr[i]==n || arr[i+1]==n){\r\n            tmp[t]=arr[i]==n?arr[i+1]:arr[i];\r\n            t++;\r\n        }\r\n    }\r\n    return t;\r\n}\r\n\r\nint get_value(int *arr,int r,int n1,int n2){\r\n    int i;\r\n    for(i=0;i&lt;r*3;i+=3){\r\n        if(arr[i]==n1 &amp;&amp; arr[i+1]==n2){\r\n            return arr[i+2];\r\n        }\r\n        if(arr[i]==n2 &amp;&amp; arr[i+1]==n1){\r\n            return arr[i+2];\r\n        }\r\n    }\r\n}\r\n\r\nint calc_v(int *arr,int r,int p){\r\n    int tmp = 0,i;\r\n    int his[10000]={};\r\n    for(i=0;i&lt;x-1;i++){\r\n        if(his[line_his[i]*p+line_his[i+1]]!=1){\r\n            tmp+=get_value(arr,r,line_his[i],line_his[i+1]);\r\n        }\r\n        his[line_his[i]*p+line_his[i+1]]=1;\r\n        his[line_his[i]+line_his[i+1]*p]=1;\r\n    }\r\n    return tmp;\r\n}\r\n\r\n/*int check_all(int p){\r\n    int i,j,in=0;\r\n    for(i=0;i&lt;p;i++){\r\n        for(j=0;j&lt;x;j++){\r\n            if(i==line_his[j]){\r\n                in++;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    if(in==p){\r\n        return 1;\r\n    }else{\r\n        return 0;\r\n    }\r\n}*/\r\n\r\nint dfs(int *arr,int r,int p,int n){\r\n    int i,t,tt;\r\n    int tmp[10000];\r\n    //if(check_all(p)){\r\n    tt = calc_v(arr,r,p);\r\n    maxV = max(maxV,tt);\r\n    t = get_road(arr,r,n,tmp);\r\n    for(i=0;i&lt;t;i++){\r\n        if(line_dir[n*p+tmp[i]]==1){\r\n            continue;\r\n        }\r\n        line_his[x]=tmp[i];\r\n        line_dir[n*p+tmp[i]]=1;\r\n        x++;\r\n        if(check(tmp[i]))\r\n            dfs(arr,r,p,tmp[i]);\r\n        line_his[x]=-1;\r\n        line_dir[n*p+tmp[i]]=-1;\r\n        x--;\r\n    }\r\n    return maxV;\r\n}\r\n\r\nint main(){\r\n    int T,k;\r\n    scanf(\"%d\",&amp;T);\r\n    int result[T];\r\n    for(k=0;k&lt;T;k++){\r\n        maxV=0;\r\n        x=1;\r\n        int p,r,i,t;\r\n        scanf(\"%d\",&amp;p);\r\n        scanf(\"%d\",&amp;r);\r\n        int arr[r*3];\r\n        for(i=0;i&lt;r*3;i++){\r\n            scanf(\"%d\",&amp;arr[i]);\r\n        }\r\n        result[k] = dfs(arr,r,p,0);\r\n    }\r\n    for(k=0;k&lt;T;k++){\r\n        printf(\"%d\\n\",result[k]);\r\n    }\r\n}</pre>",
            "post_title": "练手c语言算法一",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "621-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-5-6 11:54:25",
            "post_modified_gmt": "2018-5-6 03:54:25",
            "post_content_filtered": "",
            "post_parent": "621",
            "guid": "http://ganjiacheng.cn/blog/?p=628",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "629",
            "post_author": "1",
            "post_date": "2018-5-6 11:55:26",
            "post_date_gmt": "2018-5-6 03:55:26",
            "post_content": "大华2018年软件挑战赛初赛题\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/05/%E5%88%9D%E8%B5%9B.xlsx\">初赛　十道题，题目此在</a>，主要讲讲自己的思路，这里是前五题。<!--more-->\r\n\r\n１.不相邻最大子序和。不相邻所以奇偶分开写状态转移，然后取两者较大值。类似于leetcode中house robber。\r\n<pre>#include \"stdio.h\"\r\n#define max(a,b) ((a)&gt;(b)?(a):(b))\r\n\r\nint calc(int *nums,int n){\r\n    int a=0,b=0,i;\r\n    for(i=0;i&lt;n;i++){\r\n        if(i%2 == 0){\r\n            a = max(b,a+nums[i]);\r\n        }else{\r\n            b = max(a,b+nums[i]);\r\n        }\r\n    }\r\n    return max(a,b);\r\n}\r\n\r\nint main(){\r\n    int T,i,n,j;\r\n    scanf(\"%d\",&amp;T);\r\n    int res[T];\r\n    for(i=0;i&lt;T;i++){\r\n        scanf(\"%d\",&amp;n);\r\n        int nums[n];\r\n        for(j=0;j&lt;n;j++){\r\n            scanf(\"%d\",&amp;nums[j]);\r\n        }\r\n        res[i] = calc(nums,n);\r\n    }\r\n    for(i=0;i&lt;T;i++){\r\n        printf(\"%d\\n\",res[i]);\r\n    }\r\n}</pre>\r\n2.链表部分翻转。我还是用数组实现的，翻转就是遍历前一半的长度，和后一半换一下。然后在数组分割的每部分调用这个翻转完成。\r\n<pre>#include \"stdio.h\"\r\n\r\nvoid reverse(int *arr,int n,int start){\r\n    int m=(n+1)/2+start,i,j,tmp;\r\n    for(i=start;i&lt;m;i++){\r\n        j=n+2*start-i-1;\r\n        tmp=arr[i];\r\n        arr[i]=arr[j];\r\n        arr[j]=tmp;\r\n    }\r\n}\r\n\r\nint main(){\r\n    int n,i,j,k,l,T,z=0,tmp=0;\r\n    scanf(\"%d\",&amp;T);\r\n    int res[1000],kk[10];\r\n    for(k=0;k&lt;T;k++){\r\n        j=0;\r\n        scanf(\"%d\",&amp;n);\r\n        kk[k] = n;\r\n        int nums[n];\r\n        for(i=0;i&lt;n;i++){\r\n            scanf(\"%d\",&amp;nums[i]);\r\n        }\r\n        scanf(\"%d\",&amp;l);\r\n        while(j+l&lt;=n){\r\n            reverse(nums,l,j);\r\n            j+=l;\r\n        }\r\n        reverse(nums,n-j,j);\r\n        for(i=0;i&lt;n;i++){\r\n            res[z+i]=nums[i];\r\n        }\r\n        z+=n;\r\n    }\r\n    for(k=0;k&lt;T;k++){\r\n        for(i=tmp;i&lt;kk[k]+tmp;i++){\r\n            printf(\"%d \",res[i]);\r\n        }\r\n        tmp+=kk[k];\r\n        printf(\"\\n\");\r\n    }\r\n}</pre>\r\n3.霍夫曼编码，这里有参考网上的算法代码，<a href=\"https://blog.csdn.net/wtfmonking/article/details/17150499\">参考地址</a>，也不用造轮子啦。\r\n<pre>#include&lt;stdio.h&gt;\r\n#include&lt;stdlib.h&gt;\r\n\r\ntypedef int ElemType;\r\nstruct BTreeNode\r\n{\r\n    struct BTreeNode* left;\r\n    struct BTreeNode* right;\r\n    ElemType data;\r\n};\r\n\r\nvoid PrintBTree_int(struct BTreeNode* BT)\r\n{\r\n    if (BT != NULL)\r\n    {\r\n        printf(\"%d\", BT-&gt;data);\r\n        if (BT-&gt;left != NULL || BT-&gt;right != NULL)\r\n        {\r\n            printf(\"(\");\r\n            PrintBTree_int(BT-&gt;left);\r\n            if (BT-&gt;right != NULL)\r\n                printf(\",\");\r\n            PrintBTree_int(BT-&gt;right);\r\n            printf(\")\");\r\n        }\r\n    }\r\n}\r\n\r\nstruct BTreeNode* CreateHuffman(ElemType a[], int n)\r\n{\r\n    int i, j;\r\n    struct BTreeNode **b, *q;\r\n    b = malloc(n*sizeof(struct BTreeNode));\r\n    for (i = 0; i &lt; n; i++)\r\n    {\r\n        b[i] = malloc(sizeof(struct BTreeNode));\r\n        b[i]-&gt;data = a[i];\r\n        b[i]-&gt;left = b[i]-&gt;right = NULL;\r\n    }\r\n    for (i = 1; i &lt; n; i++)\r\n    {\r\n        int k1 = -1, k2;\r\n        for (j = 0; j &lt; n; j++)\r\n        {\r\n            if (b[j] != NULL &amp;&amp; k1 == -1)\r\n            {\r\n                k1 = j;\r\n                continue;\r\n            }\r\n            if (b[j] != NULL)\r\n            {\r\n                k2 = j;\r\n                break;\r\n            }\r\n        }\r\n        for (j = k2; j &lt; n; j++)\r\n        {\r\n            if (b[j] != NULL)\r\n            {\r\n                if (b[j]-&gt;data &lt; b[k1]-&gt;data)\r\n                {\r\n                    k2 = k1;\r\n                    k1 = j;\r\n                }\r\n                else if (b[j]-&gt;data &lt; b[k2]-&gt;data)\r\n                    k2 = j;\r\n            }\r\n        }\r\n        q = malloc(sizeof(struct BTreeNode));\r\n        q-&gt;data = b[k1]-&gt;data + b[k2]-&gt;data;\r\n        q-&gt;left = b[k1];\r\n        q-&gt;right = b[k2];\r\n\r\n        b[k1] = q;\r\n        b[k2] = NULL;\r\n    }\r\n    free(b);\r\n    return q;\r\n}\r\n\r\nElemType WeightPathLength(struct BTreeNode* FBT, int len)\r\n{\r\n    if (FBT == NULL)\r\n        return 0;\r\n    else\r\n    {\r\n        if (FBT-&gt;left == NULL &amp;&amp; FBT-&gt;right == NULL)\r\n            return FBT-&gt;data * len;\r\n        else\r\n            return WeightPathLength(FBT-&gt;left,len+1)+WeightPathLength(FBT-&gt;right,len+1);\r\n    }\r\n}\r\n\r\nint res[26][100];\r\n\r\nvoid HuffManCoding(struct BTreeNode* FBT, int len,int n,int *idx)\r\n{\r\n    static int a[10];\r\n    if (FBT != NULL)\r\n    {\r\n        if (FBT-&gt;left == NULL &amp;&amp; FBT-&gt;right == NULL)\r\n        {\r\n            int i;\r\n            res[idx[n-FBT-&gt;data]][0]=len;\r\n            for (i = 0; i &lt; len; i++)\r\n                res[idx[n-FBT-&gt;data]][i+1]=a[i];\r\n        }\r\n        else{\r\n            a[len] = 0;\r\n            HuffManCoding(FBT-&gt;left, len + 1,n,idx);\r\n            a[len] = 1;\r\n            HuffManCoding(FBT-&gt;right, len + 1,n,idx);\r\n        }\r\n    }\r\n}\r\n\r\nconst int* par = 0;\r\n\r\nint compare(const void* p1, const void* p2)\r\n{\r\n    int a = *(int*)p1;\r\n    int b = *(int*)p2;\r\n\r\n    if (par[a] &gt; par[b])\r\n        return 1;\r\n    else if (par[a] == par[b])\r\n        return 0;\r\n    else\r\n        return -1;\r\n}\r\n\r\nvoid sort_index(const int ar[], int index[], int num)\r\n{\r\n    par = ar;\r\n    qsort(index, num, sizeof(int), &amp;compare);\r\n}\r\n\r\n\r\nint main()\r\n{\r\n    int T,k,kl=0,z=0;\r\n    scanf(\"%d\",&amp;T);\r\n    int rrr[10000],lll[T];\r\n    for(k=0;k&lt;T;k++){\r\n        int i,l,n=0,j,tmp,midx=0,mm=0,ll=0;\r\n        int asc[26]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};\r\n        char s[100];\r\n        scanf(\"%s\",s);\r\n        for(l=0;s[l]!='\\0';++l);\r\n        for(i=0;i&lt;l;i++){\r\n            asc[s[i]-65]++;\r\n        }\r\n\r\n        ElemType* a;\r\n        struct BTreeNode* fbt;\r\n        for(i=0;i&lt;26;i++){\r\n            if(asc[i]!=0){\r\n                n++;\r\n            }\r\n        }\r\n        int idxs[n];\r\n        for(j=0;j&lt;n;j++){\r\n            mm=0;\r\n            midx=0;\r\n            for(i=0;i&lt;26;i++){\r\n                if(asc[i]&gt;mm){\r\n                    mm=asc[i];\r\n                    midx=i;\r\n                }\r\n            }\r\n            idxs[j]=midx;\r\n            asc[midx]=0;\r\n        }\r\n\r\n        a = malloc(n*sizeof(ElemType));\r\n        for (i = 0; i &lt; n; i++)\r\n            a[i]=n-i;\r\n        fbt = CreateHuffman(a, n);\r\n        HuffManCoding(fbt, 0, n, idxs);\r\n        for(i=0;i&lt;l;i++){\r\n            tmp = s[i]-65;\r\n            for(j=1;j&lt;res[tmp][0]+1;j++){\r\n                rrr[kl] = res[tmp][j];\r\n                kl++;\r\n                ll++;\r\n            }\r\n        }\r\n        lll[k] = ll;\r\n    }\r\n    kl=0;\r\n    for(k=0;k&lt;T;k++){\r\n        for(z=0;z&lt;lll[k];z++){\r\n            printf(\"%d\",rrr[z+kl]);\r\n        }\r\n        kl+=lll[k];\r\n        printf(\"\\n\");\r\n    }\r\n}</pre>\r\n４.子串出现次数。也就用比较老土的办法一个个比较过去，如果对应上count+1，对不上就再回到原来后一个位置继续比较。\r\n<pre>#include \"stdio.h\"\r\n\r\nint pp(char *s1,char *s2,int l1,int l2){\r\n    int count=0,i,j=0;\r\n    for(i=0;i&lt;l1;i++){\r\n        if(s1[i]==s2[j]){\r\n            j++;\r\n            if(j==l2){\r\n                count++;\r\n                i=i-j+1;\r\n                j=0;\r\n            }\r\n        }else{\r\n            i=i-j;\r\n            j=0;\r\n        }\r\n    }\r\n    return count;\r\n}\r\n\r\nint main(){\r\n    int T,k;\r\n    scanf(\"%d\",&amp;T);\r\n    int res[T];\r\n    for(k=0;k&lt;T;k++){\r\n        int count = 0,i,l1,l2;\r\n        char s1[100],s2[100];\r\n        scanf(\"%s\",&amp;s1);\r\n        scanf(\"%s\",&amp;s2);\r\n        for(l1=0;s1[l1]!='\\0';++l1);\r\n        for(l2=0;s2[l2]!='\\0';++l2);\r\n        res[k] = pp(s1,s2,l1,l2);\r\n    }\r\n    for(k=0;k&lt;T;k++){\r\n        printf(\"%d\\n\",res[k]);\r\n    }\r\n}</pre>\r\n5.吃金币游戏。这个我也没通过。本人思路是先找第一个点，然后遍历和它连接的下一步可行点，然后每个点在递归运行，这个是dfs主要部分。剪枝的话：如果在两步以外又回到走过的点就是形成环舍去，两步以内或没走过可行；同一路同方向不重复走（考虑他下一个递归讲将和之前完全一模一样）。结果：每次求该路径的金币数，取最大值。\r\n<pre>#include \"stdio.h\"\r\n#define max(a,b) ((a)&gt;(b)?(a):(b))\r\n\r\nint x=1;\r\nint line_his[10000]={0};\r\nint line_dir[10000];\r\nint maxV=0;\r\n\r\nint check(int n){\r\n    int i;\r\n    for(i=x-2;i&gt;=x-3;i--){\r\n        if(line_his[i]==n){\r\n            return 1;\r\n        }\r\n    }\r\n    for(i=x-4;i&gt;=0;i--){\r\n        if(line_his[i]==n){\r\n            return 0;\r\n        }\r\n    }\r\n    return 1;\r\n}\r\n\r\nint get_road(int *arr,int r,int n,int *tmp){\r\n    int t=0,i;\r\n    for(i=0;i&lt;r*3;i+=3){\r\n        if(arr[i]==n || arr[i+1]==n){\r\n            tmp[t]=arr[i]==n?arr[i+1]:arr[i];\r\n            t++;\r\n        }\r\n    }\r\n    return t;\r\n}\r\n\r\nint get_value(int *arr,int r,int n1,int n2){\r\n    int i;\r\n    for(i=0;i&lt;r*3;i+=3){\r\n        if(arr[i]==n1 &amp;&amp; arr[i+1]==n2){\r\n            return arr[i+2];\r\n        }\r\n        if(arr[i]==n2 &amp;&amp; arr[i+1]==n1){\r\n            return arr[i+2];\r\n        }\r\n    }\r\n}\r\n\r\nint calc_v(int *arr,int r,int p){\r\n    int tmp = 0,i;\r\n    int his[10000]={};\r\n    for(i=0;i&lt;x-1;i++){\r\n        if(his[line_his[i]*p+line_his[i+1]]!=1){\r\n            tmp+=get_value(arr,r,line_his[i],line_his[i+1]);\r\n        }\r\n        his[line_his[i]*p+line_his[i+1]]=1;\r\n        his[line_his[i]+line_his[i+1]*p]=1;\r\n    }\r\n    return tmp;\r\n}\r\n\r\n/*int check_all(int p){\r\n    int i,j,in=0;\r\n    for(i=0;i&lt;p;i++){\r\n        for(j=0;j&lt;x;j++){\r\n            if(i==line_his[j]){\r\n                in++;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    if(in==p){\r\n        return 1;\r\n    }else{\r\n        return 0;\r\n    }\r\n}*/\r\n\r\nint dfs(int *arr,int r,int p,int n){\r\n    int i,t,tt;\r\n    int tmp[10000];\r\n    //if(check_all(p)){\r\n    tt = calc_v(arr,r,p);\r\n    maxV = max(maxV,tt);\r\n    t = get_road(arr,r,n,tmp);\r\n    for(i=0;i&lt;t;i++){\r\n        if(line_dir[n*p+tmp[i]]==1){\r\n            continue;\r\n        }\r\n        line_his[x]=tmp[i];\r\n        line_dir[n*p+tmp[i]]=1;\r\n        x++;\r\n        if(check(tmp[i]))\r\n            dfs(arr,r,p,tmp[i]);\r\n        line_his[x]=-1;\r\n        line_dir[n*p+tmp[i]]=-1;\r\n        x--;\r\n    }\r\n    return maxV;\r\n}\r\n\r\nint main(){\r\n    int T,k;\r\n    scanf(\"%d\",&amp;T);\r\n    int result[T];\r\n    for(k=0;k&lt;T;k++){\r\n        maxV=0;\r\n        x=1;\r\n        int p,r,i,t;\r\n        scanf(\"%d\",&amp;p);\r\n        scanf(\"%d\",&amp;r);\r\n        int arr[r*3];\r\n        for(i=0;i&lt;r*3;i++){\r\n            scanf(\"%d\",&amp;arr[i]);\r\n        }\r\n        result[k] = dfs(arr,r,p,0);\r\n    }\r\n    for(k=0;k&lt;T;k++){\r\n        printf(\"%d\\n\",result[k]);\r\n    }\r\n}</pre>",
            "post_title": "练手c语言算法一",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "621-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-5-6 11:55:26",
            "post_modified_gmt": "2018-5-6 03:55:26",
            "post_content_filtered": "",
            "post_parent": "621",
            "guid": "http://ganjiacheng.cn/blog/?p=629",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "630",
            "post_author": "1",
            "post_date": "2018-6-4 15:59:41",
            "post_date_gmt": "2018-6-4 07:59:41",
            "post_content": "这是一波2018年456月间找暑假及应届生实习时的面试经验记录。<!--more-->\r\n\r\n第一个面到的是海康威视。\r\n\r\n投的是测试开发岗。我个人对测试开发的态度是工具可能没用过，学起来就好了。编程基础还是在的，掌握起来不难，所以比较自信。\r\n\r\n发邮箱投了回复的很快，没两天就笔试，然后面试。笔试比较简单就一个工具的使用(打包安装包)，当然是看不懂他初始的代码，但根据报错信息也改对了。\r\n\r\n我因为特殊情况也实际表态了要暑假入职。然而没过两天还是收到面试邀请了。不出意外他们招人很急，(这么快肯定急呀)。面试过程也没多墨迹，简单了解简历上的经历后，让当场看段代码说出功能，这段应该是他们正在用的吧，各个函数还得深入进去也比较复杂(不是逻辑上的复杂，而是不在那个情景中你知道他要干嘛)，我有些犹豫，因为我想明白的是他整个main的目的，而不是只是把ifelse逻辑说一说，就一直询问着，然后就没了，直接拒绝了。总的30分钟。\r\n\r\n想来他们是要急招的，而我要暑假入职，这点和hr就我明说了，如果因为这点被t，那我是不服的。当然如果我超级符合要求他们也可以等，但我本来也不是做测试的(谁tm大学本科学测试啊)，肯定不会很符合啊，都要学起来的。总的来说给我感觉就很随意，这场面试本来就注定失败。抬走，下一个。\r\n\r\n<hr />\r\n\r\n阿里。投的是新零售的算法实习岗，先有初步测验(性格测验)，然后等了近一个月，才开放了在线笔试，中间还莫名有个笔试模拟题，感觉没啥帮助，只让我感受一下难度。在线笔试，30分钟11个选择题，每个题都不是瞄一眼可得到结果的(对我这种小白来说)，涉及算法复杂度，机器学习基础概念，概率论，长到不想读的题，算也算不出的题，题目读不懂的题等。笔试还有两道编程题，时间1h，我的两个题都是用dfs解决的，第一时间想不到好的方法就暴力的遍历，当然其中剪枝做得好其实也不慢。本地运行可以了放上去运行竟然0%通过，那时时间也不多了也就没想着再改算法了，草草交卷。\r\n\r\n<hr />\r\n\r\n大华。投的是测试实习岗，因为算法岗都要研究生以上，投了也没软用。我恰好参加了个他们公司弄的软件挑战赛(初赛比的是基础的算法解题，类似leetcode,在博客前几篇有具体讲述)，又恰好进了复赛(也就可以免笔试资格)，待续～\r\n\r\n<hr />\r\n\r\n蘑菇街。投的是算法实习岗。投了以后两星期以内参加了在线笔试，但他那个笔试系统是在牛客网上的，题库应该也是牛客网提供。有些题甚至有些眼熟，哈哈。笔试有选择题，简答题，编程题。难度比阿里肯定简单些，而且如果你日常在牛客网刷题，那些个题很多能熟悉。然后一个月没消息，只能说雷声大雨点小。\r\n\r\n<hr />\r\n\r\n还有一些较小公司的，没有这么多复杂的环节，发了简历都是直接上来技术面试，我觉得倒是对于自己来说比较轻松（讨厌刁难人的笔试，首先我做的你看不看我不知道，参考多少也不知道，但我还得拼命做，死了脑细胞做完了直接拒绝/接受面试等权利都在你手上，仿佛我只有等结果的份？难道真是在笔试中学习不足，这就和你是啥啥就该干啥啥的一个套路。如年轻人就该多吃苦）。\r\n\r\n默安科技；投的是python开发，没几天hr就来了电，也没聊什么，直接就让换个时间技术电话面试。晚9点左右的电话面试（看来他们9点还没下班啊！！），我也没特地准备，该知道的就说，不知道的直接回不知道（拖着反而尴尬）。几类问题吧：简介，项目经验（问各个用到的技术点以及拓展，比如我说用了mongodb，就问你mongodb和mysql对比），数据结构（二叉树，问了从上往下遍历递归版非递归版；链表，问了如何确定中间点，快慢指针法），算法（了解的几个排序，具体的说了快排的思路），linux（问了看端口监听，看进程的命令），计算机网络（问了ping的协议，tcp/udp的区别）；    总的来说问的不是特别难，在我说不会时也不会特地刁难，总长在25分钟不到，竟然问了这么多问题，很紧凑，目的明确，不拖泥带水（觉得这个对于面试者和被面试者都很重要）。隔天收到offer。",
            "post_title": "一小波面经",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e4%b8%80%e5%b0%8f%e6%b3%a2%e9%9d%a2%e7%bb%8f",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-6-4 19:31:48",
            "post_modified_gmt": "2018-6-4 11:31:48",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=630",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "631",
            "post_author": "1",
            "post_date": "2018-5-9 04:33:04",
            "post_date_gmt": "2018-5-8 20:33:04",
            "post_content": "这是一波2018年56月间找实习时的面经。\r\n\r\n第一个面到的是海康。\r\n\r\n投的是测试开发岗。我个人对测试开发的态度是工具可能没用过，学起来就好了。编程基础还是在的，掌握起来不难，所以比较自信。\r\n\r\n发邮箱投了回复的很快，没两天就笔试，然后面试。笔试比较简单就一个工具的使用(打包安装包)，当然是看不懂他初始的代码，但根据报错信息也改对了。\r\n\r\n我因为特殊情况也实际表态了要暑假入职。然而没过两天还是收到面试邀请了。不出意外他们招人很急，(这么快肯定急呀)。面试过程也没多墨迹，简单了解简历上的经历后，让当场看段代码说出功能，这段应该是他们正在用的吧，各个函数还得深入进去也比较复杂(不是逻辑上的复杂，而是不在那个情景中你知道他要干嘛)，我有些犹豫，因为我想明白的是他整个main的目的，而不是只是把ifelse逻辑说一说，就一直询问着，然后就没了，直接拒绝了。总的30分钟。\r\n\r\n想来他们是要急招的，而我要暑假入职，这点和hr就我明说了，如果因为这点被t，那我是不服的。当然如果我超级符合要求他们也可以等，但我本来也不是做测试的(谁tm大学本科学测试啊)，肯定不会很符合啊，都要学起来的。总的来说给我感觉就很随意，这场面试本来就注定失败。抬走，下一个。\r\n\r\n&nbsp;",
            "post_title": "面经",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "630-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-5-9 04:33:04",
            "post_modified_gmt": "2018-5-8 20:33:04",
            "post_content_filtered": "",
            "post_parent": "630",
            "guid": "http://ganjiacheng.cn/blog/?p=631",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "632",
            "post_author": "1",
            "post_date": "2018-5-9 04:35:21",
            "post_date_gmt": "2018-5-8 20:35:21",
            "post_content": "这是一波2018年56月间找实习时的面经。<!--more-->\r\n\r\n第一个面到的是海康。\r\n\r\n投的是测试开发岗。我个人对测试开发的态度是工具可能没用过，学起来就好了。编程基础还是在的，掌握起来不难，所以比较自信。\r\n\r\n发邮箱投了回复的很快，没两天就笔试，然后面试。笔试比较简单就一个工具的使用(打包安装包)，当然是看不懂他初始的代码，但根据报错信息也改对了。\r\n\r\n我因为特殊情况也实际表态了要暑假入职。然而没过两天还是收到面试邀请了。不出意外他们招人很急，(这么快肯定急呀)。面试过程也没多墨迹，简单了解简历上的经历后，让当场看段代码说出功能，这段应该是他们正在用的吧，各个函数还得深入进去也比较复杂(不是逻辑上的复杂，而是不在那个情景中你知道他要干嘛)，我有些犹豫，因为我想明白的是他整个main的目的，而不是只是把ifelse逻辑说一说，就一直询问着，然后就没了，直接拒绝了。总的30分钟。\r\n\r\n想来他们是要急招的，而我要暑假入职，这点和hr就我明说了，如果因为这点被t，那我是不服的。当然如果我超级符合要求他们也可以等，但我本来也不是做测试的(谁tm大学本科学测试啊)，肯定不会很符合啊，都要学起来的。总的来说给我感觉就很随意，这场面试本来就注定失败。抬走，下一个。\r\n\r\n&nbsp;",
            "post_title": "面经",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "630-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-5-9 04:35:21",
            "post_modified_gmt": "2018-5-8 20:35:21",
            "post_content_filtered": "",
            "post_parent": "630",
            "guid": "http://ganjiacheng.cn/blog/?p=632",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "633",
            "post_author": "1",
            "post_date": "2018-5-9 04:37:47",
            "post_date_gmt": "2018-5-8 20:37:47",
            "post_content": "<ul>\r\n \t<li>这是一波2018年56月间找实习时的面经。<!--more--></li>\r\n</ul>\r\n第一个面到的是海康。\r\n\r\n投的是测试开发岗。我个人对测试开发的态度是工具可能没用过，学起来就好了。编程基础还是在的，掌握起来不难，所以比较自信。\r\n\r\n发邮箱投了回复的很快，没两天就笔试，然后面试。笔试比较简单就一个工具的使用(打包安装包)，当然是看不懂他初始的代码，但根据报错信息也改对了。\r\n\r\n我因为特殊情况也实际表态了要暑假入职。然而没过两天还是收到面试邀请了。不出意外他们招人很急，(这么快肯定急呀)。面试过程也没多墨迹，简单了解简历上的经历后，让当场看段代码说出功能，这段应该是他们正在用的吧，各个函数还得深入进去也比较复杂(不是逻辑上的复杂，而是不在那个情景中你知道他要干嘛)，我有些犹豫，因为我想明白的是他整个main的目的，而不是只是把ifelse逻辑说一说，就一直询问着，然后就没了，直接拒绝了。总的30分钟。\r\n\r\n想来他们是要急招的，而我要暑假入职，这点和hr就我明说了，如果因为这点被t，那我是不服的。当然如果我超级符合要求他们也可以等，但我本来也不是做测试的(谁tm大学本科学测试啊)，肯定不会很符合啊，都要学起来的。总的来说给我感觉就很随意，这场面试本来就注定失败。抬走，下一个。\r\n\r\n<hr />\r\n\r\n阿里\r\n\r\n<hr />\r\n\r\n大华\r\n\r\n<hr />\r\n\r\n蘑菇街",
            "post_title": "面经",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "630-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-5-9 04:37:47",
            "post_modified_gmt": "2018-5-8 20:37:47",
            "post_content_filtered": "",
            "post_parent": "630",
            "guid": "http://ganjiacheng.cn/blog/?p=633",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "634",
            "post_author": "1",
            "post_date": "2018-5-9 04:39:05",
            "post_date_gmt": "2018-5-8 20:39:05",
            "post_content": "<ul>\r\n \t<li>这是一波2018年456月间找暑假实习时的面经。<!--more--></li>\r\n</ul>\r\n第一个面到的是海康。\r\n\r\n投的是测试开发岗。我个人对测试开发的态度是工具可能没用过，学起来就好了。编程基础还是在的，掌握起来不难，所以比较自信。\r\n\r\n发邮箱投了回复的很快，没两天就笔试，然后面试。笔试比较简单就一个工具的使用(打包安装包)，当然是看不懂他初始的代码，但根据报错信息也改对了。\r\n\r\n我因为特殊情况也实际表态了要暑假入职。然而没过两天还是收到面试邀请了。不出意外他们招人很急，(这么快肯定急呀)。面试过程也没多墨迹，简单了解简历上的经历后，让当场看段代码说出功能，这段应该是他们正在用的吧，各个函数还得深入进去也比较复杂(不是逻辑上的复杂，而是不在那个情景中你知道他要干嘛)，我有些犹豫，因为我想明白的是他整个main的目的，而不是只是把ifelse逻辑说一说，就一直询问着，然后就没了，直接拒绝了。总的30分钟。\r\n\r\n想来他们是要急招的，而我要暑假入职，这点和hr就我明说了，如果因为这点被t，那我是不服的。当然如果我超级符合要求他们也可以等，但我本来也不是做测试的(谁tm大学本科学测试啊)，肯定不会很符合啊，都要学起来的。总的来说给我感觉就很随意，这场面试本来就注定失败。抬走，下一个。\r\n\r\n<hr />\r\n\r\n阿里\r\n\r\n<hr />\r\n\r\n大华\r\n\r\n<hr />\r\n\r\n蘑菇街",
            "post_title": "面经",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "630-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-5-9 04:39:05",
            "post_modified_gmt": "2018-5-8 20:39:05",
            "post_content_filtered": "",
            "post_parent": "630",
            "guid": "http://ganjiacheng.cn/blog/?p=634",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "635",
            "post_author": "1",
            "post_date": "2018-5-9 04:39:24",
            "post_date_gmt": "2018-5-8 20:39:24",
            "post_content": "这是一波2018年456月间找暑假实习时的面经。<!--more-->\r\n\r\n第一个面到的是海康。\r\n\r\n投的是测试开发岗。我个人对测试开发的态度是工具可能没用过，学起来就好了。编程基础还是在的，掌握起来不难，所以比较自信。\r\n\r\n发邮箱投了回复的很快，没两天就笔试，然后面试。笔试比较简单就一个工具的使用(打包安装包)，当然是看不懂他初始的代码，但根据报错信息也改对了。\r\n\r\n我因为特殊情况也实际表态了要暑假入职。然而没过两天还是收到面试邀请了。不出意外他们招人很急，(这么快肯定急呀)。面试过程也没多墨迹，简单了解简历上的经历后，让当场看段代码说出功能，这段应该是他们正在用的吧，各个函数还得深入进去也比较复杂(不是逻辑上的复杂，而是不在那个情景中你知道他要干嘛)，我有些犹豫，因为我想明白的是他整个main的目的，而不是只是把ifelse逻辑说一说，就一直询问着，然后就没了，直接拒绝了。总的30分钟。\r\n\r\n想来他们是要急招的，而我要暑假入职，这点和hr就我明说了，如果因为这点被t，那我是不服的。当然如果我超级符合要求他们也可以等，但我本来也不是做测试的(谁tm大学本科学测试啊)，肯定不会很符合啊，都要学起来的。总的来说给我感觉就很随意，这场面试本来就注定失败。抬走，下一个。\r\n\r\n<hr />\r\n\r\n阿里\r\n\r\n<hr />\r\n\r\n大华\r\n\r\n<hr />\r\n\r\n蘑菇街",
            "post_title": "面经",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "630-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-5-9 04:39:24",
            "post_modified_gmt": "2018-5-8 20:39:24",
            "post_content_filtered": "",
            "post_parent": "630",
            "guid": "http://ganjiacheng.cn/blog/?p=635",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "636",
            "post_author": "1",
            "post_date": "2018-5-9 04:41:45",
            "post_date_gmt": "2018-5-8 20:41:45",
            "post_content": "这是一波2018年456月间找暑假实习时的面经。<!--more-->\r\n\r\n第一个面到的是海康威视。\r\n\r\n投的是测试开发岗。我个人对测试开发的态度是工具可能没用过，学起来就好了。编程基础还是在的，掌握起来不难，所以比较自信。\r\n\r\n发邮箱投了回复的很快，没两天就笔试，然后面试。笔试比较简单就一个工具的使用(打包安装包)，当然是看不懂他初始的代码，但根据报错信息也改对了。\r\n\r\n我因为特殊情况也实际表态了要暑假入职。然而没过两天还是收到面试邀请了。不出意外他们招人很急，(这么快肯定急呀)。面试过程也没多墨迹，简单了解简历上的经历后，让当场看段代码说出功能，这段应该是他们正在用的吧，各个函数还得深入进去也比较复杂(不是逻辑上的复杂，而是不在那个情景中你知道他要干嘛)，我有些犹豫，因为我想明白的是他整个main的目的，而不是只是把ifelse逻辑说一说，就一直询问着，然后就没了，直接拒绝了。总的30分钟。\r\n\r\n想来他们是要急招的，而我要暑假入职，这点和hr就我明说了，如果因为这点被t，那我是不服的。当然如果我超级符合要求他们也可以等，但我本来也不是做测试的(谁tm大学本科学测试啊)，肯定不会很符合啊，都要学起来的。总的来说给我感觉就很随意，这场面试本来就注定失败。抬走，下一个。\r\n\r\n<hr />\r\n\r\n阿里\r\n\r\n<hr />\r\n\r\n大华\r\n\r\n<hr />\r\n\r\n蘑菇街",
            "post_title": "面经",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "630-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-5-9 04:41:45",
            "post_modified_gmt": "2018-5-8 20:41:45",
            "post_content_filtered": "",
            "post_parent": "630",
            "guid": "http://ganjiacheng.cn/blog/?p=636",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "638",
            "post_author": "1",
            "post_date": "2018-5-12 07:33:59",
            "post_date_gmt": "2018-5-11 23:33:59",
            "post_content": "这是一波2018年456月间找暑假实习时的面经。<!--more-->\r\n\r\n第一个面到的是海康威视。\r\n\r\n投的是测试开发岗。我个人对测试开发的态度是工具可能没用过，学起来就好了。编程基础还是在的，掌握起来不难，所以比较自信。\r\n\r\n发邮箱投了回复的很快，没两天就笔试，然后面试。笔试比较简单就一个工具的使用(打包安装包)，当然是看不懂他初始的代码，但根据报错信息也改对了。\r\n\r\n我因为特殊情况也实际表态了要暑假入职。然而没过两天还是收到面试邀请了。不出意外他们招人很急，(这么快肯定急呀)。面试过程也没多墨迹，简单了解简历上的经历后，让当场看段代码说出功能，这段应该是他们正在用的吧，各个函数还得深入进去也比较复杂(不是逻辑上的复杂，而是不在那个情景中你知道他要干嘛)，我有些犹豫，因为我想明白的是他整个main的目的，而不是只是把ifelse逻辑说一说，就一直询问着，然后就没了，直接拒绝了。总的30分钟。\r\n\r\n想来他们是要急招的，而我要暑假入职，这点和hr就我明说了，如果因为这点被t，那我是不服的。当然如果我超级符合要求他们也可以等，但我本来也不是做测试的(谁tm大学本科学测试啊)，肯定不会很符合啊，都要学起来的。总的来说给我感觉就很随意，这场面试本来就注定失败。抬走，下一个。\r\n\r\n<hr />\r\n\r\n阿里。投的是新零售的算法实习岗，先有初步测验(性格测验)，然后等了近一个月，才开放了在线笔试，中间还莫名有个笔试模拟题，感觉没啥帮助，只让我感受一下难度。在线笔试，30分钟11个选择题，每个题都不是瞄一眼可得到结果的(对我这种小白来说)，涉及算法复杂度，机器学习基础概念，概率论，长到不想读的题，算也算不出的题，题目读不懂的题等。笔试还有两道编程题，时间1h，我的两个题都是用dfs解决的，第一时间想不到好的方法就暴力的遍历，当然其中剪枝做得好其实也不慢。本地运行可以了放上去运行竟然0%通过，那时时间也不多了也就没想着再改算法了，草草交卷。\r\n\r\n<hr />\r\n\r\n大华。投的是测试实习岗，因为算法岗都要研究生以上，投了也没软用。我恰好参加了个他们公司弄的软件挑战赛，又恰好进了复赛(也就可以免笔试资格)，待续～\r\n\r\n<hr />\r\n\r\n蘑菇街。投的是算法实习岗。投了以后两星期以内参加了在线笔试，但他那个笔试系统是在牛客网上的，题库应该也是牛客网提供。有些题甚至有些眼熟，哈哈。笔试有选择题，简答题，编程题。难度比阿里肯定简单些，而且如果你日常在牛客网刷题，那些个题很多能熟悉。然后至今待续～",
            "post_title": "面经",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "630-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-5-12 07:33:59",
            "post_modified_gmt": "2018-5-11 23:33:59",
            "post_content_filtered": "",
            "post_parent": "630",
            "guid": "http://ganjiacheng.cn/blog/?p=638",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "639",
            "post_author": "1",
            "post_date": "2018-5-12 07:36:58",
            "post_date_gmt": "2018-5-11 23:36:58",
            "post_content": "这是一波2018年456月间找暑假实习时的面经。<!--more-->\r\n\r\n第一个面到的是海康威视。\r\n\r\n投的是测试开发岗。我个人对测试开发的态度是工具可能没用过，学起来就好了。编程基础还是在的，掌握起来不难，所以比较自信。\r\n\r\n发邮箱投了回复的很快，没两天就笔试，然后面试。笔试比较简单就一个工具的使用(打包安装包)，当然是看不懂他初始的代码，但根据报错信息也改对了。\r\n\r\n我因为特殊情况也实际表态了要暑假入职。然而没过两天还是收到面试邀请了。不出意外他们招人很急，(这么快肯定急呀)。面试过程也没多墨迹，简单了解简历上的经历后，让当场看段代码说出功能，这段应该是他们正在用的吧，各个函数还得深入进去也比较复杂(不是逻辑上的复杂，而是不在那个情景中你知道他要干嘛)，我有些犹豫，因为我想明白的是他整个main的目的，而不是只是把ifelse逻辑说一说，就一直询问着，然后就没了，直接拒绝了。总的30分钟。\r\n\r\n想来他们是要急招的，而我要暑假入职，这点和hr就我明说了，如果因为这点被t，那我是不服的。当然如果我超级符合要求他们也可以等，但我本来也不是做测试的(谁tm大学本科学测试啊)，肯定不会很符合啊，都要学起来的。总的来说给我感觉就很随意，这场面试本来就注定失败。抬走，下一个。\r\n\r\n<hr />\r\n\r\n阿里。投的是新零售的算法实习岗，先有初步测验(性格测验)，然后等了近一个月，才开放了在线笔试，中间还莫名有个笔试模拟题，感觉没啥帮助，只让我感受一下难度。在线笔试，30分钟11个选择题，每个题都不是瞄一眼可得到结果的(对我这种小白来说)，涉及算法复杂度，机器学习基础概念，概率论，长到不想读的题，算也算不出的题，题目读不懂的题等。笔试还有两道编程题，时间1h，我的两个题都是用dfs解决的，第一时间想不到好的方法就暴力的遍历，当然其中剪枝做得好其实也不慢。本地运行可以了放上去运行竟然0%通过，那时时间也不多了也就没想着再改算法了，草草交卷。\r\n\r\n<hr />\r\n\r\n大华。投的是测试实习岗，因为算法岗都要研究生以上，投了也没软用。我恰好参加了个他们公司弄的软件挑战赛(初赛比的是基础的算法解题，类似leetcode)，又恰好进了复赛(也就可以免笔试资格)，待续～\r\n\r\n<hr />\r\n\r\n蘑菇街。投的是算法实习岗。投了以后两星期以内参加了在线笔试，但他那个笔试系统是在牛客网上的，题库应该也是牛客网提供。有些题甚至有些眼熟，哈哈。笔试有选择题，简答题，编程题。难度比阿里肯定简单些，而且如果你日常在牛客网刷题，那些个题很多能熟悉。然后至今待续～",
            "post_title": "面经",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "630-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-5-12 07:36:58",
            "post_modified_gmt": "2018-5-11 23:36:58",
            "post_content_filtered": "",
            "post_parent": "630",
            "guid": "http://ganjiacheng.cn/blog/?p=639",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "640",
            "post_author": "1",
            "post_date": "2018-5-12 23:23:00",
            "post_date_gmt": "2018-5-12 15:23:00",
            "post_content": "svm的一些笔记，自己的一些见解，挑了自己能看懂的部分，点击看原图。<!--more-->\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/05/IMG20180512230730.jpg\"><img class=\"alignnone wp-image-641 size-large\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/05/IMG20180512230730-768x1024.jpg\" alt=\"\" width=\"525\" height=\"700\" /></a>\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/05/IMG20180512230754.jpg\"><img class=\"alignnone wp-image-642 size-large\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/05/IMG20180512230754-768x1024.jpg\" alt=\"\" width=\"525\" height=\"700\" /></a>",
            "post_title": "svm的一些理解---《机器学习》周志华",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "svm%e7%9a%84%e4%b8%80%e4%ba%9b%e7%90%86%e8%a7%a3-%e3%80%8a%e6%9c%ba%e5%99%a8%e5%ad%a6%e4%b9%a0%e3%80%8b%e5%91%a8%e5%bf%97%e5%8d%8e",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-7-6 13:26:23",
            "post_modified_gmt": "2018-7-6 05:26:23",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=640",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "641",
            "post_author": "1",
            "post_date": "2018-5-12 23:20:10",
            "post_date_gmt": "2018-5-12 15:20:10",
            "post_content": "",
            "post_title": "IMG20180512230730",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "img20180512230730",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-5-12 23:20:10",
            "post_modified_gmt": "2018-5-12 15:20:10",
            "post_content_filtered": "",
            "post_parent": "640",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2018/05/IMG20180512230730.jpg",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/jpeg",
            "comment_count": "0"
        },
        {
            "ID": "642",
            "post_author": "1",
            "post_date": "2018-5-12 23:20:19",
            "post_date_gmt": "2018-5-12 15:20:19",
            "post_content": "",
            "post_title": "IMG20180512230754",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "img20180512230754",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-5-12 23:20:19",
            "post_modified_gmt": "2018-5-12 15:20:19",
            "post_content_filtered": "",
            "post_parent": "640",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2018/05/IMG20180512230754.jpg",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/jpeg",
            "comment_count": "0"
        },
        {
            "ID": "643",
            "post_author": "1",
            "post_date": "2018-5-12 23:21:29",
            "post_date_gmt": "2018-5-12 15:21:29",
            "post_content": "svm的一些笔记，自己的一些见解，挑了自己能看懂的部分。\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/05/IMG20180512230730.jpg\"><img class=\"alignnone wp-image-641 size-large\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/05/IMG20180512230730-768x1024.jpg\" alt=\"\" width=\"525\" height=\"700\" /></a>\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/05/IMG20180512230754.jpg\"><img class=\"alignnone wp-image-642 size-large\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/05/IMG20180512230754-768x1024.jpg\" alt=\"\" width=\"525\" height=\"700\" /></a>",
            "post_title": "svm的一些理解---《机器学习》周志华",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "640-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-5-12 23:21:29",
            "post_modified_gmt": "2018-5-12 15:21:29",
            "post_content_filtered": "",
            "post_parent": "640",
            "guid": "http://ganjiacheng.cn/blog/?p=643",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "644",
            "post_author": "1",
            "post_date": "2018-5-12 23:23:00",
            "post_date_gmt": "2018-5-12 15:23:00",
            "post_content": "svm的一些笔记，自己的一些见解，挑了自己能看懂的部分，点击看原图。<!--more-->\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/05/IMG20180512230730.jpg\"><img class=\"alignnone wp-image-641 size-large\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/05/IMG20180512230730-768x1024.jpg\" alt=\"\" width=\"525\" height=\"700\" /></a>\r\n\r\n<a href=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/05/IMG20180512230754.jpg\"><img class=\"alignnone wp-image-642 size-large\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/05/IMG20180512230754-768x1024.jpg\" alt=\"\" width=\"525\" height=\"700\" /></a>",
            "post_title": "svm的一些理解---《机器学习》周志华",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "640-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-5-12 23:23:00",
            "post_modified_gmt": "2018-5-12 15:23:00",
            "post_content_filtered": "",
            "post_parent": "640",
            "guid": "http://ganjiacheng.cn/blog/?p=644",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "647",
            "post_author": "1",
            "post_date": "2018-5-23 10:32:38",
            "post_date_gmt": "2018-5-23 02:32:38",
            "post_content": "这是一波2018年456月间找暑假实习时的面经。<!--more-->\r\n\r\n第一个面到的是海康威视。\r\n\r\n投的是测试开发岗。我个人对测试开发的态度是工具可能没用过，学起来就好了。编程基础还是在的，掌握起来不难，所以比较自信。\r\n\r\n发邮箱投了回复的很快，没两天就笔试，然后面试。笔试比较简单就一个工具的使用(打包安装包)，当然是看不懂他初始的代码，但根据报错信息也改对了。\r\n\r\n我因为特殊情况也实际表态了要暑假入职。然而没过两天还是收到面试邀请了。不出意外他们招人很急，(这么快肯定急呀)。面试过程也没多墨迹，简单了解简历上的经历后，让当场看段代码说出功能，这段应该是他们正在用的吧，各个函数还得深入进去也比较复杂(不是逻辑上的复杂，而是不在那个情景中你知道他要干嘛)，我有些犹豫，因为我想明白的是他整个main的目的，而不是只是把ifelse逻辑说一说，就一直询问着，然后就没了，直接拒绝了。总的30分钟。\r\n\r\n想来他们是要急招的，而我要暑假入职，这点和hr就我明说了，如果因为这点被t，那我是不服的。当然如果我超级符合要求他们也可以等，但我本来也不是做测试的(谁tm大学本科学测试啊)，肯定不会很符合啊，都要学起来的。总的来说给我感觉就很随意，这场面试本来就注定失败。抬走，下一个。\r\n\r\n<hr />\r\n\r\n阿里。投的是新零售的算法实习岗，先有初步测验(性格测验)，然后等了近一个月，才开放了在线笔试，中间还莫名有个笔试模拟题，感觉没啥帮助，只让我感受一下难度。在线笔试，30分钟11个选择题，每个题都不是瞄一眼可得到结果的(对我这种小白来说)，涉及算法复杂度，机器学习基础概念，概率论，长到不想读的题，算也算不出的题，题目读不懂的题等。笔试还有两道编程题，时间1h，我的两个题都是用dfs解决的，第一时间想不到好的方法就暴力的遍历，当然其中剪枝做得好其实也不慢。本地运行可以了放上去运行竟然0%通过，那时时间也不多了也就没想着再改算法了，草草交卷。\r\n\r\n<hr />\r\n\r\n大华。投的是测试实习岗，因为算法岗都要研究生以上，投了也没软用。我恰好参加了个他们公司弄的软件挑战赛(初赛比的是基础的算法解题，类似leetcode)，又恰好进了复赛(也就可以免笔试资格)，待续～\r\n\r\n<hr />\r\n\r\n蘑菇街。投的是算法实习岗。投了以后两星期以内参加了在线笔试，但他那个笔试系统是在牛客网上的，题库应该也是牛客网提供。有些题甚至有些眼熟，哈哈。笔试有选择题，简答题，编程题。难度比阿里肯定简单些，而且如果你日常在牛客网刷题，那些个题很多能熟悉。然后至今待续～\r\n\r\n<hr />\r\n\r\n还有一些较小公司的，没有这么多复杂的环节，发了简历都是直接上来技术面试，我觉得倒是对于自己来说比较轻松（讨厌刁难人的笔试，首先我做的你看不看我不知道，参考多少也不知道，但我还得拼命做，死了脑细胞做完了直接拒绝/接受面试等权利都在你手上，仿佛我只有等结果的份？难道真是在笔试中学习不足，这就和你是啥啥就该干啥啥的一个套路。如年轻人就该多吃苦）。\r\n\r\n默安科技；投的是python开发，没几天hr就来了电，也没聊什么，直接就让换个时间技术电话面试。晚9点左右的电话面试（看来他们9点还没下班啊！！），我也没特地准备，该知道的就说，不知道的直接回不知道（拖着反而尴尬）。几类问题吧：简介，项目经验（问各个用到的技术点以及拓展，比如我说用了mongodb，就问你mongodb和mysql对比），数据结构（二叉树，问了从上往下遍历递归非递归；链表，问了确定中间点，快慢指针法），算法（了解的几个排序，具体的说了快排的思路），linux（问了看端口监听，看进程的命令），计算机网络（问了ping的协议，tcp/udp的区别）；    总的来说问的不是特别难，在我说不会时也不会特地刁难，总长在30分钟不到，竟然问了这么多问题，很紧凑，目的明确，不拖泥带水（觉得这个对于面试者和被面试者都很重要）。",
            "post_title": "面经",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "630-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-5-23 10:32:38",
            "post_modified_gmt": "2018-5-23 02:32:38",
            "post_content_filtered": "",
            "post_parent": "630",
            "guid": "http://ganjiacheng.cn/blog/?p=647",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "648",
            "post_author": "1",
            "post_date": "2018-5-23 11:28:01",
            "post_date_gmt": "2018-5-23 03:28:01",
            "post_content": "这是一波2018年456月间找暑假及应届生实习时的面试经验记录。<!--more-->\r\n\r\n第一个面到的是海康威视。\r\n\r\n投的是测试开发岗。我个人对测试开发的态度是工具可能没用过，学起来就好了。编程基础还是在的，掌握起来不难，所以比较自信。\r\n\r\n发邮箱投了回复的很快，没两天就笔试，然后面试。笔试比较简单就一个工具的使用(打包安装包)，当然是看不懂他初始的代码，但根据报错信息也改对了。\r\n\r\n我因为特殊情况也实际表态了要暑假入职。然而没过两天还是收到面试邀请了。不出意外他们招人很急，(这么快肯定急呀)。面试过程也没多墨迹，简单了解简历上的经历后，让当场看段代码说出功能，这段应该是他们正在用的吧，各个函数还得深入进去也比较复杂(不是逻辑上的复杂，而是不在那个情景中你知道他要干嘛)，我有些犹豫，因为我想明白的是他整个main的目的，而不是只是把ifelse逻辑说一说，就一直询问着，然后就没了，直接拒绝了。总的30分钟。\r\n\r\n想来他们是要急招的，而我要暑假入职，这点和hr就我明说了，如果因为这点被t，那我是不服的。当然如果我超级符合要求他们也可以等，但我本来也不是做测试的(谁tm大学本科学测试啊)，肯定不会很符合啊，都要学起来的。总的来说给我感觉就很随意，这场面试本来就注定失败。抬走，下一个。\r\n\r\n<hr />\r\n\r\n阿里。投的是新零售的算法实习岗，先有初步测验(性格测验)，然后等了近一个月，才开放了在线笔试，中间还莫名有个笔试模拟题，感觉没啥帮助，只让我感受一下难度。在线笔试，30分钟11个选择题，每个题都不是瞄一眼可得到结果的(对我这种小白来说)，涉及算法复杂度，机器学习基础概念，概率论，长到不想读的题，算也算不出的题，题目读不懂的题等。笔试还有两道编程题，时间1h，我的两个题都是用dfs解决的，第一时间想不到好的方法就暴力的遍历，当然其中剪枝做得好其实也不慢。本地运行可以了放上去运行竟然0%通过，那时时间也不多了也就没想着再改算法了，草草交卷。\r\n\r\n<hr />\r\n\r\n大华。投的是测试实习岗，因为算法岗都要研究生以上，投了也没软用。我恰好参加了个他们公司弄的软件挑战赛(初赛比的是基础的算法解题，类似leetcode)，又恰好进了复赛(也就可以免笔试资格)，待续～\r\n\r\n<hr />\r\n\r\n蘑菇街。投的是算法实习岗。投了以后两星期以内参加了在线笔试，但他那个笔试系统是在牛客网上的，题库应该也是牛客网提供。有些题甚至有些眼熟，哈哈。笔试有选择题，简答题，编程题。难度比阿里肯定简单些，而且如果你日常在牛客网刷题，那些个题很多能熟悉。然后至今待续～\r\n\r\n<hr />\r\n\r\n还有一些较小公司的，没有这么多复杂的环节，发了简历都是直接上来技术面试，我觉得倒是对于自己来说比较轻松（讨厌刁难人的笔试，首先我做的你看不看我不知道，参考多少也不知道，但我还得拼命做，死了脑细胞做完了直接拒绝/接受面试等权利都在你手上，仿佛我只有等结果的份？难道真是在笔试中学习不足，这就和你是啥啥就该干啥啥的一个套路。如年轻人就该多吃苦）。\r\n\r\n默安科技；投的是python开发，没几天hr就来了电，也没聊什么，直接就让换个时间技术电话面试。晚9点左右的电话面试（看来他们9点还没下班啊！！），我也没特地准备，该知道的就说，不知道的直接回不知道（拖着反而尴尬）。几类问题吧：简介，项目经验（问各个用到的技术点以及拓展，比如我说用了mongodb，就问你mongodb和mysql对比），数据结构（二叉树，问了从上往下遍历递归非递归；链表，问了确定中间点，快慢指针法），算法（了解的几个排序，具体的说了快排的思路），linux（问了看端口监听，看进程的命令），计算机网络（问了ping的协议，tcp/udp的区别）；    总的来说问的不是特别难，在我说不会时也不会特地刁难，总长在25分钟不到，竟然问了这么多问题，很紧凑，目的明确，不拖泥带水（觉得这个对于面试者和被面试者都很重要）。隔天收到offer。\r\n\r\n&nbsp;",
            "post_title": "一小波面经",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "630-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-5-23 11:28:01",
            "post_modified_gmt": "2018-5-23 03:28:01",
            "post_content_filtered": "",
            "post_parent": "630",
            "guid": "http://ganjiacheng.cn/blog/?p=648",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "649",
            "post_author": "1",
            "post_date": "2018-5-23 11:29:29",
            "post_date_gmt": "2018-5-23 03:29:29",
            "post_content": "这是一波2018年456月间找暑假及应届生实习时的面试经验记录。<!--more-->\r\n\r\n第一个面到的是海康威视。\r\n\r\n投的是测试开发岗。我个人对测试开发的态度是工具可能没用过，学起来就好了。编程基础还是在的，掌握起来不难，所以比较自信。\r\n\r\n发邮箱投了回复的很快，没两天就笔试，然后面试。笔试比较简单就一个工具的使用(打包安装包)，当然是看不懂他初始的代码，但根据报错信息也改对了。\r\n\r\n我因为特殊情况也实际表态了要暑假入职。然而没过两天还是收到面试邀请了。不出意外他们招人很急，(这么快肯定急呀)。面试过程也没多墨迹，简单了解简历上的经历后，让当场看段代码说出功能，这段应该是他们正在用的吧，各个函数还得深入进去也比较复杂(不是逻辑上的复杂，而是不在那个情景中你知道他要干嘛)，我有些犹豫，因为我想明白的是他整个main的目的，而不是只是把ifelse逻辑说一说，就一直询问着，然后就没了，直接拒绝了。总的30分钟。\r\n\r\n想来他们是要急招的，而我要暑假入职，这点和hr就我明说了，如果因为这点被t，那我是不服的。当然如果我超级符合要求他们也可以等，但我本来也不是做测试的(谁tm大学本科学测试啊)，肯定不会很符合啊，都要学起来的。总的来说给我感觉就很随意，这场面试本来就注定失败。抬走，下一个。\r\n\r\n<hr />\r\n\r\n阿里。投的是新零售的算法实习岗，先有初步测验(性格测验)，然后等了近一个月，才开放了在线笔试，中间还莫名有个笔试模拟题，感觉没啥帮助，只让我感受一下难度。在线笔试，30分钟11个选择题，每个题都不是瞄一眼可得到结果的(对我这种小白来说)，涉及算法复杂度，机器学习基础概念，概率论，长到不想读的题，算也算不出的题，题目读不懂的题等。笔试还有两道编程题，时间1h，我的两个题都是用dfs解决的，第一时间想不到好的方法就暴力的遍历，当然其中剪枝做得好其实也不慢。本地运行可以了放上去运行竟然0%通过，那时时间也不多了也就没想着再改算法了，草草交卷。\r\n\r\n<hr />\r\n\r\n大华。投的是测试实习岗，因为算法岗都要研究生以上，投了也没软用。我恰好参加了个他们公司弄的软件挑战赛(初赛比的是基础的算法解题，类似leetcode)，又恰好进了复赛(也就可以免笔试资格)，待续～\r\n\r\n<hr />\r\n\r\n蘑菇街。投的是算法实习岗。投了以后两星期以内参加了在线笔试，但他那个笔试系统是在牛客网上的，题库应该也是牛客网提供。有些题甚至有些眼熟，哈哈。笔试有选择题，简答题，编程题。难度比阿里肯定简单些，而且如果你日常在牛客网刷题，那些个题很多能熟悉。然后至今待续～\r\n\r\n<hr />\r\n\r\n还有一些较小公司的，没有这么多复杂的环节，发了简历都是直接上来技术面试，我觉得倒是对于自己来说比较轻松（讨厌刁难人的笔试，首先我做的你看不看我不知道，参考多少也不知道，但我还得拼命做，死了脑细胞做完了直接拒绝/接受面试等权利都在你手上，仿佛我只有等结果的份？难道真是在笔试中学习不足，这就和你是啥啥就该干啥啥的一个套路。如年轻人就该多吃苦）。\r\n\r\n默安科技；投的是python开发，没几天hr就来了电，也没聊什么，直接就让换个时间技术电话面试。晚9点左右的电话面试（看来他们9点还没下班啊！！），我也没特地准备，该知道的就说，不知道的直接回不知道（拖着反而尴尬）。几类问题吧：简介，项目经验（问各个用到的技术点以及拓展，比如我说用了mongodb，就问你mongodb和mysql对比），数据结构（二叉树，问了从上往下遍历递归版非递归版；链表，问了如何确定中间点，快慢指针法），算法（了解的几个排序，具体的说了快排的思路），linux（问了看端口监听，看进程的命令），计算机网络（问了ping的协议，tcp/udp的区别）；    总的来说问的不是特别难，在我说不会时也不会特地刁难，总长在25分钟不到，竟然问了这么多问题，很紧凑，目的明确，不拖泥带水（觉得这个对于面试者和被面试者都很重要）。隔天收到offer。\r\n\r\n&nbsp;",
            "post_title": "一小波面经",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "630-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-5-23 11:29:29",
            "post_modified_gmt": "2018-5-23 03:29:29",
            "post_content_filtered": "",
            "post_parent": "630",
            "guid": "http://ganjiacheng.cn/blog/?p=649",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "650",
            "post_author": "1",
            "post_date": "2018-5-23 11:45:54",
            "post_date_gmt": "2018-5-23 03:45:54",
            "post_content": "在leetcode遇到二叉树就卡机，恶补下这种数据结构，想想都难。<!--more-->\n\n首先是节点构建和插入，这里的插入形式用来下面排序，小的在左，大的在右。\n<pre>class Node():\n    def __init__(self, val=None, left= None, right=None):\n        self.val = val\n        self.left = left\n        self.right = right\n\n    def add(self, val):\n        if val &lt; self.val:\n            if self.left is None:\n                self.left = Node(val)\n            else:\n                self.left.add(val)\n        else:\n            if self.right is None:\n                self.right = Node(val)\n            else:\n                self.right.add(val)</pre>\n然后是三种遍历方式\n<pre>#先序\ndef front(root,res=[]):\n    if root == None:\n        return\n    res.append(root.val)\n    front(root.left,res)\n    front(root.right,res)\n    return res\n#中序（这个的得到的便是排序后的数组）\ndef middle(root,res=[]):\n    if root == None:\n        return\n    front(root.left,res)\n    res.append(root.val)\n    front(root.right,res)\n    return res\n#后序\ndef end(root,res=[]):\n    if root == None:\n        return\n    front(root.left,res)\n    front(root.right,res)\n    res.append(root.val)\n    return res</pre>\n下面是一些应用\n\n1.判断二叉树是否是左右镜像的\n\n思路：输入根节点左右两个节点，判断两节点是否相同，然后递归判断左节点的左节点和右节点的右节点 以及 左节点的右节点和右节点的左节点。\n<pre>def judge(left,right):\n    if left is None and right is None:\n        return True\n    if (left is None and right is not None) or (right is None and left is not None) or right.val != left.val:\n        return False\n    return judge(left.left,right.right) and judge(left.right,right.left)</pre>\n2.二叉树最大深度\n\n思路：左右节点分别设一个长度，进入深一层长度就加一，返回的是两者之间大的一方，也就的到所有路径深度中最大的一个。\n<pre>def depth(root):\n    if root is None:\n        return 0\n    l = depth(root.left)\n    r = depth(root.right)\n    return max([l,r])+1</pre>\n3.左右翻转二叉树\n\n思路：也就是把二叉树中所有的左右节点都换一下便可。\n<pre>def invertTree(root):\n    if root is None:\n        return None\n    if root.left:\n        invertTree(root.left)\n    if root.right:\n        invertTree(root.right)\n    root.left,root.right = root.right,root.left\n    return root</pre>\n4.二叉树右往左的叠加和\n\n思路：设立一个全局的和，对于每个节点都加上这个和，然后更新和，把节点从右往左遍历便是把中序遍历反一下。\n<pre>sum = 0\ndef bst(self,root):\n    if root is None:\n        return\n    self.bst(root.right)\n    root.val += sum\n    sum = root.val\n    self.bst(root.left)</pre>\n5.最长子树长度，可不过根节点\n\n思路：在最大深度的基础上，添加一个变量来计算每次的左右子树和。\n<pre>res = 0\ndef depth(self,root):\n    if root is None:\n        return 0\n    l = self.depth(root.left)\n    r = self.depth(root.right)\n    res = max(res,l+r)\n    return max([l,r])+1</pre>\n6.判断一个树是否是另一个的子树\n\n思路：对主树递归所有节点，只要有一个是子树成立便可。每次在递归检查子树与主树是否相同，这里所有节点都要一样。\n<pre>class Solution(object):\n    def isSubtree(self, s, t):\n        if not s or not t:\n            return not s and not t\n        if self.check(s,t):\n            return True\n        return self.isSubtree(s.left,t) or self.isSubtree(s.right,t)\n    \n    def check(self,s,t):\n        if not s or not t:\n            return not s and not t\n        if s.val != t.val:\n            return False\n        return self.check(s.left,t.left) and self.check(s.right,t.right)</pre>\n7.合并二叉树\n\n思路：遍历两个二叉树的节点，把和加到一个二叉树上\n<pre>def mergeTrees(self, t1, t2):\n    if t1 is not None and t2 is not None:\n        t1.left = self.mergeTrees(t1.left,t2.left)\n        t1.right = self.mergeTrees(t1.right,t2.right)\n        t1.val += t2.val\n        return t1\n    return t1 if t2 is None else t2</pre>",
            "post_title": "整理下二叉树",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "609-autosave-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-5-23 11:45:54",
            "post_modified_gmt": "2018-5-23 03:45:54",
            "post_content_filtered": "",
            "post_parent": "609",
            "guid": "http://ganjiacheng.cn/blog/?p=650",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "653",
            "post_author": "1",
            "post_date": "2018-5-24 10:33:34",
            "post_date_gmt": "2018-5-24 02:33:34",
            "post_content": "这是一波2018年456月间找暑假及应届生实习时的面试经验记录。<!--more-->\r\n\r\n第一个面到的是海康威视。\r\n\r\n投的是测试开发岗。我个人对测试开发的态度是工具可能没用过，学起来就好了。编程基础还是在的，掌握起来不难，所以比较自信。\r\n\r\n发邮箱投了回复的很快，没两天就笔试，然后面试。笔试比较简单就一个工具的使用(打包安装包)，当然是看不懂他初始的代码，但根据报错信息也改对了。\r\n\r\n我因为特殊情况也实际表态了要暑假入职。然而没过两天还是收到面试邀请了。不出意外他们招人很急，(这么快肯定急呀)。面试过程也没多墨迹，简单了解简历上的经历后，让当场看段代码说出功能，这段应该是他们正在用的吧，各个函数还得深入进去也比较复杂(不是逻辑上的复杂，而是不在那个情景中你知道他要干嘛)，我有些犹豫，因为我想明白的是他整个main的目的，而不是只是把ifelse逻辑说一说，就一直询问着，然后就没了，直接拒绝了。总的30分钟。\r\n\r\n想来他们是要急招的，而我要暑假入职，这点和hr就我明说了，如果因为这点被t，那我是不服的。当然如果我超级符合要求他们也可以等，但我本来也不是做测试的(谁tm大学本科学测试啊)，肯定不会很符合啊，都要学起来的。总的来说给我感觉就很随意，这场面试本来就注定失败。抬走，下一个。\r\n\r\n<hr />\r\n\r\n阿里。投的是新零售的算法实习岗，先有初步测验(性格测验)，然后等了近一个月，才开放了在线笔试，中间还莫名有个笔试模拟题，感觉没啥帮助，只让我感受一下难度。在线笔试，30分钟11个选择题，每个题都不是瞄一眼可得到结果的(对我这种小白来说)，涉及算法复杂度，机器学习基础概念，概率论，长到不想读的题，算也算不出的题，题目读不懂的题等。笔试还有两道编程题，时间1h，我的两个题都是用dfs解决的，第一时间想不到好的方法就暴力的遍历，当然其中剪枝做得好其实也不慢。本地运行可以了放上去运行竟然0%通过，那时时间也不多了也就没想着再改算法了，草草交卷。\r\n\r\n<hr />\r\n\r\n大华。投的是测试实习岗，因为算法岗都要研究生以上，投了也没软用。我恰好参加了个他们公司弄的软件挑战赛(初赛比的是基础的算法解题，类似leetcode)，又恰好进了复赛(也就可以免笔试资格)，待续～\r\n\r\n<hr />\r\n\r\n蘑菇街。投的是算法实习岗。投了以后两星期以内参加了在线笔试，但他那个笔试系统是在牛客网上的，题库应该也是牛客网提供。有些题甚至有些眼熟，哈哈。笔试有选择题，简答题，编程题。难度比阿里肯定简单些，而且如果你日常在牛客网刷题，那些个题很多能熟悉。然后一个月没消息，只能说雷声大雨点小。\r\n\r\n<hr />\r\n\r\n还有一些较小公司的，没有这么多复杂的环节，发了简历都是直接上来技术面试，我觉得倒是对于自己来说比较轻松（讨厌刁难人的笔试，首先我做的你看不看我不知道，参考多少也不知道，但我还得拼命做，死了脑细胞做完了直接拒绝/接受面试等权利都在你手上，仿佛我只有等结果的份？难道真是在笔试中学习不足，这就和你是啥啥就该干啥啥的一个套路。如年轻人就该多吃苦）。\r\n\r\n默安科技；投的是python开发，没几天hr就来了电，也没聊什么，直接就让换个时间技术电话面试。晚9点左右的电话面试（看来他们9点还没下班啊！！），我也没特地准备，该知道的就说，不知道的直接回不知道（拖着反而尴尬）。几类问题吧：简介，项目经验（问各个用到的技术点以及拓展，比如我说用了mongodb，就问你mongodb和mysql对比），数据结构（二叉树，问了从上往下遍历递归版非递归版；链表，问了如何确定中间点，快慢指针法），算法（了解的几个排序，具体的说了快排的思路），linux（问了看端口监听，看进程的命令），计算机网络（问了ping的协议，tcp/udp的区别）；    总的来说问的不是特别难，在我说不会时也不会特地刁难，总长在25分钟不到，竟然问了这么多问题，很紧凑，目的明确，不拖泥带水（觉得这个对于面试者和被面试者都很重要）。隔天收到offer。\r\n\r\n&nbsp;",
            "post_title": "一小波面经",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "630-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-5-24 10:33:34",
            "post_modified_gmt": "2018-5-24 02:33:34",
            "post_content_filtered": "",
            "post_parent": "630",
            "guid": "http://ganjiacheng.cn/blog/?p=653",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "654",
            "post_author": "1",
            "post_date": "2018-5-24 10:44:14",
            "post_date_gmt": "2018-5-24 02:44:14",
            "post_content": "<ul>\r\n \t<li>封闭的修炼 与 随性的创作</li>\r\n</ul>\r\n常常想着要提升自己，又由很多闭门修炼的别人家的故事的影响，也想尝试一把。\r\n\r\n常常会憋出病来，或许就是前者的一般结局，主要由于不太规律的饮食习惯和作息，一个人常常就会如此。\r\n\r\n随性创作则是在日常生活的基础上有空便随性的想一些事情，有时候便会有特别的灵感。然后在对此进行特别的记录与操作。\r\n\r\n本人较为喜欢走走路然后想着事情，或许就会得到最佳的解决方案。\r\n<ul>\r\n \t<li>所谓的原则 与 我可以将就</li>\r\n</ul>\r\n主要还是本人租房时的一些所遇，如果你不准确的定一个上线和下线，你将难以租到想要的房子，因为总会有更好看的价格贵些，更便宜的设施差些，而那些推荐你的人总会推荐更贵的，一次次下压你的底线。\r\n\r\n如果这时候你讲一句 我可以将就，那相当于你的底线进一步得到了下降，他还可以推荐给你更好一些的，价格也就贵一丢丢。然后你又要考虑将就不将就呢。\r\n\r\n而定下原则即对于各种指标定好上下限，无论怎么诱惑你也不能超过这个原则，则你马上就能找到与原则相应的目标。\r\n<ul>\r\n \t<li>有车 与 没车</li>\r\n</ul>\r\n看到一个说法：有说有车没车是完全不一样的人生，而豪车和二手车对人生来说差不了多少。暂时接纳这个观点，虽然还没到买车的地步。公共交通出行对于我一个人来说是没什么，但身边总不止我一个人，还有我家人，甚至未来的女友孩子。我想在路上有一个独立的小空间供聊聊天，出门再也不用看天气，说旅行就旅行等都是车带来的享受。暂定个小目标买车！",
            "post_title": "花还是字？（人生选择篇）--持续更新",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "605-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-5-24 10:44:14",
            "post_modified_gmt": "2018-5-24 02:44:14",
            "post_content_filtered": "",
            "post_parent": "605",
            "guid": "http://ganjiacheng.cn/blog/?p=654",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "655",
            "post_author": "1",
            "post_date": "2019-3-5 17:32:36",
            "post_date_gmt": "0-0-0 00:00:00",
            "post_content": "2018.7.1 大三暑假 存款6000 工薪4000+ 计划: 先工作一年，毕业，然后找一份工薪1w+的，工作两年，10万左右代步车。30岁前买一套小户型房。\r\n\r\n2019.3.5 存款12000，薪资无。",
            "post_title": "big plan",
            "post_excerpt": "",
            "post_status": "draft",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2019-3-5 17:32:36",
            "post_modified_gmt": "2019-3-5 09:32:36",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?page_id=655",
            "menu_order": "0",
            "post_type": "page",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "656",
            "post_author": "1",
            "post_date": "2018-5-28 19:27:24",
            "post_date_gmt": "2018-5-28 11:27:24",
            "post_content": "2018.7.1 存款6000 工薪4000+ 计划:工作一年，毕业后找一份工薪1w+的，工作两年，10万左右代步车。30岁前买一套小户型房。",
            "post_title": "big plan",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "655-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-5-28 19:27:24",
            "post_modified_gmt": "2018-5-28 11:27:24",
            "post_content_filtered": "",
            "post_parent": "655",
            "guid": "http://ganjiacheng.cn/blog/?p=656",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "657",
            "post_author": "1",
            "post_date": "2018-5-28 19:28:23",
            "post_date_gmt": "2018-5-28 11:28:23",
            "post_content": "2018.7.1 大三暑假 存款6000 工薪4000+ 计划:先工作一年，毕业，然后找一份工薪1w+的，工作两年，10万左右代步车。30岁前买一套小户型房。",
            "post_title": "big plan",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "655-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-5-28 19:28:23",
            "post_modified_gmt": "2018-5-28 11:28:23",
            "post_content_filtered": "",
            "post_parent": "655",
            "guid": "http://ganjiacheng.cn/blog/?p=657",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "658",
            "post_author": "1",
            "post_date": "2018-5-28 19:28:48",
            "post_date_gmt": "2018-5-28 11:28:48",
            "post_content": "2018.7.1 大三暑假 存款6000 工薪4000+ 计划: 先工作一年，毕业，然后找一份工薪1w+的，工作两年，10万左右代步车。30岁前买一套小户型房。",
            "post_title": "big plan",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "655-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-5-28 19:28:48",
            "post_modified_gmt": "2018-5-28 11:28:48",
            "post_content_filtered": "",
            "post_parent": "655",
            "guid": "http://ganjiacheng.cn/blog/?p=658",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "660",
            "post_author": "1",
            "post_date": "2018-6-4 15:59:41",
            "post_date_gmt": "2018-6-4 07:59:41",
            "post_content": "这是一波2018年456月间找暑假及应届生实习时的面试经验记录。<!--more-->\r\n\r\n第一个面到的是海康威视。\r\n\r\n投的是测试开发岗。我个人对测试开发的态度是工具可能没用过，学起来就好了。编程基础还是在的，掌握起来不难，所以比较自信。\r\n\r\n发邮箱投了回复的很快，没两天就笔试，然后面试。笔试比较简单就一个工具的使用(打包安装包)，当然是看不懂他初始的代码，但根据报错信息也改对了。\r\n\r\n我因为特殊情况也实际表态了要暑假入职。然而没过两天还是收到面试邀请了。不出意外他们招人很急，(这么快肯定急呀)。面试过程也没多墨迹，简单了解简历上的经历后，让当场看段代码说出功能，这段应该是他们正在用的吧，各个函数还得深入进去也比较复杂(不是逻辑上的复杂，而是不在那个情景中你知道他要干嘛)，我有些犹豫，因为我想明白的是他整个main的目的，而不是只是把ifelse逻辑说一说，就一直询问着，然后就没了，直接拒绝了。总的30分钟。\r\n\r\n想来他们是要急招的，而我要暑假入职，这点和hr就我明说了，如果因为这点被t，那我是不服的。当然如果我超级符合要求他们也可以等，但我本来也不是做测试的(谁tm大学本科学测试啊)，肯定不会很符合啊，都要学起来的。总的来说给我感觉就很随意，这场面试本来就注定失败。抬走，下一个。\r\n\r\n<hr />\r\n\r\n阿里。投的是新零售的算法实习岗，先有初步测验(性格测验)，然后等了近一个月，才开放了在线笔试，中间还莫名有个笔试模拟题，感觉没啥帮助，只让我感受一下难度。在线笔试，30分钟11个选择题，每个题都不是瞄一眼可得到结果的(对我这种小白来说)，涉及算法复杂度，机器学习基础概念，概率论，长到不想读的题，算也算不出的题，题目读不懂的题等。笔试还有两道编程题，时间1h，我的两个题都是用dfs解决的，第一时间想不到好的方法就暴力的遍历，当然其中剪枝做得好其实也不慢。本地运行可以了放上去运行竟然0%通过，那时时间也不多了也就没想着再改算法了，草草交卷。\r\n\r\n<hr />\r\n\r\n大华。投的是测试实习岗，因为算法岗都要研究生以上，投了也没软用。我恰好参加了个他们公司弄的软件挑战赛(初赛比的是基础的算法解题，类似leetcode,在博客前几篇有具体讲述)，又恰好进了复赛(也就可以免笔试资格)，待续～\r\n\r\n<hr />\r\n\r\n蘑菇街。投的是算法实习岗。投了以后两星期以内参加了在线笔试，但他那个笔试系统是在牛客网上的，题库应该也是牛客网提供。有些题甚至有些眼熟，哈哈。笔试有选择题，简答题，编程题。难度比阿里肯定简单些，而且如果你日常在牛客网刷题，那些个题很多能熟悉。然后一个月没消息，只能说雷声大雨点小。\r\n\r\n<hr />\r\n\r\n还有一些较小公司的，没有这么多复杂的环节，发了简历都是直接上来技术面试，我觉得倒是对于自己来说比较轻松（讨厌刁难人的笔试，首先我做的你看不看我不知道，参考多少也不知道，但我还得拼命做，死了脑细胞做完了直接拒绝/接受面试等权利都在你手上，仿佛我只有等结果的份？难道真是在笔试中学习不足，这就和你是啥啥就该干啥啥的一个套路。如年轻人就该多吃苦）。\r\n\r\n默安科技；投的是python开发，没几天hr就来了电，也没聊什么，直接就让换个时间技术电话面试。晚9点左右的电话面试（看来他们9点还没下班啊！！），我也没特地准备，该知道的就说，不知道的直接回不知道（拖着反而尴尬）。几类问题吧：简介，项目经验（问各个用到的技术点以及拓展，比如我说用了mongodb，就问你mongodb和mysql对比），数据结构（二叉树，问了从上往下遍历递归版非递归版；链表，问了如何确定中间点，快慢指针法），算法（了解的几个排序，具体的说了快排的思路），linux（问了看端口监听，看进程的命令），计算机网络（问了ping的协议，tcp/udp的区别）；    总的来说问的不是特别难，在我说不会时也不会特地刁难，总长在25分钟不到，竟然问了这么多问题，很紧凑，目的明确，不拖泥带水（觉得这个对于面试者和被面试者都很重要）。隔天收到offer。",
            "post_title": "一小波面经",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "630-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-6-4 15:59:41",
            "post_modified_gmt": "2018-6-4 07:59:41",
            "post_content_filtered": "",
            "post_parent": "630",
            "guid": "http://ganjiacheng.cn/blog/?p=660",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "664",
            "post_author": "1",
            "post_date": "2018-6-4 16:29:50",
            "post_date_gmt": "2018-6-4 08:29:50",
            "post_content": "<ul>\r\n \t<li>封闭的修炼 与 随性的创作</li>\r\n</ul>\r\n常常想着要提升自己，又由很多闭门修炼的别人家的故事的影响，也想尝试一把。\r\n\r\n常常会憋出病来，或许就是前者的一般结局，主要由于不太规律的饮食习惯和作息，一个人常常就会如此。\r\n\r\n随性创作则是在日常生活的基础上有空便随性的想一些事情，有时候便会有特别的灵感。然后在对此进行特别的记录与操作。\r\n\r\n本人较为喜欢走走路然后想着事情，或许就会得到最佳的解决方案。\r\n<ul>\r\n \t<li>所谓的原则 与 我可以将就</li>\r\n</ul>\r\n主要还是本人租房时的一些所遇，如果你不准确的定一个上线和下线，你将难以租到想要的房子，因为总会有更好看的价格贵些，更便宜的设施差些，而那些推荐你的人总会推荐更贵的，一次次下压你的底线。\r\n\r\n如果这时候你讲一句 我可以将就，那相当于你的底线进一步得到了下降，他还可以推荐给你更好一些的，价格也就贵一丢丢。然后你又要考虑将就不将就呢。\r\n\r\n而定下原则即对于各种指标定好上下限，无论怎么诱惑你也不能超过这个原则，则你马上就能找到与原则相应的目标。\r\n<ul>\r\n \t<li>有车 与 没车</li>\r\n</ul>\r\n看到一个说法：有说有车没车是完全不一样的人生，而豪车和二手车对人生来说差不了多少。暂时接纳这个观点，虽然还没到买车的地步。公共交通出行对于我一个人来说是没什么，但身边总不止我一个人，还有我家人，甚至未来的女友孩子。我想在路上有一个独立的小空间供聊聊天，出门再也不用看天气，说旅行就旅行等都是车带来的享受。暂定个小目标买车！\r\n<ul>\r\n \t<li>规划的是 与 非</li>\r\n</ul>\r\n规划真是个奇妙的东西，之前我还一直觉得规划好的事情做起来比较顺手，可以去除自身的焦虑，如每天要干什么（如今天规划明天，上午的我有课，下午弹会琴，晚上看直播，随机写代码）。\r\n\r\n没想到心内的焦虑也有一部分是规划产生的。就比如我大学的6月份，找着实习的机会，但只能暑假才开始入职，这个本是对暑假以及日后的一种规划，没想到很快找着了，但想着一个月后一定会去那里工作反而产生一种既想去又想去后会发生的事情的焦虑，所以这个我觉得在我入职前都会伴随着这种心绪，影响肯定是坏的，至少在一个月里坏了我不少心情与增加了不少压力。\r\n\r\n猜测可能日常的你可调的规划是好的（如你要看一本书，你可以规划这周看完，但你看不完也没人管），带压力的强制的规划是自己给自己找麻烦（如你想着去考个英语46级，考试临近你的焦虑自然便产生了，而且是递增的）。或许：船到桥头自然直才是最好的。",
            "post_title": "花 与 字",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "605-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-6-4 16:29:50",
            "post_modified_gmt": "2018-6-4 08:29:50",
            "post_content_filtered": "",
            "post_parent": "605",
            "guid": "http://ganjiacheng.cn/blog/?p=664",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "665",
            "post_author": "1",
            "post_date": "2018-6-4 16:30:17",
            "post_date_gmt": "2018-6-4 08:30:17",
            "post_content": "<ul>\r\n \t<li>封闭的修炼 与 随性的创作</li>\r\n</ul>\r\n常常想着要提升自己，又由很多闭门修炼的别人家的故事的影响，也想尝试一把。\r\n\r\n常常会憋出病来，或许就是前者的一般结局，主要由于不太规律的饮食习惯和作息，一个人常常就会如此。\r\n\r\n随性创作则是在日常生活的基础上有空便随性的想一些事情，有时候便会有特别的灵感。然后在对此进行特别的记录与操作。\r\n\r\n本人较为喜欢走走路然后想着事情，或许就会得到最佳的解决方案。\r\n<ul>\r\n \t<li>所谓的原则 与 我可以将就</li>\r\n</ul>\r\n主要还是本人租房时的一些所遇，如果你不准确的定一个上线和下线，你将难以租到想要的房子，因为总会有更好看的价格贵些，更便宜的设施差些，而那些推荐你的人总会推荐更贵的，一次次下压你的底线。\r\n\r\n如果这时候你讲一句 我可以将就，那相当于你的底线进一步得到了下降，他还可以推荐给你更好一些的，价格也就贵一丢丢。然后你又要考虑将就不将就呢。\r\n\r\n而定下原则即对于各种指标定好上下限，无论怎么诱惑你也不能超过这个原则，则你马上就能找到与原则相应的目标。\r\n<ul>\r\n \t<li>有车 与 没车</li>\r\n</ul>\r\n看到一个说法：有说有车没车是完全不一样的人生，而豪车和二手车对人生来说差不了多少。暂时接纳这个观点，虽然还没到买车的地步。公共交通出行对于我一个人来说是没什么，但身边总不止我一个人，还有我家人，甚至未来的女友孩子。我想在路上有一个独立的小空间供聊聊天，出门再也不用看天气，说旅行就旅行等都是车带来的享受。暂定个小目标买车！\r\n<ul>\r\n \t<li>规划的是 与 非</li>\r\n</ul>\r\n规划真是个奇妙的东西，之前我还一直觉得规划好的事情做起来比较顺手，可以去除自身的焦虑，如每天要干什么（如今天规划明天，上午的我有课，下午弹会琴，晚上看直播，随机写代码）。\r\n\r\n没想到心内的焦虑也有一部分是规划产生的。就比如我大学的6月份，找着实习的机会，但只能暑假才开始入职，这个本是对暑假以及日后的一种规划，没想到很快找着了，但想着一个月后一定会去那里工作反而产生一种既想去又想去后会发生的事情的焦虑，所以这个我觉得在我入职前都会伴随着这种心绪，影响肯定是坏的，至少在一个月里坏了我不少心情与增加了不少压力。\r\n\r\n猜测可能日常的你可调的规划是好的（如你要看一本书，你可以规划这周看完，但你看不完也没人管），带压力的强制的规划是自己给自己找麻烦（如你想着去考个英语46级，考试临近你的焦虑自然便产生了，而且是递增的）。或许：船到桥头自然直才是最好的。",
            "post_title": "花 与 字 （持续更新）",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "605-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-6-4 16:30:17",
            "post_modified_gmt": "2018-6-4 08:30:17",
            "post_content_filtered": "",
            "post_parent": "605",
            "guid": "http://ganjiacheng.cn/blog/?p=665",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "666",
            "post_author": "1",
            "post_date": "2018-6-4 16:31:09",
            "post_date_gmt": "2018-6-4 08:31:09",
            "post_content": "<!--more-->\r\n<ul>\r\n \t<li>封闭的修炼 与 随性的创作</li>\r\n</ul>\r\n常常想着要提升自己，又由很多闭门修炼的别人家的故事的影响，也想尝试一把。\r\n\r\n常常会憋出病来，或许就是前者的一般结局，主要由于不太规律的饮食习惯和作息，一个人常常就会如此。\r\n\r\n随性创作则是在日常生活的基础上有空便随性的想一些事情，有时候便会有特别的灵感。然后在对此进行特别的记录与操作。\r\n\r\n本人较为喜欢走走路然后想着事情，或许就会得到最佳的解决方案。\r\n<ul>\r\n \t<li>所谓的原则 与 我可以将就</li>\r\n</ul>\r\n主要还是本人租房时的一些所遇，如果你不准确的定一个上线和下线，你将难以租到想要的房子，因为总会有更好看的价格贵些，更便宜的设施差些，而那些推荐你的人总会推荐更贵的，一次次下压你的底线。\r\n\r\n如果这时候你讲一句 我可以将就，那相当于你的底线进一步得到了下降，他还可以推荐给你更好一些的，价格也就贵一丢丢。然后你又要考虑将就不将就呢。\r\n\r\n而定下原则即对于各种指标定好上下限，无论怎么诱惑你也不能超过这个原则，则你马上就能找到与原则相应的目标。\r\n<ul>\r\n \t<li>有车 与 没车</li>\r\n</ul>\r\n看到一个说法：有说有车没车是完全不一样的人生，而豪车和二手车对人生来说差不了多少。暂时接纳这个观点，虽然还没到买车的地步。公共交通出行对于我一个人来说是没什么，但身边总不止我一个人，还有我家人，甚至未来的女友孩子。我想在路上有一个独立的小空间供聊聊天，出门再也不用看天气，说旅行就旅行等都是车带来的享受。暂定个小目标买车！\r\n<ul>\r\n \t<li>规划的是 与 非</li>\r\n</ul>\r\n规划真是个奇妙的东西，之前我还一直觉得规划好的事情做起来比较顺手，可以去除自身的焦虑，如每天要干什么（如今天规划明天，上午的我有课，下午弹会琴，晚上看直播，随机写代码）。\r\n\r\n没想到心内的焦虑也有一部分是规划产生的。就比如我大学的6月份，找着实习的机会，但只能暑假才开始入职，这个本是对暑假以及日后的一种规划，没想到很快找着了，但想着一个月后一定会去那里工作反而产生一种既想去又想去后会发生的事情的焦虑，所以这个我觉得在我入职前都会伴随着这种心绪，影响肯定是坏的，至少在一个月里坏了我不少心情与增加了不少压力。\r\n\r\n猜测可能日常的你可调的规划是好的（如你要看一本书，你可以规划这周看完，但你看不完也没人管），带压力的强制的规划是自己给自己找麻烦（如你想着去考个英语46级，考试临近你的焦虑自然便产生了，而且是递增的）。或许：船到桥头自然直才是最好的。",
            "post_title": "花 与 字 （持续更新）",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "605-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-6-4 16:31:09",
            "post_modified_gmt": "2018-6-4 08:31:09",
            "post_content_filtered": "",
            "post_parent": "605",
            "guid": "http://ganjiacheng.cn/blog/?p=666",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "667",
            "post_author": "1",
            "post_date": "2018-6-6 23:26:22",
            "post_date_gmt": "2018-6-6 15:26:22",
            "post_content": "如有雷同，纯属巧合。\n\n<!--more-->\n<ul>\n \t<li>封闭的修炼 与 随性的创作</li>\n</ul>\n常常想着要提升自己，又由很多闭门修炼的别人家的故事的影响，也想尝试一把。\n\n常常会憋出病来，或许就是前者的一般结局，主要由于不太规律的饮食习惯和作息，一个人常常就会如此。\n\n随性创作则是在日常生活的基础上有空便随性的想一些事情，有时候便会有特别的灵感。然后在对此进行特别的记录与操作。\n\n本人较为喜欢走走路然后想着事情，或许就会得到最佳的解决方案。\n<ul>\n \t<li>所谓的原则 与 我可以将就</li>\n</ul>\n主要还是本人租房时的一些所遇，如果你不准确的定一个上线和下线，你将难以租到想要的房子，因为总会有更好看的价格贵些，更便宜的设施差些，而那些推荐你的人总会推荐更贵的，一次次下压你的底线。\n\n如果这时候你讲一句 我可以将就，那相当于你的底线进一步得到了下降，他还可以推荐给你更好一些的，价格也就贵一丢丢。然后你又要考虑将就不将就呢。\n\n而定下原则即对于各种指标定好上下限，无论怎么诱惑你也不能超过这个原则，则你马上就能找到与原则相应的目标。\n<ul>\n \t<li>有车 与 没车</li>\n</ul>\n看到一个说法：有说有车没车是完全不一样的人生，而豪车和二手车对人生来说差不了多少。暂时接纳这个观点，虽然还没到买车的地步。公共交通出行对于我一个人来说是没什么，但身边总不止我一个人，还有我家人，甚至未来的女友孩子。我想在路上有一个独立的小空间供聊聊天，出门再也不用看天气，说旅行就旅行等都是车带来的享受。暂定个小目标买车！\n<ul>\n \t<li>规划的是 与 非</li>\n</ul>\n规划真是个奇妙的东西，之前我还一直觉得规划好的事情做起来比较顺手，可以去除自身的焦虑，如每天要干什么（如今天规划明天，上午的我有课，下午弹会琴，晚上看直播，随机写代码）。\n\n没想到心内的焦虑也有一部分是规划产生的。就比如我大学的6月份，找着实习的机会，但只能暑假才开始入职，这个本是对暑假以及日后的一种规划，没想到很快找着了，但想着一个月后一定会去那里工作反而产生一种既想去又想去后会发生的事情的焦虑，所以这个我觉得在我入职前都会伴随着这种心绪，影响肯定是坏的，至少在一个月里坏了我不少心情与增加了不少压力。\n\n猜测可能日常的你可调的规划是好的（如你要看一本书，你可以规划这周看完，但你看不完也没人管），带压力的强制的规划是自己给自己找麻烦（如你想着去考个英语46级，考试临近你的焦虑自然便产生了，而且是递增的）。或许：船到桥头自然直才是最好的。\n<ul>\n \t<li>自我催眠 与 自我安慰</li>\n</ul>",
            "post_title": "花 与 字 （持续更新）",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "605-autosave-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-6-6 23:26:22",
            "post_modified_gmt": "2018-6-6 15:26:22",
            "post_content_filtered": "",
            "post_parent": "605",
            "guid": "http://ganjiacheng.cn/blog/?p=667",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "668",
            "post_author": "1",
            "post_date": "2018-6-4 16:34:42",
            "post_date_gmt": "2018-6-4 08:34:42",
            "post_content": "如有雷同，纯属巧合。\r\n\r\n<!--more-->\r\n<ul>\r\n \t<li>封闭的修炼 与 随性的创作</li>\r\n</ul>\r\n常常想着要提升自己，又由很多闭门修炼的别人家的故事的影响，也想尝试一把。\r\n\r\n常常会憋出病来，或许就是前者的一般结局，主要由于不太规律的饮食习惯和作息，一个人常常就会如此。\r\n\r\n随性创作则是在日常生活的基础上有空便随性的想一些事情，有时候便会有特别的灵感。然后在对此进行特别的记录与操作。\r\n\r\n本人较为喜欢走走路然后想着事情，或许就会得到最佳的解决方案。\r\n<ul>\r\n \t<li>所谓的原则 与 我可以将就</li>\r\n</ul>\r\n主要还是本人租房时的一些所遇，如果你不准确的定一个上线和下线，你将难以租到想要的房子，因为总会有更好看的价格贵些，更便宜的设施差些，而那些推荐你的人总会推荐更贵的，一次次下压你的底线。\r\n\r\n如果这时候你讲一句 我可以将就，那相当于你的底线进一步得到了下降，他还可以推荐给你更好一些的，价格也就贵一丢丢。然后你又要考虑将就不将就呢。\r\n\r\n而定下原则即对于各种指标定好上下限，无论怎么诱惑你也不能超过这个原则，则你马上就能找到与原则相应的目标。\r\n<ul>\r\n \t<li>有车 与 没车</li>\r\n</ul>\r\n看到一个说法：有说有车没车是完全不一样的人生，而豪车和二手车对人生来说差不了多少。暂时接纳这个观点，虽然还没到买车的地步。公共交通出行对于我一个人来说是没什么，但身边总不止我一个人，还有我家人，甚至未来的女友孩子。我想在路上有一个独立的小空间供聊聊天，出门再也不用看天气，说旅行就旅行等都是车带来的享受。暂定个小目标买车！\r\n<ul>\r\n \t<li>规划的是 与 非</li>\r\n</ul>\r\n规划真是个奇妙的东西，之前我还一直觉得规划好的事情做起来比较顺手，可以去除自身的焦虑，如每天要干什么（如今天规划明天，上午的我有课，下午弹会琴，晚上看直播，随机写代码）。\r\n\r\n没想到心内的焦虑也有一部分是规划产生的。就比如我大学的6月份，找着实习的机会，但只能暑假才开始入职，这个本是对暑假以及日后的一种规划，没想到很快找着了，但想着一个月后一定会去那里工作反而产生一种既想去又想去后会发生的事情的焦虑，所以这个我觉得在我入职前都会伴随着这种心绪，影响肯定是坏的，至少在一个月里坏了我不少心情与增加了不少压力。\r\n\r\n猜测可能日常的你可调的规划是好的（如你要看一本书，你可以规划这周看完，但你看不完也没人管），带压力的强制的规划是自己给自己找麻烦（如你想着去考个英语46级，考试临近你的焦虑自然便产生了，而且是递增的）。或许：船到桥头自然直才是最好的。",
            "post_title": "花 与 字 （持续更新）",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "605-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-6-4 16:34:42",
            "post_modified_gmt": "2018-6-4 08:34:42",
            "post_content_filtered": "",
            "post_parent": "605",
            "guid": "http://ganjiacheng.cn/blog/?p=668",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "669",
            "post_author": "1",
            "post_date": "2018-6-6 18:55:43",
            "post_date_gmt": "2018-6-6 10:55:43",
            "post_content": "这里主要尝试一个用背景减除法实现运动检测<!--more-->\r\n\r\n视频是yuv格式，这里讲一下yuv的格式读取。用二进制读取yuv文件，从开头开始前w*h个字符的ascii码则是第一帧的灰度图（8位int），后面第w//2*h//2*2个字符存的是rgb信息。然后开始是第二帧。\r\n\r\n这里基本思路就是每次更新背景，然后做差分，然后优化噪声。\r\n\r\n直接上代码\r\n<pre>import cv2\r\nimport os\r\nimport numpy as np\r\n\r\nclass AnimTest():\r\n    def __init__(self):\r\n        self.bg = None    #存背景，用int16\r\n        self.n = 0        #用于计数第几张图\r\n\r\n    def resolution(self, w, h):\r\n        self.w = w\r\n        self.h = h\r\n        self.im = np.zeros((h,w))   #差分去噪处理后的返回矩阵\r\n\r\n    def cell_split(self, row, col):  \r\n        self.r = self.h // row     #每格高\r\n        self.c = self.w // col     #每格宽\r\n\r\n        # draw\r\n        '''\r\n        for i in range(self.r-1, self.h-1, self.r):\r\n            self.im[i] = 0\r\n        for j in range(self.c-1, self.w-1, self.c):\r\n            tmp = self.im.T\r\n            tmp[j] = 0\r\n        self.im = tmp.T\r\n        '''\r\n\r\n    def dir_region(self, x, y, x1, y1):\r\n        #计算真实的左上，右下坐标\r\n        self.x = self.c * x         \r\n        self.y = self.r * y\r\n        self.x1 = self.c * x1 - 1\r\n        self.y1 = self.r * y1 - 1\r\n        #print(self.x,self.y,self.x1,self.y1)\r\n\r\n        #draw\r\n        '''\r\n        for i in range(self.c * x,self.c * x1):\r\n            self.im[self.y][i] = 255\r\n            self.im[self.y1][i] = 255\r\n        for i in range(self.r * y,self.r * y1):\r\n            self.im[i][self.x] = 255\r\n            self.im[i][self.x1] = 255\r\n        '''\r\n\r\n    def set_threshold(self, t, s):\r\n        self.t = t\r\n        self.s = s\r\n\r\n    def yuv_process(self,im):\r\n        if self.bg is None:\r\n            self.bg = im.astype(np.int16)\r\n        #self.im = np.abs(self.bg-im)\r\n        '''\r\n        for i in range(self.x,self.x1):\r\n            for j in range(self.y,self.y1):\r\n                if im[i][j]&gt;self.bg[i][j]:\r\n                    self.im[i][j] = im[i][j]-self.bg[i][j]\r\n                else:\r\n                    self.im[i][j] = self.bg[i][j]-im[i][j]\r\n                if self.im[i][j] &lt; 20:\r\n                    self.im[i][j] = 0\r\n        '''\r\n        #self.im = self.fgbg.apply(im)\r\n        #背景数据得新背景\r\n        self.n += 1\r\n        tmpbg = (self.bg / self.n).astype(np.uint8)  #背景除次数，转为uint8格式\r\n\r\n        #优化图像与背景差分后的图像\r\n        self.im = cv2.absdiff(im,tmpbg)            #做差\r\n        self.im[np.where(self.im&lt;50)] = 0          #二值\r\n        self.im[np.where(self.im&gt;=50)] = 255\r\n        #mean = self.im.mean()\r\n        #var = self.im.std()\r\n        #print(mean,var)\r\n        #self.im[np.where(np.abs(self.im - mean) - 2.0 * var &gt; 0)] = 255\r\n        #self.im[np.where(self.im != 255)] = 0\r\n\r\n        #背景迭代更新储存背景数据\r\n        #im[np.where(self.im==255)] = 0\r\n        self.bg = self.bg + im                    #背景叠加\r\n        #print(self.bg[0][0])\r\n        #print(im.dtype)\r\n\r\n\r\n        #kernel = cv2.getStructuringElement(cv2.MORPH_RECT,(2,2))      #膨胀或腐蚀大小\r\n        #self.im = cv2.erode(self.im,kernel)        #膨胀\r\n        #kernel = cv2.getStructuringElement(cv2.MORPH_RECT,(10,10))\r\n        #self.im = cv2.dilate(self.im,kernel)       #腐蚀\r\n        #self.im = cv2.morphologyEx(self.im, cv2.MORPH_OPEN, kernel)    #开运算\r\n        #这里没返回，直接到展示show()\r\n\r\n    def show(self,i):\r\n        res=cv2.resize(self.im,(192*5,108*5),interpolation = cv2.INTER_CUBIC)\r\n        cv2.imshow('image', res)\r\n        cv2.waitKey(20)\r\n        #print(i)\r\n        #cv2.imwrite(\"tmp/\"+str(i)+\".jpg\",self.im)\r\n\r\n\r\ndef readYuvFile1(fp,width,height):\r\n    uv_width=width//2\r\n    uv_height=height//2\r\n\r\n    Y=np.zeros((height,width),np.uint8,'C')\r\n\r\n    for m in range(height):\r\n        for n in range(width):\r\n            Y[m,n]=ord(fp.read(1))\r\n\r\n    fp.read(uv_height*uv_width*2)\r\n\r\n    return Y\r\n\r\n\r\nif __name__ == \"__main__\": \r\n    #fgbg = cv2.bgsegm.createBackgroundSubtractorMOG()       #opencv 封装的一些背景减除方法MOG，MOG2等\r\n    #下载图\r\n    '''\r\n    width = 1920\r\n    height = 1080\r\n    fp = open(\"雨+夜+马路1_1920x1080.yuv\",'rb+')\r\n\r\n    for i in range(100):\r\n        print(i)\r\n        data = readYuvFile(fp,width,height)\r\n        Y=data[0]\r\n        cv2.imwrite(\"image/\"+str(i)+\".jpg\",Y)\r\n    '''\r\n\r\n    #初始化\r\n    t = AnimTest()\r\n    width = 1920\r\n    height = 1080\r\n    t.resolution(width,height)\r\n    t.cell_split(108,192)\r\n    t.dir_region(0,0,108,192)\r\n    t.set_threshold(10,50)\r\n\r\n    #处理展示，这里直接用的下载好的图\r\n    for i in range(100):\r\n        #im = readYuvFile1(fp,width,height)\r\n        im = cv2.imread(\"image/\"+str(i)+\".jpg\",0)\r\n        t.yuv_process(im)\r\n        t.show(i)</pre>\r\n效果如下：\r\n\r\n<img class=\"alignnone size-medium wp-image-671\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/06/微信图片_20180606185250-300x169.png\" alt=\"\" width=\"300\" height=\"169\" />\r\n\r\n对于室内人物移动效果还是可以的，但对于不位移或有遮挡干扰等效果还是不行。",
            "post_title": "视频运动检测尝试",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e8%a7%86%e9%a2%91%e8%bf%90%e5%8a%a8%e6%a3%80%e6%b5%8b%e5%b0%9d%e8%af%95",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-6-6 18:55:43",
            "post_modified_gmt": "2018-6-6 10:55:43",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=669",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "670",
            "post_author": "1",
            "post_date": "2018-6-6 18:33:28",
            "post_date_gmt": "2018-6-6 10:33:28",
            "post_content": "这里主要尝试一个用背景减除法实现运动检测<!--more-->\r\n\r\n直接上代码\r\n<pre></pre>",
            "post_title": "视频运动检测尝试",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "669-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-6-6 18:33:28",
            "post_modified_gmt": "2018-6-6 10:33:28",
            "post_content_filtered": "",
            "post_parent": "669",
            "guid": "http://ganjiacheng.cn/blog/?p=670",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "671",
            "post_author": "1",
            "post_date": "2018-6-6 18:53:42",
            "post_date_gmt": "2018-6-6 10:53:42",
            "post_content": "",
            "post_title": "微信图片_20180606185250",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "open",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "%e5%be%ae%e4%bf%a1%e5%9b%be%e7%89%87_20180606185250",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-6-6 18:53:42",
            "post_modified_gmt": "2018-6-6 10:53:42",
            "post_content_filtered": "",
            "post_parent": "669",
            "guid": "http://ganjiacheng.cn/blog/wp-content/uploads/2018/06/微信图片_20180606185250.png",
            "menu_order": "0",
            "post_type": "attachment",
            "post_mime_type": "image/png",
            "comment_count": "0"
        },
        {
            "ID": "672",
            "post_author": "1",
            "post_date": "2018-6-6 18:55:43",
            "post_date_gmt": "2018-6-6 10:55:43",
            "post_content": "这里主要尝试一个用背景减除法实现运动检测<!--more-->\r\n\r\n视频是yuv格式，这里讲一下yuv的格式读取。用二进制读取yuv文件，从开头开始前w*h个字符的ascii码则是第一帧的灰度图（8位int），后面第w//2*h//2*2个字符存的是rgb信息。然后开始是第二帧。\r\n\r\n这里基本思路就是每次更新背景，然后做差分，然后优化噪声。\r\n\r\n直接上代码\r\n<pre>import cv2\r\nimport os\r\nimport numpy as np\r\n\r\nclass AnimTest():\r\n    def __init__(self):\r\n        self.bg = None    #存背景，用int16\r\n        self.n = 0        #用于计数第几张图\r\n\r\n    def resolution(self, w, h):\r\n        self.w = w\r\n        self.h = h\r\n        self.im = np.zeros((h,w))   #差分去噪处理后的返回矩阵\r\n\r\n    def cell_split(self, row, col):  \r\n        self.r = self.h // row     #每格高\r\n        self.c = self.w // col     #每格宽\r\n\r\n        # draw\r\n        '''\r\n        for i in range(self.r-1, self.h-1, self.r):\r\n            self.im[i] = 0\r\n        for j in range(self.c-1, self.w-1, self.c):\r\n            tmp = self.im.T\r\n            tmp[j] = 0\r\n        self.im = tmp.T\r\n        '''\r\n\r\n    def dir_region(self, x, y, x1, y1):\r\n        #计算真实的左上，右下坐标\r\n        self.x = self.c * x         \r\n        self.y = self.r * y\r\n        self.x1 = self.c * x1 - 1\r\n        self.y1 = self.r * y1 - 1\r\n        #print(self.x,self.y,self.x1,self.y1)\r\n\r\n        #draw\r\n        '''\r\n        for i in range(self.c * x,self.c * x1):\r\n            self.im[self.y][i] = 255\r\n            self.im[self.y1][i] = 255\r\n        for i in range(self.r * y,self.r * y1):\r\n            self.im[i][self.x] = 255\r\n            self.im[i][self.x1] = 255\r\n        '''\r\n\r\n    def set_threshold(self, t, s):\r\n        self.t = t\r\n        self.s = s\r\n\r\n    def yuv_process(self,im):\r\n        if self.bg is None:\r\n            self.bg = im.astype(np.int16)\r\n        #self.im = np.abs(self.bg-im)\r\n        '''\r\n        for i in range(self.x,self.x1):\r\n            for j in range(self.y,self.y1):\r\n                if im[i][j]&gt;self.bg[i][j]:\r\n                    self.im[i][j] = im[i][j]-self.bg[i][j]\r\n                else:\r\n                    self.im[i][j] = self.bg[i][j]-im[i][j]\r\n                if self.im[i][j] &lt; 20:\r\n                    self.im[i][j] = 0\r\n        '''\r\n        #self.im = self.fgbg.apply(im)\r\n        #背景数据得新背景\r\n        self.n += 1\r\n        tmpbg = (self.bg / self.n).astype(np.uint8)  #背景除次数，转为uint8格式\r\n\r\n        #优化图像与背景差分后的图像\r\n        self.im = cv2.absdiff(im,tmpbg)            #做差\r\n        self.im[np.where(self.im&lt;50)] = 0          #二值\r\n        self.im[np.where(self.im&gt;=50)] = 255\r\n        #mean = self.im.mean()\r\n        #var = self.im.std()\r\n        #print(mean,var)\r\n        #self.im[np.where(np.abs(self.im - mean) - 2.0 * var &gt; 0)] = 255\r\n        #self.im[np.where(self.im != 255)] = 0\r\n\r\n        #背景迭代更新储存背景数据\r\n        #im[np.where(self.im==255)] = 0\r\n        self.bg = self.bg + im                    #背景叠加\r\n        #print(self.bg[0][0])\r\n        #print(im.dtype)\r\n\r\n\r\n        #kernel = cv2.getStructuringElement(cv2.MORPH_RECT,(2,2))      #膨胀或腐蚀大小\r\n        #self.im = cv2.erode(self.im,kernel)        #膨胀\r\n        #kernel = cv2.getStructuringElement(cv2.MORPH_RECT,(10,10))\r\n        #self.im = cv2.dilate(self.im,kernel)       #腐蚀\r\n        #self.im = cv2.morphologyEx(self.im, cv2.MORPH_OPEN, kernel)    #开运算\r\n        #这里没返回，直接到展示show()\r\n\r\n    def show(self,i):\r\n        res=cv2.resize(self.im,(192*5,108*5),interpolation = cv2.INTER_CUBIC)\r\n        cv2.imshow('image', res)\r\n        cv2.waitKey(20)\r\n        #print(i)\r\n        #cv2.imwrite(\"tmp/\"+str(i)+\".jpg\",self.im)\r\n\r\n\r\ndef readYuvFile1(fp,width,height):\r\n    uv_width=width//2\r\n    uv_height=height//2\r\n\r\n    Y=np.zeros((height,width),np.uint8,'C')\r\n\r\n    for m in range(height):\r\n        for n in range(width):\r\n            Y[m,n]=ord(fp.read(1))\r\n\r\n    fp.read(uv_height*uv_width*2)\r\n\r\n    return Y\r\n\r\n\r\nif __name__ == \"__main__\": \r\n    #fgbg = cv2.bgsegm.createBackgroundSubtractorMOG()       #opencv 封装的一些背景减除方法MOG，MOG2等\r\n    #下载图\r\n    '''\r\n    width = 1920\r\n    height = 1080\r\n    fp = open(\"雨+夜+马路1_1920x1080.yuv\",'rb+')\r\n\r\n    for i in range(100):\r\n        print(i)\r\n        data = readYuvFile(fp,width,height)\r\n        Y=data[0]\r\n        cv2.imwrite(\"image/\"+str(i)+\".jpg\",Y)\r\n    '''\r\n\r\n    #初始化\r\n    t = AnimTest()\r\n    width = 1920\r\n    height = 1080\r\n    t.resolution(width,height)\r\n    t.cell_split(108,192)\r\n    t.dir_region(0,0,108,192)\r\n    t.set_threshold(10,50)\r\n\r\n    #处理展示，这里直接用的下载好的图\r\n    for i in range(100):\r\n        #im = readYuvFile1(fp,width,height)\r\n        im = cv2.imread(\"image/\"+str(i)+\".jpg\",0)\r\n        t.yuv_process(im)\r\n        t.show(i)</pre>\r\n效果如下：\r\n\r\n<img class=\"alignnone size-medium wp-image-671\" src=\"http://ganjiacheng.cn/blog/wp-content/uploads/2018/06/微信图片_20180606185250-300x169.png\" alt=\"\" width=\"300\" height=\"169\" />\r\n\r\n对于室内人物移动效果还是可以的，但对于不位移或有遮挡干扰等效果还是不行。",
            "post_title": "视频运动检测尝试",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "669-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-6-6 18:55:43",
            "post_modified_gmt": "2018-6-6 10:55:43",
            "post_content_filtered": "",
            "post_parent": "669",
            "guid": "http://ganjiacheng.cn/blog/?p=672",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "680",
            "post_author": "1",
            "post_date": "2018-6-30 16:32:13",
            "post_date_gmt": "2018-6-30 08:32:13",
            "post_content": "买过些基金，想着也可以自己打造个管理基金的，这会儿先弄来个基金数据库。<!--more-->\r\n\r\n基金数据来自于chinafund。\r\n\r\n先前准备：配置好mongodb的环境和下载好pymongo库且使用默认配置\r\n\r\n用于获取数据：jj.py\r\n<pre>#coding:utf-8\r\n#author:~!@#$%^&amp;*()_+ganster\r\nimport io \r\nimport re\r\nimport sys \r\nimport json\r\nimport requests\r\nimport datetime\r\nimport pandas as pd\r\nfrom bs4 import BeautifulSoup\r\nimport time\r\n\r\nsys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding='utf-8')\r\nreq = requests.Session()\r\ntoday = datetime.datetime.today().strftime(\"%Y-%m-%d\")\r\n\r\n#获取单个基金历史净值\r\n#只能用于开放基金\r\n#返回数据dataframe\r\ndef get_jjjz(code,start=\"2018-01-01\",end=today):\r\n    data = {\r\n        \"startdate\": start,\r\n        \"enddate\": today,\r\n        \"code\": code\r\n    }\r\n    resp = req.post(\"http://info.chinafund.cn/fund/\"+code+\"/jjjz/\",data=data)\r\n    htmlstr = resp.text\r\n    print(htmlstr,file=open(\"test.html\",\"w\",encoding=\"utf-8\"))\r\n    arrstr = re.findall(r\"fundlsjz = (.*);\",htmlstr)[0].replace(\"\\'\",\"\\\"\")\r\n    jsondata = json.loads(arrstr)\r\n    data = pd.DataFrame(jsondata,columns=[\"date\",\"dwjz\",\"ljjz\"])\r\n    return data\r\n\r\n#代码 简称 分类 单位净值 累计净值 日增值 日增长 周增 月增 季增 半年增 年增\r\n#获取当日所有基金净值,月增长等\r\n#返回数据dataframe,日期string\r\ndef get_day_info():\r\n    htmlstr = req.get(\"http://data.chinafund.cn/?WebShieldDRSessionVerify=b1U3PfdG5OPHxthA5c4k\")\r\n    htmlstr.encoding=\"gbk\"\r\n    #保存html\r\n    #print(htmlstr.text,file=open(\"test.html\",\"w\",encoding=\"utf-8\"))\r\n    soup = BeautifulSoup(htmlstr.text,\"lxml\")\r\n    date = soup.title.get_text()[10:20]\r\n    node = soup.find_all(\"table\",{\"id\":\"tablesorter\"})[0]\r\n    trnode = node.find_all(\"tr\")\r\n    data = []\r\n    for i in range(1,len(trnode)):\r\n        tdnodes = trnode[i].find_all(\"td\")\r\n        tmp = [tdnodes[2].get_text(),tdnodes[3].get_text(),tdnodes[4].img[\"src\"][-5],tdnodes[5].get_text(),tdnodes[6].get_text(),tdnodes[7].get_text(),tdnodes[8].get_text(),tdnodes[9].get_text(),tdnodes[10].get_text(),tdnodes[11].get_text(),tdnodes[12].get_text(),tdnodes[13].get_text()]\r\n        data.append(tmp)\r\n    res = pd.DataFrame(data,columns=[\"code\",\"name\",\"cate\",\"dwjz\",\"ljjz\",\"rzzhi\",\"rzzha\",\"zhz\",\"yz\",\"jz\",\"bnz\",\"nz\"])\r\n    return res,date\r\n\r\n#获取开放基金列表\r\n#jj_list.csv为上面获取的当日基金code列\r\n#注：当日基金中为全部基金，开放基金只有一部分。\r\ndef get_jj_list():\r\n    return pd.read_csv(\"jj_list1.csv\",index_col=0)\r\n    #make jj_list\r\n    '''\r\n    res = []\r\n    jj_list = pd.read_csv(\"jj_list.csv\")\r\n    resp = req.get(\"http://info.chinafund.cn/\")\r\n    resp.encoding=\"gbk\"\r\n    soup = BeautifulSoup(resp.text,\"lxml\")\r\n    for n in range(1,24):\r\n        divnode = soup.find_all(\"div\",{\"id\":\"kfjj_\"+str(n)})[0]\r\n        trnodes = divnode.find_all(\"tr\")\r\n        for i in range(1,len(trnodes)):\r\n            tdnodes = trnodes[i].find_all(\"td\")\r\n            tmp = [tdnodes[0].get_text(),tdnodes[1].get_text()]\r\n            try:\r\n                tmp.append(int(jj_list[jj_list[\"code\"]==int(tmp[0])][\"cate\"].values[0]))\r\n            except:\r\n                tmp.append(0)\r\n            res.append(tmp)\r\n    data = pd.DataFrame(res,columns=[\"code\",\"name\",\"cate\"])\r\n    '''\r\n\r\n#保存为csv格式\r\ndef save_csv(data,filename=\"nofilename\"):\r\n    data.to_csv(filename+\".csv\",encoding='utf_8_sig')\r\n\r\n#计算关注基金涨跌幅\r\n#返回list\r\ndef jj_zdf(code,start):\r\n    tmp = get_jjjz(code,start=start)\r\n    dwjz = tmp[\"dwjz\"]\r\n    first = dwjz[len(tmp)-1]\r\n    zdf = ((dwjz-first)/first).tolist()[::-1]\r\n    return zdf\r\n\r\n#计算关注股票的涨跌幅\r\n#返回字典，key为基金code\r\ndef jj_follow_zdf(follow):\r\n    zdfs = {}\r\n    for jj in follow:\r\n        print(jj[0])\r\n        try:\r\n            zdfs[jj[0]] = jj_zdf(jj[0],jj[1])\r\n        except:\r\n            print(\"error:\"+jj[0])\r\n        time.sleep(10)\r\n    return zdfs\r\n\r\n#以类别筛选基金\r\n#1-股票型，2-指数型，3-混合型，4-债券型，5-QDII\r\ndef jj_select_cate(category=\"2\"):\r\n    jj_list,_ = get_day_info()\r\n    return jj_list[jj_list['cate']==category]\r\n\r\n#筛选指数型基金并获取一个月涨跌幅\r\ndef jj_test():\r\n    jjs = jj_select_cate(2)\r\n    follow = []\r\n    for i in jjs[\"code\"]:\r\n        follow.append([str(i).zfill(6),\"2018-05-07\"])\r\n    print(json.dump(jj_follow_zdf(follow),open(\"test.json\",\"w\")))</pre>\r\n用于数据库插入：jjdb.py\r\n<pre>from pymongo import MongoClient\r\nimport datetime\r\nimport jj\r\n\r\nclient = MongoClient()\r\nDB = client.jj\r\n\r\n#检查时间是否今天（今天是否是交易日）\r\ndef check_time(date):\r\n    today = datetime.date.today().strftime(\"%Y-%m-%d\")\r\n    if date == today:\r\n        return True\r\n    else:\r\n        return False\r\n\r\n#str转换成float\r\ndef trans_float(num):\r\n    try:\r\n        res = float(num)\r\n    except:\r\n        res = float(0)\r\n    return res\r\n\r\n#插入日期和单位净值\r\ndef insert_data(data,date):\r\n    for i in range(len(data)):\r\n        collection = DB[data.iloc[i][\"code\"]]\r\n        posts = {\"_id\":date,\"value\":trans_float(data.iloc[i][\"dwjz\"])}\r\n        collection.insert_one(posts)\r\n\r\n#主函数\r\ndef main():\r\n    data,date = jj.get_day_info()\r\n    if check_time(date):\r\n        insert_data(data,date)\r\n    else:\r\n        return\r\n\r\nif __name__ == \"__main__\":\r\n    main()</pre>\r\n为了每天定时运行，这里顺便来学一下linux的crontab\r\n<pre>#修改crontab配置文件\r\ncrontab -e</pre>\r\n<pre>示例：\r\n前五个分别为分(0-59) 时(0-23) 天(1-31) 月(1-12) 星期(0-6) \r\n后面是命令\r\n&gt;&gt;之后是log文件\r\n2&gt;&amp;1表示正确错误的log都打印到log文件\r\n* * * * * /usr/local/bin/python3 /home/jjdb.py &gt;&gt; /root/test/test.log 2&gt;&amp;1</pre>\r\n修改完保存就能用。\r\n\r\n这里只做了进净值存储，后期还可以做一些基金管理，统计分析之类的。",
            "post_title": "打造基金小数据库",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e6%89%93%e9%80%a0%e5%9f%ba%e9%87%91%e5%b0%8f%e6%95%b0%e6%8d%ae%e5%ba%93",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-6-30 16:32:13",
            "post_modified_gmt": "2018-6-30 08:32:13",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=680",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "681",
            "post_author": "1",
            "post_date": "2018-6-30 05:17:00",
            "post_date_gmt": "2018-6-29 21:17:00",
            "post_content": "",
            "post_title": "拥有自己的基金小数据库",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "680-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-6-30 05:17:00",
            "post_modified_gmt": "2018-6-29 21:17:00",
            "post_content_filtered": "",
            "post_parent": "680",
            "guid": "http://ganjiacheng.cn/blog/?p=681",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "682",
            "post_author": "1",
            "post_date": "2018-6-30 05:18:15",
            "post_date_gmt": "0-0-0 00:00:00",
            "post_content": "",
            "post_title": "指数分钟数据库和一些简单分析",
            "post_excerpt": "",
            "post_status": "draft",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-6-30 05:18:15",
            "post_modified_gmt": "2018-6-29 21:18:15",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=682",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "683",
            "post_author": "1",
            "post_date": "2018-6-30 05:18:02",
            "post_date_gmt": "2018-6-29 21:18:02",
            "post_content": "",
            "post_title": "指数分钟数据库和一些简单分析",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "682-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-6-30 05:18:02",
            "post_modified_gmt": "2018-6-29 21:18:02",
            "post_content_filtered": "",
            "post_parent": "682",
            "guid": "http://ganjiacheng.cn/blog/?p=683",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "685",
            "post_author": "1",
            "post_date": "2018-6-30 15:48:07",
            "post_date_gmt": "2018-6-30 07:48:07",
            "post_content": "买过些基金，想着也可以自己打造个管理基金的，这会儿先弄来个基金数据库。\r\n\r\n先前准备：配置好mongodb的环境和下载到pymongo库\r\n<pre></pre>",
            "post_title": "打造基金小数据库",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "680-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-6-30 15:48:07",
            "post_modified_gmt": "2018-6-30 07:48:07",
            "post_content_filtered": "",
            "post_parent": "680",
            "guid": "http://ganjiacheng.cn/blog/?p=685",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "686",
            "post_author": "1",
            "post_date": "2018-6-30 16:32:13",
            "post_date_gmt": "2018-6-30 08:32:13",
            "post_content": "买过些基金，想着也可以自己打造个管理基金的，这会儿先弄来个基金数据库。<!--more-->\r\n\r\n基金数据来自于chinafund。\r\n\r\n先前准备：配置好mongodb的环境和下载好pymongo库且使用默认配置\r\n\r\n用于获取数据：jj.py\r\n<pre>#coding:utf-8\r\n#author:~!@#$%^&amp;*()_+ganster\r\nimport io \r\nimport re\r\nimport sys \r\nimport json\r\nimport requests\r\nimport datetime\r\nimport pandas as pd\r\nfrom bs4 import BeautifulSoup\r\nimport time\r\n\r\nsys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding='utf-8')\r\nreq = requests.Session()\r\ntoday = datetime.datetime.today().strftime(\"%Y-%m-%d\")\r\n\r\n#获取单个基金历史净值\r\n#只能用于开放基金\r\n#返回数据dataframe\r\ndef get_jjjz(code,start=\"2018-01-01\",end=today):\r\n    data = {\r\n        \"startdate\": start,\r\n        \"enddate\": today,\r\n        \"code\": code\r\n    }\r\n    resp = req.post(\"http://info.chinafund.cn/fund/\"+code+\"/jjjz/\",data=data)\r\n    htmlstr = resp.text\r\n    print(htmlstr,file=open(\"test.html\",\"w\",encoding=\"utf-8\"))\r\n    arrstr = re.findall(r\"fundlsjz = (.*);\",htmlstr)[0].replace(\"\\'\",\"\\\"\")\r\n    jsondata = json.loads(arrstr)\r\n    data = pd.DataFrame(jsondata,columns=[\"date\",\"dwjz\",\"ljjz\"])\r\n    return data\r\n\r\n#代码 简称 分类 单位净值 累计净值 日增值 日增长 周增 月增 季增 半年增 年增\r\n#获取当日所有基金净值,月增长等\r\n#返回数据dataframe,日期string\r\ndef get_day_info():\r\n    htmlstr = req.get(\"http://data.chinafund.cn/?WebShieldDRSessionVerify=b1U3PfdG5OPHxthA5c4k\")\r\n    htmlstr.encoding=\"gbk\"\r\n    #保存html\r\n    #print(htmlstr.text,file=open(\"test.html\",\"w\",encoding=\"utf-8\"))\r\n    soup = BeautifulSoup(htmlstr.text,\"lxml\")\r\n    date = soup.title.get_text()[10:20]\r\n    node = soup.find_all(\"table\",{\"id\":\"tablesorter\"})[0]\r\n    trnode = node.find_all(\"tr\")\r\n    data = []\r\n    for i in range(1,len(trnode)):\r\n        tdnodes = trnode[i].find_all(\"td\")\r\n        tmp = [tdnodes[2].get_text(),tdnodes[3].get_text(),tdnodes[4].img[\"src\"][-5],tdnodes[5].get_text(),tdnodes[6].get_text(),tdnodes[7].get_text(),tdnodes[8].get_text(),tdnodes[9].get_text(),tdnodes[10].get_text(),tdnodes[11].get_text(),tdnodes[12].get_text(),tdnodes[13].get_text()]\r\n        data.append(tmp)\r\n    res = pd.DataFrame(data,columns=[\"code\",\"name\",\"cate\",\"dwjz\",\"ljjz\",\"rzzhi\",\"rzzha\",\"zhz\",\"yz\",\"jz\",\"bnz\",\"nz\"])\r\n    return res,date\r\n\r\n#获取开放基金列表\r\n#jj_list.csv为上面获取的当日基金code列\r\n#注：当日基金中为全部基金，开放基金只有一部分。\r\ndef get_jj_list():\r\n    return pd.read_csv(\"jj_list1.csv\",index_col=0)\r\n    #make jj_list\r\n    '''\r\n    res = []\r\n    jj_list = pd.read_csv(\"jj_list.csv\")\r\n    resp = req.get(\"http://info.chinafund.cn/\")\r\n    resp.encoding=\"gbk\"\r\n    soup = BeautifulSoup(resp.text,\"lxml\")\r\n    for n in range(1,24):\r\n        divnode = soup.find_all(\"div\",{\"id\":\"kfjj_\"+str(n)})[0]\r\n        trnodes = divnode.find_all(\"tr\")\r\n        for i in range(1,len(trnodes)):\r\n            tdnodes = trnodes[i].find_all(\"td\")\r\n            tmp = [tdnodes[0].get_text(),tdnodes[1].get_text()]\r\n            try:\r\n                tmp.append(int(jj_list[jj_list[\"code\"]==int(tmp[0])][\"cate\"].values[0]))\r\n            except:\r\n                tmp.append(0)\r\n            res.append(tmp)\r\n    data = pd.DataFrame(res,columns=[\"code\",\"name\",\"cate\"])\r\n    '''\r\n\r\n#保存为csv格式\r\ndef save_csv(data,filename=\"nofilename\"):\r\n    data.to_csv(filename+\".csv\",encoding='utf_8_sig')\r\n\r\n#计算关注基金涨跌幅\r\n#返回list\r\ndef jj_zdf(code,start):\r\n    tmp = get_jjjz(code,start=start)\r\n    dwjz = tmp[\"dwjz\"]\r\n    first = dwjz[len(tmp)-1]\r\n    zdf = ((dwjz-first)/first).tolist()[::-1]\r\n    return zdf\r\n\r\n#计算关注股票的涨跌幅\r\n#返回字典，key为基金code\r\ndef jj_follow_zdf(follow):\r\n    zdfs = {}\r\n    for jj in follow:\r\n        print(jj[0])\r\n        try:\r\n            zdfs[jj[0]] = jj_zdf(jj[0],jj[1])\r\n        except:\r\n            print(\"error:\"+jj[0])\r\n        time.sleep(10)\r\n    return zdfs\r\n\r\n#以类别筛选基金\r\n#1-股票型，2-指数型，3-混合型，4-债券型，5-QDII\r\ndef jj_select_cate(category=\"2\"):\r\n    jj_list,_ = get_day_info()\r\n    return jj_list[jj_list['cate']==category]\r\n\r\n#筛选指数型基金并获取一个月涨跌幅\r\ndef jj_test():\r\n    jjs = jj_select_cate(2)\r\n    follow = []\r\n    for i in jjs[\"code\"]:\r\n        follow.append([str(i).zfill(6),\"2018-05-07\"])\r\n    print(json.dump(jj_follow_zdf(follow),open(\"test.json\",\"w\")))</pre>\r\n用于数据库插入：jjdb.py\r\n<pre>from pymongo import MongoClient\r\nimport datetime\r\nimport jj\r\n\r\nclient = MongoClient()\r\nDB = client.jj\r\n\r\n#检查时间是否今天（今天是否是交易日）\r\ndef check_time(date):\r\n    today = datetime.date.today().strftime(\"%Y-%m-%d\")\r\n    if date == today:\r\n        return True\r\n    else:\r\n        return False\r\n\r\n#str转换成float\r\ndef trans_float(num):\r\n    try:\r\n        res = float(num)\r\n    except:\r\n        res = float(0)\r\n    return res\r\n\r\n#插入日期和单位净值\r\ndef insert_data(data,date):\r\n    for i in range(len(data)):\r\n        collection = DB[data.iloc[i][\"code\"]]\r\n        posts = {\"_id\":date,\"value\":trans_float(data.iloc[i][\"dwjz\"])}\r\n        collection.insert_one(posts)\r\n\r\n#主函数\r\ndef main():\r\n    data,date = jj.get_day_info()\r\n    if check_time(date):\r\n        insert_data(data,date)\r\n    else:\r\n        return\r\n\r\nif __name__ == \"__main__\":\r\n    main()</pre>\r\n为了每天定时运行，这里顺便来学一下linux的crontab\r\n<pre>#修改crontab配置文件\r\ncrontab -e</pre>\r\n<pre>示例：\r\n前五个分别为分(0-59) 时(0-23) 天(1-31) 月(1-12) 星期(0-6) \r\n后面是命令\r\n&gt;&gt;之后是log文件\r\n2&gt;&amp;1表示正确错误的log都打印到log文件\r\n* * * * * /usr/local/bin/python3 /home/jjdb.py &gt;&gt; /root/test/test.log 2&gt;&amp;1</pre>\r\n修改完保存就能用。\r\n\r\n这里只做了进净值存储，后期还可以做一些基金管理，统计分析之类的。",
            "post_title": "打造基金小数据库",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "680-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-6-30 16:32:13",
            "post_modified_gmt": "2018-6-30 08:32:13",
            "post_content_filtered": "",
            "post_parent": "680",
            "guid": "http://ganjiacheng.cn/blog/?p=686",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "688",
            "post_author": "1",
            "post_date": "2018-7-5 19:46:09",
            "post_date_gmt": "2018-7-5 11:46:09",
            "post_content": "忍无可忍桌面壁纸软件的广告了，终于决定自己写个，总体逻辑上也并不复杂。\r\n\r\n先是随机爬取某bing站的壁纸图片，调用win32接口改桌面壁纸，之后用tk的桌面程序来获取用户输入时间间隔，最后封装成exe使得更通用，在后台运行以及加个图标。<!--more-->不说了，直接上代码。\r\n\r\n由于是python3.x，库win32api库可能下载会有问题。建议直接去<a href=\"https://sourceforge.net/projects/pywin32/\">这里</a>手动下载安装。\r\n<pre>#coding:utf-8\r\n#python3.5\r\n#windows\r\nfrom PIL import Image\r\nimport win32api,win32con,win32gui  \r\nimport re,os  \r\nimport requests\r\nfrom io import BytesIO\r\nfrom bs4 import BeautifulSoup\r\nimport tkinter\r\nimport random\r\nimport math\r\nimport time\r\nimport re\r\n\r\ndef set_wallpaper_from_bmp(bmp_path):  \r\n    #打开指定注册表路径  \r\n    reg_key = win32api.RegOpenKeyEx(win32con.HKEY_CURRENT_USER,\"Control Panel\\\\Desktop\",0,win32con.KEY_SET_VALUE)  \r\n    #最后的参数:2拉伸,0居中,6适应,10填充,0平铺  \r\n    win32api.RegSetValueEx(reg_key, \"WallpaperStyle\", 0, win32con.REG_SZ, \"2\")  \r\n    #最后的参数:1表示平铺,拉伸居中等都是0  \r\n    win32api.RegSetValueEx(reg_key, \"TileWallpaper\", 0, win32con.REG_SZ, \"0\")  \r\n    #刷新桌面  \r\n    win32gui.SystemParametersInfo(win32con.SPI_SETDESKWALLPAPER,bmp_path, win32con.SPIF_SENDWININICHANGE)  \r\n  \r\ndef set_wallpaper(bgimg):  \r\n    #把图片格式统一转换成bmp格式,并放在源图片的同一目录  \r\n    #注意地址必须是绝对地址\r\n    new_bmp_path=\"C:/backgroundPicture/wallpaper.bmp\"\r\n    bmpImage = Image.open(BytesIO(bgimg))\r\n    bmpImage.save(new_bmp_path, \"BMP\")  \r\n    set_wallpaper_from_bmp(new_bmp_path)  \r\n\r\ndef getPicurl():\r\n    #爬虫部分，主要从这个网站随机取页随机取壁纸，返回图片二进制。\r\n    req=requests.Session()\r\n    resp=req.get(\"https://bing.ioliu.cn/?p=1\")\r\n    soup=BeautifulSoup(resp.text,\"lxml\")\r\n    pageall=soup.find_all(\"span\")[-1].get_text()\r\n    maxpage=int(pageall.split(\"/\")[1].strip())\r\n    ran=math.floor(random.random()*maxpage)+1\r\n    resp1=req.get(\"https://bing.ioliu.cn?p=\"+str(ran))\r\n    soup1=BeautifulSoup(resp1.text,\"lxml\")\r\n    allimg=soup1.find_all(\"img\")\r\n    ran1=math.floor(random.random()*len(allimg))\r\n    resp2=req.get(\"https://bing.ioliu.cn\"+allimg[ran1].next_sibling['href'])\r\n    url=re.findall(r'src=\"http(.*?)\"',resp2.text)[0]\r\n    image=req.get(\"http\"+url)\r\n    return image.content\r\n\r\ndef inputint():\r\n    #获取用户输入的时间\r\n    global t\r\n    try:\r\n        t = int(var.get().strip())\r\n    except:\r\n        t = 30\r\n    root.destroy()\r\n\r\nif __name__ == '__main__':  \r\n    t=0\r\n    if not os.path.exists('C:/backgroundPicture/'):\r\n        os.mkdir(\"C:/backgroundPicture/\")\r\n    root = tkinter.Tk(className='请输入间隔时间(按分钟计)')  # 弹出框框名\r\n    root.geometry('350x60')     # 设置弹出框的大小 w x h\r\n    var = tkinter.StringVar()   # 这即是输入框中的内容\r\n    var.set(30) # 通过var.get()/var.set() 来 获取/设置var的值\r\n    entry1 = tkinter.Entry(root, textvariable=var)  # 设置\"文本变量\"为var\r\n    entry1.pack()   # 将entry\"打上去\"\r\n    btn1 = tkinter.Button(root, text='确认', command=inputint)     # 按下此按钮(Input), 触发inputint函数\r\n    btn1.pack(side='bottom')\r\n    root.mainloop()\r\n    #一直运行并用sleep间隔\r\n    while True:\r\n        bgimg=getPicurl()\r\n        set_wallpaper(bgimg)\r\n        time.sleep(int(t*60))</pre>\r\n关于打包成exe，在python3有个pyinstaller，直接用pip安装就行。\r\n\r\n使用方式是以下，-F打包单个文件，-w不显示命令窗口，-i图标\r\n<pre>pyinstaller -F -w -i bitbug_favicon.ico filename.py</pre>\r\n以上便是自动换桌面壁纸，另附这里添加一个功能，就是在程序运行时用按键触发换壁纸。要做的便是另写一个线程做按键监听。这里用pyHook做按键监听，关于pyhook的安装，不能简单用pip，不然用按键监听的时候会有一个bug。\r\n\r\n参考：<a href=\"https://blog.csdn.net/dongfuguo/article/details/70226384#reply\">https://blog.csdn.net/dongfuguo/article/details/70226384#reply</a>\r\n<pre>from ctypes import *\r\nimport pyHook\r\nimport pythoncom\r\nimport threading\r\ndef onKeyboardEvent(event):\r\n    global lt\r\n    #96为1左边那个按键，这里写法是双击\r\n    if event.Ascii==96:\r\n        if time.time()-lt&lt;2:\r\n            bgimg=getPicurl()\r\n            set_wallpaper(bgimg)\r\n        else:\r\n            lt=time.time()\r\n    return True\r\ndef task0():\r\n    hm = pyHook.HookManager()\r\n    hm.KeyDown = onKeyboardEvent\r\n    hm.HookKeyboard()\r\n    pythoncom.PumpMessages()\r\ndef task1():\r\n    global t\r\n    while True:\r\n        bgimg=getPicurl()\r\n        set_wallpaper(bgimg)\r\n        time.sleep(int(t*60))\r\nthreads = []\r\n    t1 = threading.Thread(target=task0)\r\n    threads.append(t1)\r\n    t0 = threading.Thread(target=task1)\r\n    threads.append(t0)\r\n    for i in range(2):\r\n        threads[i].start()\r\n    for i in range(2):\r\n        threads[i].join()</pre>\r\n这段代码结合上面部分便可以完成一个自动换桌面且可按键手动换桌面的程序。\r\n\r\n最后贴一下应用程序<a href=\"http://pan.baidu.com/s/1c1YXoje\">下载地址。</a>",
            "post_title": "用python写个自动改壁纸的桌面程序",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "427-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-7-5 19:46:09",
            "post_modified_gmt": "2018-7-5 11:46:09",
            "post_content_filtered": "",
            "post_parent": "427",
            "guid": "http://ganjiacheng.cn/blog/?p=688",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "689",
            "post_author": "1",
            "post_date": "2018-7-6 13:21:54",
            "post_date_gmt": "2018-7-6 05:21:54",
            "post_content": "python篇：\r\n\r\n1.windows上，在pip install xxx失败的时候怎么办？\r\n\r\n答：<a href=\"http://www.lfd.uci.edu/~gohlke/pythonlibs/\">http://www.lfd.uci.edu/~gohlke/pythonlibs/</a>到这里面寻找whl，下载之后用 pip install xxx.whl 来安装。\r\n\r\n<!--more-->\r\n\r\n2.解决pip3报错Fatal error in launcher: Unable to create process using '\"'。\r\n\r\n一种：\r\n<pre>import pip\r\npip.main(['install','ModuleName'])</pre>\r\n另一种：\r\n<pre class=\"lang-py prettyprint prettyprinted\"><code><span class=\"pln\">python3 </span><span class=\"pun\">-</span><span class=\"pln\">m pip install whlName\r\n</span></code></pre>\r\n3.linux上python3中文会显示UnicodeEncodeError: 'ascii' codec can't encode character。\r\n<pre>import io \r\nimport sys \r\nsys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding='utf-8')</pre>\r\n4.requests爬到的中文网页输出在windows cmd会出错\r\n<pre>res=requests.get(url)\r\nres.encoding='gbk'\r\nprint(res.text)</pre>\r\n5.cv2.imread读取中文路径出错\r\n<pre>#读取\r\nim = cv2.imdecode(np.fromfile(file,dtype=np.uint8),-1)\r\n#写入\r\ncv2.imencode('.jpg',res)[1].tofile(file)</pre>\r\n6.sublime字体高低不齐\r\n\r\n下载安装字体 http://cloud.alphadn.com/blog/yahei-consolas.zip\r\n修改user_setting中的font_face为\r\n<pre>\"font_face\": \"YaHei Consolas Hybrid\",</pre>",
            "post_title": "解决各种问题集",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "454-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-7-6 13:21:54",
            "post_modified_gmt": "2018-7-6 05:21:54",
            "post_content_filtered": "",
            "post_parent": "454",
            "guid": "http://ganjiacheng.cn/blog/?p=689",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "690",
            "post_author": "1",
            "post_date": "2018-7-9 11:28:18",
            "post_date_gmt": "0-0-0 00:00:00",
            "post_content": "",
            "post_title": "很想扯扯淡的价值评价",
            "post_excerpt": "",
            "post_status": "draft",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-7-9 11:28:18",
            "post_modified_gmt": "2018-7-9 03:28:18",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=690",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "691",
            "post_author": "1",
            "post_date": "2018-7-9 11:28:18",
            "post_date_gmt": "2018-7-9 03:28:18",
            "post_content": "",
            "post_title": "很想扯扯淡的价值评价",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "690-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-7-9 11:28:18",
            "post_modified_gmt": "2018-7-9 03:28:18",
            "post_content_filtered": "",
            "post_parent": "690",
            "guid": "http://ganjiacheng.cn/blog/?p=691",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "692",
            "post_author": "1",
            "post_date": "2018-7-11 17:55:42",
            "post_date_gmt": "2018-7-11 09:55:42",
            "post_content": "生活总是要过的，班也总是要上的。<!--more-->\r\n\r\n上班一周，虽然也是第二次上班了，但感受还是很不一样的。\r\n\r\n开始有些顾虑，顾虑后面的发展与自我的价值。\r\n\r\n之前很多事情来的突然，求职，面试，租房，搬家，上班，都只能凭着自己的感觉走。\r\n\r\n不知道自己第六感的感觉是对是错，或许需要些时日能看出。\r\n\r\n虽然知道事情总是会水到渠成，自己能做的也只能是放平心态。\r\n\r\n公司不大不小，不好说啥，不求带来什么大的改变，做好自己的吧。\r\n\r\n尽快融入集体把，按经验来看我还是个比较容易融入的人。\r\n\r\n选择性的交一些朋友，没有理由，靠的都是眼缘吧。\r\n\r\n技术上的拓展目测大部分还是在于广度，看今后的博文或许能反应。\r\n\r\n也是有水平厉害的人在周边，或许我的学习动力还不够。\r\n\r\n这甚至让我怀疑老了还能不能做不做技术。\r\n\r\n租的房子虽然小而北，有机会可以尝试装饰一下不同风格。\r\n\r\n合租的朋友也是缘分，希望可以有机会交流人生，谈谈理想。\r\n\r\n小区离工作地方还有1.5公里路，天气凉走走也挺好，天热还是比较蓝瘦的。\r\n\r\n有决心了就买个电动轮，还可以开辟远一些的生活活动区域。\r\n\r\n公司加班有顿饭，没啥大事基本上也就加了，或许这少了些本可以做的生活上的事情。\r\n\r\n暂时还没想到能开辟啥其他生活上的事情，之后再看，如做饭，健身等。\r\n\r\n练琴看来是要规划一下每天的时间，定点才有执行率。\r\n\r\n目前还没好好计划周末，看来是可以规划规划，当然回家也是需要滴。\r\n\r\n感情可以先放一放，我或许需要安定一下再来考虑。\r\n\r\n也不知道我所谓的安定是啥，在这个巨大的城市里。是物质的追求如房车吗，内心尽量着不同意这个观念。但也没其他观点。\r\n\r\n仿佛是需要一定程度的认识和了解才会有追求的想法，还没到相亲的地步，也基本不会有一见钟情的杂想。\r\n\r\n因此这个对于我这种小圈子的人是比较难的，比较不会刻意。\r\n\r\n在学校说起来还就大三，咋这么社会了呢，毕竟还有一大部分追求着考研的学术路的学子呢。回头自己的这些个实习的过程确实有影响着自己的思想。\r\n\r\n出来后大部分人说你还年轻，还有说可以去北上广闯闯，我需要梁静茹。\r\n\r\n仿佛一般的暖文书籍已经治愈不了我了，看来需要一些其他风格的书籍。\r\n\r\n近期再找找书籍，每天上班放在桌边，能看一小会，算作工作期间小有的娱乐。\r\n\r\n关于开头讲的自我价值，希望在工作中可以领悟到，而不是工作几年后觉得自己做的都是无用功，到时候从头再来就比现在晚多了。\r\n\r\n看到一些文章讲心灵上或许减少一些对赞美的需求和对物质的抱怨更容易发现自己的价值。\r\n\r\n后面的发展谁知道呢，一些在学校时小清新的目标转而模糊，面对现实，该咋地咋地呗。就像那个演讲------别让任何人打乱你的人生节奏，自己能做的仅仅就是BE PATIENT。\r\n\r\n近期貌似少有去旅行，或许有机会好好策划一下所谓的毕业旅行，给自己一个出去的理由。",
            "post_title": "上班，上班",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e4%b8%8a%e7%8f%ad%ef%bc%8c%e4%b8%8a%e7%8f%ad",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-7-11 17:55:42",
            "post_modified_gmt": "2018-7-11 09:55:42",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=692",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "1"
        },
        {
            "ID": "693",
            "post_author": "1",
            "post_date": "2018-7-11 17:55:02",
            "post_date_gmt": "2018-7-11 09:55:02",
            "post_content": "生活总是要过的，班也总是要上的。<!--more-->\r\n\r\n上班一周，虽然也是第二次上班了，但感受还是很不一样的。\r\n\r\n开始有些顾虑，顾虑后面的发展与自我的价值。\r\n\r\n之前很多事情来的突然，求职，面试，租房，搬家，上班，都只能凭着自己的感觉走。\r\n\r\n不知道自己第六感的感觉是对是错，或许需要些时日能看出。\r\n\r\n虽然知道事情总是会水到渠成，自己能做的也只能是放平心态。\r\n\r\n公司不大不小，不好说啥，不求带来什么大的改变，做好自己的吧。\r\n\r\n尽快融入集体把，按经验来看我还是个比较容易融入的人。\r\n\r\n选择性的交一些朋友，没有理由，靠的都是眼缘吧。\r\n\r\n技术上的拓展目测大部分还是在于广度，看今后的博文或许能反应。\r\n\r\n也是有水平厉害的人在周边，或许我的学习动力还不够。\r\n\r\n这甚至让我怀疑老了还能不能做不做技术。\r\n\r\n租的房子虽然小而北，有机会可以尝试装饰一下不同风格。\r\n\r\n合租的朋友也是缘分，希望可以有机会交流人生，谈谈理想。\r\n\r\n小区离工作地方还有1.5公里路，天气凉走走也挺好，天热还是比较蓝瘦的。\r\n\r\n有决心了就买个电动轮，还可以开辟远一些的生活活动区域。\r\n\r\n公司加班有顿饭，没啥大事基本上也就加了，或许这少了些本可以做的生活上的事情。\r\n\r\n暂时还没想到能开辟啥其他生活上的事情，之后再看，如做饭，健身等。\r\n\r\n练琴看来是要规划一下每天的时间，定点才有执行率。\r\n\r\n目前还没好好计划周末，看来是可以规划规划，当然回家也是需要滴。\r\n\r\n感情可以先放一放，我或许需要安定一下再来考虑。\r\n\r\n也不知道我所谓的安定是啥，在这个巨大的城市里。是物质的追求如房车吗，内心尽量着不同意这个观念。但也没其他观点。\r\n\r\n仿佛是需要一定程度的认识和了解才会有追求的想法，还没到相亲的地步，也基本不会有一见钟情的杂想。\r\n\r\n因此这个对于我这种小圈子的人是比较难的，比较不会刻意。\r\n\r\n在学校说起来还就大三，咋这么社会了呢，毕竟还有一大部分追求着考研的学术路的学子呢。回头自己的这些个实习的过程确实有影响着自己的思想。\r\n\r\n出来后大部分人说你还年轻，还有说可以去北上广闯闯，我需要梁静茹。\r\n\r\n仿佛一般的暖文书籍已经治愈不了我了，看来需要一些其他风格的书籍。\r\n\r\n近期再找找书籍，每天上班放在桌边，能看一小会，算作工作期间小有的娱乐。\r\n\r\n关于开头讲的自我价值，希望在工作中可以领悟到，而不是工作几年后觉得自己做的都是无用功，到时候从头再来就比现在晚多了。\r\n\r\n看到一些文章讲心灵上或许减少一些对赞美的需求和对物质的抱怨更容易发现自己的价值。\r\n\r\n&nbsp;\r\n\r\n后面的发展谁知道呢，一些在学校时小清新的目标转而模糊，面对现实，该咋地咋地呗。就像那个演讲------别让任何人打乱你的人生节奏，自己能做的仅仅就是BE PATIENT。\r\n\r\n近期貌似少有去旅行，或许有机会好好策划一下所谓的毕业旅行，给自己一个出去的理由。",
            "post_title": "上班，上班",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "692-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-7-11 17:55:02",
            "post_modified_gmt": "2018-7-11 09:55:02",
            "post_content_filtered": "",
            "post_parent": "692",
            "guid": "http://ganjiacheng.cn/blog/?p=693",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "694",
            "post_author": "1",
            "post_date": "2018-7-11 17:55:42",
            "post_date_gmt": "2018-7-11 09:55:42",
            "post_content": "生活总是要过的，班也总是要上的。<!--more-->\r\n\r\n上班一周，虽然也是第二次上班了，但感受还是很不一样的。\r\n\r\n开始有些顾虑，顾虑后面的发展与自我的价值。\r\n\r\n之前很多事情来的突然，求职，面试，租房，搬家，上班，都只能凭着自己的感觉走。\r\n\r\n不知道自己第六感的感觉是对是错，或许需要些时日能看出。\r\n\r\n虽然知道事情总是会水到渠成，自己能做的也只能是放平心态。\r\n\r\n公司不大不小，不好说啥，不求带来什么大的改变，做好自己的吧。\r\n\r\n尽快融入集体把，按经验来看我还是个比较容易融入的人。\r\n\r\n选择性的交一些朋友，没有理由，靠的都是眼缘吧。\r\n\r\n技术上的拓展目测大部分还是在于广度，看今后的博文或许能反应。\r\n\r\n也是有水平厉害的人在周边，或许我的学习动力还不够。\r\n\r\n这甚至让我怀疑老了还能不能做不做技术。\r\n\r\n租的房子虽然小而北，有机会可以尝试装饰一下不同风格。\r\n\r\n合租的朋友也是缘分，希望可以有机会交流人生，谈谈理想。\r\n\r\n小区离工作地方还有1.5公里路，天气凉走走也挺好，天热还是比较蓝瘦的。\r\n\r\n有决心了就买个电动轮，还可以开辟远一些的生活活动区域。\r\n\r\n公司加班有顿饭，没啥大事基本上也就加了，或许这少了些本可以做的生活上的事情。\r\n\r\n暂时还没想到能开辟啥其他生活上的事情，之后再看，如做饭，健身等。\r\n\r\n练琴看来是要规划一下每天的时间，定点才有执行率。\r\n\r\n目前还没好好计划周末，看来是可以规划规划，当然回家也是需要滴。\r\n\r\n感情可以先放一放，我或许需要安定一下再来考虑。\r\n\r\n也不知道我所谓的安定是啥，在这个巨大的城市里。是物质的追求如房车吗，内心尽量着不同意这个观念。但也没其他观点。\r\n\r\n仿佛是需要一定程度的认识和了解才会有追求的想法，还没到相亲的地步，也基本不会有一见钟情的杂想。\r\n\r\n因此这个对于我这种小圈子的人是比较难的，比较不会刻意。\r\n\r\n在学校说起来还就大三，咋这么社会了呢，毕竟还有一大部分追求着考研的学术路的学子呢。回头自己的这些个实习的过程确实有影响着自己的思想。\r\n\r\n出来后大部分人说你还年轻，还有说可以去北上广闯闯，我需要梁静茹。\r\n\r\n仿佛一般的暖文书籍已经治愈不了我了，看来需要一些其他风格的书籍。\r\n\r\n近期再找找书籍，每天上班放在桌边，能看一小会，算作工作期间小有的娱乐。\r\n\r\n关于开头讲的自我价值，希望在工作中可以领悟到，而不是工作几年后觉得自己做的都是无用功，到时候从头再来就比现在晚多了。\r\n\r\n看到一些文章讲心灵上或许减少一些对赞美的需求和对物质的抱怨更容易发现自己的价值。\r\n\r\n后面的发展谁知道呢，一些在学校时小清新的目标转而模糊，面对现实，该咋地咋地呗。就像那个演讲------别让任何人打乱你的人生节奏，自己能做的仅仅就是BE PATIENT。\r\n\r\n近期貌似少有去旅行，或许有机会好好策划一下所谓的毕业旅行，给自己一个出去的理由。",
            "post_title": "上班，上班",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "692-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-7-11 17:55:42",
            "post_modified_gmt": "2018-7-11 09:55:42",
            "post_content_filtered": "",
            "post_parent": "692",
            "guid": "http://ganjiacheng.cn/blog/?p=694",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "697",
            "post_author": "1",
            "post_date": "2018-7-13 12:53:26",
            "post_date_gmt": "2018-7-13 04:53:26",
            "post_content": "python篇：\n\n1.windows上，在pip install xxx失败的时候怎么办？\n\n答：<a href=\"http://www.lfd.uci.edu/~gohlke/pythonlibs/\">http://www.lfd.uci.edu/~gohlke/pythonlibs/</a>到这里面寻找whl，下载之后用 pip install xxx.whl 来安装。\n\n<!--more-->\n\n2.解决pip3报错Fatal error in launcher: Unable to create process using '\"'。\n\n一种：\n<pre>import pip\npip.main(['install','ModuleName'])</pre>\n另一种：\n<pre class=\"lang-py prettyprint prettyprinted\"><code><span class=\"pln\">python3 </span><span class=\"pun\">-</span><span class=\"pln\">m pip install whlName\n</span></code></pre>\n3.linux上python3中文会显示UnicodeEncodeError: 'ascii' codec can't encode character。\n<pre>import io \nimport sys \nsys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding='utf-8')</pre>\n4.requests爬到的中文网页输出在windows cmd会出错\n<pre>res=requests.get(url)\nres.encoding='gbk'\nprint(res.text)</pre>\n5.cv2.imread读取中文路径出错\n<pre>#读取\nim = cv2.imdecode(np.fromfile(file,dtype=np.uint8),-1)\n#写入\ncv2.imencode('.jpg',res)[1].tofile(file)</pre>\n6.sublime字体高低不齐\n\n下载安装字体 http://cloud.alphadn.com/blog/yahei-consolas.zip\n修改user_setting中的font_face为\n<pre>\"font_face\": \"YaHei Consolas Hybrid\",</pre>\n7.windows上编写的shell文件在linux运行报错\n<pre></pre>",
            "post_title": "解决各种问题集",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "454-autosave-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-7-13 12:53:26",
            "post_modified_gmt": "2018-7-13 04:53:26",
            "post_content_filtered": "",
            "post_parent": "454",
            "guid": "http://ganjiacheng.cn/blog/?p=697",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "698",
            "post_author": "1",
            "post_date": "2018-7-13 12:53:58",
            "post_date_gmt": "2018-7-13 04:53:58",
            "post_content": "python篇：\r\n\r\n1.windows上，在pip install xxx失败的时候怎么办？\r\n\r\n答：<a href=\"http://www.lfd.uci.edu/~gohlke/pythonlibs/\">http://www.lfd.uci.edu/~gohlke/pythonlibs/</a>到这里面寻找whl，下载之后用 pip install xxx.whl 来安装。\r\n\r\n<!--more-->\r\n\r\n2.解决pip3报错Fatal error in launcher: Unable to create process using '\"'。\r\n\r\n一种：\r\n<pre>import pip\r\npip.main(['install','ModuleName'])</pre>\r\n另一种：\r\n<pre class=\"lang-py prettyprint prettyprinted\"><code><span class=\"pln\">python3 </span><span class=\"pun\">-</span><span class=\"pln\">m pip install whlName\r\n</span></code></pre>\r\n3.linux上python3中文会显示UnicodeEncodeError: 'ascii' codec can't encode character。\r\n<pre>import io \r\nimport sys \r\nsys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding='utf-8')</pre>\r\n4.requests爬到的中文网页输出在windows cmd会出错\r\n<pre>res=requests.get(url)\r\nres.encoding='gbk'\r\nprint(res.text)</pre>\r\n5.cv2.imread读取中文路径出错\r\n<pre>#读取\r\nim = cv2.imdecode(np.fromfile(file,dtype=np.uint8),-1)\r\n#写入\r\ncv2.imencode('.jpg',res)[1].tofile(file)</pre>\r\n6.sublime字体高低不齐\r\n\r\n下载安装字体 http://cloud.alphadn.com/blog/yahei-consolas.zip\r\n修改user_setting中的font_face为\r\n<pre>\"font_face\": \"YaHei Consolas Hybrid\",</pre>\r\n7.windows上编写的shell文件在linux运行报错\r\n<pre>vim file.sh\r\n:set ff=unix</pre>",
            "post_title": "解决各种问题集",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "454-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-7-13 12:53:58",
            "post_modified_gmt": "2018-7-13 04:53:58",
            "post_content_filtered": "",
            "post_parent": "454",
            "guid": "http://ganjiacheng.cn/blog/?p=698",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "700",
            "post_author": "1",
            "post_date": "2018-7-15 14:55:54",
            "post_date_gmt": "2018-7-15 06:55:54",
            "post_content": "学校一个课程用到，在linux实现一个qt界面来控制几个硬件功能：摄像头，温湿度，超声波测距，红绿灯。<!--more-->\r\n\r\n安装对应库，运行代码前就是要把器件连到对应的引脚上。\r\n<pre>#coding:utf-8\r\n#author:!@#$%^&amp;*()_+ganster\r\nfrom PyQt5.QtWidgets import QWidget, QHBoxLayout, QLabel, QApplication,QLCDNumber,QVBoxLayout,QGridLayout,QCheckBox,QPushButton\r\nfrom PyQt5.QtGui import QPixmap,QImage\r\nfrom PyQt5.QtCore import QThread,Qt,pyqtSignal\r\nfrom picamera.array import PiRGBArray\r\nfrom picamera import PiCamera\r\nimport RPi.GPIO as GPIO\r\nimport numpy as np\r\nimport sys\r\nimport time\r\nimport cv2\r\nimport os\r\n\r\nGPIO.setmode(GPIO.BCM)\r\nGPIO.setup(16, GPIO.OUT)  #红\r\nGPIO.setup(20,GPIO.OUT)  #黄\r\nGPIO.setup(21,GPIO.OUT) #绿\r\n\r\n#超声波测距端口\r\nTrig_Pin = 5\r\nEcho_Pin = 6\r\nGPIO.setup(Trig_Pin, GPIO.OUT, initial = GPIO.LOW)\r\nGPIO.setup(Echo_Pin, GPIO.IN)\r\n\r\n#温湿度端口\r\nchannel = 4\r\n\r\n#温湿度\r\ndef get_temp():\r\n    data = []\r\n    j = 0\r\n    GPIO.setup(channel, GPIO.OUT)\r\n    GPIO.output(channel, GPIO.LOW)\r\n    time.sleep(0.02)\r\n    GPIO.output(channel, GPIO.HIGH)\r\n    GPIO.setup(channel, GPIO.IN)\r\n    while GPIO.input(channel) == GPIO.LOW:\r\n        continue\r\n    while GPIO.input(channel) == GPIO.HIGH:\r\n        continue\r\n    while j &lt; 40:\r\n        k = 0\r\n        while GPIO.input(channel) == GPIO.LOW:\r\n            continue\r\n        while GPIO.input(channel) == GPIO.HIGH:\r\n            k += 1\r\n            if k &gt; 100:\r\n                break\r\n        if k &lt; 8:\r\n            data.append(0)\r\n        else:\r\n            data.append(1)\r\n        j += 1\r\n    humidity_bit = data[0:8]\r\n    humidity_point_bit = data[8:16]\r\n    temperature_bit = data[16:24]\r\n    temperature_point_bit = data[24:32]\r\n    check_bit = data[32:40]\r\n    humidity = 0\r\n    humidity_point = 0\r\n    temperature = 0\r\n    temperature_point = 0\r\n    check = 0\r\n   \r\n    for i in range(8):\r\n        humidity += humidity_bit[i] * 2 ** (7-i)\r\n        humidity_point += humidity_point_bit[i] * 2 ** (7-i)\r\n        temperature += temperature_bit[i] * 2 ** (7-i)\r\n        temperature_point += temperature_point_bit[i] * 2 ** (7-i)\r\n        check += check_bit[i] * 2 ** (7-i)\r\n   \r\n    tmp = humidity + humidity_point + temperature + temperature_point\r\n   \r\n    if check == tmp:\r\n        return [temperature,humidity]\r\n    else:\r\n        return [0,0]\r\n    GPIO.cleanup()\r\n\r\n#超声波测距\r\ndef get_dis():\r\n    GPIO.output(Trig_Pin, GPIO.HIGH)\r\n    time.sleep(0.00015)\r\n    GPIO.output(Trig_Pin, GPIO.LOW)\r\n    while not GPIO.input(Echo_Pin):\r\n        pass\r\n    t1 = time.time()\r\n    while GPIO.input(Echo_Pin):\r\n        pass\r\n    t2 = time.time()\r\n    return round((t2-t1)*340*100/2,2)\r\n\r\n#qt视图模块\r\nclass Example(QWidget):\r\n\r\n    def __init__(self):\r\n        super().__init__()\r\n        #初始化视图\r\n        self.initUI()\r\n        #线程，用于更新摄像头图像\r\n        self.sum = Sum()\r\n        self.sum.sinOut.connect(self.update_img)\r\n        self.sum.start()  \r\n\r\n        self.r = 0\r\n        self.g = 0\r\n        self.y = 0\r\n        self.show()      \r\n\r\n\r\n    def initUI(self):      \r\n        #加入按钮，复选框，lcd，并绑定事件\r\n        hbox = QGridLayout(self)\r\n        self.lbl = QLabel(self)\r\n\r\n        self.lcd1 = QLCDNumber(self)\r\n        self.lcd2 = QLCDNumber(self)\r\n\r\n        self.cb1 = QCheckBox('red',self)\r\n        self.cb2 = QCheckBox('yellow',self)\r\n        self.cb3 = QCheckBox('green',self)\r\n        self.cb1.stateChanged.connect(self.changecb1)\r\n        self.cb2.stateChanged.connect(self.changecb2)\r\n        self.cb3.stateChanged.connect(self.changecb3)\r\n\r\n        self.btn = QPushButton(self)\r\n        self.btn.setText(\"start\")\r\n        self.btn.clicked.connect(self.update_num)\r\n\r\n\r\n        self.lcd3 = QLCDNumber(self)\r\n        self.btn1 = QPushButton(self)\r\n        self.btn1.setText(\"dis start\")\r\n        self.btn1.clicked.connect(self.update_dis)\r\n\r\n        hbox.addWidget(self.lbl,0,0,1,3)\r\n        hbox.addWidget(self.lcd1,1,0,1,1)\r\n        hbox.addWidget(self.lcd2,1,1,1,1)\r\n        hbox.addWidget(self.cb1,3,0,1,1)\r\n        hbox.addWidget(self.cb2,3,1,1,1)\r\n        hbox.addWidget(self.cb3,3,2,1,1)\r\n        hbox.addWidget(self.btn,1,2,1,1)\r\n        hbox.addWidget(self.lcd3,2,0,1,2)\r\n        hbox.addWidget(self.btn1,2,2,1,1)\r\n\r\n        self.setLayout(hbox)\r\n\r\n    #更新图像\r\n    def update_img(self,im):\r\n        height, width, bytesPerComponent= im.shape\r\n        bytesPerLine = bytesPerComponent* width\r\n        cv2.cvtColor(im, cv2.COLOR_BGR2RGB,im)\r\n        self.image= QImage(im.data, width, height, bytesPerLine, QImage.Format_RGB888)\r\n        self.lbl.setPixmap(QPixmap.fromImage(self.image))\r\n    #更新温湿度\r\n    def update_num(self):\r\n        #res = os.popen(\"python temp.py\")\r\n        #li = list(map(int,res.read().strip().split(\",\")))\r\n        li = get_temp()\r\n        print(li)\r\n        self.lcd1.display(li[0])\r\n        self.lcd2.display(li[1])\r\n    #更新距离\r\n    def update_dis(self):\r\n        self.lcd3.display(get_dis())\r\n    #更新复选框\r\n    def changecb1(self):\r\n        if self.r == 0:\r\n            GPIO.output(16,GPIO.HIGH)\r\n            self.r = 1\r\n        else:\r\n            GPIO.output(16,GPIO.LOW)\r\n            self.r = 0\r\n    def changecb2(self):\r\n        if self.y == 0:\r\n            GPIO.output(20,GPIO.HIGH)\r\n            self.y = 1\r\n        else:\r\n            GPIO.output(20,GPIO.LOW)\r\n            self.y = 0\r\n    def changecb3(self):\r\n        if self.g == 0:\r\n            GPIO.output(21,GPIO.HIGH)\r\n            self.g = 1\r\n        else:\r\n            GPIO.output(21,GPIO.LOW)\r\n            self.g = 0\r\n\r\n#线程，用于更新图像\r\nclass Sum(QThread):\r\n    sinOut = pyqtSignal(np.ndarray)\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.camera = PiCamera()\r\n        self.camera.resolution = (640, 480)\r\n        self.camera.framerate = 32\r\n        self.rawCapture = PiRGBArray(self.camera, size=(640, 480))\r\n\r\n    def run(self):   \r\n        for frame in self.camera.capture_continuous(self.rawCapture, format=\"bgr\", use_video_port=True):\r\n            image = frame.array\r\n            self.sinOut.emit(image)\r\n            self.rawCapture.truncate()\r\n            self.rawCapture.seek(0)\r\n            time.sleep(0.2)\r\n#主函数\r\nif __name__ == '__main__':\r\n    app = QApplication(sys.argv)\r\n    ex = Example()\r\n    sys.exit(app.exec_())</pre>\r\n作为电子专业，单片机，FPGA，树莓派都玩了，也差不多无憾了。\r\n\r\n但也说不定是最后一次接触硬件方面的东西了呢。",
            "post_title": "试试树莓派，反正也是python",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e8%af%95%e8%af%95%e6%a0%91%e8%8e%93%e6%b4%be%ef%bc%8c%e5%8f%8d%e6%ad%a3%e4%b9%9f%e6%98%afpython",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-7-15 14:55:54",
            "post_modified_gmt": "2018-7-15 06:55:54",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=700",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "1"
        },
        {
            "ID": "701",
            "post_author": "1",
            "post_date": "2018-7-15 14:47:58",
            "post_date_gmt": "2018-7-15 06:47:58",
            "post_content": "学校一个课程用到，实现一个qt界面来控制几个硬件功能：摄像头，温湿度，超声波测距，红绿灯。\r\n<pre></pre>",
            "post_title": "试试树莓派，反正也是python",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "700-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-7-15 14:47:58",
            "post_modified_gmt": "2018-7-15 06:47:58",
            "post_content_filtered": "",
            "post_parent": "700",
            "guid": "http://ganjiacheng.cn/blog/?p=701",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "702",
            "post_author": "1",
            "post_date": "2018-7-15 14:55:54",
            "post_date_gmt": "2018-7-15 06:55:54",
            "post_content": "学校一个课程用到，在linux实现一个qt界面来控制几个硬件功能：摄像头，温湿度，超声波测距，红绿灯。<!--more-->\r\n\r\n安装对应库，运行代码前就是要把器件连到对应的引脚上。\r\n<pre>#coding:utf-8\r\n#author:!@#$%^&amp;*()_+ganster\r\nfrom PyQt5.QtWidgets import QWidget, QHBoxLayout, QLabel, QApplication,QLCDNumber,QVBoxLayout,QGridLayout,QCheckBox,QPushButton\r\nfrom PyQt5.QtGui import QPixmap,QImage\r\nfrom PyQt5.QtCore import QThread,Qt,pyqtSignal\r\nfrom picamera.array import PiRGBArray\r\nfrom picamera import PiCamera\r\nimport RPi.GPIO as GPIO\r\nimport numpy as np\r\nimport sys\r\nimport time\r\nimport cv2\r\nimport os\r\n\r\nGPIO.setmode(GPIO.BCM)\r\nGPIO.setup(16, GPIO.OUT)  #红\r\nGPIO.setup(20,GPIO.OUT)  #黄\r\nGPIO.setup(21,GPIO.OUT) #绿\r\n\r\n#超声波测距端口\r\nTrig_Pin = 5\r\nEcho_Pin = 6\r\nGPIO.setup(Trig_Pin, GPIO.OUT, initial = GPIO.LOW)\r\nGPIO.setup(Echo_Pin, GPIO.IN)\r\n\r\n#温湿度端口\r\nchannel = 4\r\n\r\n#温湿度\r\ndef get_temp():\r\n    data = []\r\n    j = 0\r\n    GPIO.setup(channel, GPIO.OUT)\r\n    GPIO.output(channel, GPIO.LOW)\r\n    time.sleep(0.02)\r\n    GPIO.output(channel, GPIO.HIGH)\r\n    GPIO.setup(channel, GPIO.IN)\r\n    while GPIO.input(channel) == GPIO.LOW:\r\n        continue\r\n    while GPIO.input(channel) == GPIO.HIGH:\r\n        continue\r\n    while j &lt; 40:\r\n        k = 0\r\n        while GPIO.input(channel) == GPIO.LOW:\r\n            continue\r\n        while GPIO.input(channel) == GPIO.HIGH:\r\n            k += 1\r\n            if k &gt; 100:\r\n                break\r\n        if k &lt; 8:\r\n            data.append(0)\r\n        else:\r\n            data.append(1)\r\n        j += 1\r\n    humidity_bit = data[0:8]\r\n    humidity_point_bit = data[8:16]\r\n    temperature_bit = data[16:24]\r\n    temperature_point_bit = data[24:32]\r\n    check_bit = data[32:40]\r\n    humidity = 0\r\n    humidity_point = 0\r\n    temperature = 0\r\n    temperature_point = 0\r\n    check = 0\r\n   \r\n    for i in range(8):\r\n        humidity += humidity_bit[i] * 2 ** (7-i)\r\n        humidity_point += humidity_point_bit[i] * 2 ** (7-i)\r\n        temperature += temperature_bit[i] * 2 ** (7-i)\r\n        temperature_point += temperature_point_bit[i] * 2 ** (7-i)\r\n        check += check_bit[i] * 2 ** (7-i)\r\n   \r\n    tmp = humidity + humidity_point + temperature + temperature_point\r\n   \r\n    if check == tmp:\r\n        return [temperature,humidity]\r\n    else:\r\n        return [0,0]\r\n    GPIO.cleanup()\r\n\r\n#超声波测距\r\ndef get_dis():\r\n    GPIO.output(Trig_Pin, GPIO.HIGH)\r\n    time.sleep(0.00015)\r\n    GPIO.output(Trig_Pin, GPIO.LOW)\r\n    while not GPIO.input(Echo_Pin):\r\n        pass\r\n    t1 = time.time()\r\n    while GPIO.input(Echo_Pin):\r\n        pass\r\n    t2 = time.time()\r\n    return round((t2-t1)*340*100/2,2)\r\n\r\n#qt视图模块\r\nclass Example(QWidget):\r\n\r\n    def __init__(self):\r\n        super().__init__()\r\n        #初始化视图\r\n        self.initUI()\r\n        #线程，用于更新摄像头图像\r\n        self.sum = Sum()\r\n        self.sum.sinOut.connect(self.update_img)\r\n        self.sum.start()  \r\n\r\n        self.r = 0\r\n        self.g = 0\r\n        self.y = 0\r\n        self.show()      \r\n\r\n\r\n    def initUI(self):      \r\n        #加入按钮，复选框，lcd，并绑定事件\r\n        hbox = QGridLayout(self)\r\n        self.lbl = QLabel(self)\r\n\r\n        self.lcd1 = QLCDNumber(self)\r\n        self.lcd2 = QLCDNumber(self)\r\n\r\n        self.cb1 = QCheckBox('red',self)\r\n        self.cb2 = QCheckBox('yellow',self)\r\n        self.cb3 = QCheckBox('green',self)\r\n        self.cb1.stateChanged.connect(self.changecb1)\r\n        self.cb2.stateChanged.connect(self.changecb2)\r\n        self.cb3.stateChanged.connect(self.changecb3)\r\n\r\n        self.btn = QPushButton(self)\r\n        self.btn.setText(\"start\")\r\n        self.btn.clicked.connect(self.update_num)\r\n\r\n\r\n        self.lcd3 = QLCDNumber(self)\r\n        self.btn1 = QPushButton(self)\r\n        self.btn1.setText(\"dis start\")\r\n        self.btn1.clicked.connect(self.update_dis)\r\n\r\n        hbox.addWidget(self.lbl,0,0,1,3)\r\n        hbox.addWidget(self.lcd1,1,0,1,1)\r\n        hbox.addWidget(self.lcd2,1,1,1,1)\r\n        hbox.addWidget(self.cb1,3,0,1,1)\r\n        hbox.addWidget(self.cb2,3,1,1,1)\r\n        hbox.addWidget(self.cb3,3,2,1,1)\r\n        hbox.addWidget(self.btn,1,2,1,1)\r\n        hbox.addWidget(self.lcd3,2,0,1,2)\r\n        hbox.addWidget(self.btn1,2,2,1,1)\r\n\r\n        self.setLayout(hbox)\r\n\r\n    #更新图像\r\n    def update_img(self,im):\r\n        height, width, bytesPerComponent= im.shape\r\n        bytesPerLine = bytesPerComponent* width\r\n        cv2.cvtColor(im, cv2.COLOR_BGR2RGB,im)\r\n        self.image= QImage(im.data, width, height, bytesPerLine, QImage.Format_RGB888)\r\n        self.lbl.setPixmap(QPixmap.fromImage(self.image))\r\n    #更新温湿度\r\n    def update_num(self):\r\n        #res = os.popen(\"python temp.py\")\r\n        #li = list(map(int,res.read().strip().split(\",\")))\r\n        li = get_temp()\r\n        print(li)\r\n        self.lcd1.display(li[0])\r\n        self.lcd2.display(li[1])\r\n    #更新距离\r\n    def update_dis(self):\r\n        self.lcd3.display(get_dis())\r\n    #更新复选框\r\n    def changecb1(self):\r\n        if self.r == 0:\r\n            GPIO.output(16,GPIO.HIGH)\r\n            self.r = 1\r\n        else:\r\n            GPIO.output(16,GPIO.LOW)\r\n            self.r = 0\r\n    def changecb2(self):\r\n        if self.y == 0:\r\n            GPIO.output(20,GPIO.HIGH)\r\n            self.y = 1\r\n        else:\r\n            GPIO.output(20,GPIO.LOW)\r\n            self.y = 0\r\n    def changecb3(self):\r\n        if self.g == 0:\r\n            GPIO.output(21,GPIO.HIGH)\r\n            self.g = 1\r\n        else:\r\n            GPIO.output(21,GPIO.LOW)\r\n            self.g = 0\r\n\r\n#线程，用于更新图像\r\nclass Sum(QThread):\r\n    sinOut = pyqtSignal(np.ndarray)\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.camera = PiCamera()\r\n        self.camera.resolution = (640, 480)\r\n        self.camera.framerate = 32\r\n        self.rawCapture = PiRGBArray(self.camera, size=(640, 480))\r\n\r\n    def run(self):   \r\n        for frame in self.camera.capture_continuous(self.rawCapture, format=\"bgr\", use_video_port=True):\r\n            image = frame.array\r\n            self.sinOut.emit(image)\r\n            self.rawCapture.truncate()\r\n            self.rawCapture.seek(0)\r\n            time.sleep(0.2)\r\n#主函数\r\nif __name__ == '__main__':\r\n    app = QApplication(sys.argv)\r\n    ex = Example()\r\n    sys.exit(app.exec_())</pre>\r\n作为电子专业，单片机，FPGA，树莓派都玩了，也差不多无憾了。\r\n\r\n但也说不定是最后一次接触硬件方面的东西了呢。",
            "post_title": "试试树莓派，反正也是python",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "700-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-7-15 14:55:54",
            "post_modified_gmt": "2018-7-15 06:55:54",
            "post_content_filtered": "",
            "post_parent": "700",
            "guid": "http://ganjiacheng.cn/blog/?p=702",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "704",
            "post_author": "1",
            "post_date": "2018-7-22 20:03:27",
            "post_date_gmt": "0-0-0 00:00:00",
            "post_content": "",
            "post_title": "shell脚本应用",
            "post_excerpt": "",
            "post_status": "draft",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-7-22 20:03:27",
            "post_modified_gmt": "2018-7-22 12:03:27",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=704",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "705",
            "post_author": "1",
            "post_date": "2018-7-22 20:03:27",
            "post_date_gmt": "2018-7-22 12:03:27",
            "post_content": "",
            "post_title": "shell脚本应用",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "704-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-7-22 20:03:27",
            "post_modified_gmt": "2018-7-22 12:03:27",
            "post_content_filtered": "",
            "post_parent": "704",
            "guid": "http://ganjiacheng.cn/blog/?p=705",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "707",
            "post_author": "1",
            "post_date": "2018-8-21 19:49:16",
            "post_date_gmt": "2018-8-21 11:49:16",
            "post_content": "最近做运维，觉得学得比较实用点的技能就是管理虚拟机了。<!--more-->\r\n\r\n这里使用的环境是已经装了centos的物理机上。\r\n\r\n首先配置所需库，用yum下载就可以\r\n<pre>yum -y install qemu-kvm qemu-key-tools virt-manager libvirt virt-install python-virtinst bridge-utils\r\nyum -y install kvm qemu libvirt virt-viewer qemu-system\r\nyum -y install libguestfs-tools</pre>\r\n在/home下mkdir创建一个vm文件夹用于存放img镜像\r\n<pre>qemu-img create -f qcow2 /home/vm/名称.img 容量(例：100G)</pre>\r\n当然还得有需要准备要装的系统的iso镜像\r\n\r\n下面命令为安装虚拟机，参数分别为：虚拟机名称，cpu，内存，iso镜像路径，img镜像路径，vnc端口\r\n<pre>virt-install \\\r\n--name name \\\r\n--vcpus=2 \\\r\n--ram 2048 \\\r\n--cdrom=/home/CentOS-7-x86_64-DVD-1511.iso –disk \\\r\npath=/home/gjc/CentOS7_DVD1511.img \\\r\n--graphics vnc,listen=0.0.0.0,port=5910</pre>\r\n安装完的虚拟机配置文件在/etc/libvirt/qemu/xxx.xml，可以修改配置文件在virsh define xxx一下就可以更新配置。\r\n\r\n下载打开软件tightVNC，输入对应的ip和port，连接进行对应系统的图形化安装。\r\n\r\n这里以linux centos7.2图形安装为例：\r\n\r\n选择Install Centos Linux7 进入下一步\r\n\r\n配置时间为北京时间，看左下角时间可能有偏差，调整一下\r\n\r\n进入Software Selection，左边选择Virtualization Host，右边选择virtualization Platform和Development Tools。\r\n\r\n下面一个是磁盘分区，在物理机装的话分一下\r\n<pre>/boot 分 2g，/swap 分 16g，/ 分 100g，其他给/home</pre>\r\n虚拟机的话自动分配就行。\r\n\r\n然后是配置网络，IPv4 Setting中add一个写ip（写和主机ip最后一个端不同就行），子网掩码（255.255.255.0），网关(和主机网关一样)。写一个常用的dns服务器。\r\n\r\nIPV6设置ignore\r\n\r\n点击install就开始安装\r\n\r\n然后设置root用户的密码，就可以等待安装完成。\r\n\r\n虚拟机和主机通过桥连。\r\n\r\n主机网络配置：在/etc/sysconfig/network-scripts/下加一个ifcfg-br0网卡，配置连接方式为桥连，其他与之前配置的网卡一样。\r\n\r\n改之前的网卡的BRIDGE为br0，其他ipv4设置的一些都可以去掉。\r\n\r\n虚拟机的话就之前安装时写的网络配置就行。\r\n\r\n以下是virsh日常管理操作\r\n<pre>列出running的虚拟机 (--all)为所有虚拟机\r\nvirsh list\r\n开关虚拟机\r\nvirsh start name\r\nvirsh shutdown name/num\r\nvirsh destroy name/num\r\n删除虚拟机，删除前需关闭\r\nvirsh undefine name\r\n虚拟机快照(很有用)\r\nvirsh snapshot-list name/num\r\n虚拟机快照回退，回退后要到具体的机器上校准时间\r\nvirsh snapshot-revert name/num snapid\r\n删除快照\r\nvirsh snapshot-delete name/num snapid\r\n克隆虚拟机\r\nvirt-clone -o 克隆虚拟机名称 -n 目标虚拟机名称 -f 路径/name.img</pre>\r\n下面是克隆虚拟机的全部过程脚本\r\n<pre>name=clone1 #虚拟机名称\r\nport=5901 # vnc端口\r\nip=192.168.199.63 #虚拟机网卡ip\r\ndir=/home/vm/ #img路径\r\nvirsh destroy base #基础虚拟机叫base\r\nrm -rf $dir$name.img\r\nvirt-clone -o base -n $name -f $dir$name.img #克隆\r\nvirt-copy-out -d $name /etc/sysconfig/network-scripts/ifcfg-eth0 ./\r\nsed -i \"s/IPADDR=.<em>/IPADDR=\\\"$ip\\\"/\" ifcfg-eth0 #改网卡\r\nvirt-copy-in -d $name ./ifcfg-eth0 /etc/sysconfig/network-scripts/\r\nrm -rf ./ifcfg-eht0\r\nsed -i \"s/&lt;graphics.</em>//\" /etc/libvirt/qemu/$name.xml #改配置\r\nvirsh define /etc/libvirt/qemu/$name.xml\r\nvirsh start $name #重启\r\nvirsh start base</pre>\r\n其中用的较多的就是克隆和快照，一个方便复制机器，一个方便回到过去。\r\n\r\n掌握这两个日常虚拟机管理就基本无压力咯。",
            "post_title": "用virsh进行虚拟机管理",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e7%94%a8virsh%e8%bf%9b%e8%a1%8c%e8%99%9a%e6%8b%9f%e6%9c%ba%e7%ae%a1%e7%90%86",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-8-21 19:50:58",
            "post_modified_gmt": "2018-8-21 11:50:58",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=707",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "709",
            "post_author": "1",
            "post_date": "2018-7-26 20:01:18",
            "post_date_gmt": "2018-7-26 12:01:18",
            "post_content": "最近做运维，觉得学得比较实用点的技能就是管理虚拟机了。<!--more-->\r\n\r\n这里使用的环境是已经装了centos的物理机上。\r\n\r\n首先配置所需库，用yum下载就可以\r\n<pre>yum -y install qemu-kvm qemu-key-tools virt-manager libvirt virt-install python-virtinst bridge-utils\r\nyum -y install kvm qemu libvirt virt-viewer qemu-system\r\nyum -y install libguestfs-tools</pre>\r\n在/home下mkdir创建一个vm文件夹用于存放img镜像\r\n<pre>qemu-img create -f qcow2 /home/vm/名称.img 容量(例：100G)</pre>\r\n当然还得有需要准备要装的系统的iso镜像\r\n\r\n下面命令为安装虚拟机，参数分别为：虚拟机名称，cpu，内存，iso镜像路径，img镜像路径，vnc端口\r\n<pre>virt-install \\\r\n--name name \\\r\n--vcpus=2 \\\r\n--ram 2048 \\\r\n--cdrom=/home/CentOS-7-x86_64-DVD-1511.iso –disk \\\r\npath=/home/qianhangjian/CentOS7_DVD1511.img \\\r\n--graphics vnc,listen=0.0.0.0,port=5910</pre>\r\n安装完的虚拟机配置文件在/etc/libvirt/qemu/xxx.xml，可以修改配置文件在virsh define xxx一下就可以更新配置。\r\n\r\n下载打开软件tightVNC，输入对应的ip和port，连接进行对应系统的图形化安装。\r\n\r\n这里以linux centos7.2图形安装为例：\r\n\r\n选择Install Centos Linux7 进入下一步\r\n\r\n配置时间为北京时间，看左下角时间可能有偏差，调整一下\r\n\r\n进入Software Selection，左边选择Virtualization Host，右边选择virtualization Platform和Development Tools。\r\n\r\n下面一个是磁盘分区，在物理机装的话分一下\r\n<pre>/boot 分 2g，/swap 分 16g，/ 分 100g，其他给/home</pre>\r\n虚拟机的话自动分配就行。\r\n\r\n然后是配置网络，IPv4 Setting中add一个写ip（写和主机ip最后一个端不同就行），子网掩码（255.255.255.0），网关(和主机网关一样)。写一个常用的dns服务器。\r\n\r\nIPV6设置ignore\r\n\r\n点击install就开始安装\r\n\r\n然后设置root用户的密码，就可以等待安装完成。\r\n\r\n虚拟机和主机通过桥连。\r\n\r\n主机网络配置：在/etc/sysconfig/network-scripts/下加一个ifcfg-br0网卡，配置连接方式为桥连，其他与之前配置的网卡一样。\r\n\r\n改之前的网卡的BRIDGE为br0，其他ipv4设置的一些都可以去掉。\r\n\r\n虚拟机的话就之前安装时写的网络配置就行。\r\n\r\n&nbsp;",
            "post_title": "用virsh进行虚拟机管理",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "707-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-7-26 20:01:18",
            "post_modified_gmt": "2018-7-26 12:01:18",
            "post_content_filtered": "",
            "post_parent": "707",
            "guid": "http://ganjiacheng.cn/blog/?p=709",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "711",
            "post_author": "1",
            "post_date": "2018-8-21 19:49:16",
            "post_date_gmt": "2018-8-21 11:49:16",
            "post_content": "最近做运维，觉得学得比较实用点的技能就是管理虚拟机了。<!--more-->\r\n\r\n这里使用的环境是已经装了centos的物理机上。\r\n\r\n首先配置所需库，用yum下载就可以\r\n<pre>yum -y install qemu-kvm qemu-key-tools virt-manager libvirt virt-install python-virtinst bridge-utils\r\nyum -y install kvm qemu libvirt virt-viewer qemu-system\r\nyum -y install libguestfs-tools</pre>\r\n在/home下mkdir创建一个vm文件夹用于存放img镜像\r\n<pre>qemu-img create -f qcow2 /home/vm/名称.img 容量(例：100G)</pre>\r\n当然还得有需要准备要装的系统的iso镜像\r\n\r\n下面命令为安装虚拟机，参数分别为：虚拟机名称，cpu，内存，iso镜像路径，img镜像路径，vnc端口\r\n<pre>virt-install \\\r\n--name name \\\r\n--vcpus=2 \\\r\n--ram 2048 \\\r\n--cdrom=/home/CentOS-7-x86_64-DVD-1511.iso –disk \\\r\npath=/home/gjc/CentOS7_DVD1511.img \\\r\n--graphics vnc,listen=0.0.0.0,port=5910</pre>\r\n安装完的虚拟机配置文件在/etc/libvirt/qemu/xxx.xml，可以修改配置文件在virsh define xxx一下就可以更新配置。\r\n\r\n下载打开软件tightVNC，输入对应的ip和port，连接进行对应系统的图形化安装。\r\n\r\n这里以linux centos7.2图形安装为例：\r\n\r\n选择Install Centos Linux7 进入下一步\r\n\r\n配置时间为北京时间，看左下角时间可能有偏差，调整一下\r\n\r\n进入Software Selection，左边选择Virtualization Host，右边选择virtualization Platform和Development Tools。\r\n\r\n下面一个是磁盘分区，在物理机装的话分一下\r\n<pre>/boot 分 2g，/swap 分 16g，/ 分 100g，其他给/home</pre>\r\n虚拟机的话自动分配就行。\r\n\r\n然后是配置网络，IPv4 Setting中add一个写ip（写和主机ip最后一个端不同就行），子网掩码（255.255.255.0），网关(和主机网关一样)。写一个常用的dns服务器。\r\n\r\nIPV6设置ignore\r\n\r\n点击install就开始安装\r\n\r\n然后设置root用户的密码，就可以等待安装完成。\r\n\r\n虚拟机和主机通过桥连。\r\n\r\n主机网络配置：在/etc/sysconfig/network-scripts/下加一个ifcfg-br0网卡，配置连接方式为桥连，其他与之前配置的网卡一样。\r\n\r\n改之前的网卡的BRIDGE为br0，其他ipv4设置的一些都可以去掉。\r\n\r\n虚拟机的话就之前安装时写的网络配置就行。\r\n\r\n以下是virsh日常管理操作\r\n<pre>列出running的虚拟机 (--all)为所有虚拟机\r\nvirsh list\r\n开关虚拟机\r\nvirsh start name\r\nvirsh shutdown name/num\r\nvirsh destroy name/num\r\n删除虚拟机，删除前需关闭\r\nvirsh undefine name\r\n虚拟机快照(很有用)\r\nvirsh snapshot-list name/num\r\n虚拟机快照回退，回退后要到具体的机器上校准时间\r\nvirsh snapshot-revert name/num snapid\r\n删除快照\r\nvirsh snapshot-delete name/num snapid\r\n克隆虚拟机\r\nvirt-clone -o 克隆虚拟机名称 -n 目标虚拟机名称 -f 路径/name.img</pre>\r\n下面是克隆虚拟机的全部过程脚本\r\n<pre>name=clone1 #虚拟机名称\r\nport=5901 # vnc端口\r\nip=192.168.199.63 #虚拟机网卡ip\r\ndir=/home/vm/ #img路径\r\nvirsh destroy base #基础虚拟机叫base\r\nrm -rf $dir$name.img\r\nvirt-clone -o base -n $name -f $dir$name.img #克隆\r\nvirt-copy-out -d $name /etc/sysconfig/network-scripts/ifcfg-eth0 ./\r\nsed -i \"s/IPADDR=.<em>/IPADDR=\\\"$ip\\\"/\" ifcfg-eth0 #改网卡\r\nvirt-copy-in -d $name ./ifcfg-eth0 /etc/sysconfig/network-scripts/\r\nrm -rf ./ifcfg-eht0\r\nsed -i \"s/&lt;graphics.</em>//\" /etc/libvirt/qemu/$name.xml #改配置\r\nvirsh define /etc/libvirt/qemu/$name.xml\r\nvirsh start $name #重启\r\nvirsh start base</pre>\r\n其中用的较多的就是克隆和快照，一个方便复制机器，一个方便回到过去。\r\n\r\n掌握这两个日常虚拟机管理就基本无压力咯。",
            "post_title": "用virsh进行虚拟机管理",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "707-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-8-21 19:49:16",
            "post_modified_gmt": "2018-8-21 11:49:16",
            "post_content_filtered": "",
            "post_parent": "707",
            "guid": "http://ganjiacheng.cn/blog/?p=711",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "713",
            "post_author": "1",
            "post_date": "2018-8-26 12:06:19",
            "post_date_gmt": "0-0-0 00:00:00",
            "post_content": "",
            "post_title": "django+rest framework+mysql初试",
            "post_excerpt": "",
            "post_status": "draft",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-8-26 12:06:19",
            "post_modified_gmt": "2018-8-26 04:06:19",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=713",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "714",
            "post_author": "1",
            "post_date": "2018-8-21 19:59:51",
            "post_date_gmt": "2018-8-21 11:59:51",
            "post_content": "",
            "post_title": "django+rest framework初试",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "713-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-8-21 19:59:51",
            "post_modified_gmt": "2018-8-21 11:59:51",
            "post_content_filtered": "",
            "post_parent": "713",
            "guid": "http://ganjiacheng.cn/blog/?p=714",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "715",
            "post_author": "1",
            "post_date": "2018-8-21 20:04:15",
            "post_date_gmt": "2018-8-21 12:04:15",
            "post_content": "",
            "post_title": "virtualenv+django+rest framework初试",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "713-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-8-21 20:04:15",
            "post_modified_gmt": "2018-8-21 12:04:15",
            "post_content_filtered": "",
            "post_parent": "713",
            "guid": "http://ganjiacheng.cn/blog/?p=715",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "718",
            "post_author": "1",
            "post_date": "2018-8-26 12:06:19",
            "post_date_gmt": "2018-8-26 04:06:19",
            "post_content": "",
            "post_title": "django+rest framework+mysql初试",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "713-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-8-26 12:06:19",
            "post_modified_gmt": "2018-8-26 04:06:19",
            "post_content_filtered": "",
            "post_parent": "713",
            "guid": "http://ganjiacheng.cn/blog/?p=718",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "719",
            "post_author": "1",
            "post_date": "2018-8-29 20:14:06",
            "post_date_gmt": "2018-8-29 12:14:06",
            "post_content": "日常管理的服务器如果很多，总会感觉连完这个连那个，要么要重复输入用户密码，要么在如xshell中的一个长列表中找寻所需的服务器。比较难受就自己写个工具来连接多台服务器，并用screen保持会话。<!--more-->\r\n\r\n先配环境，此处默认centos咯。\r\n<pre>yum install -y screen\r\nyum install -y expect</pre>\r\n由于ssh连接要输入用户密码，因此得写expect脚本。\r\n\r\n先创建一个ssh.conf用来放需要连接的服务器,格式为\r\n<pre>name1 root@192.168.1.1 password1\r\nname2 root@192.168.1.2 password2</pre>\r\n同目录下写个expect脚本screen.sh，修改其权限为755.\r\n<pre>chmod 755 screen.sh</pre>\r\n主要功能为创建screen，登录用户名密码。\r\n<div class=\"highlight\">\r\n<pre> 1 #!/bin/expect -f \r\n 2 \r\n 3 set timeout 30\r\n 4 \r\n 5 set fid [open screen.conf r]\r\n 6 while {[gets $fid line] &gt;= 0} {\r\n 7     set name [lindex $line 0]\r\n 8     set port [lindex $line 1]\r\n 9     set pwd [lindex $line 2]\r\n10     spawn screen -S $name ssh $port\r\n11     expect {\r\n12         \"*yes/no\" { send \"yes\\r\"; exp_continue }\r\n13         \"*password:\" { send \"$pwd\\r\" } \r\n14     }\r\n15     expect { \r\n16         \"Last login*\" {\r\n17             send \"\\01d\"\r\n18         }\r\n19     }\r\n20     puts \"$name | $port added\"\r\n21 }</pre>\r\n再在同目录下创建个start.sh\r\n\r\n用于检测有哪些会话没起来写入screen.conf,再调用screen.sh重启一遍。\r\n<div class=\"highlight\">\r\n<pre> 1 #!/bin/bash\r\n 2 \r\n 3 while true\r\n 4 do\r\n 5 \r\n 6     rm -rf screen.conf\r\n 7 \r\n 8     n=0\r\n 9 \r\n10     while read ll\r\n11     do\r\n12         name=`echo $ll |awk '{print $1}'`\r\n13         ss=`screen -ls |grep \"\\.$name\"`\r\n14         if [ ${#ss} -lt 5 ];then\r\n15             echo $ll &gt;&gt; screen.conf\r\n16             n=`expr $n + 1`\r\n17         fi\r\n18     done &lt; ssh.conf\r\n19 \r\n20     if [ $n -gt 0 ];then\r\n21        ./screen.sh\r\n22     fi\r\n23 \r\n24     rm -rf screen.conf\r\n25     sleep 10\r\n26 done</pre>\r\n运行：\r\n<pre>nohup start.sh &gt;&gt; screen.log 2&gt;&amp;1 &amp;</pre>\r\n</div>\r\n<div class=\"highlight\">\r\n\r\n以前嫌弃没机器，性能不行，现在手头机器太多也都是烦恼呢。\r\n\r\n</div>\r\n</div>",
            "post_title": "写个基于screen和expect的服务器管理小工具",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e5%86%99%e4%b8%aa%e5%9f%ba%e4%ba%8escreen%e5%92%8cexpect%e7%9a%84%e6%9c%8d%e5%8a%a1%e5%99%a8%e7%ae%a1%e7%90%86%e5%b0%8f%e5%b7%a5%e5%85%b7",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-9-3 18:49:49",
            "post_modified_gmt": "2018-9-3 10:49:49",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=719",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "720",
            "post_author": "1",
            "post_date": "2018-8-29 20:06:21",
            "post_date_gmt": "2018-8-29 12:06:21",
            "post_content": "日常管理的服务器如果很多，总会感觉连完这个连那个，要么要重复输入用户密码，要么在如xshell中的一个长列表中找寻所需的服务器。比较难受就自己写个工具来连接多台服务器，并用screen保持会话。\r\n\r\n先配环境，此处默认centos咯。\r\n<pre>yum install -y screen\r\nyum install -y expect</pre>\r\n由于ssh连接要输入用户密码，因此得写expect脚本。\r\n\r\n先创建一个ssh.conf用来放需要连接的服务器,格式为\r\n<pre>name1 root@192.168.1.1 password1\r\nname2 root@192.168.1.2 password2</pre>\r\n同目录下写个expect脚本screen.sh\r\n<pre></pre>\r\n&nbsp;",
            "post_title": "写个基于screen和expect的服务器管理小工具",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "719-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-8-29 20:06:21",
            "post_modified_gmt": "2018-8-29 12:06:21",
            "post_content_filtered": "",
            "post_parent": "719",
            "guid": "http://ganjiacheng.cn/blog/?p=720",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "721",
            "post_author": "1",
            "post_date": "2018-8-29 20:14:06",
            "post_date_gmt": "2018-8-29 12:14:06",
            "post_content": "日常管理的服务器如果很多，总会感觉连完这个连那个，要么要重复输入用户密码，要么在如xshell中的一个长列表中找寻所需的服务器。比较难受就自己写个工具来连接多台服务器，并用screen保持会话。<!--more-->\r\n\r\n先配环境，此处默认centos咯。\r\n<pre>yum install -y screen\r\nyum install -y expect</pre>\r\n由于ssh连接要输入用户密码，因此得写expect脚本。\r\n\r\n先创建一个ssh.conf用来放需要连接的服务器,格式为\r\n<pre>name1 root@192.168.1.1 password1\r\nname2 root@192.168.1.2 password2</pre>\r\n同目录下写个expect脚本screen.sh\r\n\r\n主要功能为创建screen，登录用户名密码\r\n<div class=\"highlight\">\r\n<pre> 1 #!/bin/expect -f \r\n 2 \r\n 3 set timeout 30\r\n 4 \r\n 5 set fid [open screen.conf r]\r\n 6 while {[gets $fid line] &gt;= 0} {\r\n 7     set name [lindex $line 0]\r\n 8     set port [lindex $line 1]\r\n 9     set pwd [lindex $line 2]\r\n10     spawn screen -S $name ssh $port\r\n11     expect {\r\n12         \"*yes/no\" { send \"yes\\r\"; exp_continue }\r\n13         \"*password:\" { send \"$pwd\\r\" } \r\n14     }\r\n15     expect { \r\n16         \"Last login*\" {\r\n17             send \"\\01d\"\r\n18         }\r\n19     }\r\n20     puts \"$name | $port added\"\r\n21 }</pre>\r\n再在同目录下创建个start.sh\r\n\r\n用于检测有哪些会话没起来写入screen.conf,再调用screen.sh重启一遍。\r\n<div class=\"highlight\">\r\n<pre> 1 #!/bin/bash\r\n 2 \r\n 3 rm -rf screen.conf\r\n 4 \r\n 5 n=0\r\n 6 \r\n 7 while read ll\r\n 8 do\r\n 9     name=`echo $ll |awk '{print $1}'`\r\n10     ss=`screen -ls |grep \"\\.$name\"`\r\n11     if [ ${#ss} -lt 5 ];then\r\n12         echo $ll &gt;&gt; screen.conf\r\n13         n=`expr $n + 1`\r\n14     fi\r\n15 done &lt; ssh.conf\r\n16 \r\n17 if [ $n -gt 0 ];then\r\n18    ./screen.sh\r\n19 fi\r\n20 \r\n21 rm -rf screen.conf</pre>\r\n服务器如果不稳定，可以让start.sh定时执行。\r\n\r\n稳定的话一本万利咯。\r\n\r\n以前嫌弃没机器，性能不行，现在手头机器太多也都是烦恼呢。\r\n\r\n</div>\r\n</div>",
            "post_title": "写个基于screen和expect的服务器管理小工具",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "719-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-8-29 20:14:06",
            "post_modified_gmt": "2018-8-29 12:14:06",
            "post_content_filtered": "",
            "post_parent": "719",
            "guid": "http://ganjiacheng.cn/blog/?p=721",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "723",
            "post_author": "1",
            "post_date": "2018-9-3 18:48:53",
            "post_date_gmt": "2018-9-3 10:48:53",
            "post_content": "日常管理的服务器如果很多，总会感觉连完这个连那个，要么要重复输入用户密码，要么在如xshell中的一个长列表中找寻所需的服务器。比较难受就自己写个工具来连接多台服务器，并用screen保持会话。<!--more-->\n\n先配环境，此处默认centos咯。\n<pre>yum install -y screen\nyum install -y expect</pre>\n由于ssh连接要输入用户密码，因此得写expect脚本。\n\n先创建一个ssh.conf用来放需要连接的服务器,格式为\n<pre>name1 root@192.168.1.1 password1\nname2 root@192.168.1.2 password2</pre>\n同目录下写个expect脚本screen.sh，修改其权限为755.\n<pre>chmod 755 screen.sh</pre>\n主要功能为创建screen，登录用户名密码。\n<div class=\"highlight\">\n<pre> 1 #!/bin/expect -f \n 2 \n 3 set timeout 30\n 4 \n 5 set fid [open screen.conf r]\n 6 while {[gets $fid line] &gt;= 0} {\n 7     set name [lindex $line 0]\n 8     set port [lindex $line 1]\n 9     set pwd [lindex $line 2]\n10     spawn screen -S $name ssh $port\n11     expect {\n12         \"*yes/no\" { send \"yes\\r\"; exp_continue }\n13         \"*password:\" { send \"$pwd\\r\" } \n14     }\n15     expect { \n16         \"Last login*\" {\n17             send \"\\01d\"\n18         }\n19     }\n20     puts \"$name | $port added\"\n21 }</pre>\n再在同目录下创建个start.sh\n\n用于检测有哪些会话没起来写入screen.conf,再调用screen.sh重启一遍。\n<div class=\"highlight\">\n<pre> 1 #!/bin/bash\n 2 \n 3 while true\n 4 do\n 5 \n 6     rm -rf screen.conf\n 7 \n 8     n=0\n 9 \n10     while read ll\n11     do\n12         name=`echo $ll |awk '{print $1}'`\n13         ss=`screen -ls |grep \"\\.$name\"`\n14         if [ ${#ss} -lt 5 ];then\n15             echo $ll &gt;&gt; screen.conf\n16             n=`expr $n + 1`\n17         fi\n18     done &lt; ssh.conf\n19 \n20     if [ $n -gt 0 ];then\n21        ./screen.sh\n22     fi\n23 \n24     rm -rf screen.conf\n25     sleep 10\n26 done\n</pre>\n</div>\n<div class=\"highlight\">\n\n服\n\n稳定的话一本万利咯。\n\n以前嫌弃没机器，性能不行，现在手头机器太多也都是烦恼呢。\n\n</div>\n</div>",
            "post_title": "写个基于screen和expect的服务器管理小工具",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "719-autosave-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-9-3 18:48:53",
            "post_modified_gmt": "2018-9-3 10:48:53",
            "post_content_filtered": "",
            "post_parent": "719",
            "guid": "http://ganjiacheng.cn/blog/?p=723",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "724",
            "post_author": "1",
            "post_date": "2018-9-3 18:49:49",
            "post_date_gmt": "2018-9-3 10:49:49",
            "post_content": "日常管理的服务器如果很多，总会感觉连完这个连那个，要么要重复输入用户密码，要么在如xshell中的一个长列表中找寻所需的服务器。比较难受就自己写个工具来连接多台服务器，并用screen保持会话。<!--more-->\r\n\r\n先配环境，此处默认centos咯。\r\n<pre>yum install -y screen\r\nyum install -y expect</pre>\r\n由于ssh连接要输入用户密码，因此得写expect脚本。\r\n\r\n先创建一个ssh.conf用来放需要连接的服务器,格式为\r\n<pre>name1 root@192.168.1.1 password1\r\nname2 root@192.168.1.2 password2</pre>\r\n同目录下写个expect脚本screen.sh，修改其权限为755.\r\n<pre>chmod 755 screen.sh</pre>\r\n主要功能为创建screen，登录用户名密码。\r\n<div class=\"highlight\">\r\n<pre> 1 #!/bin/expect -f \r\n 2 \r\n 3 set timeout 30\r\n 4 \r\n 5 set fid [open screen.conf r]\r\n 6 while {[gets $fid line] &gt;= 0} {\r\n 7     set name [lindex $line 0]\r\n 8     set port [lindex $line 1]\r\n 9     set pwd [lindex $line 2]\r\n10     spawn screen -S $name ssh $port\r\n11     expect {\r\n12         \"*yes/no\" { send \"yes\\r\"; exp_continue }\r\n13         \"*password:\" { send \"$pwd\\r\" } \r\n14     }\r\n15     expect { \r\n16         \"Last login*\" {\r\n17             send \"\\01d\"\r\n18         }\r\n19     }\r\n20     puts \"$name | $port added\"\r\n21 }</pre>\r\n再在同目录下创建个start.sh\r\n\r\n用于检测有哪些会话没起来写入screen.conf,再调用screen.sh重启一遍。\r\n<div class=\"highlight\">\r\n<pre> 1 #!/bin/bash\r\n 2 \r\n 3 while true\r\n 4 do\r\n 5 \r\n 6     rm -rf screen.conf\r\n 7 \r\n 8     n=0\r\n 9 \r\n10     while read ll\r\n11     do\r\n12         name=`echo $ll |awk '{print $1}'`\r\n13         ss=`screen -ls |grep \"\\.$name\"`\r\n14         if [ ${#ss} -lt 5 ];then\r\n15             echo $ll &gt;&gt; screen.conf\r\n16             n=`expr $n + 1`\r\n17         fi\r\n18     done &lt; ssh.conf\r\n19 \r\n20     if [ $n -gt 0 ];then\r\n21        ./screen.sh\r\n22     fi\r\n23 \r\n24     rm -rf screen.conf\r\n25     sleep 10\r\n26 done</pre>\r\n运行：\r\n<pre>nohup start.sh &gt;&gt; screen.log 2&gt;&amp;1 &amp;</pre>\r\n</div>\r\n<div class=\"highlight\">\r\n\r\n以前嫌弃没机器，性能不行，现在手头机器太多也都是烦恼呢。\r\n\r\n</div>\r\n</div>",
            "post_title": "写个基于screen和expect的服务器管理小工具",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "719-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-9-3 18:49:49",
            "post_modified_gmt": "2018-9-3 10:49:49",
            "post_content_filtered": "",
            "post_parent": "719",
            "guid": "http://ganjiacheng.cn/blog/?p=724",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "725",
            "post_author": "1",
            "post_date": "2018-9-7 20:46:26",
            "post_date_gmt": "2018-9-7 12:46:26",
            "post_content": "晚六下班，走上回校之路。<!--more-->\r\n\r\n同是在杭州，工作在杭的这一端，学校在杭的另一端。\r\n\r\n公交堵在半路，饥肠辘辘之际，\r\n\r\n是不是该总结些什么。\r\n\r\n上一篇记得是是工作之初，现在已然是老司机上路。\r\n\r\n工作内容，于我来说虽然大部分是运维，小部分是自己摸索性开发，但也不至于太抗拒。也就是之前所想的广度上增加了一些，仿佛很少感受自己在纵向有多少进步，说不定还在退步。凉凉与我同在。\r\n\r\n工作还是有了解了更多的人，见识了更多的事。但工作期间真正能接触的圈子也寥寥无几，而前期默认又放弃了晚间的活动而待在公司更为加剧，或成为朋友，或成为路人，遵从内心，绝不违和。总有身不由己的事，积极追逐的事，事事交错之间，自己独立之思想或许更为宝贵。独立思考自己的身边小事，独立思考自己的人生大事......\r\n\r\n弹琴这件事情作为除了工作为数不多一直在做的事，另一件也就农药了，这里也就不述什么游戏高端操作咯。能看明白琴谱且长进了速度，慢慢弹且多练几遍，流行谱子的选段还是能弹下来的。目标便是看谱弹，看样还很遥远，这事从来不急，反正只弹给自己听。\r\n\r\n这回回学校就大四老学长了，时光如逝，我的大学生活外人看来普普通通，但我已无悔的付出过，不能兼济天下，但足以独善其身。常和同学口头拌嘴\"你怎么这么优秀\"，虽然没有奖状的耀眼，但大学从没停止对优秀的追求，希望这份自以为的优秀常伴人生。\r\n\r\n学校里还剩的也就个毕业设计了，于我应该不会太难，也是给大学个圆满的句号，下次怕不是毕业典礼咯。\r\n\r\n没有很多后面的安排，甚至连几天的都没。出去玩也走不远，都懒得动了；换工作也没这必要性，坐等底线咯；工作外的生活平平淡淡，假装平淡是真。在社会的大潮中随风飘摇，不知谁主沉浮。\r\n\r\n在这儿工作，周末回家还是比较奢侈，路上得花个678个小时，自己弄得累。也就大大小小的节日，马上是国庆，之后就要过年咯。虽然是周边城市，觉得在杭州也都是异乡人，和东北的西北的也没多大差别，一种独自在外打拼感，一种空手起家迷茫感。\r\n\r\n不再很多的思考工作价值论，发现有高学历的朋友也会有同样的困惑，怕是人生大都如此，不去想反而无忧。自己的隐形价值观可能都是可体会但不能言说的，或者说说了但别人谁又能真正理解呢。子非鱼安知鱼之乐。\r\n\r\n头发长了，也该剪了。",
            "post_title": "回校之路",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e5%9b%9e%e6%a0%a1%e4%b9%8b%e8%b7%af",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-9-7 20:46:26",
            "post_modified_gmt": "2018-9-7 12:46:26",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=725",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "726",
            "post_author": "1",
            "post_date": "2018-9-7 19:00:08",
            "post_date_gmt": "2018-9-7 11:00:08",
            "post_content": "晚六下班，走上回校之路。\r\n\r\n同是在杭州，工作在一端，学校在另一端。\r\n\r\n公交堵在半路，饥肠辘辘之际，\r\n\r\n是不是该总结些什么。\r\n\r\n上一篇是工作之初，现在已然老司机上路。\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "回校",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "725-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-9-7 19:00:08",
            "post_modified_gmt": "2018-9-7 11:00:08",
            "post_content_filtered": "",
            "post_parent": "725",
            "guid": "http://ganjiacheng.cn/blog/?p=726",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "727",
            "post_author": "1",
            "post_date": "2018-9-7 19:10:52",
            "post_date_gmt": "2018-9-7 11:10:52",
            "post_content": "晚六下班，走上回校之路。\r\n\r\n同是在杭州，工作在一端，学校在另一端。\r\n\r\n公交堵在半路，饥肠辘辘之际，\r\n\r\n是不是该总结些什么。\r\n\r\n上一篇是工作之初，现在已然老司机上路。\r\n\r\n工作内容，于我来说虽然大部分是运维，小部分是自己摸索性开发，但也不至于太抗拒。也就是之前所想的广度上增加了一些，仿佛很少感受自己在纵向有多少进步，说不定还在退步。凉凉与我同在。\r\n\r\n弹琴这件事情作为除了工作为数不多一直在做的事，另一件也就农药了，这里也就不述什么高端操作咯。能看明白琴谱且长进了速度，慢慢弹且多练几遍，几个流行\r\n\r\n&nbsp;\r\n\r\n&nbsp;",
            "post_title": "回校",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "725-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-9-7 19:10:52",
            "post_modified_gmt": "2018-9-7 11:10:52",
            "post_content_filtered": "",
            "post_parent": "725",
            "guid": "http://ganjiacheng.cn/blog/?p=727",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "728",
            "post_author": "1",
            "post_date": "2018-9-7 20:18:14",
            "post_date_gmt": "2018-9-7 12:18:14",
            "post_content": "晚六下班，走上回校之路。\r\n\r\n同是在杭州，工作在一端，学校在另一端。\r\n\r\n公交堵在半路，饥肠辘辘之际，\r\n\r\n是不是该总结些什么。\r\n\r\n上一篇是工作之初，现在已然老司机上路。\r\n\r\n工作内容，于我来说虽然大部分是运维，小部分是自己摸索性开发，但也不至于太抗拒。也就是之前所想的广度上增加了一些，仿佛很少感受自己在纵向有多少进步，说不定还在退步。凉凉与我同在。\r\n\r\n工作还是有了解了更多的人，见识了更多的事。但工作期间真正能接触的圈子也寥寥无几，而前期默认又放弃了晚间的活动而待在公司更为加剧，或成为朋友，或成为路人，遵从内心，绝不违和。总有身不由己的事，积极追逐的事，事事交错之间，自己独立之思想或许更为宝贵。独立思考自己的身边小事，独立思考自己的人生大事......\r\n\r\n弹琴这件事情作为除了工作为数不多一直在做的事，另一件也就农药了，这里也就不述什么游戏高端操作咯。能看明白琴谱且长进了速度，慢慢弹且多练几遍，流行谱子的选段还是能弹下来的。目标便是看谱弹，看样还很遥远，这事从来不急，反正只弹给自己听。\r\n\r\n这回回学校就大四老学长了，时光如逝，我的大学生活外人看来普普通通，但我已无悔的付出过，不能兼济天下，但足以独善其身。常和同学口头拌嘴\"你怎么这么优秀\"，虽然没有奖状的耀眼，但大学从没停止对优秀的追求，希望这份自以为的优秀常伴人生。\r\n\r\n学校里还剩的也就个毕业设计了，于我应该不会太难，也是给大学个圆满的句号，下次怕不是毕业典礼咯。\r\n\r\n没有很多后面的安排，甚至连几天的都没。出去玩也走不远，都懒得动了；换工作也没这必要性，坐等底线咯；工作外的生活平平淡淡，假装平淡是真。在社会的大潮中随风飘摇，不知谁主沉浮。\r\n\r\n头发长了，也该剪了。\r\n\r\n&nbsp;",
            "post_title": "回校",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "725-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-9-7 20:18:14",
            "post_modified_gmt": "2018-9-7 12:18:14",
            "post_content_filtered": "",
            "post_parent": "725",
            "guid": "http://ganjiacheng.cn/blog/?p=728",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "729",
            "post_author": "1",
            "post_date": "2018-9-7 20:33:38",
            "post_date_gmt": "2018-9-7 12:33:38",
            "post_content": "晚六下班，走上回校之路。\r\n\r\n同是在杭州，工作在杭的这一端，学校在杭的另一端。\r\n\r\n公交堵在半路，饥肠辘辘之际，\r\n\r\n是不是该总结些什么。\r\n\r\n上一篇记得是是工作之初，现在已然是老司机上路。\r\n\r\n工作内容，于我来说虽然大部分是运维，小部分是自己摸索性开发，但也不至于太抗拒。也就是之前所想的广度上增加了一些，仿佛很少感受自己在纵向有多少进步，说不定还在退步。凉凉与我同在。\r\n\r\n工作还是有了解了更多的人，见识了更多的事。但工作期间真正能接触的圈子也寥寥无几，而前期默认又放弃了晚间的活动而待在公司更为加剧，或成为朋友，或成为路人，遵从内心，绝不违和。总有身不由己的事，积极追逐的事，事事交错之间，自己独立之思想或许更为宝贵。独立思考自己的身边小事，独立思考自己的人生大事......\r\n\r\n弹琴这件事情作为除了工作为数不多一直在做的事，另一件也就农药了，这里也就不述什么游戏高端操作咯。能看明白琴谱且长进了速度，慢慢弹且多练几遍，流行谱子的选段还是能弹下来的。目标便是看谱弹，看样还很遥远，这事从来不急，反正只弹给自己听。\r\n\r\n这回回学校就大四老学长了，时光如逝，我的大学生活外人看来普普通通，但我已无悔的付出过，不能兼济天下，但足以独善其身。常和同学口头拌嘴\"你怎么这么优秀\"，虽然没有奖状的耀眼，但大学从没停止对优秀的追求，希望这份自以为的优秀常伴人生。\r\n\r\n学校里还剩的也就个毕业设计了，于我应该不会太难，也是给大学个圆满的句号，下次怕不是毕业典礼咯。\r\n\r\n没有很多后面的安排，甚至连几天的都没。出去玩也走不远，都懒得动了；换工作也没这必要性，坐等底线咯；工作外的生活平平淡淡，假装平淡是真。在社会的大潮中随风飘摇，不知谁主沉浮。\r\n\r\n在这儿工作，周末回家还是比较奢侈，路上得花个678个小时，自己弄得累。也就大大小小的节日，马上是国庆，之后就要过年咯。虽然是周边城市，觉得在杭州也都是异乡人，和东北的西北的也没多大差别，一种独自在外打拼感，一种空手起家迷茫感。\r\n\r\n头发长了，也该剪了。",
            "post_title": "回校之路",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "725-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-9-7 20:33:38",
            "post_modified_gmt": "2018-9-7 12:33:38",
            "post_content_filtered": "",
            "post_parent": "725",
            "guid": "http://ganjiacheng.cn/blog/?p=729",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "730",
            "post_author": "1",
            "post_date": "2018-9-7 20:44:44",
            "post_date_gmt": "2018-9-7 12:44:44",
            "post_content": "晚六下班，走上回校之路。\r\n\r\n同是在杭州，工作在杭的这一端，学校在杭的另一端。\r\n\r\n公交堵在半路，饥肠辘辘之际，\r\n\r\n是不是该总结些什么。\r\n\r\n上一篇记得是是工作之初，现在已然是老司机上路。\r\n\r\n工作内容，于我来说虽然大部分是运维，小部分是自己摸索性开发，但也不至于太抗拒。也就是之前所想的广度上增加了一些，仿佛很少感受自己在纵向有多少进步，说不定还在退步。凉凉与我同在。\r\n\r\n工作还是有了解了更多的人，见识了更多的事。但工作期间真正能接触的圈子也寥寥无几，而前期默认又放弃了晚间的活动而待在公司更为加剧，或成为朋友，或成为路人，遵从内心，绝不违和。总有身不由己的事，积极追逐的事，事事交错之间，自己独立之思想或许更为宝贵。独立思考自己的身边小事，独立思考自己的人生大事......\r\n\r\n弹琴这件事情作为除了工作为数不多一直在做的事，另一件也就农药了，这里也就不述什么游戏高端操作咯。能看明白琴谱且长进了速度，慢慢弹且多练几遍，流行谱子的选段还是能弹下来的。目标便是看谱弹，看样还很遥远，这事从来不急，反正只弹给自己听。\r\n\r\n这回回学校就大四老学长了，时光如逝，我的大学生活外人看来普普通通，但我已无悔的付出过，不能兼济天下，但足以独善其身。常和同学口头拌嘴\"你怎么这么优秀\"，虽然没有奖状的耀眼，但大学从没停止对优秀的追求，希望这份自以为的优秀常伴人生。\r\n\r\n学校里还剩的也就个毕业设计了，于我应该不会太难，也是给大学个圆满的句号，下次怕不是毕业典礼咯。\r\n\r\n没有很多后面的安排，甚至连几天的都没。出去玩也走不远，都懒得动了；换工作也没这必要性，坐等底线咯；工作外的生活平平淡淡，假装平淡是真。在社会的大潮中随风飘摇，不知谁主沉浮。\r\n\r\n在这儿工作，周末回家还是比较奢侈，路上得花个678个小时，自己弄得累。也就大大小小的节日，马上是国庆，之后就要过年咯。虽然是周边城市，觉得在杭州也都是异乡人，和东北的西北的也没多大差别，一种独自在外打拼感，一种空手起家迷茫感。\r\n\r\n不再很多的思考工作价值论，发现有高学历的朋友也会有同样的困惑，怕是人生大都如此，不去想反而无忧。自己的隐形价值观可能都是可体会但不能言说的，或者说说了但别人谁又能真正理解呢。子非鱼安知鱼之乐。\r\n\r\n头发长了，也该剪了。",
            "post_title": "回校之路",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "725-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-9-7 20:44:44",
            "post_modified_gmt": "2018-9-7 12:44:44",
            "post_content_filtered": "",
            "post_parent": "725",
            "guid": "http://ganjiacheng.cn/blog/?p=730",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "731",
            "post_author": "1",
            "post_date": "2018-9-7 20:46:26",
            "post_date_gmt": "2018-9-7 12:46:26",
            "post_content": "晚六下班，走上回校之路。<!--more-->\r\n\r\n同是在杭州，工作在杭的这一端，学校在杭的另一端。\r\n\r\n公交堵在半路，饥肠辘辘之际，\r\n\r\n是不是该总结些什么。\r\n\r\n上一篇记得是是工作之初，现在已然是老司机上路。\r\n\r\n工作内容，于我来说虽然大部分是运维，小部分是自己摸索性开发，但也不至于太抗拒。也就是之前所想的广度上增加了一些，仿佛很少感受自己在纵向有多少进步，说不定还在退步。凉凉与我同在。\r\n\r\n工作还是有了解了更多的人，见识了更多的事。但工作期间真正能接触的圈子也寥寥无几，而前期默认又放弃了晚间的活动而待在公司更为加剧，或成为朋友，或成为路人，遵从内心，绝不违和。总有身不由己的事，积极追逐的事，事事交错之间，自己独立之思想或许更为宝贵。独立思考自己的身边小事，独立思考自己的人生大事......\r\n\r\n弹琴这件事情作为除了工作为数不多一直在做的事，另一件也就农药了，这里也就不述什么游戏高端操作咯。能看明白琴谱且长进了速度，慢慢弹且多练几遍，流行谱子的选段还是能弹下来的。目标便是看谱弹，看样还很遥远，这事从来不急，反正只弹给自己听。\r\n\r\n这回回学校就大四老学长了，时光如逝，我的大学生活外人看来普普通通，但我已无悔的付出过，不能兼济天下，但足以独善其身。常和同学口头拌嘴\"你怎么这么优秀\"，虽然没有奖状的耀眼，但大学从没停止对优秀的追求，希望这份自以为的优秀常伴人生。\r\n\r\n学校里还剩的也就个毕业设计了，于我应该不会太难，也是给大学个圆满的句号，下次怕不是毕业典礼咯。\r\n\r\n没有很多后面的安排，甚至连几天的都没。出去玩也走不远，都懒得动了；换工作也没这必要性，坐等底线咯；工作外的生活平平淡淡，假装平淡是真。在社会的大潮中随风飘摇，不知谁主沉浮。\r\n\r\n在这儿工作，周末回家还是比较奢侈，路上得花个678个小时，自己弄得累。也就大大小小的节日，马上是国庆，之后就要过年咯。虽然是周边城市，觉得在杭州也都是异乡人，和东北的西北的也没多大差别，一种独自在外打拼感，一种空手起家迷茫感。\r\n\r\n不再很多的思考工作价值论，发现有高学历的朋友也会有同样的困惑，怕是人生大都如此，不去想反而无忧。自己的隐形价值观可能都是可体会但不能言说的，或者说说了但别人谁又能真正理解呢。子非鱼安知鱼之乐。\r\n\r\n头发长了，也该剪了。",
            "post_title": "回校之路",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "725-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-9-7 20:46:26",
            "post_modified_gmt": "2018-9-7 12:46:26",
            "post_content_filtered": "",
            "post_parent": "725",
            "guid": "http://ganjiacheng.cn/blog/?p=731",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "735",
            "post_author": "1",
            "post_date": "2018-10-4 13:21:30",
            "post_date_gmt": "0-0-0 00:00:00",
            "post_content": "",
            "post_title": "docker初试，容器技术",
            "post_excerpt": "",
            "post_status": "draft",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-10-4 13:21:30",
            "post_modified_gmt": "2018-10-4 05:21:30",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=735",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "736",
            "post_author": "1",
            "post_date": "2018-10-4 13:19:46",
            "post_date_gmt": "2018-10-4 05:19:46",
            "post_content": "",
            "post_title": "docker初试，容器技术",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "735-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2018-10-4 13:19:46",
            "post_modified_gmt": "2018-10-4 05:19:46",
            "post_content_filtered": "",
            "post_parent": "735",
            "guid": "http://ganjiacheng.cn/blog/?p=736",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "741",
            "post_author": "1",
            "post_date": "2019-1-3 20:12:45",
            "post_date_gmt": "0-0-0 00:00:00",
            "post_content": "",
            "post_title": "半个运维之各种环境搭建",
            "post_excerpt": "",
            "post_status": "draft",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2019-1-3 20:12:45",
            "post_modified_gmt": "2019-1-3 12:12:45",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=741",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "742",
            "post_author": "1",
            "post_date": "2019-1-3 20:12:45",
            "post_date_gmt": "2019-1-3 12:12:45",
            "post_content": "",
            "post_title": "半个运维之各种环境搭建",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "741-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2019-1-3 20:12:45",
            "post_modified_gmt": "2019-1-3 12:12:45",
            "post_content_filtered": "",
            "post_parent": "741",
            "guid": "http://ganjiacheng.cn/blog/?p=742",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "746",
            "post_author": "1",
            "post_date": "2019-3-5 17:32:36",
            "post_date_gmt": "2019-3-5 09:32:36",
            "post_content": "2018.7.1 大三暑假 存款6000 工薪4000+ 计划: 先工作一年，毕业，然后找一份工薪1w+的，工作两年，10万左右代步车。30岁前买一套小户型房。\r\n\r\n2019.3.5 存款12000，薪资无。",
            "post_title": "big plan",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "655-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2019-3-5 17:32:36",
            "post_modified_gmt": "2019-3-5 09:32:36",
            "post_content_filtered": "",
            "post_parent": "655",
            "guid": "http://ganjiacheng.cn/blog/?p=746",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "750",
            "post_author": "1",
            "post_date": "2019-3-22 13:09:31",
            "post_date_gmt": "2019-3-22 05:09:31",
            "post_content": "{{unknown}}",
            "post_title": "",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "c097fb9ecc46d20c87a9dc5d42b60eb4",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2019-3-22 13:09:31",
            "post_modified_gmt": "2019-3-22 05:09:31",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "https://ganjiacheng.cn/blog/?p=750",
            "menu_order": "0",
            "post_type": "oembed_cache",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "752",
            "post_author": "1",
            "post_date": "2019-3-22 13:11:59",
            "post_date_gmt": "2019-3-22 05:11:59",
            "post_content": "{{unknown}}",
            "post_title": "",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "ab2322de36502d92fc959f6981b5c8d9",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2019-3-22 13:11:59",
            "post_modified_gmt": "2019-3-22 05:11:59",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=752",
            "menu_order": "0",
            "post_type": "oembed_cache",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "754",
            "post_author": "1",
            "post_date": "2019-3-22 13:15:22",
            "post_date_gmt": "2019-3-22 05:15:22",
            "post_content": "新增小记板块，记录的不多，但也用了蛮久。\r\n\r\n这其中主要是由Markdown格式编写的转为html页面的一些日常工具使用等小记。\r\n\r\n地址为：<a href=\"https://ganjiacheng.cn/html/\">https://ganjiacheng.cn/html/</a>",
            "post_title": "新建小记板块",
            "post_excerpt": "",
            "post_status": "publish",
            "comment_status": "open",
            "ping_status": "open",
            "post_password": "",
            "post_name": "%e6%96%b0%e5%bb%ba%e5%b0%8f%e8%ae%b0%e6%9d%bf%e5%9d%97",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2019-3-22 13:15:22",
            "post_modified_gmt": "2019-3-22 05:15:22",
            "post_content_filtered": "",
            "post_parent": "0",
            "guid": "http://ganjiacheng.cn/blog/?p=754",
            "menu_order": "0",
            "post_type": "post",
            "post_mime_type": "",
            "comment_count": "0"
        },
        {
            "ID": "755",
            "post_author": "1",
            "post_date": "2019-3-22 13:15:22",
            "post_date_gmt": "2019-3-22 05:15:22",
            "post_content": "新增小记板块，记录的不多，但也用了蛮久。\r\n\r\n这其中主要是由Markdown格式编写的转为html页面的一些日常工具使用等小记。\r\n\r\n地址为：<a href=\"https://ganjiacheng.cn/html/\">https://ganjiacheng.cn/html/</a>",
            "post_title": "新建小记板块",
            "post_excerpt": "",
            "post_status": "inherit",
            "comment_status": "closed",
            "ping_status": "closed",
            "post_password": "",
            "post_name": "754-revision-v1",
            "to_ping": "",
            "pinged": "",
            "post_modified": "2019-3-22 13:15:22",
            "post_modified_gmt": "2019-3-22 05:15:22",
            "post_content_filtered": "",
            "post_parent": "754",
            "guid": "http://ganjiacheng.cn/blog/?p=755",
            "menu_order": "0",
            "post_type": "revision",
            "post_mime_type": "",
            "comment_count": "0"
        }
    ]
}